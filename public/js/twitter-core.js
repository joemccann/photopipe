
provide('/account/templates_t1_more.js', function(exports) {
    if (!twttr.isMockview) {
        var __hogan_opts = {
            sectionTags: [{
                o: '_i',
                c: 'i'
            }],
            disableLambda: true
        };
        twttr.provide('twttr.templates', {
            "404_page": "<div class=\"content-narrow\">\n  <div class=\"error-page error-404 clearfix\">\n    {{#render_page_content}}\n      <h1 class=\"heading\">Sorry, that page doesn’t exist!</h1>\n      <form class=\"inline-form user-search-form\" method=\"GET\" action=\"{{who_to_follow_search_form_path}}\">\n        <p class=\"lead\">Search for a username, first or last name:</p>\n        <input class=\"input-large user-search-query\" type=\"text\" name=\"q\" id=\"fof-user-search-field\" />\n        <button class=\"btn\" type=\"submit\">Search</button>\n      </form>\n      <p><a href=\"{{home_path}}\">← Go to the homepage</a></p>\n    {{/render_page_content}}\n  </div>\n</div>\n",
            "500_page": "<div class=\"content-narrow\">\n  <div class=\"error-page error-500 clearfix\">\n    {{#render_page_content}}\n      <h1 class=\"heading\">Something is technically wrong.</h1>\n      <p class=\"lead\">Thanks for noticing—we're going to fix it up and have things back to normal soon.</p>\n      <p><a href=\"{{home_path}}\">← Go to the homepage</a></p>\n    {{/render_page_content}}\n  </div>\n</div>",
            "mobile_complete": "<div class=\"page-canvas\">\n  <div class=\"mobile-complete-wrapper\">\n    <h1>Sign up to use Twitter on the web.</h1>\n    <form action=\"{{mobile_complete_path}}\" class=\"mobile-complete\" method=\"post\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <fieldset class=\"control-group\">\n        <label for=\"address\" class=\"control-label\">Enter your phone number:</label>\n        <div class=\"controls\">\n          <input type=\"text\" id=\"address\" name=\"address\">\n        </div>\n      </fieldset>\n      <button type=\"submit\" class=\"submit btn primary-btn\" id=\"account_request_verification_code_submit\">Submit</button>\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/groups/34-apps-sms-and-mobile/topics/123-mobile-basics/articles/95277-which-twitter-account-is-my-mobile-phone-associated-with\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "mobile_sms_complete": "<div class=\"page-canvas\">\n  <div class=\"mobile-complete-wrapper\">\n    <h1>Sign up to use Twitter on the web.</h1>\n    <p>On your phone, send <strong>{{start_command}}</strong> to <strong>{{device_address}}</strong>.</p>\n    <p>Follow the instructions sent to your phone. Once you are finished, click continue.</p>\n    <form action=\"{{mobile_sms_complete_path}}\" class=\"mobile-complete\" method=\"post\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <input type=\"hidden\" name=\"address\", value=\"{{device}}\">\n      <button type=\"submit\" class=\"submit btn primary-btn\" id=\"mobile_sms_complete_submit\">Continue</button>\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/groups/34-apps-sms-and-mobile/topics/123-mobile-basics/articles/95277-which-twitter-account-is-my-mobile-phone-associated-with\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "mobile_verify": "<div class=\"page-canvas\">\n  <div class=\"mobile-complete-wrapper\">\n    <h1>We've sent a verification code to your phone.</h1>\n    <div class=\"verify-device-token\">\n      When you receive the code, type it in the box below. If you don't recieve the code in a few minutes, try\n      <form action=\"{{mobile_verify_path}}\" method=\"post\" class=\"link-form\">\n        <input type=\"hidden\" name=\"send_again\" value=\"true\">\n        <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n        <input type=\"hidden\" name=\"address\" value=\"{{device}}\" %>\n        <button id=\"resend_token\" class=\"btn-link\">resending your request</button>.\n      </form>\n    </div>\n    <form action=\"{{mobile_verify_path}}\" class=\"mobile-complete\" method=\"post\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <input type=\"hidden\" name=\"address\" value=\"{{device}}\">\n      <fieldset class=\"control-group\">\n        <div class=\"controls\">\n          <label for=\"verification_code\" class=\"control-label\">Enter your verification code:</label>\n          <input type=\"text\" id=\"verification_code\" name=\"device[verification_code]\" class=\"input-small\">\n        </div>\n      </fieldset>\n      <button type=\"submit\" class=\"submit btn primary-btn\" id=\"mobile_verify_submit\">Submit</button>\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/groups/34-apps-sms-and-mobile/topics/123-mobile-basics/articles/95277-which-twitter-account-is-my-mobile-phone-associated-with\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "password_reset": "<div class=\"page-canvas route-resend-password\">\n  <div class=\"resend-password-wrapper\">\n    <h1>Choose your new password.</h2>\n    <form action=\"{{accounts_path}}\" id=\"password-reset-form\" class=\"clearfix resend-password js-resend-password\" method=\"post\">\n      <input type=\"hidden\" name=\"email\" value=\"{{email_address}}\">\n      <input type=\"hidden\" name=\"id\" value={{user_id}}\">\n      <input type=\"hidden\" name=\"token\" value=\"{{token}}\">\n      <input type=\"hidden\" name=\"reset_type\" value=\"{{reset_type}}\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      {{> shared/password}}\n      <div class=\"clearfix\">\n        <button type=\"submit\" class=\"btn primary-btn\" id=\"password_change_submit\">Submit</button>\n      </div>\n    </form>\n  </div>\n</div>\n",
            "password_reset_sent": "<div class=\"page-canvas route-resend-password\">\n  <div class=\"resend-password-wrapper\">\n    <h1>We've sent password reset instructions to your email address.</h1>\n    If you don't receive instructions within a minute or two, check your email's spam and junk filters, or try <a href=\"{{resend_password_path}}\">resending your request</a>.\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/articles/15365?utm_source=15365&utm_medium=website&utm_campaign=inproduct\">Please contact Support</a>.\n  </div>\n</div>\n",
            "password_reset_type": "<div class=\"page-canvas route-resend-password\">\n  <div class=\"resend-password-wrapper\">\n    <h1>Choose your password reset option.</h1>\n    Twitter can send password reset instructions to your email address or the phone number associated with your account.\n    <form action=\"{{password_reset_type_path}}\" class=\"resend-password\" method=\"post\">\n      <input type=\"hidden\" id=\"screen_name\" name=\"screen_name\" value=\"{{username}}\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <button type=\"submit\" id=\"email_submit\" name=\"email_submit\" class=\"submit btn primary-btn\">Reset via email</button>\n      <button type=\"submit\" id=\"device_submit\" name=\"device_submit\" class=\"submit btn primary-btn\">Reset via phone</button>\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/articles/14663#SMSreset?utm_source=14663&utm_medium=website&utm_campaign=inproduct\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "resend_password": "<div class=\"page-canvas route-resend-password\">\n  <div class=\"resend-password-wrapper\">\n    <h1>Forgot your password?</h1>\n    <form action=\"{{accounts_path}}\" id=\"resend_password_form\" class=\"clearfix resend-password js-resend-password\" method=\"post\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <fieldset class=\"control-group\" id=\"email_or_phone_fieldset\">\n        <label for=\"email_or_phone\" class=\"control-label\">Enter your email address or phone number:</label>\n        <div class=\"controls\">\n          <input type=\"text\" id=\"email_or_phone\" name=\"email_or_phone\" autocomplete=\"on\">\n          <span id=\"email_or_phone_notification\" class=\"help-inline notification\"></span>\n        </div>\n      </fieldset>\n      <div class=\"separator\">\n        —OR—\n      </div>\n      <fieldset class=\"control-group\" id=\"screen_name_fieldset\">\n        <label for=\"screen_name\" class=\"control-label\">Enter your username:</label>\n        <div class=\"controls\">\n          <span class=\"input-prepend\">\n            <span class=\"add-on\"><i class=\"tweet-at\"></i></span>\n            <input type=\"text\" id=\"screen_name\" name=\"screen_name\" autocomplete=\"on\" class=\"username-prepended-input\">\n          </span>\n          <span id=\"screen_name_notification\" class=\"help-inline notification notification-prepended\"></span>\n        </div>\n      </fieldset>\n      <button type=\"submit\" class=\"submit btn primary-btn\" id=\"lookup_user\">Submit</button>\n      {{^no_captcha}}\n        {{>dialogs/captcha_dialog}}\n      {{/no_captcha}}\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/articles/14663#SMSreset?utm_source=14663&utm_medium=website&utm_campaign=inproduct\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "verify_device_token": "<div class=\"page-canvas route-resend-password\">\n  <div class=\"resend-password-wrapper\">\n    <h1>We've sent a password reset code to your phone.</h1>\n    <div class=\"verify-device-token\">\n      When you receive the code, type it in the box below. If you don't receive the code within a few minutes, try\n      <form action=\"/account/password_reset_type?device_submit=true&device_resend=true\" method=\"post\" class=\"link-form\"><button id=\"resend_token\" class=\"btn-link\">resending your request</button>.<input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\"></form>\n      {{#can_reset_password_by_email}}\n      You can also\n      <form action=\"/account/password_reset_type?email_submit=true\" method=\"post\" class=\"link-form\"><button id=\"resend_email\" class=\"btn-link\">reset your password via email</button>.<input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\"></form>\n      {{/can_reset_password_by_email}}\n    </div>\n    <form action=\"{{verify_device_token_path}}\" id=\"verify-device-token-form\" class=\"clearfix resend-password js-resend-password\" method=\"post\">\n      <input type=\"hidden\" id=\"screen_name\" name=\"screen_name\" value=\"{{username}}\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <fieldset class=\"control-group\">\n        <label for=\"token\" class=\"control-label\">Enter your reset code:</label>\n        <div class=\"controls\">\n          <input type=\"text\" id=\"token\" name=\"token\" class=\"input-small\">\n        </div>\n      </fieldset>\n      <button type=\"submit\" id=\"verify_token_submit\" class=\"btn primary-btn\">Submit</button>\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/articles/15365?utm_source=15365&utm_medium=website&utm_campaign=inproduct\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "verify_personal_information": "<div class=\"page-canvas route-resend-password\">\n  <div class=\"resend-password-wrapper\">\n    <h1>Verify your personal information.</h1>\n    <form action=\"{{verify_personal_information_path}}\" id=\"verify-personal-information-form\" class=\"clearfix resend-password js-resend-password\" method=\"post\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <fieldset class=\"control-group\">\n        {{#has_valid_phone_number}}\n          <label for=\"phone\" class=\"control-label\">Enter phone number:</label>\n          <div class=\"controls\">\n            <input type=\"text\" id=\"phone\" name=\"phone\" autocomplete=\"on\">\n          </div>\n        {{/has_valid_phone_number}}\n        {{^has_valid_phone_number}}\n          <label for=\"email\" class=\"control-label\">Enter email address:</label>\n          <div class=\"controls\">\n            <input type=\"text\" id=\"email\" name=\"email\" autocomplete=\"on\">\n          </div>\n        {{/has_valid_phone_number}}\n      </fieldset>\n      <button type=\"submit\" class=\"submit btn primary-btn\" id=\"lookup_user\">Submit</button>\n    </form>\n  </div>\n  <div class=\"contact-support\">\n    Need help? <a href=\"https://support.twitter.com/articles/14663#SMSreset?utm_source=14663&utm_medium=website&utm_campaign=inproduct\">Please contact Twitter Support</a>.\n  </div>\n</div>\n",
            "activity_item": "<div class=\"stream-item-content clearfix stream-item-activity stream-item-{{event}} {{#is_your_activity}}stream-item-activity-me{{/is_your_activity}}{{^is_your_activity}}stream-item-activity-network{{/is_your_activity}}\"\n     data-activity-type=\"{{event}}\"\n     data-activity-min-position=\"{{min_position}}\"\n     data-activity-max-position=\"{{max_position}}\">\n\n     <div class=\"stream-item-activity-header\">\n       <div class=\"activity-additional-info\">\n         {{^is_your_activity}}\n           {{#has_hidden_supplements}}\n             <a href=\"#\" class=\"view-all-supplements show\">{{{view_all_supplements_sentence}}}</a>\n           {{/has_hidden_supplements}}\n         {{/is_your_activity}}\n\n         <div class=\"activity-timestamp\">\n            <span class=\"_timestamp\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\">{{full_timestamp}}</span>\n          </div>\n       </div>\n\n       <div class=\"stream-item-activity-line js-actionable-user {{#is_your_activity}}stream-item-activity-line-me{{/is_your_activity}}{{^is_your_activity}}stream-item-activity-line-network{{/is_your_activity}}\">\n         {{#should_show_first_actor}}\n           {{#first_actor}}\n             {{>user_image_16}}\n           {{/first_actor}}\n         {{/should_show_first_actor}}\n\n         {{{activity_line}}}\n\n         <b class=\"activity-type\"><i class=\"{{icon_class}}\"></i></b>\n       </div>\n     </div>\n\n     {{#should_show_truncated_tweet}}\n       <div class=\"activity-truncated-tweet\">\n         {{{truncated_tweet}}}\n       </div>\n     {{/should_show_truncated_tweet}}\n\n     <div class=\"activity-supplement {{#has_hidden_supplements}} has-hidden-supplements{{/has_hidden_supplements}}{{#user_supplement_and_count_greater_than_two}}follow-more-than-two{{/user_supplement_and_count_greater_than_two}}{{#user_supplement_and_count_exactly_two}}follow-exactly-two{{/user_supplement_and_count_exactly_two}}\">\n       {{{activity_supplement}}}\n\n       {{#has_secondary_supplement}}\n         <div class=\"activity-secondary-supplement\">\n           {{{activity_secondary_supplement}}}\n         </div>\n       {{/has_secondary_supplement}}\n     </div>\n\n     {{#is_your_activity}}\n       {{#has_hidden_supplements}}\n        <a class=\"view-all-supplements show\" href=\"#\">{{{view_all_supplements_sentence}}}</a>\n       {{/has_hidden_supplements}}\n     {{/is_your_activity}}\n</div>",
            "activity_item_content": "{{#activity_item_view}}\n\n  {{#is_favorite}}\n    {{>activities/activity_item_favorite}}\n  {{/is_favorite}}\n\n  {{#is_follow}}\n    {{>activities/activity_item_follow}}\n  {{/is_follow}}\n\n  {{#is_list_add}}\n    {{>activities/activity_item_list_add}}\n  {{/is_list_add}}\n\n  {{#is_mention}}\n    {{>activities/activity_item_mention}}\n  {{/is_mention}}\n\n  {{#is_reply}}\n    {{>activities/activity_item_reply}}\n  {{/is_reply}}\n\n  {{#is_retweet}}\n    {{>activities/activity_item_retweet}}\n  {{/is_retweet}}\n\n{{/activity_item_view}}",
            "activity_item_favorite": "<div class=\"stream-item-activity-header\">\n  <div class=\"activity-additional-info\">\n    <div class=\"activity-timestamp\">\n      <span class=\"_timestamp {{#is_relative_timestamp}}js-relative-timestamp{{/is_relative_timestamp}}\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\">{{short_timestamp}}</span>\n    </div>\n  </div>\n  <div class=\"stream-item-activity-line js-actionable-user stream-item-activity-line-me\">\n\n    {{#sources_1}}\n      \n        {{#targets_count_one}}{{#source_0}}{{>activity_user_link}}{{/source_0}} favorited your Tweet{{/targets_count_one}}\n        {{#targets_count_other}}{{#source_0}}{{>activity_user_link}}{{/source_0}} favorited your Tweets{{/targets_count_other}}\n      \n    {{/sources_1}}\n    {{#sources_2}}\n      \n        {{#targets_count_one}}{{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} favorited your Tweet{{/targets_count_one}}\n        {{#targets_count_other}}{{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} favorited your Tweets{{/targets_count_other}}\n      \n    {{/sources_2}}\n    {{#sources_3}}\n      \n        {{#targets_count_one}}{{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} favorited your Tweet{{/targets_count_one}}\n        {{#targets_count_other}}{{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} favorited your Tweets{{/targets_count_other}}\n      \n    {{/sources_3}}\n    {{#sources_more}}\n      \n        {{#targets_count_one}}{{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}}</span> others favorited your Tweet{{/targets_count_one}}\n        {{#targets_count_other}}{{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}}</span> others favorited your Tweets{{/targets_count_other}}\n      \n    {{/sources_more}}\n\n    <b class=\"activity-type\"><i class=\"{{icon_class}}\"></i></b>\n  </div>\n</div>\n<div class=\"activity-truncated-tweet\">\n  {{#target_0}}\n    {{>latest_tweet}}\n  {{/target_0}}\n</div>\n<div class=\"activity-supplement{{#targets_more_than_1}} has-hidden-supplements{{/targets_more_than_1}}\">\n  {{#sources_limited}}\n    {{#targets_1}}\n      {{>user_avatar_link_24}}\n    {{/targets_1}}\n    {{#targets_more_than_1}}\n      {{#target_1_to_limit}}\n        {{>latest_tweet}}\n      {{/target_1_to_limit}}\n    {{/targets_more_than_1}}\n  {{/sources_limited}}\n</div>\n{{#targets_more_than_1}}\n  <button type=\"button\" class=\"btn-link view-all-supplements show\">\n    <span class=\"show-text\">\n      \n        {{#targets_less_1_one}}1 other favorite{{/targets_less_1_one}}\n        {{#targets_less_1_other}}{{targets_less_1}} other favorites{{/targets_less_1_other}}\n      \n    </span>\n    <span class=\"hide-text\">Hide other favorites</span>\n  </button>\n{{/targets_more_than_1}}\n",
            "activity_item_follow": "<div class=\"stream-item-activity-header\">\n  <div class=\"activity-additional-info\">\n    <div class=\"activity-timestamp\">\n      <span class=\"_timestamp {{#is_relative_timestamp}}js-relative-timestamp{{/is_relative_timestamp}}\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\">{{full_timestamp}}</span>\n    </div>\n  </div>\n  <div class=\"stream-item-activity-line js-actionable-user stream-item-activity-line-me\">\n\n    {{#sources_1}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}} followed you\n    {{/sources_1}}\n    {{#sources_2}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} followed you\n    {{/sources_2}}\n    {{#sources_3}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} followed you\n    {{/sources_3}}\n    {{#sources_more}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}}</span> others followed you\n    {{/sources_more}}\n\n    <b class=\"activity-type\"><i class=\"{{icon_class}}\"></i></b>\n  </div>\n</div>\n<div class=\"activity-supplement {{#sources_2}}follow-exactly-two{{/sources_2}}{{#sources_3}}follow-more-than-two{{/sources_3}}{{#sources_more}}follow-more-than-two{{/sources_more}}\">\n  {{#sources_limited}}\n    {{>user_avatar_link_24}}\n  {{/sources_limited}}\n</div>\n",
            "activity_item_list_add": "<div class=\"stream-item-activity-header\">\n  <div class=\"activity-additional-info\">\n    <div class=\"activity-timestamp\">\n      <span class=\"_timestamp {{#is_relative_timestamp}}js-relative-timestamp{{/is_relative_timestamp}}\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\">{{short_timestamp}}</span>\n    </div>\n  </div>\n  <div class=\"stream-item-activity-line js-actionable-user stream-item-activity-line-me\">\n\n    \n\n    {{#sources_1}}\n      {{#target_objects_1}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} added you to list {{#target_object_0}}{{>list_link}}{{/target_object_0}}\n        \n      {{/target_objects_1}}\n      {{#target_objects_2}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and {{#target_object_1}}{{>list_link}}{{/target_object_1}}\n        \n      {{/target_objects_2}}\n      {{#target_objects_3}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}}, {{#target_object_1}}{{>list_link}}{{/target_object_1}} and {{#target_object_2}}{{>list_link}}{{/target_object_2}}\n        \n      {{/target_objects_3}}\n      {{#target_objects_more}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and <span class='count-wrap'>{{target_objects_count_less_1}} others.</span>\n        \n      {{/target_objects_more}}\n    {{/sources_1}}\n    {{#sources_2}}\n      {{#target_objects_1}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} added you to list {{#target_object_0}}{{>list_link}}{{/target_object_0}}\n        \n      {{/target_objects_1}}\n      {{#target_objects_2}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and {{#target_object_1}}{{>list_link}}{{/target_object_1}}\n        \n      {{/target_objects_2}}\n      {{#target_objects_3}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}}, {{#target_object_1}}{{>list_link}}{{/target_object_1}} and {{#target_object_2}}{{>list_link}}{{/target_object_2}}\n        \n      {{/target_objects_3}}\n      {{#target_objects_more}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and <span class='count-wrap'>{{target_objects_count_less_1}} others.</span>\n        \n      {{/target_objects_more}}\n    {{/sources_2}}\n    {{#sources_3}}\n      {{#target_objects_1}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} added you to list {{#target_object_0}}{{>list_link}}{{/target_object_0}}\n        \n      {{/target_objects_1}}\n      {{#target_objects_2}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and {{#target_object_1}}{{>list_link}}{{/target_object_1}}\n        \n      {{/target_objects_2}}\n      {{#target_objects_3}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}}, {{#target_object_1}}{{>list_link}}{{/target_object_1}} and {{#target_object_2}}{{>list_link}}{{/target_object_2}}\n        \n      {{/target_objects_3}}\n      {{#target_objects_more}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and <span class='count-wrap'>{{target_objects_count_less_1}} others.</span>\n        \n      {{/target_objects_more}}\n    {{/sources_3}}\n    {{#sources_more}}\n      {{#target_objects_1}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}} others</span> added you to list {{#target_object_0}}{{>list_link}}{{/target_object_0}}\n        \n      {{/target_objects_1}}\n      {{#target_objects_2}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}} others</span> added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and {{#target_object_1}}{{>list_link}}{{/target_object_1}}\n        \n      {{/target_objects_2}}\n      {{#target_objects_3}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}} others</span> added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}}, {{#target_object_1}}{{>list_link}}{{/target_object_1}} and {{#target_object_2}}{{>list_link}}{{/target_object_2}}\n        \n      {{/target_objects_3}}\n      {{#target_objects_more}}\n        \n          {{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}} others</span> added you to lists {{#target_object_0}}{{>list_link}}{{/target_object_0}} and <span class='count-wrap'>{{target_objects_count_less_1}} others.</span>\n        \n      {{/target_objects_more}}\n    {{/sources_more}}\n\n    <b class=\"activity-type\"><i class=\"{{icon_class}}\"></i></b>\n  </div>\n</div>\n",
            "activity_item_mention": "{{#target_object_0}}\n  {{>stream_tweet}}\n{{/target_object_0}}\n",
            "activity_item_reply": "{{#target_0}}\n  {{>stream_tweet}}\n{{/target_0}}",
            "activity_item_retweet": "<div class=\"stream-item-activity-header\">\n  <div class=\"activity-additional-info\">\n    <div class=\"activity-timestamp\">\n      <span class=\"_timestamp {{#is_relative_timestamp}}js-relative-timestamp{{/is_relative_timestamp}}\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\">{{full_timestamp}}</span>\n    </div>\n  </div>\n  <div class=\"stream-item-activity-line js-actionable-user stream-item-activity-line-me\">\n\n    {{#sources_1}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}} retweeted you\n    {{/sources_1}}\n    {{#sources_2}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}} and {{#source_1}}{{>activity_user_link}}{{/source_1}} retweeted you\n    {{/sources_2}}\n    {{#sources_3}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}}, {{#source_1}}{{>activity_user_link}}{{/source_1}} and {{#source_2}}{{>activity_user_link}}{{/source_2}} retweeted you\n    {{/sources_3}}\n    {{#sources_more}}\n      {{#source_0}}{{>activity_user_link}}{{/source_0}} and <span class='count-wrap'>{{sources_count_less_1}}</span> others retweeted you\n    {{/sources_more}}\n\n    <b class=\"activity-type\"><i class=\"{{icon_class}}\"></i></b>\n  </div>\n</div>\n<div class=\"activity-truncated-tweet\">\n  {{#target_object_0}}\n    {{>latest_tweet}}\n  {{/target_object_0}}\n</div>\n<div class=\"activity-supplement{{#target_objects_more_than_1}} has-hidden-supplements{{/target_objects_more_than_1}}\">\n  {{#sources_limited}}\n    {{#target_objects_1}}\n      {{>user_avatar_link_24}}\n    {{/target_objects_1}}\n    {{#target_objects_more_than_1}}\n      {{#target_objects_1_to_limit}}\n        {{>latest_tweet}}\n      {{/target_objects_1_to_limit}}\n    {{/target_objects_more_than_1}}\n  {{/sources_limited}}\n</div>\n{{#target_objects_more_than_1}}\n  <button type=\"button\" class=\"btn-link view-all-supplements show\">\n    <span class=\"show-text\">\n      \n        {{#target_objects_less_1_one}}1 other retweet{{/target_objects_less_1_one}}\n        {{#target_objects_less_1_other}}{{target_objects_less_1}} other retweets{{/target_objects_less_1_other}}\n      \n    </span>\n    <span class=\"hide-text\">Hide other retweets</span>\n  </button>\n{{/target_objects_more_than_1}}\n",
            "activity_item_truncated_tweet": "<div class=\"sub-stream-item {{#hidden}}sub-stream-item-hidden{{/hidden}}\">\n  <div class=\"stream-item-content tweet js-actionable-tweet truncated-tweet activity-item-tweet {{css_classes}}\" data-tweet-id=\"{{id}}\" {{{tweet_impression_id}}} {{#current_user_retweet}}data-my-retweet-id=\"{{id}}\"{{/current_user_retweet}} data-item-id=\"{{id}}\" {{#was_retweeted}}{{#retweeting_status}}data-retweet-id=\"{{id}}\"{{/retweeting_status}}{{/was_retweeted}} {{#user}}data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\"{{/user}} {{#protected}}data-protected=\"true\"{{/protected}} {{#is_sponsored}}data-promoted=\"true\"{{/is_sponsored}}>\n    <div class=\"tweet-content\">\n      <div class=\"tweet-row\">\n        {{>latest_tweet_timestamp}}:\n        {{#was_retweeted}}\n          <span class=\"retweet-icon\"></span>\n        {{{retweet_source_screen_name_link}}}\n        {{/was_retweeted}}\n         {{>tweet_text}}\n      </div>\n    </div>\n  </div>\n</div>",
            "activity_item_tweet": "\n  <div class=\"in-reply-to js-tweet-ancestors\">\n  </div>\n\n<div class=\"tweet js-stream-tweet js-hover js-actionable-tweet js-original-tweet {{#is_sponsored}} promoted-tweet{{/is_sponsored}}{{#is_my_tweet}} my-tweet{{/is_my_tweet}}{{#favorited}} favorited{{/favorited}}{{#current_user_retweet}} retweeted{{/current_user_retweet}} {{#hidden}}sub-stream-item-hidden{{/hidden}}\" {{>tweet_data}}>\n  <i class=\"dogear\"></i>\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      {{>tweet_user_block}}\n      {{>tweet_timestamp}}\n      {{>tweet_actions}}\n    </div>\n    <p class=\"js-tweet-text\">{{>linked_tweet}}</p>\n    <div class=\"stream-item-footer\">\n      {{>tweet_context}}\n      <a class=\"details with-icn js-details\" href=\"#\">\n        <span class=\"js-icon-container\"{{#place_name}} data-placename=\"{{place_name}}\"{{/place_name}}>\n          {{#is_reply}}\n            <i class=\"sm-convo\"></i>\n          {{/is_reply}}\n        </span>\n        <b>\n          <span class=\"view-expanded js-view-details\">\n            {{#is_reply}}in reply to @{{in_reply_to_screen_name}}{{/is_reply}}\n          </span>\n          <span class=\"hide-expanded js-hide-details\">\n            {{#is_reply}}in reply to @{{in_reply_to_screen_name}}{{/is_reply}}\n          </span>\n        </b>\n      </a>\n    </div>\n    {{>stream_tweet_expansion}}\n  </div>\n</div>\n\n  <div class=\"replies js-other-components\">\n  </div>\n",
            "activity_item_user": "<div class=\"sub-stream-item {{#hidden}}sub-stream-item-hidden{{/hidden}}\">\n  <div data-user-id='{{id}}' class='stream-item-content js-actionable-user user-content-medium clearfix {{#promoted_content}}promoted-account{{/promoted_content}}' data-screen-name=\"{{screen_name}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n    {{#is_your_activity}}\n      <img src='{{mini_profile_image_url}}' alt='{{name}}' class='user-content-image user-profile-link' data-user-id='{{id}}' title=\"{{name}}\"/>\n    {{/is_your_activity}}\n    {{^is_your_activity}}\n      <img src='{{bigger_profile_image_url}}' alt='{{name}}' class='user-content-image user-profile-link' data-user-id='{{id}}' title=\"{{name}}\"/>\n    {{/is_your_activity}}\n\n    <div class=\"user-content-rest\">\n      <span class='user-name'>\n        <a class='user-profile-link' data-user-id='{{id}}' href='{{profile_path}}' title='{{name}}'><strong>{{screen_name}}</strong></a>\n        <span class='full-name'>{{name}}</span>\n        {{#verified}}\n          <span class=\"verified-icon-small\" title=\"Verified Account\"></span>\n        {{/verified}}\n        {{#protected}}\n          <span class=\"protected-icon\"></span>\n        {{/protected}}\n      </span>\n    </div>\n      {{>stream_user_buttons}}\n  </div>\n</div>",
            "activity_of_me_stream_title": "<span>\n  @mentions and more\n</span>\n<span class='activity-filters'>\n  <label for='show_mentions_only' class='show-mentions-only-label'>\n    <input type=\"checkbox\" name=\"show_mentions_only\" id=\"show_mentions_only\" value=\"1\" />\n    <span class='filter-text'>Show mentions only</span>\n  </label>\n</span>",
            "activity_user_link": "<a class=\"pretty-link js-user-profile-link js-action-profile-name\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\"><strong class=\"fullname\">{{name}}</strong></a>",
            "add_people": "<div class=\"stream-placeholder\">\n  <div class=\"stream-end-inner\">\n    <h2>Find people to add to your list</h2>\n    <form class=\"inline-form js-search-for-list-people\" action=\"{{who_to_follow_search_form_path}}\" method=\"GET\">\n      <input type=\"text\" name=\"q\" placeholder=\"find users by name\">\n      <button class=\"btn js-submit\">Search</button>\n    </form>\n    <p>Search for a username, first or last name, business or brand. You can also add people from your <a href=\"{{following_path}}\">Following</a> page or anyone's profile page.</p>\n  </div>\n</div>",
            "add_to_list_dialog": "<div class=\"add-to-list-prompt\">\n  <p>Include <span class=\"pretty-link\"><s>@</s><b>{{screen_name}}</b></span> in:</p>\n</div>\n<ul class=\"list-membership-container\"></ul>",
            "admin_banner": "<div class=\"profile-user-only-admin-accessible\">{{#suspended}}This account is suspended and is only accessible to admin users.{{/suspended}}{{^suspended}}This account is only accessible to admin users.{{/suspended}}</div>\n",
            "ancestors": "<div class=\"in-reply-to js-tweet-ancestors\">\n  <div>\n    {{#rendering_on_server}}\n      {{{ancestors_html}}}\n    {{/rendering_on_server}}\n    {{^rendering_on_server}}\n      {{#ancestors}}\n        {{>simple_tweet}}\n      {{/ancestors}}\n      {{#protected_ancestor}}\n        {{>protected_ancestor_tweet}}\n      {{/protected_ancestor}}\n    {{/rendering_on_server}}\n  </div>\n</div>",
            "avatar_row": "<div class=\"avatar-row\">\n  {{#items}}\n    {{#image_is_placeholder}}\n      <div class=\"avatar avatar-placeholder size32\" alt=\"{{name}}\" original-title=\"{{name}}\" data-user-id=\"{{id}}\"></div>\n    {{/image_is_placeholder}}\n    {{^image_is_placeholder}}\n      <span class=\"js-user-profile-link user-thumb\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n        <img class=\"avatar size32 js-bubble-event js-user-tipsy js-tooltip\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" original-title=\"{{name}}\" title=\"{{name}}\">\n      </span>\n    {{/image_is_placeholder}}\n  {{/items}}\n</div>\n",
            "back_link": "<span>· <a href=\"{{route}}\">{{name}}</a></span>",
            "back_to_top": "<p><button type='button' class='btn-link back-to-top {{#swift}}hidden{{/swift}}'>Back to top ↑</button></p>",
            "banned_passwords": "\n<script type=\"text/javascript\" id=\"banned_passwords\">\n  twttr.BANNED_PASSWORDS = [];\n  (function() {\n    var r = {{{banned_pwds_rot13_json}}};\n    for (var i = r.length - 1; i >= 0; i--){\n      twttr.BANNED_PASSWORDS.push(r[i].replace(/[a-z]/gi, function(l){\n          var c = l.charCodeAt(0), n = c + 13;\n          if((c<=90 && n>90) || (n>122)) { n -= 26; }\n          return String.fromCharCode(n);\n      }));\n    };\n  })();\n</script>",
            "became_user_banner": "<div class=\"became-user-banner-outer banner-outer\">\n  <div class=\"banner\">\n    <div class=\"became-user-banner-inside banner-inside\">\n      <span>\n        You are accessing a user's account for support purposes. Please ensure you log out.\n      </span>\n    </div>\n  </div>\n</div>\n",
            "big_avatar_list_item": "\n<li class=\"list-item js-list-item js-actionable-user\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  {{#dismissable}}\n    <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close\"></i></a>\n  {{/dismissable}}\n\n  \n  <a class=\"account-group js-account-group\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n    {{>user_image_128}}\n    <span class=\"account-group-inner js-action-profile-name\">\n      <strong class=\"fullname\">{{name}}</strong>{{#verified}}<i class=\"verified\"></i>{{/verified}}\n      <small class=\"username\" data-user-id='{{id}}'><s>@</s>{{screen_name}}</small>\n    </span>\n  </a>\n  {{^swift}}\n    {{>combo_follow_button}}\n  {{/swift}}\n  {{#swift}}\n    {{>user_actions}}\n  {{/swift}}\n</li>",
            "blocked_from_following_error_message": "Sorry, you can't follow this user (because they're blocking you).\n<a href=\"{{blocked_from_following_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "bouncing_email_banner": "<div class=\"module module-banner\">\n  <div class=\"flex-module\">\n    {{#stacked}}\n      <div class=\"first-banner-row\">\n        <span class=\"title\">Whoops, we're having problems sending you email!</span>\n        <span>We've tried sending emails to <strong>{{current_email}}</strong> but they are not getting delivered. You will not receive important account emails unless you update your email address.</span>\n      </div>\n    {{/stacked}}\n    {{^stacked}}\n      <div class=\"first-banner-row\">\n        <span class=\"title\">Is your email address active?</span>\n        <span>We've tried to send emails to <strong>{{current_email}}</strong> but they are not getting delivered.</span>\n      </div>\n      <div class=\"second-banner-row\">\n        <p>Please <a id=\"bounce_settings_link\" href=\"{{change_email_path}}\">update your email settings</a> or <a href=\"#\" class='reset-bounce-link'>try sending a message again</a> to your current address.</p>\n      </div>\n    {{/stacked}}\n  </div>\n</div>\n",
            "card_accounts_onebox": "<div class=\"user card\">\n  <div class=\"card-body\">\n    <div class=\"onebox-header\">\n      <h3>Top people</h3>\n      <small class=\"view-all\"> · <a class=\"js-onebox-view-all\" href=\"{{view_all_path}}\">View all</a></small>\n    </div>\n    <div class=\"account-summary-grid\">\n      \n      {{#items}}\n        {{>card_accounts_onebox_item}}\n      {{/items}}\n    </div>\n  </div>\n</div>",
            "card_accounts_onebox_item": "\n<div class=\"account-summary js-onebox-user-item js-actionable-user\" data-user-id=\"{{id_str}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  {{^is_current_user}}\n    {{>combo_follow_button}}\n  {{/is_current_user}}\n  <div class=\"content\">\n    <a class=\"account-group js-user-profile-link\" href=\"{{profile_path}}\" data-user-id=\"{{id_str}}\">\n      <img class=\"avatar size48 js-action-profile-avatar\" src=\"{{profile_image_url}}\" alt=\"{{screen_name}}\">\n      <b class=\"fullname js-action-profile-name\">{{name}}</b>\n      <span>‏</span>\n      {{#verified}}<i class=\"verified\"></i>{{/verified}}\n      <span class=\"username js-action-profile-name\"><s>@</s><b>{{screen_name}}</b></span>\n    </a>\n    <small class=\"bio js-onebox-ellipsis\">{{{description}}}</small>\n  </div>\n</div>\n",
            "card_event_onebox": "<div class=\"news card js-onebox-event-item\">\n  <a class=\"card-body\" href=\"{{url}}\">\n    {{#media}}\n      {{#thumbnail}}\n        <div class=\"image-wrapper\">\n          <img class=\"resize-to-fit\" src=\"{{url}}\" alt=\"\">\n        </div>\n      {{/thumbnail}}\n    {{/media}}\n    <h2 class=\"js-news-headline\">{{title}}</h2>\n    <p class=\"js-news-snippet\">{{description}}</p>\n    <span class=\"attribution url\">\n      {{display_url}}\n    </span>\n  </a>\n</div>",
            "card_news": "<div class=\"story article js-story-item {{#is_hashtag}}is-hashtag{{/is_hashtag}}\" data-query=\"{{query}}\" data-story-type=\"news\" data-item-key=\"{{story_key}}\">\n  <span class=\"story-header\">\n    \n    <a class=\"view-tweets js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"{{search_query_source}}\">\n      <small class=\"view-more-tweets\">View Tweets about this →</small>\n      <small class=\"view-hashtag\"><i class=\"sm-search\"></i><b class=\"search-text\">Search this #hashtag</b></small>\n    </a>\n    <h3 class=\"story-title js-story-title js-news-headline\"><a class=\"js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"{{search_query_source}}\">{{story_name}}</a></h3>\n  </span>\n  <div class=\"story-body\">\n    <a class=\"story-article js-action-card-news\" href=\"{{article_url}}\" target=\"_blank\">\n      {{#article_image}}\n        <div class=\"image-wrapper\">\n          <img class=\"article-image\" src=\"{{article_image}}\" alt=\"{{title}}\">\n        </div>\n      {{/article_image}}\n      <h4 class=\"story-title\">{{title}}</h4>\n      <p class=\"story-summary js-news-snippet\">{{description}}</p>\n      <p class=\"metadata js-metadata\">{{article_display_url}}</p>\n    </a>\n  </div>\n</div>\n",
            "card_news_onebox": "<div class=\"news card js-onebox-news-item\">\n  <a class=\"card-body\" href=\"{{article_url}}\" target=\"_blank\">\n    <div class=\"onebox-header\">\n      <h3>Top news</h3>\n    </div>\n    {{#article_image}}\n      <div class=\"image-wrapper\">\n        <img src=\"{{article_image}}\" alt=\"\">\n      </div>\n    {{/article_image}}\n    <h2 class=\"js-news-headline\">{{title}}</h2>\n    <p class=\"js-news-snippet\">{{description}}</p>\n    <span class=\"attribution url\">\n      {{article_display_url}}\n    </span>\n  </a>\n</div>",
            "card_soccer_onebox": "\n<div class=\"card card-soccer js-onebox-soccer-item\">\n\n  <div class=\"matched-event\">\n  </div>\n\n</div>\n",
            "card_topic": "\n\n\n<div class=\"story {{media_type}} js-story-item js-loading loading {{^has_media}}js-nomedia nomedia{{/has_media}} {{#is_hashtag}}is-hashtag{{/is_hashtag}}\" data-query=\"{{escaped_query}}\" data-story-type=\"topic\" data-card-media-type=\"{{media_type}}\" data-item-key=\"{{story_key}}\">\n  <span class=\"story-header\">\n    <a class=\"view-tweets js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"{{search_query_source}}\">\n      <span class=\"view-more-tweets\">View Tweets about this →</span>\n      <span class=\"view-hashtag\"><i class=\"sm-search\"></i><b class=\"search-text\">Search this #hashtag</b></span>\n    </a>\n    <h3 class=\"story-title js-news-headline\"><a class=\"js-action-card-search\" href=\"{{search_path}}\"  data-query-source=\"{{search_query_source}}\">{{story_name}}</a></h3>\n  </span>\n  {{#has_media}}\n  <div class=\"story-body\">\n    <a class=\"media-card js-action-card-media\" href=\"{{card_url}}\" >\n      <div class=\"story-load-status\">\n        <p>Loading...</p>\n      </div>\n      <img class=\"story-{{media_type}} js-story-media\" data-item-id=\"{{escaped_query}}\" alt=\"{{escaped_query}}\" data-img-src=\"{{data_image_url}}\">\n      {{#has_video}}\n        <i class=\"play-large\"></i>\n      {{/has_video}}\n    </a>\n    <a class=\"story-tweet js-action-card-media\" href=\"{{card_url}}\">\n    {{#tweet}}\n      <div class=\"content\">\n        <span class=\"details\">\n          <i class=\"disco-media-type\"></i>View details\n        </span>\n        {{#user}}\n          <img class=\"avatar size20\" src=\"{{profile_image_url}}\" alt=\"{{name}}\">\n          <strong class=\"fullname\">{{name}}</strong>\n          <span class=\"username\"><s>@</s>{{screen_name}}</span>\n        {{/user}}\n        <p class=\"tweet-text\">{{tweet_text}}</p>\n      </div>\n    {{/tweet}}\n    </a>\n  </div>\n  <span class=\"media-headline\">\n    <h3 class=\"story-title js-news-headline\">\n      <a class=\"js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"{{search_query_source}}\">\n        <span class=\"story-title-text\">{{story_name}}</span>\n      </a>\n    </h3>\n  </span>\n  {{#has_attribution}}\n  <a class=\"attribution js-story-attribution\" href=\"{{attribution_url}}\" target=\"_blank\">\n    <img class=\"favicon\" src=\"{{attribution_img}}\" alt=\"{{attribution_name}}\">\n  </a>\n  {{/has_attribution}}\n  {{/has_media}}\n</div>\n",
            "card_tweet": "\n\n\n{{#has_media}}\n  {{#has_image}}\n    {{>card_tweet_image}}\n  {{/has_image}}\n  {{#has_video}}\n    {{>card_tweet_video}}\n  {{/has_video}}\n{{/has_media}}\n\n\n{{^has_media}}\n  <div class=\"card js-card-item\" data-tweet-id=\"{{id}}\" data-card-type=\"tweet\">\n    \n    <div class=\"stream-item\">{{>stream_tweet}}</div>\n    \n    <a class=\"card-footer js-action-card-permalink\" href=\"{{permalink_path}}\">\n      <i class=\"chev-right\"></i>\n      <p class=\"context\">{{social_proof}}</p>\n    </a>\n  </div>\n{{/has_media}}\n",
            "card_tweet_image": "  \n\n<div class=\"card image js-card-item\" data-tweet-id=\"{{id}}\" data-card-type=\"tweet\">\n  \n  <a class=\"card-footer-overlay js-action-card-permalink\" href=\"{{permalink_path}}\">\n    <i class=\"chev-light-right\"></i>\n    <div class=\"headline\">\n      {{#user}}\n        <img class=\"attribution-icon\" src=\"{{profile_image_url}}\">\n        <h3>{{name}}:</h3>\n      {{/user}}\n      <span class=\"content-preview\">{{text}}</span>\n      <p class=\"context\">{{social_proof}}</p>\n    </div>\n  </a>\n  \n  <a class=\"card-background js-action-card-permalink\" href=\"{{permalink_path}}\">\n    <img class=\"card-background-image\" data-item-id=\"{{id}}\" src=\"{{card_background_image}}\" alt=\"\" />\n  </a>\n  <a href=\"#\">\n    <img class=\"media attribution-icon\" src=\"http://yfrog.com/favicon.ico\" alt=\"\">\n  </a>\n</div>",
            "card_tweet_video": "\n\n<div class=\"card full-bleed video js-card-item\" data-tweet-id=\"{{id}}\" data-card-type=\"tweet\">\n  \n  <a class=\"card-footer-overlay js-action-card-permalink\" href=\"{{permalink_path}}\">\n    <i class=\"chev-light-right\"></i>\n    <div class=\"headline\">\n      {{#user}}\n        <img class=\"attribution-icon\" src=\"{{profile_image_url}}\">\n        <h3>{{name}}:</h3>\n      {{/user}}\n      <span class=\"content-preview\">{{text}}</span>\n      <p class=\"context\">{{social_proof}}</p>\n    </div>\n  </a>\n  \n  <a class=\"card-background js-action-card-permalink\" href=\"{{permalink_path}}\">\n    <img class=\"card-background-image\" data-item-id=\"{{id}}\" src=\"{{card_background_image}}\"alt=\"\" />\n    <i class=\"play-large\"></i>\n  </a>\n  <a href=\"#\">\n    <img class=\"media attribution-icon\" src=\"http://yfrog.com/favicon.ico\" alt=\"\">\n  </a>\n</div>",
            "cards_base": "{{#photos}}{{>cards_media}}{{/photos}}\n{{#players}}{{>cards_media}}{{/players}}\n{{#summaries}}{{>cards_summary}}{{/summaries}}\n",
            "cards_flag_media": "<span class=\"flag-container flag-cards\">\n  <button type=\"button\" class=\"flaggable btn-link\">\n    Flag media\n  </button>\n  <span class=\"flagged hidden\">\n    Flagged\n    <span>\n      <a target=\"_blank\" href=\"//support.twitter.com/articles/20069937\">\n        (learn more)\n      </a>\n    </span>\n  </span>\n</span>",
            "cards_layout": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <base href=\"https://twitter.com\" target=\"_top\">\n    <title>Twitter Card Preview</title>\n    <link rel=\"stylesheet\" href=\"{{core_css_bundle}}\">\n    <link rel=\"stylesheet\" href=\"{{more_css_bundle}}\">\n  </head>\n  <body>\n    {{{content_for_layout}}}\n  </body>\n</html>",
            "cards_media": "<div data-card-url=\"{{url}}\" data-card-type=\"{{#players}}player{{/players}}{{^players}}photo{{/players}}\" class=\"cards-base cards-multimedia\">\n  <div class=\"media\">\n    {{! Since players and photos are identical in terms of metadata, just show\n        one or other here, and share the metadata component }}\n    {{#players}}\n    <iframe src=\"{{source_url}}\" width=\"{{width}}\" height=\"{{height}}\"></iframe>\n    {{/players}}\n    {{^players}}{{#images}}{{#web}}\n    <a {{^permalink_continuity}}target=\"_blank\" {{/permalink_continuity}}class=\"twitter-timeline-link\" href=\"{{url}}\">\n      <img src=\"{{image_url}}\" alt=\"Embedded image permalink\" {{#width}}{{#height}}width=\"{{width}}\" height=\"{{height}}\"{{/height}}{{/width}} {{#title}}title=\"{{title}}\"{{/title}}>\n    </a>\n    {{/web}}{{/images}}{{/players}}\n  </div>\n  <div class=\"cards-content\">\n    {{#title}}<h3>\n      <a {{^permalink_continuity}}target=\"_blank\" {{/permalink_continuity}}class=\"twitter-timeline-link\" href=\"{{url}}\">{{title}}</a>\n    </h3>{{/title}}\n    <div class=\"byline\">\n      {{#author_user}}By {{>cards_user_byline}}{{/author_user}}\n      {{#twimg_attribution}}\n        {{#author_user}}· {{/author_user}}\n        <span class=\"pb-attribution\">\n          Powered by <a target=\"_blank\" class=\"with-icn\" href=\"http://photobucket.com/twitter\"><i class=\"service-sm-native-photobucket\"></i>Photobucket</a>\n        </span>\n      {{/twimg_attribution}}\n    </div>\n    {{#description}}<p><a {{^permalink_continuity}}target=\"_blank\" {{/permalink_continuity}}class=\"twitter-timeline-link\" href=\"{{url}}\">{{description}}</a></p>{{/description}}\n  </div>\n  {{#site_user}}{{>cards_user_source}}{{/site_user}}\n</div>",
            "cards_summary": "<div data-card-url=\"{{url}}\" data-card-type=\"summary\" class=\"cards-base cards-summary {{#images}}{{#web}}with-image{{/web}}{{/images}}\">\n  <div class=\"cards-content clearfix\">\n    {{#images}}{{#web}}\n    <a target=\"_blank\" class=\"twitter-timeline-link\" href=\"{{url}}\">\n      <img class=\"summary-thumbnail\" src=\"{{image_url}}\" alt=\"\" {{#width}}{{#height}}height=\"{{height}}\" width=\"{{width}}\"{{/height}}{{/width}}>\n    </a>\n    {{/web}}{{/images}}\n    <h3>\n      <a {{^permalink_continuity}}target=\"_blank\" {{/permalink_continuity}}class=\"twitter-timeline-link\" href=\"{{url}}\">{{title}}</a>\n    </h3>\n    {{#author_user}}\n    <div class=\"byline\">By {{>cards_user_byline}}</div>\n    {{/author_user}}\n    {{#description}}\n    <p class=\"article\">\n      <a {{^permalink_continuity}}target=\"_blank\" {{/permalink_continuity}}class=\"twitter-timeline-link\" href=\"{{url}}\">{{description}}</a>\n    </p>\n    {{/description}}\n    {{#site_user}}{{>cards_user_source}}{{/site_user}}\n  </div>\n</div>",
            "cards_user_byline": "<a class=\"account-group js-account-group js-action-profile js-user-profile-link js-nav\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n  <strong class=\"fullname js-action-profile-name\">{{name}}</strong>\n  <span class=\"username js-action-profile-name\"><s>@</s><b>{{screen_name}}</b></span>\n</a>",
            "cards_user_source": "<div class=\"source\"><a class=\"account-group js-action-profile js-user-profile-link\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n  <img class=\"avatar js-action-profile-avatar\" src=\"{{profile_image_url_https}}\" alt=\"\">\n  <strong class=\"fullname js-action-profile-name\">{{name}}</strong>\n  <span class=\"username js-action-profile-name\"><s>@</s><b>{{screen_name}}</b></span>\n</a>\n · {{>user_item_action}}\n</div>\n",
            "checkbox_list_item": "<li class=\"{{className}}\" data-list-id=\"{{id}}\">\n  {{#icon}}\n    <span class=\"{{icon}}\"></span>\n    {{{label}}}\n  {{/icon}}\n  {{^icon}}\n    <img class=\"loading-spinner\" src=\"/images/spinner.gif\" alt=\"waiting\">\n    <input class=\"membership-checkbox\" id=\"list_{{id}}\" type=\"checkbox\" {{#user_is_member}}data-is-checked=\"true\" checked=\"checked\"{{/user_is_member}}>\n    {{{label}}}\n    {{#is_private}}\n      <i title=\"Private List\" class=\"sm-lock\"></i>\n    {{/is_private}}\n  {{/icon}}\n</li>",
            "combo_follow_button": "{{%TRANSLATION-HINT mode=actions}}\n<div class=\"js-follow-combo follow-combo btn-group js-actionable-user {{#blocking}}blocked{{/blocking}}{{^blocking}}{{^following}}not-following{{/following}}{{#following}}following{{/following}}{{#follow_request_sent}} follow-request-sent{{/follow_request_sent}}{{#protected}} protected{{/protected}}{{#following}}{{#want_retweets}} including{{/want_retweets}}{{#notifications}} notifying{{/notifications}}{{/following}}{{#can_dm}} can-dm{{/can_dm}}{{/blocking}}{{#dismissable}} dismissable{{/dismissable}}\"\n    data-user-id=\"{{id}}\" data-screen-name=\"{{screen_name}}\" data-device-notification=\"{{device_notification}}\" {{{source_impression_id}}} {{{account_impression_id}}} {{{feedback_token}}}>\n  <a class=\"follow-btn btn js-combo-btn js-recommended-item\">\n    <div class=\"js-action-follow follow-text action-text\" data-user-id=\"{{id}}\" data-device-notification=\"{{device_notification}}\">\n      <i class=\"follow\"></i>\n      Follow\n    </div>\n    <div class=\"js-action-unfollow following-text action-text\" data-user-id=\"{{id}}\">\n      Following\n    </div>\n    <div class=\"js-action-unfollow unfollow-text action-text\" data-user-id=\"{{id}}\">\n      Unfollow\n    </div>\n    <div class=\"block-text action-text\">\n      Blocked\n    </div>\n    <div class=\"js-action-unblock unblock-text action-text\" data-user-id=\"{{id}}\">\n      Unblock\n    </div>\n    <div class=\"js-action-unfollow pending-text action-text\" data-user-id=\"{{id}}\">\n      Pending\n    </div>\n    <div class=\"js-action-unfollow cancel-req-text action-text\" data-user-id=\"{{id}}\">\n      Cancel\n    </div>\n  </a>\n  {{#logged_in}}\n    <span href=\"#\" class=\"btn btn-user-actions js-action-profilemenu\" data-user-id=\"{{id}}\">\n      <i class=\"account-arrow\"></i>\n    </span>\n  {{/logged_in}}\n</div>\n",
            "combo_follow_button_dropdown": "<ul class=\"js-combo-btn-dropdown-options dropdown-menu btn-group-dropdown\">\n  <li class=\"dropdown-caret\">\n    <span class=\"caret-outer\"></span>\n    <span class=\"caret-inner\"></span>\n  </li>\n  <li>\n    <a class=\"js-action-mention is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">\n      Tweet to <s>@</s>{{screen_name}}\n    </a>\n  </li>\n  <li>\n    <a class=\"js-direct-message-action can-send-dm\" href=\"#\">\n      Send a Direct Message\n    </a>\n  </li>\n\n  <li>\n    <a class=\"js-action-add-to-list is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">\n      Add or remove from lists...\n    </a>\n  </li>\n\n  <li class=\"is-not-blocked dropdown-divider\"></li>\n\n  <li>\n    <a class=\"js-action-block is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">\n      Block <s>@</s>{{screen_name}}\n    </a>\n  </li>\n  <li>\n    <a class=\"js-action-unblock is-blocked\" href=\"#\" data-user-id=\"{{id}}\">\n      Unblock <s>@</s>{{screen_name}}\n    </a>\n  </li>\n  <li>\n    <a class=\"js-action-spam is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">\n      Report <s>@</s>{{screen_name}} for spam\n    </a>\n  </li>\n  <li>\n    <a class=\"js-action-dismiss is-dismissable\" href=\"#\">\n      Hide this suggestion\n    </a>\n  </li>\n\n  <li class=\"is-following dropdown-divider\"></li>\n\n  <li>\n    <a class=\"js-retweet-setting is-not-including\" href=\"#\" data-user-id=\"{{id}}\">\n      Turn on Retweets\n    </a>\n  </li>\n  <li>\n    <a class=\"js-retweet-setting is-including\" href=\"#\" data-user-id=\"{{id}}\">\n      \n      Turn off Retweets\n    </a>\n  </li>\n  <li>\n    <a class=\"js-device-notifications is-not-notifying\" href=\"#\" data-user-id=\"{{id}}\">\n      Turn on mobile notifications\n    </a>\n  </li>\n  <li>\n    <a class=\"js-device-notifications is-notifying\" href=\"#\" data-user-id=\"{{id}}\">\n      \n      Turn off mobile notifications\n    </a>\n  </li>\n</ul>\n",
            "connect_dashboard": "<div class=\"dashboard\">\n  <div class=\"module\">\n    <ul class=\"js-nav-links\">\n      <li class=\"{{#on_interactions}}active{{/on_interactions}}\"><a class=\"list-link js-nav\" href=\"{{interactions_path}}\" data-nav=\"connect\">Interactions <i class=\"chev-right\"></i></a></li>\n      <li class=\"{{#on_mentions}}active{{/on_mentions}}\"><a class=\"list-link js-nav\" href=\"{{mentions_path}}\" data-nav=\"mentions\">Mentions <i class=\"chev-right\"></i></a></li>\n    </ul>\n  </div>\n\n  {{>japanese_ad_iframe}}\n\n  {{#who_to_follow}}\n    {{>dashboard_user_recommendations}}\n  {{/who_to_follow}}\n  {{>footer}}\n</div>\n",
            "interactions": "{{>connect/connect_dashboard}}\n<div class=\"content-main\" id=\"timeline\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <h2 class=\"js-timeline-title\">Interactions</h2>\n    </div>\n  </div>\n  {{>timeline}}\n</div>\n",
            "mentions": "{{>connect/connect_dashboard}}\n<div class=\"content-main\" id=\"timeline\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <h2 class=\"js-timeline-title\">Mentions</h2>\n    </div>\n  </div>\n  {{>timeline}}\n</div>\n{{>dialogs/sensitive_flag_confirmation}}\n",
            "contact_import_loading": "<div class=\"stream-loading\">\n  <div class=\"stream-end-inner\">\n    <span class=\"spinner\" title=\"Loading...\"></span>\n\n    <p>\n      <strong>We're loading your contacts.</strong>\n    </p>\n\n    <p>\n      (This can take a while if you've got a large address book.)\n    </p>\n  </div>\n</div>\n",
            "contact_import_matches": "<div class=\"stream\">\n  <div class=\"stream-items find-friends-results clearfix rm-streamitem-clearfix\"></div>\n</div>",
            "contact_import_matches_header": "{{>stream_header}}\n<div class=\"js-contact-import-header-placeholder\"></div>",
            "contact_import_matches_stats": "<div class=\"header-inner\">\n  <h2>\n    Your {{service_name}} contacts\n    <small class=\"view-toggler\">· <a href=\"{{retry_service_path}}\">Try another service</a></small>\n    <a class=\"js-action-follow-all follow-btn btn small\">\n      <i class=\"follow\"></i>{{follow_all_text}}\n    </a>\n  </h2>\n  <small class=\"view-toggler\">\n    {{#following_count}}\n      <a class=\"js-toggle-following\" href=\"#\">Show <span>{{following_count}}</span> following</a>\n      {{#others_count}}\n       /\n      {{/others_count}}\n    {{/following_count}}\n    {{#others_count}}\n      <a class=\"invite-contacts\" href=\"#\">Invite {{others_count}} to join Twitter</a>\n    {{/others_count}}\n  </small>\n</div>\n",
            "contact_import_service_icon": "<strong class=\"service-name service-{{id}}\" data-service-id=\"{{id}}\">\n  {{#html_name}}<strong class='service hotmail'><span></span></strong>    <strong class='service msn-messenger'><span></span></strong>{{/html_name}}\n  {{^html_name}}<span></span>{{/html_name}}\n</strong>",
            "contact_import_service_msn": "\n<i class=\"service-hotmail\"></i><b>Hotmail</b>",
            "contact_import_service_name": "<div class=\"js-service-name source\" data-service-id=\"{{id}}\">\n  {{#html_name}}{{{html_name}}}{{/html_name}}\n  {{^html_name}}<i class=\"service-{{id}}\"></i><b>{{name}}</b>{{/html_name}}\n</div>\n",
            "contact_import_services_icon_list": "<div class=\"service-links\">\n  {{#services}}\n    <a class=\"service-button service-link {{#matched}}selected{{/matched}}\" href=\"#\"\n        data-url=\"{{url}}\" data-popup=\"{{popup}}\" data-width=\"{{width}}\" data-height=\"{{height}}\" data-name=\"{{name}}\" title=\"{{name}}\">\n      {{>contact_import_service_icon}}\n    </a>\n  {{/services}}\n</div>\n",
            "contact_import_services_list": "<div class=\"service-links\">\n  {{#services}}\n    <a class=\"service-button service-link {{#matched}}selected{{/matched}}\" href=\"#\"\n        data-url=\"{{url}}\" data-popup=\"{{popup}}\" data-width=\"{{width}}\" data-height=\"{{height}}\" data-name=\"{{name}}\">\n      {{>contact_import_service_name}}\n    </a>\n  {{/services}}\n</div>\n",
            "contact_import_services_vertical": "<div class=\"find-friends-sources stream-item\">\n  <ul class=\"find-friends-list\">\n    {{#services}}\n      <li class=\"js-service-row {{#matched_email}}service-row-matched{{/matched_email}}\" data-url=\"{{url}}\" data-popup=\"{{popup}}\" data-width=\"{{width}}\" data-height=\"{{height}}\">\n        <a class=\"btn {{#matched_email}} primary-btn {{/matched_email}}\">\n          Search contacts\n        </a>\n        {{>contact_import_service_name}}\n        {{#matched_email}}\n          <div class=\"metadata matched-email\">{{matched_email}}</div>\n        {{/matched_email}}\n      </li>\n    {{/services}}\n  </ul>\n  <p class=\"fine-print\">\n  {{>import_disclaimer}}\n  </p>\n</div>\n",
            "content_home": "<div class=\"content-main js-content-main\">\n  <div class=\"content-header\">\n  </div>\n  <div class=\"stream\">\n  </div>\n</div>",
            "conversation": "<div class=\"conversation\">\n  <div class=\"related-tweets\" {{>related_tweets_data_attributes}}>\n    {{#all_but_last_ancestor_tweet_views}}\n      {{>simple_tweet}}\n    {{/all_but_last_ancestor_tweet_views}}\n    {{#last_ancestor_tweet_view}}\n      {{>conversation_last_ancestor_tweet}}\n    {{/last_ancestor_tweet_view}}\n    {{#has_earlier}}\n      {{>conversation_earlier}}\n    {{/has_earlier}}\n  </div>\n  {{#tweet_view}}\n    {{>details_pane_tweet}}\n  {{/tweet_view}}\n</div>",
            "conversation_earlier": "<fieldset class=\"in-reply-to-border conversation-earlier-border\">\n  <legend class=\"in-reply-to-text\">\n    in reply to ↑</a>\n  </legend>\n</fieldset>\n",
            "conversation_last_ancestor_tweet": "<div class=\"conversation-last-ancestor-tweet\">\n  {{>simple_tweet}}\n</div>",
            "conversation_thread": "<div class=\"messages-pane\" data-thread-id=\"{{screen_name}}\">\n  <div class=\"messages-pane-header\">\n    <h2>You and {{screen_name}}</h2>\n  </div>\n  {{#items}}\n    {{#delimiter_text}}\n    <div class='message-divider'>\n      <span>{{delimiter_text}}</span>\n    </div>\n    {{/delimiter_text}}\n    {{>message}}\n  {{/items}}\n</div>",
            "conversation_thread_preview": "<div class='message-thread-preview stream-item-content' data-screen-name=\"{{#other_person}}{{screen_name}}{{/other_person}}\">\n  <div class=\"more\">»</div>\n  <div class='message-inner'>\n    {{#other_person}}\n    <img src='{{profile_image_url}}' alt='{{name}}' class='thumb' data-user-id='{{id}}'/>\n    <span class='user-name'><strong>{{screen_name}}</strong> <b class='full-name'>{{name}}</b></span>\n    {{/other_person}}\n    <div class='message-content'>\n      <span class='created-at'><span class=\"_timestamp\" data-time=\"{{last_message_date}}\" data-long-form=\"true\" data-include-sec=\"true\">{{timestamp}}</span></span>\n      <div class=\"message-count\">{{message_count}}</div>\n    </div>\n  </div>\n</div>\n",
            "copied_twimg": "<div class=\"copied-twimg\">\n  <a class=\"inline-media-image\" data-inline-type=\"{{name}}\" href=\"{{url}}\" target=\"_blank\">\n    <img src=\"{{media_url}}\"/>\n    {{>copied_twimg_attribution}}\n  </a>\n</div>",
            "copied_twimg_attribution": "<span class=\"attribution-wrapper\">\n  <span class=\"attribution\">image by @<em class=\"profile-path user-profile-link\" data-screen-name=\"{{screen_name}}\">{{screen_name}}</em>, <span class=\"unit\">{{time_ago}}</span></span>\n</span>",
            "country_select": "\n{{#do_not_render_pctd_logged_out}}\n<div class=\"country-select-outer\">\n  <strong class=\"country-select-label\">Country:</strong>\n  <span class=\"country-select-inner\">\n    <a href=\"#\" /><span class=\"country-select-mask\" />\n    <select class=\"country-select\">\n      {{#countries}}\n        <option value=\"{{code}}\"{{#selected}} selected=\"selected\"{{/selected}}>{{name}}</option>\n      {{/countries}}\n    </select>\n  </span>\n</div>\n{{/do_not_render_pctd_logged_out}}\n",
            "create_list_button": "<a class=\"{{^link_only}}btn {{/link_only}}js-create-list-button\" href=\"#\" data-modal=\"list-new\" data-element-term=\"create_list_button\">Create list</a>",
            "current_text_user_autocomplete_item": "<li class='selectable' data-user-screenname='{{screenname}}'>\n  Go to @<strong>{{screenname}}</strong>\n</li>",
            "daily_limit_error_message": "{{#is_dm}}\n  You are over the daily limit for sending messages.\n{{/is_dm}}\n{{^is_dm}}\n  {{#is_tweet}}\n    You are over the daily limit for sending Tweets.\n  {{/is_tweet}}\n  {{^is_tweet}}\n    You are over the daily limit for this action.\n  {{/is_tweet}}\n{{/is_dm}}\nPlease wait a few hours and try again.\n<a href=\"{{daily_limit_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "dashboard_activity_item": "<div data-activity-type='{{event}}'\n     data-activity-min-position='{{min_position}}'\n     data-activity-max-position='{{max_position}}'\n     class='clearfix dashboard-activity-item dashboard-item-{{event}}'>\n\n\n  <div class=\"dashboard-item-activity-line\">\n    <a href='/#!/activity?item={{min_position}}' class='dashboard-activity-item-link' data-item-id='{{min_position}}'>\n      {{#should_show_first_actor}}\n        {{#first_actor}}\n          {{>user_image_24}}\n        {{/first_actor}}\n      {{/should_show_first_actor}}\n\n      <span class='dashboard-activity-item-sentence'>{{{activity_line}}}</span>\n    </a>\n  </div>\n</div>",
            "dashboard_activity_teaser": "<div class=\"dashboard-activity-teaser-inner\">\n  <h2>\n    <span class='dashboard-component-title'>Activity</span>\n    <span class=\"dashboard-component-subtitle\">\n      <span class=\"dot\">·</span>\n      <a href=\"{{activity_path}}\">view all</a>\n    </span>\n  </h2>\n  <div class=\"activity-items\">\n    {{#items}}\n      {{>dashboard_activity_item}}\n    {{/items}}\n  </div>\n</div>",
            "dashboard_contact_import": "<div class=\"contact-import-inner\">\n  <h2 class=\"contact-import-component\">Find Friends</h2>\n  <p>Use the services below to find people you know on Twitter</p>\n  <div class=\"contact-import-services {{#compact}}compact{{/compact}} promptbird-action-bar\">\n    {{#compact}}\n      {{>contact_import_services_icon_list}}\n    {{/compact}}\n    {{^compact}}\n      {{>contact_import_services_list}}\n    {{/compact}}\n  </div>\n</div>",
            "dashboard_contact_import_matches_stats": "<div class=\"header-inner\">\n  <a class=\"follow-btn btn small js not-following\">\n    <div class=\"js-action-follow-all follow-text\">\n      <i class=\"follow\"></i>{{follow_all_text}}\n    </div>\n  </a>\n  <div>\n    <span class=\"dashboard-import-header\">{{service_name}}</span> contacts\n  </div>\n  <small class=\"view-toggler\">\n    {{#others_count}}\n      <a href=\"#\" class=\"invite-contacts\">Invite {{others_count}} to join Twitter</a>\n    {{/others_count}}\n  </small>\n</div>\n",
            "dashboard_discover": "<div class=\"dashboard\">\n  <div class=\"module discover-nav\">\n    <ul class=\"js-nav-links\">\n      <li class=\"{{#on_discover}}active{{/on_discover}}\"><a class=\"list-link\" href=\"{{discover_path}}\" data-nav=\"discover\">{{#single_expanded_tweets}}Tweets{{/single_expanded_tweets}}{{^single_expanded_tweets}}Stories{{/single_expanded_tweets}} <i class=\"chev-right\"></i></a></li>\n      <li class=\"{{#on_activity}}active{{/on_activity}}\"><a class=\"list-link\" href=\"{{activity_tab_path}}\" data-nav=\"network_activity\">Activity<i class=\"chev-right\"></i></a></li>\n      {{#show_lifeline}}\n        <li class=\"{{#on_lifeline}}active{{/on_lifeline}}\"><a class=\"list-link\" href=\"{{who_to_follow_lifeline_path}}\" data-nav=\"lifeline\">Lifeline<i class=\"chev-right\"></i></a></li>\n      {{/show_lifeline}}\n      <li class=\"{{#on_wtf}}active{{/on_wtf}}\">\n        <a class=\"list-link\" href=\"{{who_to_follow_suggestions_path}}\" data-nav=\"suggestions\">\n          Who to follow\n          <i class=\"chev-right\"></i>\n          {{#avatar_row}}{{>avatar_row}}{{/avatar_row}}\n        </a>\n      </li>\n      <li class=\"{{#on_find_friends}}active{{/on_find_friends}}\"><a class=\"list-link\" href=\"{{who_to_follow_import_path}}\" data-nav=\"find_friends\">Find friends <i class=\"chev-right\"></i></a></li>\n      <li class=\"{{#on_profile}}active{{/on_profile}}\"><a class=\"list-link\" href=\"{{who_to_follow_interests_path}}\" data-nav=\"interests\">Browse categories <i class=\"chev-right\"></i></a></li>\n    </ul>\n  </div>\n  {{>dashboard_trends}}\n  {{>footer}}\n</div>\n",
            "dashboard_follower_request_link": "<div class=\"flex-module\">\n  <a class=\"btn follower-request-link js-nav\" href=\"{{follower_requests_path}}\">\n    {{button_label}}\n    {{^button_label}}\n      \n        {{#follower_request_count_one}}1 new follower request{{/follower_request_count_one}}\n        {{#follower_request_count_other}}{{follower_request_count}} new follower requests{{/follower_request_count_other}}\n      \n    {{/button_label}}\n  </a>\n</div>",
            "dashboard_getting_started": "<div class=\"getting-started\">\n\n  <h2>\n    {{title}}\n    {{#is_noob_level_5_6_7}}\n        <span class=\"dot\">·</span> <a href=\"#\" class=\"hidenextsteps\">hide next steps</a>\n    {{/is_noob_level_5_6_7}}\n  </h2>\n\n  <ol>\n\n    {{#is_noob_level_0}}\n      {{>getting_started_follow}}\n      {{>getting_started_mobile}}\n      {{>getting_started_profile}}\n      {{>getting_started_tweet}}\n    {{/is_noob_level_0}}\n\n    {{#is_noob_level_1_2_3}}\n      {{>getting_started_tweet}}\n      {{>getting_started_profile}}\n      {{>getting_started_mobile}}\n    {{/is_noob_level_1_2_3}}\n\n    {{#is_noob_level_4}}\n      {{>getting_started_follow}}\n      {{>getting_started_mobile}}\n      {{>getting_started_profile}}\n    {{/is_noob_level_4}}\n\n    {{#is_noob_level_5_6_7}}\n      {{>getting_started_mobile}}\n      {{>getting_started_profile}}\n    {{/is_noob_level_5_6_7}}\n\n  </ol>\n\n</div>\n\n",
            "dashboard_mini_profile": "<div class='profile-pane' {{{source_impression_id}}}>\n  <div class=\"profile-basics clearfix\">\n    <div class=\"profile-text\">\n      <a href=\"{{profile_path}}\">\n        <img src='{{right_image_size}}' alt='{{name}}' width='128' class='thumb' data-user-id='{{id}}'/>\n      </a>\n      {{>full_name}}\n      <div class=\"screen-name-and-location\">\n        <a href=\"{{profile_path}}\" class=\"screen-name screen-name-{{screen_name}} pill\"><strong>@{{screen_name}}</strong></span></a>\n      </div>\n      <div class=\"location\">{{#location}}{{location}}{{/location}}</div>\n    </div>\n    <div class=\"user-info\">\n      <span class=\"bio\">{{{linkified_description}}}</span> {{#url}}<a rel=\"me nofollow\" href=\"{{url}}\" target=\"_blank\">{{{display_url_or_url}}}</a>{{/url}}\n    </div>\n\n    {{>user_stats}}\n  </div>\n</div>\n",
            "dashboard_profile_stats": "<div class='dashboard-profile-annotations clearfix'>\n  <h2 class=\"dashboard-profile-title\"><img src=\"{{profile_image_url}}\" alt=\"{{name}}\" width=\"24\" class=\"profile-dashboard\"/>{{profile_stats_title}}</h2>\n  {{#is_translator}}\n    <a class='dashboard-profile-translator' href='{{translator_profile_path}}'>\n      <em>Translator</em>\n    </a>\n  {{/is_translator}}\n</div>\n\n{{>user_stats}}\n",
            "dashboard_promo": "<div class='definition'>\n  {{#promo}}\n    <p class=\"promo\">{{{promo_contents}}}</p>\n  {{/promo}}\n</div>\n",
            "dashboard_related_services": "<div class=\"related-services\">\n  <h2>Related Services</h2>\n  <ul>\n    {{#promos}}\n      <li>{{{promo_contents}}}</li>\n    {{/promos}}\n  </ul>\n</div>\n",
            "dashboard_settings": "<div class=\"dashboard\">\n  {{>mini_home_profile}}\n\n  {{#current_user}}\n  <div class=\"module\">\n    <ul class=\"js-nav-links\">\n      <li class=\"{{#on_account}}active{{/on_account}}\"><a class=\"list-link js-nav\" href=\"{{settings_path}}\" data-nav=\"account\">Account <i class=\"chev-right\"></i></a></li>\n      <li class=\"{{#on_password}}active{{/on_password}}\"><a class=\"list-link js-nav\" href=\"{{password_path}}\" data-nav=\"password\">Password<i class=\"chev-right\"></i></a></li>\n      {{#device_available}}\n        <li class=\"{{#on_devices_main}}active{{/on_devices_main}}\"><a class=\"list-link js-nav\" href=\"{{devices_settings_path}}\" data-nav=\"devices\">Mobile <i class=\"chev-right\"></i></a></li>\n      {{/device_available}}\n      <li class=\"{{#on_notifications}}active{{/on_notifications}}\"><a class=\"list-link js-nav\" href=\"{{notifications_path}}\" data-nav=\"notifications\">Email notifications <i class=\"chev-right\"></i></a></li>\n      <li class=\"{{#on_profile}}active{{/on_profile}}\"><a class=\"list-link js-nav\" href=\"{{settings_profile_path}}\" data-nav=\"profile\">Profile <i class=\"chev-right\"></i></a></li>\n\n      {{#enhanced_profile_available}}\n      <li class=\"{{#on_enhanced_profile}}active{{/on_enhanced_profile}}\"><a class=\"list-link js-nav\" href=\"{{enhanced_profile_settings_path}}\" data-nav=\"enhanced_profile\">Enhanced profile <i class=\"chev-right\"></i></a></li>\n      {{/enhanced_profile_available}}\n\n      <li class=\"{{#on_design}}active{{/on_design}}\"><a class=\"list-link js-nav\" href=\"{{design_path}}\" data-nav=\"design\">Design <i class=\"chev-right\"></i></a></li>\n      <li class=\"{{#on_applications}}active{{/on_applications}}\"><a class=\"list-link js-nav\" href=\"{{connections_path}}\" data-nav=\"connections\">Apps<i class=\"chev-right\"></i></a></li>\n\n      {{#contributors_available}}\n        <li><a class=\"list-link\" href=\"{{contributor_permissions_path}}\" data-nav=\"contributors\">Contributors <i class=\"chev-right\"></i></a></li>\n      {{/contributors_available}}\n\n      {{#thrift_syndication_available}}\n        <li class=\"{{#on_widgets}}active{{/on_widgets}}\"><a class=\"list-link\" href=\"{{widgets_path}}\" data-nav=\"widgets\">Widgets <i class=\"chev-right\"></i></a></li>\n      {{/thrift_syndication_available}}\n    </ul>\n  </div>\n  {{/current_user}}\n\n  {{>footer}}\n</div>\n",
            "dashboard_social_context": "{{%TRANSLATION-HINT mode=social_context}}\n<div class=\"social-context\">\n  <h2>You and @{{screen_name}}</h2>\n  {{#accounts_in_common}}\n    <div class=\"you-both-follow clearfix\">\n      {{>dashboard_social_context_subcomponent}}\n    </div>\n  {{/accounts_in_common}}\n</div>\n",
            "dashboard_social_context_subcomponent": "<p>{{{caption}}}</p>\n{{{avatar_list}}}\n",
            "dashboard_stream_user": "<div class=\"account-summary {{#promoted_content}}promoted-account {{/promoted_content}} dashboard-account-summary js-actionable-user\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  {{>combo_follow_button}}\n  <div class=\"content\">\n    <a class=\"account-group js-account-group js-recommend-link user-thumb\" href=\"{{profile_path}}\">\n      <img src=\"{{profile_image_url}}\" alt=\"{{name}}\" class=\"avatar size48 js-action-profile-avatar\" data-user-id=\"{{id}}\">\n      <div class=\"account-group-inner\">\n        <b class=\"fullname js-action-profile-name\">{{name}}</b>\n        <span>‏</span>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        <div class=\"screenname js-action-profile-name\">\n          <s>@</s>{{screen_name}}\n        </div>\n      </div>\n    </a>\n    {{#is_sponsored}}\n      <span class=\"metadata with-icn\">\n        <a class=\"js-promoted-badge js-user-profile-link js-account-group\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\" title=\"{{#promoted_content}}{{disclosure_text}}{{/promoted_content}}\"><i class=\"{{promoted_badge_class}}\"></i>Promoted</a>\n      </span>\n    {{/is_sponsored}}\n  </div>\n</div>\n",
            "dashboard_timeline": "<div class=\"dashboard\">\n  {{#mini_home_profile}}\n    {{>mini_home_profile}}\n  {{/mini_home_profile}}\n\n  {{#home_nav_top}}\n    {{>nav}}\n  {{/home_nav_top}}\n\n  {{#wtf}}\n    {{>dashboard_user_recommendations}}\n  {{/wtf}}\n\n  {{>module_trends}}\n\n  {{>module_footer}}\n\n</div>\n",
            "dashboard_trends": "<div class=\"module trends {{hide_trends_class}}\">\n  <div class=\"flex-module trends-inner\">\n    {{>trends_inner}}\n</div>\n",
            "dashboard_user_recommendations": "<div class=\"module wtf-module js-wtf-module {{#recommended_followers}}has-content{{/recommended_followers}}\">\n\n  <div class=\"flex-module\">\n\n    <div class=\"flex-module-header\">\n      <h3>Who to follow</h3>\n      <small>· <a class=\"js-refresh-suggestions\" href=\"#\">Refresh</a></small>\n      <small class=\"view-all\">· <a href=\"{{who_to_follow_suggestions_path}}\" data-element-term=\"view_all_link\">View all</a></small>\n    </div>\n\n    <div class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner{{#rendering_on_server}}{{^swift}}pre-rendered-stub{{/swift}}{{/rendering_on_server}}\" data-section-id=\"wtf\">\n      {{#recommended_followers}}\n        {{>user_small_list}}\n      {{/recommended_followers}}\n    </div>\n\n    {{#show_links}}\n      <div class=\"flex-module-footer\">\n        <a href=\"{{who_to_follow_interests_path}}\" data-element-term=\"interests_link\">Browse categories</a> · <a href=\"{{who_to_follow_import_path}}\" data-element-term=\"import_link\">Find friends</a>\n      </div>\n    {{/show_links}}\n\n  </div>\n</div>\n",
            "dashboard_user_similarities": "<div class=\"module profile-nav wtf-module js-similar-to-module {{#recommended_followers}}has-content{{/recommended_followers}}\">\n\n  <ul>\n    <li class=\"js-sidenav-link {{#on_similar_to}}active{{/on_similar_to}}\" data-name=\"similarTo\">\n      <a class=\"list-link\" href=\"{{similar_to_path}}\">\n        {{#self_sims}}\n          Similar to you\n        {{/self_sims}}\n        {{^self_sims}}\n          Similar to {{profile_name}}\n        {{/self_sims}}\n        <i class=\"chev-right\"></i>\n      </a>\n    </li>\n  </ul>\n\n  <div class=\"flex-module\">\n    <div class=\"js-recommended-followers dashboard-user-recommendations flex-module-inner{{#rendering_on_server}}{{^swift}} pre-rendered-stub{{/swift}}{{/rendering_on_server}}\" data-section-id=\"wtf\">\n      {{#recommended_followers}}\n        {{>user_small_list}}\n      {{/recommended_followers}}\n    </div>\n  </div>\n\n</div>\n",
            "dashboard_your_profile": "<div class=\"tweet-activity\">\n<h2><a href=\"{{profile_path}}\" class=\"title-link\"><span class='dashboard-component-title'>Your Tweets</span><span class=\"tweet-count user-stat-link\">{{statuses_count_commaized}}</span></a></h2>\n{{#status}}\n  {{>latest_tweet}}\n{{/status}}\n</div>",
            "default_dropdown_divider": "<hr class=\"dropdown-divider\"/>\n",
            "default_dropdown_item": "<li class=\"{{class}}\" {{data}}><span class=\"{{icon}}\"></span><b class=\"item-name\">{{{label}}}</b></li>\n",
            "default_error_message": "Sorry! We did something wrong.\n{{#is_tweet}}\n  Try sending your Tweet again in a minute.\n{{/is_tweet}}\n{{#is_dm}}\n  Try sending your message again in a minute.\n{{/is_dm}}\n{{#is_follow}}\n  Try following that user again in a minute.\n{{/is_follow}}\n{{#is_unfollow}}\n  Try unfollowing that user again in a minute.\n{{/is_unfollow}}\n{{#is_block}}\n  Try blocking that user again in a minute.\n{{/is_block}}\n{{#is_unblock}}\n  Try unblocking that user again in a minute.\n{{/is_unblock}}\n{{#is_report}}\n  Try reporting that user again in a minute.\n{{/is_report}}\n{{#is_retweet}}\n  Try Retweet again in a minute.\n{{/is_retweet}}\n{{#is_delete}}\n  Try deleting your Tweet again in a minute.\n{{/is_delete}}\n{{#is_favorite}}\n  Try favoriting your Tweet again in a minute.\n{{/is_favorite}}\n{{#is_unfavorite}}\n  Try unfavoriting your Tweet again in a minute.\n{{/is_unfavorite}}\n{{#is_add_list_member}}\n  Try adding a list member again in a minute.\n{{/is_add_list_member}}\n{{#is_remove_list_member}}\n  Try removing a list member again in a minute.\n{{/is_remove_list_member}}\n{{#is_generic}}\n  Please <a class=\"js-reload\" href=\"#\">refresh the page</a> and try again.\n{{/is_generic}}\n",
            "delete_list_button": "<div class=\"button delete-list-button js-delete-list-action\" title=\"Delete\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\"><span class=\"trashcan\"></span><b class=\"label\">Delete</b></div>\n",
            "detached_email_banner": "<div class=\"module module-banner\">\n  <div class=\"flex-module\">\n    <div class=\"first-banner-row\">\n      <span class=\"title\">New email address required.</span>\n      <span>Twitter has removed the email address from your account, by request of the email owner.</span>\n    </div>\n    <div class=\"second-banner-row\">\n      <p>Please <a href=\"{{change_email_path}}\">enter a new email address</a> where you can be reached. <a href=\"{{email_help_path}}\">Learn more  ›</a></p>\n    </div>\n  </div>\n</div>\n",
            "details_pane_tweet": "<div class=\"tweet js-actionable-tweet details-pane-tweet {{css_classes}}\" data-tweet-id=\"{{id}}\" {{{tweet_impression_id}}} {{#current_user_retweet}}data-my-retweet-id=\"{{id}}\"{{/current_user_retweet}}  data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\"  {{#protected}}data-protected=\"true\"{{/protected}} {{#is_sponsored}}data-promoted=\"true\"{{/is_sponsored}}>\n  {{>tweet_dogear}}\n  <div class=\"tweet-row\">\n    {{#user}}\n      {{>tweet_user_block}}\n    {{/user}}\n  </div>\n  <div class=\"tweet-row\">\n    {{>tweet_text_large}}\n  </div>\n  <div class=\"js-tweet-media-container tweet-media-container\"></div>\n  <div class=\"tweet-row\">\n    {{>tweet_timestamp}}\n    {{>tweet_contributor}}\n    {{>tweet_actions}}\n  </div>\n  <div class=\"tweet-row\">\n    {{>tweet_geo_text}}\n  </div>\n</div>\n",
            "scribe_console": "\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta charset=\"utf-8\">\n\n    \n    <script>document.domain='twitter.com'</script>\n    <link rel=\"stylesheet\" href=\"/sc/scribe_console.css\" type=\"text/css\" media=\"screen\">\n\n    <title>Scribe Console</title>\n\n    {{>frame_busting}}\n\n  </head>\n  <body>\n    <div class=\"stream\">\n      <div class=\"welcome\">\n<pre>Welcome to the Scribe Console!\n\nFrom here you can view all the scribe events triggered by the Twitter web\nclient and filter events by category. As you interact with the web client,\nscribe events will be displayed in this window.\n\nPLEASE NOTE: Not all scribes are logged from the webclient, some are scribed\nfrom the server-side code or from daemons. The data displayed in this\nconsole does not represent all the data that will be included in the scribe\nlogs. Some additional data will be added on the server and may not appear\nin this console. For more information, please visit <a href=\"http://go/scribe\" target=\"_blank\">go/scribe</a>.</pre>\n      </div>\n    </div>\n    <div class=\"toolbar\">\n      <a href=\"#\" class=\"clear\">Clear</a>\n      <a href=\"#\" class=\"toggle-warnings active\">Warnings</a>\n    </div>\n\n    <script type=\"text/javascript\" src=\"/sc/jquery.js\"></script>\n    <script type=\"text/javascript\" src=\"/sc/mustache.js\"></script>\n    <script type=\"text/javascript\">\n      // client_event validation constants\n      var CLIENT_EVENT_FIELDS = {{{client_event_fields}}};\n      var CLIENT_EVENT_PAGES = {{{client_event_pages}}};\n      var CLIENT_EVENT_ACTIONS = {{{client_event_actions}}};\n      var CLIENT_EVENT_ITEM_TYPES = {{{client_event_item_types}}};\n      var CLIENT_EVENT_ASSOCIATION_TYPES = {{{client_event_association_types}}};\n      var CLIENT_EVENT_EVENT_INITIATOR = {{{client_event_event_initiator}}};\n    </script>\n    <script type=\"text/javascript\" src=\"/sc/scribe_console.js\"></script>\n  </body>\n</html>",
            "device_setup_dialog": "<div class='twttr-dialog-device-setup'>\n  <div class='loading'></div>\n</div>\n",
            "device_setup_dialog_create": "<div> \n  <form class='dialog-form'>\n    <p>Twitter does not charge for this service. Standard message and data rates may apply.</p>\n\n    <fieldset class='common-form'>\n      <div class='field'>\n        <label>\n          <span class='label numbered'>Select your country/region</span>\n          <span class='input-wrapper'>\n            <select class='country-or-region'></select>\n          </span>\n        </label>\n      </div>\n\n      <div class='field' style=\"display: none;\">\n        <span class='label'></span>\n        <span class='input-wrapper'>\n          <select class='country-in-region'></select>\n        </span>\n      </div>\n\n      <label class='field'>\n        <span class='label numbered'>Enter your mobile phone number</span>\n        <span class='input-wrapper phone-wrapper'>\n          <span class='country-code'></span><input class='phone' name='device[address]' type='tel' size='15' />\n        </span>\n      </label>\n\n      <label class='field' style='display: none;'>\n        <span class='label numbered'>Choose your carrier</span>\n        <span class='input-wrapper'>\n          <select class='carrier' name='device[carrier]'></select>\n        </span>\n      </label>\n\n      <div class='field'>\n        <span class='label numbered'>Verify your phone</span>\n        <div class='input-wrapper'>\n          <div class='button btn submit'>Start</div>\n        </div>\n      </div>\n    </fieldset>\n\n    <input name='device_type' type='hidden' value='phone' />\n  </form>\n</div>\n",
            "device_setup_dialog_duplicate": "<div class='twttr-dialog-device-setup-duplicate'>\n  <div class=\"error\">\n    <p>\n      The phone number you gave us is currently used by another Twitter account. Only one account can be used with a mobile phone at a time.\n    </p>\n\n    {{>device_setup_dialog_source_address}}\n  </div>\n\n  <p>\n    <strong>To fix this, you need to reset your phone's link to Twitter</strong><br />\n    Send this message to Twitter:\n  </p>\n\n  <div class=\"phone-instructions\">\n    Text '{{stop_command}}' to {{address_for_sms}}\n  </div>\n\n  <p>\n    Once you've sent the message, try to verify your phone again.\n  </p>\n\n  <div class=\"submit button retry\">Retry verification</div>\n\n  <p class=\"cancel-instructions\">\n    <a href=\"#\">Cancel verification</a> and start over.\n  </p>\n</div>",
            "device_setup_dialog_source_address": "<div class=\"phone-instructions\">\n  +{{country_code}} {{address_without_country_code}}\n  ({{country_name}}{{#carrier_name}} – {{carrier_name}}{{/carrier_name}})\n</div>\n",
            "device_setup_dialog_verified": "\n<h2>Successful device verification for +{{country_code}} {{address_without_country_code}}!</h2>\n\n<p>\n  <strong>You can now text message your Tweets to {{address_for_sms}}.</strong>\n  See the complete list of <a href=\"{{sms_help_path}}\" target=\"_blank\">Twitter mobile commands</a>.\n</p>\n\n<p>\n  Set your mobile privacy controls and notification preferences on <a href=\"{{devices_path}}\">your Mobile settings page</a>.</p>\n</p>\n\n<p>Twitter does not charge for this service. Standard message and data rates may apply.</p>\n",
            "device_setup_dialog_waiting": "<div class='twttr-dialog-device-setup-waiting'>\n  <p>\n    Using the mobile phone you gave us:\n  </p>\n\n  {{>device_setup_dialog_source_address}}\n\n  <p>\n    Send a text message to Twitter:\n  </p>\n\n  <div class=\"phone-instructions\">\n    Text '{{go_command}}' to {{address_for_sms}}\n  </div>\n\n  <p>\n    Twitter does not charge for this service. Standard message and data rates may apply.\n  </p>\n\n  <div class=\"waiting-instructions\">\n    <p>\n      <strong>Twitter is waiting for you to send your verification code...</strong>\n    </p>\n\n    <p>\n      Already sent the verification code?  Wait a minute or two for Twitter to receive the message from your mobile carrier.\n    </p>\n\n    <p class=\"refresh\">\n      Still nothing? <a href=\"#\">Check again</a>.\n    </p>\n  </div>\n\n  <p class=\"cancel-instructions\">\n    <a href=\"#\">Cancel verification</a> and start over.\n  </p>\n</div>",
            "dialog": "<div {{#container_id}}id=\"{{container_id}}\" {{/container_id}}class=\"twttr-dialog-container\" style=\"visibility: hidden;\">\n  <div class=\"twttr-dialog\">\n    {{#title}}\n      <div class=\"twttr-dialog-header js-twttr-dialog-draggable\">\n        <h3>{{{title}}}</h3> {{#closable}}<div class=\"twttr-dialog-close\"><b>×</b></div>{{/closable}}\n      </div>\n    {{/title}}\n    <div class=\"twttr-dialog-inside\">\n      <div class=\"twttr-dialog-error clearfix\"></div>\n      <div class=\"twttr-dialog-body clearfix\">\n        <div class=\"twttr-dialog-content\">\n          {{{content}}}\n        </div>\n      </div>\n      <div class=\"twttr-dialog-footer clearfix\">\n        {{{footer}}}\n      </div>\n    </div>\n  </div>\n</div>\n",
            "activity_popup_container": "<div id=\"activity-popup-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content clearfix\">\n      <button type=\"button\" class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\"></h3>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"activity-tweet clearfix\"></div>\n        <div class=\"loading\">\n          <img src=\"{{bigger_spinner_path}}\">\n        </div>\n        <div class=\"activity-content clearfix\"></div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "activity_popup_users": "<div class=\"activity-popup-users\">\n  {{{rendered_users}}}\n</div>",
            "captcha_dialog": "<div id=\"captcha_dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Prove you are human</h3>\n      </div>\n      <div class=\"modal-body\">\n      {{>shared/captcha}}\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn\" id=\"cancel_captcha_button\">Cancel</button>\n        <button id=\"submit_captcha\" class=\"btn primary-btn modal-submit\">Submit</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "confirm_dialog": "<div id=\"confirm_dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\"></h3>\n      </div>\n      <div class=\"modal-body\">\n        <p class=\"modal-body-text\"></p>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn\" id=\"confirm_dialog_cancel_button\"></button>\n        <button id=\"confirm_dialog_submit_button\" class=\"btn primary-btn modal-submit\"></button>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "deactivation_password_dialog": "<div id=\"deactivation_password_dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"btn modal-close\"><i class=\"close-large\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Deactivate account</h3>\n      </div>\n      <div class=\"modal-body\">\n        <p>Re-enter your Twitter password to deactivate @{{screen_name}}.</p>\n        <label for=\"auth_password\">Password</label>\n        <div class=\"input-wrapper password-wrapper\">\n          <input id=\"auth_password\" name=\"auth_password\" type=\"password\">\n          <div>\n            <a href=\"{{resend_password_link}}\" id=\"forgot_password\">Forgot your password?</a>\n            <span id=\"reminder_sent\" style=\"visibility: hidden\">Reminder sent!</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn\" id=\"cancel_password_button\">Cancel</button>\n        <button id=\"save_password\" class=\"btn primary-btn modal-submit\">Deactivate account</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n",
            "delete_tweet_dialog": "<div id=\"delete-tweet-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Are you sure you want to delete this Tweet?</h3>\n      </div>\n\n      <div class=\"modal-body modal-tweet\"></div>\n\n      <div class=\"modal-footer\">\n        <button class=\"btn cancel-action\">Cancel</button>\n        <button class=\"btn primary-btn delete-action\">Delete</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "dm_conversation": "<div id=\"dm_dialog_conversation\" class=\"modal-content\">\n  \n  <div class=\"twttr-dialog-header modal-header\">\n    <h3><a class=\"js-dm-header-title\" href=\"#\">Direct messages</a> › with <span class=\"dm_dialog_real_name\"></span></h3>\n    <div class=\"twttr-dialog-close\"><b>×</b></div>\n  </div>\n\n  \n  <div class=\"twttr-dialog-inside\">\n    <div class=\"twttr-dialog-body clearfix\">\n        {{>direct_message_dialog_error}}\n      <div class=\"twttr-dialog-content\">\n      </div>\n      {{>swift_dm_box}}\n    </div>\n\n    {{>dm_footer}}\n\n  </div>\n</div>",
            "dm_conversation_list": "<div id=\"dm_dialog_conversation_list\" class=\"modal-content\">\n  \n  <div class=\"twttr-dialog-header modal-header\">\n    <h3>Direct messages</h3>\n    <a class=\"btn dm-new-button dm-header-new\" href=\"#\">New message</a>\n    <div class=\"twttr-dialog-close\"><b>×</b></div>\n  </div>\n\n  \n  <div class=\"twttr-dialog-inside\">\n    <div class=\"twttr-dialog-body clearfix\">\n      {{>direct_message_dialog_error}}\n      <div class=\"twttr-dialog-content\">\n        <div class=\"dm-threads js-dm-threads js-modal-scrollable js-twttr-dialog-not-draggable\">\n          <ul class=\"dm-thread-list js-dm-thread-list\">\n            {{>direct_message_dialog_empty}}\n          </ul>\n        </div>\n      </div>\n\n      {{>dm_footer}}\n\n    </div>\n  </div>\n</div>",
            "dm_new_conversation": "<div id=\"dm_dialog_new\" class=\"modal-content\">\n  \n  <div class=\"twttr-dialog-header modal-header\">\n    <h3><a href=\"#\">Direct messages</a> › New</h3>\n    <div class=\"twttr-dialog-close\"><b>›</b></div>\n  </div>\n\n  \n  <div class=\"twttr-dialog-inside\">\n    <div class=\"twttr-dialog-body clearfix\">\n      <div class=\"dm-dialog-content\">\n\n        <div class=\"dm-to\">\n          <input class=\"dm-to-input twttr-directmessage-input\" type=\"text\"></input>\n          <img class=\"avatar size24 selected-profile\" src=\"{{default_profile_url}}\" data-default-img=\"{{default_profile_url}}\">\n          {{>swift_autocomplete_dropdown}}\n        </div>\n\n        <div class=\"dm-convo-placeholder\">\n          {{>direct_message_dialog_error}}\n        </div>\n\n      </div>\n\n      {{>swift_dm_box}}\n\n      {{>dm_footer}}\n\n    </div>\n  </div>\n</div>",
            "dm_shell": "<div id=\"dm_dialog\" class=\"modal-container dm-conversation-list\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable twttr-dialog dm-dialog\">\n    {{>dialogs/dm_conversation_list}}\n    {{>dialogs/dm_conversation}}\n    {{>dialogs/dm_new_conversation}}\n  </div>\n</div>",
            "embed": "<div id=\"embed-tweet-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-medium draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Embed this Tweet</h3>\n      </div>\n      <div class=\"modal-body\">\n        {{>embed_dialog}}\n      </div>\n    </div>\n  </div>\n</div>",
            "favorited_popup_title": "\n  {{#favoriters_length_one}}Favorited {{favorites_count}} time{{/favoriters_length_one}}\n  {{#favoriters_length_other}}Favorited {{favorites_count}} times{{/favoriters_length_other}}\n\n",
            "goto_user_dialog": "<div id=\"goto-user-dialog\" class=\"modal-container\">\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button type=\"button\" class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Go to a person's profile</h3>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-inner\">\n          <form class=\"goto-user-form\">\n            <input class=\"username-input\" type=\"text\" placeholder=\"Start typing a name to jump to a profile\">\n            {{>swift_autocomplete_dropdown}}\n          </form>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n",
            "in_product_help_dialog": "<div id=\"in_product_help_dialog\" class=\"modal-container modal-in-product-help\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Upload a profile image</h3>\n      </div>\n      <div class=\"modal-body\">\n        <p>How to upload or change your profile picture:</p>\n        <ol>\n          <li>Click the <strong>Choose file</strong> button.</li>\n          <li><strong>Select a file</strong> to upload as your picture. It must be smaller than 700k and in JPG, GIF, or PNG format (no animated GIFs).</li>\n          <li>Click <strong>Save changes</strong> at the bottom of the page to see a thumbnail.</li>\n        </ol>\n      </div>\n      <div class=\"modal-footer\">\n        <span class=\"satisfaction-prompt\">\n          <span id=\"satisfaction_question\">Was this helpful?</span>\n          <span id=\"satisfaction_feedback\">Thanks for the feedback!</span>\n        </span>\n        <div id=\"satisfaction_buttons\">\n          <button id=\"helpful_button\" class=\"btn\">Yes</button>\n          <button id=\"not_helpful_button\" class=\"btn\">No</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "iph_search_result_dialog": "<div id=\"in_product_help_dialog\" class=\"modal-container modal-in-product-help modal-search-result-help\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Why is my search result empty?</h3>\n      </div>\n      <div class=\"modal-body\">\n        <p>Sorry, we are not able to include all users & tweets in search results.</p>\n        <ol>\n          <li>If you know that a particular user exists, type their username after the <strong>\"twitter.com/\"</strong> in your browser's address bar to view their profile.</li>\n          <li>If you are searching for a specific tweet, it's probably not included in our search results at this time.</li>\n        </ol>\n      </div>\n      <div class=\"modal-footer\">\n        <span class=\"satisfaction-prompt\">\n          <span id=\"satisfaction_question\">Was this helpful?</span>\n          <span id=\"satisfaction_feedback\">Thanks for the feedback!</span>\n        </span>\n        <div id=\"satisfaction_buttons\">\n          <button id=\"helpful_button\" class=\"btn\">Yes</button>\n          <button id=\"not_helpful_button\" class=\"btn\">No</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "keyboard_shortcuts_dialog": "\n<div id=\"keyboard-shortcut-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-large draggable\">\n    <div class=\"modal-content\">\n      <button type=\"button\" class=\"modal-btn modal-close js-dimiss\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      \n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Keyboard shortcuts</h3>\n      </div>\n\n      \n      <div class=\"modal-body\">\n\n        <div class=\"keyboard-shortcuts clearfix\" id=\"keyboard-shortcut-menu\">\n\n          {{#logged_in}}\n          <table class=\"modal-table\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">F</b>\n                </td>\n                <td class=\"shortcut-label\">Favorite</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">R</b>\n                </td>\n                <td class=\"shortcut-label\">Reply</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">T</b>\n                </td>\n                <td class=\"shortcut-label\">Retweet</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">M</b>\n                </td>\n                <td class=\"shortcut-label\">Direct message</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">N</b>\n                </td>\n                <td class=\"shortcut-label\">New Tweet</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">Enter</b>\n                </td>\n                <td class=\"shortcut-label\">Open Tweet details</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">L</b>\n                </td>\n                <td class=\"shortcut-label\">Close all open Tweets</td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"modal-table\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">Navigation</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">?</b>\n                </td>\n                <td class=\"shortcut-label\">This menu</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">J</b>\n                </td>\n                <td class=\"shortcut-label\">Next Tweet</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">K</b>\n                </td>\n                <td class=\"shortcut-label\">Previous Tweet</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">Space</b>\n                </td>\n                <td class=\"shortcut-label\">Page down</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">/</b>\n                </td>\n                <td class=\"shortcut-label\">Search</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">.</b>\n                </td>\n                <td class=\"shortcut-label\">Load new Tweets</td>\n              </tr>\n            </tbody>\n          </table>\n          <table class=\"modal-table\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">Timelines</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">H</b>\n                </td>\n                <td class=\"shortcut-label\">Home</td>\n              </tr>\n\n              {{#enable_activity}}\n                <tr>\n                  <td class=\"shortcut\">\n                    <b class=\"sc-key\">G</b> <b class=\"sc-key\">C</b>\n                  </td>\n                  <td class=\"shortcut-label\">Connect</td>\n                </tr>\n                <tr>\n                  <td class=\"shortcut\">\n                    <b class=\"sc-key\">G</b> <b class=\"sc-key\">A</b>\n                  </td>\n                  <td class=\"shortcut-label\">Activity</td>\n                </tr>\n                <tr>\n                  <td class=\"shortcut\">\n                    <b class=\"sc-key\">G</b> <b class=\"sc-key\">R</b>\n                  </td>\n                  <td class=\"shortcut-label\">Mentions</td>\n                </tr>\n              {{/enable_activity}}\n              {{^enable_activity}}\n                  <tr>\n                    <td class=\"shortcut\">\n                      <b class=\"sc-key\">G</b> <b class=\"sc-key\">R</b>\n                    </td>\n                    <td class=\"shortcut-label\">Mentions</td>\n                  </tr>\n              {{/enable_activity}}\n\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">D</b>\n                </td>\n                <td class=\"shortcut-label\">Discover</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">P</b>\n                </td>\n                <td class=\"shortcut-label\">Profile</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">F</b>\n                </td>\n                <td class=\"shortcut-label\">Favorites</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">L</b>\n                </td>\n                <td class=\"shortcut-label\">Lists</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">M</b>\n                </td>\n                <td class=\"shortcut-label\">Messages</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">S</b>\n                </td>\n                <td class=\"shortcut-label\">Settings</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">U</b>\n                </td>\n                <td class=\"shortcut-label\">Go to user...</td>\n              </tr>\n            </tbody>\n          </table>\n          {{/logged_in}}\n          {{^logged_in}}\n          <table class=\"modal-table\">\n            <tbody>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">Enter</b>\n                </td>\n                <td class=\"shortcut-label\">Open Tweet details</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">G</b> <b class=\"sc-key\">F</b>\n                </td>\n                <td class=\"shortcut-label\">Go to user...</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">?</b>\n                </td>\n                <td class=\"shortcut-label\">This menu</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">J</b>\n                </td>\n                <td class=\"shortcut-label\">Next Tweet</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">K</b>\n                </td>\n                <td class=\"shortcut-label\">Previous Tweet</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">Space</b>\n                </td>\n                <td class=\"shortcut-label\">Page down</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">/</b>\n                </td>\n                <td class=\"shortcut-label\">Search</td>\n              </tr>\n              <tr>\n                <td class=\"shortcut\">\n                  <b class=\"sc-key\">.</b>\n                </td>\n                <td class=\"shortcut-label\">Load new Tweets</td>\n              </tr>\n            </tbody>\n          </table>\n          {{/logged_in}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n",
            "list_create_dialog": "<div id=\"list-create-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-medium draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Create a new list</h3>\n      </div>\n      <div class=\"modal-body\">\n        {{>list_dialog}}\n      </div>\n    </div>\n  </div>\n</div>",
            "list_membership_dialog": "<div id=\"list-membership-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Your lists</h3>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-membership-content\"></div>\n        <span class=\"spinner lists-spinner\" title=\"Loading…\"></span>\n      </div>\n    </div>\n  </div>\n</div>",
            "mobile_gallery_download_dialog": "<div id=\"mobile_gallery_download_dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      \n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Download a Twitter app for your phone</h3>\n      </div>\n\n      \n      <div class=\"modal-body\">\n        <p>Give us your email address and we'll send a link to download the Twitter app, or visit twitter.com/download on your mobile device.</p>\n        <form class=\"dialog-form\">\n          <fieldset class=\"common-form\">\n            <label class=\"field\">\n              <span class=\"label\">Enter your email address:</span>\n              <span class=\"input-wrapper\">\n                <input type=\"email\" name=\"email\" required>\n              </span>\n              <span class=\"notification\"></span>\n            </label>\n          </fieldset>\n          <div class=\"modal-footer\">\n            <div class=\"dialog-prompt\">\n              <input type=\"submit\" class=\"btn primary-btn submit js-submit\" value=\"Send link\">\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>",
            "password_dialog": "<div id=\"password_dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Save account changes</h3>\n      </div>\n      <div class=\"modal-body\">\n        <p>Re-enter your Twitter password to save changes to your account.</p>\n        <div class=\"input-wrapper password-wrapper\">\n          <input class=\"input-password-confirm\" id=\"auth_password\" name=\"auth_password\" type=\"password\" placeholder=\"Password\">\n          <small>\n            <a href=\"{{resend_password_path}}\" id=\"forgot_password\">Forgot your password?</a>\n            <span id=\"reminder_sent\" style=\"visibility: hidden\">Reminder sent!</span>\n          </small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button class=\"btn\" id=\"cancel_password_button\">Cancel</button>\n        <button type=\"submit\" id=\"save_password\" class=\"btn primary-btn modal-submit\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "profile_popup_container": "<div id=\"profile_popup\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content clearfix\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Profile summary</h3>\n      </div>\n\n      <div class=\"modal-body profile-modal\">\n\n      </div>\n\n      <div class=\"loading\">\n        <img src=\"{{bigger_spinner_path}}\">\n      </div>\n    </div>\n  </div>\n</div>\n",
            "protected_verified_dialog": "<div id=\"protected_verified_dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal modal-small draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\" type=\"button\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Warning!</h3>\n      </div>\n      <div class=\"modal-body\">\n        <p>We're sorry, Twitter only verifies public accounts. If you protect your account, you will lose your verified badge.</p>\n      </div>\n      <div class=\"modal-footer\">\n        <button id=\"stay_verified_link\" class=\"btn\" type=\"button\">Stay verified</button>\n        <button id=\"protect_my_tweets_link\" class=\"btn primary-btn\" type=\"button\">Protect my Tweets</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n",
            "retweet_dialog": "\n\n<div id=\"retweet-tweet-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      <div class=\"modal-header\">\n        \n        {{^change_german_verbs}}<h3 class=\"modal-title\">Retweet this to your followers?</h3>{{/change_german_verbs}}\n        {{#change_german_verbs}}<h3 class=\"modal-title\">Diesen Tweet mit Deinen Followern teilen?</h3>{{/change_german_verbs}}\n      </div>\n\n      <div class=\"modal-body modal-tweet\"></div>\n\n      <div class=\"modal-footer\">\n        <button class=\"btn cancel-action\">Cancel</button>\n        \n        {{^change_german_verbs}}<button class=\"btn primary-btn retweet-action\">Retweet</button>{{/change_german_verbs}}\n        {{#change_german_verbs}}<button class=\"btn primary-btn retweet-action\">Teilen</button>{{/change_german_verbs}}\n      </div>\n    </div>\n  </div>\n</div>\n",
            "retweeted_popup_title": "\n  {{#retweeters_length_one}}Retweeted {{retweets_count}} time{{/retweeters_length_one}}\n  {{#retweeters_length_other}}Retweeted {{retweets_count}} times{{/retweeters_length_other}}\n\n",
            "search_operators_shell": "<div id=\"search-operators-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"></i></button>\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\">Search Operators</h3>\n      </div>\n      <div class=\"modal-body\">\n        {{>search_operators}}\n      </div>\n    </div>\n  </div>\n</div>",
            "sensitive_flag_confirmation": "<div class=\"sensitive-confirm-form\">\n  <p class=\"sensitive-title\">This has already been marked as containing sensitive content.</p>\n\n  <div class=\"sensitive-field\">\n    <label for=\"sensitive-settings-checkbox\">\n      <input class=\"checkbox\" type=\"checkbox\" id=\"sensitive-settings-checkbox\" value=\"settings\"/>\n      <span class=\"sensitive-label\">Change my settings to warn me before displaying media that may contain sensitive content.</span>\n    </label>\n  </div>\n  <div class=\"sensitive-field\">\n    <label for=\"sensitive-illegal-checkbox\">\n      <input class=\"checkbox\" type=\"checkbox\" id=\"sensitive-illegal-checkbox\" value=\"illegal\"/>\n      <span class=\"sensitive-label\">Flag this as containing illegal content.</span>\n    </label>\n  </div>\n\n  <div class=\"sensitive-confirmation\">\n    <div class=\"sensitive-buttons\">\n      <div class=\"button submit-sensitive-form js-prompt-ok\" data-tweet-id=\"{{id}}\">Submit</div>\n      <div class=\"button cancel-sensitive-form js-prompt-cancel\" data-tweet-id=\"{{id}}\">Cancel</div>\n    </div>\n    <a class=\"sensitive-learn-more\" href=\"{{flag_turkey_support_path}}\">Learn more about flagging media</a>\n  </div>\n\n</div>\n",
            "signin_or_signup_dialog": "{{!\n  This dialog can be displayed in one of two styles:\n\n  1. Prompt user to sign up\n  2. Prompt user to sign up or sign in\n\n  We use CSS classes to change what content we actually display. Elements with the class\n  \"signup-only\" are only shown in the first case. Elements with the class\n  \"not-signup-only\" are only shown in the second case.\n}}\n{{#content_view}}\n  <div id=\"signin-or-signup-dialog\">\n    <div id=\"signin-or-signup\" class=\"modal-container\">\n      <div class=\"close-modal-background-target\"></div>\n      <div class=\"modal modal-medium draggable\">\n        <div class=\"modal-content\">\n          <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n          <div class=\"modal-header\">\n            <h3 class=\"modal-title modal-long-title signup-only\">Sign up for Twitter & follow @{{screen_name}}</h3>\n            <h3 class=\"modal-title not-signup-only\">Sign in to Twitter</h3>\n          </div>\n          <div class=\"modal-body signup-only\">\n            {{>partial_signup_form}}\n          </div>\n          <div class=\"modal-body not-signup-only\">\n            {{>signin_form}}\n            <div class=\"signup\">\n              <h2>Not on Twitter? Sign up, tune into the things you care about, and get updates as they happen.</h2>\n              {{>signup_button}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n{{/content_view}}\n",
            "sms_codes": "\n<table id=\"sms_codes\" cellpadding=\"0\" cellspacing=\"0\">\n  <thead>\n    <tr>\n      <th>Country</th>\n      <th>Code</th>\n      <th>For customers of</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>United States</td>\n      <td>40404</td>\n      <td>(any)</td>\n    </tr>\n    <tr>\n      <td>Canada</td>\n      <td>21212</td>\n      <td>(any)</td>\n    </tr>\n    <tr>\n      <td>United Kingdom</td>\n      <td>86444</td>\n      <td>Vodafone, Orange, 3, O2</td>\n    </tr>\n    <tr>\n      <td>Brazil</td>\n      <td>40404</td>\n      <td>Nextel, TIM</td>\n    </tr>\n    <tr>\n      <td>Haiti</td>\n      <td>40404</td>\n      <td>Digicel, Voila</td>\n    </tr>\n    <tr>\n      <td>Ireland</td>\n      <td>51210</td>\n      <td>Vodafone, O2</td>\n    </tr>\n    <tr>\n      <td>India</td>\n      <td>53000</td>\n      <td>Bharti Airtel, Videocon, Reliance</td>\n    </tr>\n    <tr>\n      <td>Indonesia</td>\n      <td>89887</td>\n      <td>AXIS, 3, Telkomsel, Indosat, XL Axiata</td>\n    </tr>\n    <tr>\n      <td rowspan=\"2\">Italy</td>\n      <td>4880804</td>\n      <td>Wind</td>\n    </tr>\n    <tr>\n      <td>3424486444</td>\n      <td>Vodafone</td>\n    </tr>\n  </tbody>\n  <tfoot>\n    <tr>\n      <td colspan=\"3\">\n        » <a target=\"_blank\" href=\"http://support.twitter.com/articles/14226-how-to-find-your-twitter-short-code-or-long-code\">See SMS short codes for other countries</a>\n      </td>\n    </tr>\n  </tfoot>\n</table>",
            "trend_dialog_location_item": "<li>\n  <a href=\"#\" class=\"trends-location-item js-trend-link\" data-woeid=\"{{woeid}}\">\n    {{name}}\n    <i class=\"checkmark\"></i>\n  </a>\n</li>",
            "trends_dialog_inner": "<div class=\"trends-by-location\">\n\n  <div class=\"trends-breadcrumb\">\n    {{>trends_dialog_breadcrumbs}}\n  </div>\n\n  <div class=\"trends-locations clearfix\">\n    <ul class=\"trends-locations-list\">\n      {{#locations0}}\n        {{>dialogs/trend_dialog_location_item}}\n      {{/locations0}}\n    </ul>\n    <ul class=\"trends-locations-list\">\n      {{#locations1}}\n        {{>dialogs/trend_dialog_location_item}}\n      {{/locations1}}\n    </ul>\n    <ul class=\"trends-locations-list\">\n      {{#locations2}}\n        {{>dialogs/trend_dialog_location_item}}\n      {{/locations2}}\n    </ul>\n  </div>\n</div>\n",
            "trends_dialog_shell": "<div id=\"trends_dialog\" class=\"trends-dialog modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content\">\n      <button class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n      <div class=\"modal-header\">\n          <h3 class=\"modal-title\">\n            {{#decider_personalized_trends}}Trends{{/decider_personalized_trends}}\n            {{^decider_personalized_trends}}Choose a trend location{{/decider_personalized_trends}}\n          </h3>\n      </div>\n\n      <div class=\"modal-body\">\n\n        {{#decider_personalized_trends}}\n          {{>trends_personalized_dialog}}\n        {{/decider_personalized_trends}}\n\n        <div class=\"trends-wrapper\" id=\"trends_dialog_content\">\n          \n        </div>\n      </div>\n      {{#decider_personalized_trends}}\n        <div class=\"modal-footer trends-by-location\">\n          {{>trends_dialog_footer}}\n        </div>\n      {{/decider_personalized_trends}}\n    </div>\n  </div>\n</div>",
            "tweet_dialog": "<div id=\"global-tweet-dialog\" class=\"modal-container\">\n  <div class=\"close-modal-background-target\"></div>\n  <div class=\"modal draggable\">\n    <div class=\"modal-content\">\n      <button type=\"button\" class=\"modal-btn modal-close\"><i class=\"close-medium\"><span class=\"hidden-elements\">Close</span></i></button>\n\n      <div class=\"modal-header\">\n        <h3 class=\"modal-title\"></h3>\n      </div>\n\n      <div class=\"modal-body\">\n        {{>swift_tweet_box}}\n      </div>\n\n      <div class=\"modal-footer modal-tweet\"></div>\n    </div>\n  </div>\n</div>\n",
            "direct_message_delete_confirm": "<p>Are you sure you want to delete this message?</p>\n<button type=\"button\" class=\"btn caution-btn js-prompt-ok\" data-message-id=\"{{messageId}}\">Delete message</button>\n<button type=\"button\" class=\"btn js-prompt-cancel\">Cancel</button>\n",
            "direct_message_dialog": "<div class=\"twttr-dialog-container\" style=\"visibility: hidden;\">\n  <div class=\"twttr-dialog dm-dialog\">\n    <div class=\"twttr-dialog-header\">\n      <h3 class=\"js-dm-header\"></h3>\n      <div class=\"twttr-dialog-close\"><b>×</b></div>\n    </div>\n    <div class=\"twttr-dialog-inside\">\n      <div class=\"twttr-dialog-error clearfix\"></div>\n      <div class=\"twttr-dialog-body clearfix\">\n        <div class=\"twttr-dialog-content js-dm-content\"></div>\n      </div>\n      <div class=\"dm-tweetbox js-dm-tweetbox\">\n        <div class=\"dm-delete-confirm js-dm-delete-confirm\"></div>\n      </div>\n      <div class=\"twttr-dialog-footer clearfix\">\n        Tip: you can send a message to anyone who follows you. <a href=\"{{direct_message_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "direct_message_dialog_conversation": "{{>direct_message_dialog_error}}\n<div class=\"dm-convo js-dm-conversation js-modal-scrollable js-twttr-dialog-not-draggable\" data-thread-id=\"{{threadId}}\">\n  {{#items}}\n    {{>direct_message_dialog_conversation_item}}\n  {{/items}}\n  \n  <div class=\"dm-ie-fix\"> </div>\n</div>\n",
            "direct_message_dialog_conversation_item": "<div class=\"dm {{sent_or_received}} js-dm-item\" data-message-id=\"{{id}}\">\n  {{#sender}}\n    <img class=\"avatar\" src=\"{{#rendering_on_server}}{{profile_image_absolute_url}}{{/rendering_on_server}}{{^rendering_on_server}}{{profile_image_url}}{{/rendering_on_server}}\">\n  {{/sender}}\n  <div class=\"dm-content clearfix\">\n    <small class=\"time\">\n      \n      <span class=\"_timestamp{{#is_relative_timestamp}} js-relative-timestamp{{/is_relative_timestamp}}\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\" data-include-sec=\"true\">\n        {{#rendering_on_server}}{{short_timestamp}}{{/rendering_on_server}}\n        {{^rendering_on_server}}{{timestamp}}{{/rendering_on_server}}\n      </span>\n    </small>\n    <div class=\"dm-message\">\n      <p class=\"js-tweet-text\">{{>linked_tweet}}</p>\n      <div class=\"dm-caret\">\n        <div class=\"dm-caret-outer\"></div>\n        <div class=\"dm-caret-inner\"></div>\n      </div>\n    </div>\n    <a class=\"dm-delete js-dm-delete\" href=\"#\" title=\"Delete this direct message\" data-message-id=\"{{id}}\"><i class=\"trash\"></i></a>\n  </div>\n</div>\n",
            "direct_message_dialog_conversation_list": "<div class=\"dm-threads js-dm-threads js-modal-scrollable js-twttr-dialog-not-draggable\">\n  <ul class=\"dm-thread-list js-dm-thread-list\">\n    {{#items}}\n      {{>direct_message_dialog_conversation_list_item}}\n    {{/items}}\n    {{^items}}\n      {{>direct_message_dialog_empty}}\n    {{/items}}\n  </ul>\n</div>",
            "direct_message_dialog_conversation_list_item": "<li class=\"dm-thread js-dm-thread\" data-thread-id=\"{{threadId}}\" data-last-message-id=\"{{last_message_id}}\">\n  <a class=\"dm-thread-link js-dm-thread-link\" href=\"#\" data-thread-id=\"{{threadId}}\">\n    <i class=\"chev-right\"></i>\n    <div class=\"dm-thread-status js-thread-status\">\n      <i class=\"{{#is_unread}}unread{{/is_unread}}\"></i>\n    </div>\n    <div class=\"dm-thread-content\">\n      {{#other_person}}\n        <span class=\"account-group\">\n          <img class=\"avatar size32\" src=\"{{#rendering_on_server}}{{profile_image_absolute_url}}{{/rendering_on_server}}{{^rendering_on_server}}{{profile_image_url}}{{/rendering_on_server}}\">\n          <b class=\"fullname\">{{name}}</b>\n          <small class=\"username\"><s>@</s>{{screen_name}}</small>\n        </span>\n      {{/other_person}}\n      <p class=\"dm-thread-snippet js-tweet-text\">\n        {{#is_replied}}<i class=\"replied\"></i>{{/is_replied}}\n        {{last_message_text}}\n      </p>\n      \n      <small class=\"time\">\n        \n        <span class=\"_timestamp{{#is_relative_timestamp}} js-relative-timestamp{{/is_relative_timestamp}}\" data-time=\"{{last_message_actual_timestamp}}\" data-long-form=\"true\" data-include-sec=\"true\">{{last_message_timestamp}}</span>\n      </small>\n    </div>\n  </a>\n</li>\n",
            "direct_message_dialog_empty": "<div class=\"dm-placeholder-empty dm-no-messages\">\n  <p><strong>You don't have any messages yet.</strong></p>\n  <p>Direct messages are 140 characters, private, and can be sent to any user who follows you on Twitter.</p>\n</div>",
            "direct_message_dialog_error": "<div class=\"dm-error js-dm-error\">\n  <a href=\"#\" class=\"js-dismiss\">\n    <i class=\"close\"></i>\n  </a>\n  <span class=\"dm-error-text\"></span>\n</div>",
            "direct_message_dialog_header": "{{%TRANSLATION-HINT mode=dmmodal}}\n{{#conversation_list}}\n  <a class=\"btn js-dismiss dm-header-new js-dm-header-new\" href=\"#\">New message</a>\n  <h2>Direct messages</h2>\n{{/conversation_list}}\n{{^conversation_list}}\n  <h2><a class=\"js-dm-header-title\" href=\"#\">Direct messages</a> ›\n    {{#new_dm}}\n      New\n    {{/new_dm}}\n    {{#conversation}}\n      with {{name}}\n    {{/conversation}}\n  </h2>\n{{/conversation_list}}\n",
            "direct_message_dialog_new": "<div class=\"dm-to js-dm-new\">\n  \n  <img class=\"avatar size24 js-dm-avatar\" src=\"#\">\n\n  \n  <input class=\"dm-to-input twttr-directmessage-input js-dm-user-autocomplete\" type=\"text\">\n</div>\n\n\n<div class=\"js-dm-user-check\"></div>\n\n<div class=\"dm-convo-placeholder\">\n  {{>direct_message_dialog_error}}\n</div>",
            "discover": "{{>dashboard_discover}}\n{{>dialogs/trends_dialog_shell}}\n\n<div id=\"{{content_div_id}}\" class=\"content-main\">\n  <div class=\"content-header {{#single_expanded_story}}content-header-detached{{/single_expanded_story}}\">\n    <div class=\"header-inner\">\n      <h2>{{#single_expanded_story}}Tweets{{/single_expanded_story}}{{^single_expanded_story}}Stories{{/single_expanded_story}}</h2>\n      <p class=\"subheader\">{{subtitle_text}}</p>\n    </div>\n  </div>\n  <div id=\"discover_items\">\n    {{#timeline}}\n      {{>timeline}}\n    {{/timeline}}\n    {{^timeline}}\n      {{#discover_items}}\n        {{>discover/discover_items}}\n      {{/discover_items}}\n      {{#has_items}}\n        {{>stream_end}}\n      {{/has_items}}\n      {{^has_items}}\n        {{>discovery_stream_error}}\n      {{/has_items}}\n    {{/timeline}}\n  </div>\n</div>\n",
            "discover_items": " {{^in_timeline}}<div class=\"items\">{{/in_timeline}}\n  {{#items}}\n    {{>discover/story}}\n  {{/items}}\n{{^in_timeline}}</div>{{/in_timeline}}",
            "news_story": "{{#article_image}}\n  <div class=\"discover-item-image-wrapper\">\n    <a class=\"js-action-card-news\" href=\"{{article_url}}\" target=\"_blank\">\n      <img class=\"discover-item-image\" src=\"{{article_image}}\" alt=\"{{title}}\">\n    </a>\n  </div>\n{{/article_image}}\n\n<h3 class=\"discover-item-title js-story-title js-news-headline\">\n  <a class=\"js-action-card-news\" href=\"{{article_url}}\" target=\"_blank\">\n    {{title}}\n  </a>\n</h3>\n\n<p class=\"discover-item-summary js-news-snippet\">{{description}}</p>\n<p class=\"metadata discover-item-metadata js-metadata\">\n  <a class=\"js-action-card-news\" href=\"{{article_url}}\" target=\"_blank\">\n    {{article_display_url}}\n  </a>\n</p>\n",
            "social_proof": "\n<div class=\"expanded-content js-expando-content\">\n\n  <div class=\"expanded-tweets\">\n    {{#statuses}}\n      <div class=\"supplement hidden-supplement sub-stream-item-hidden\">{{>simple_tweet}}</div>\n    {{/statuses}}\n    {{#is_trend}}\n      <div class=\"social-proof-tweet\">\n        <span class=\"metadata\">\n          <a class=\"js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"trend_click\">\n            <i class=\"sm-search\"></i>Search this trend\n          </a>\n        </span>\n      </div>\n    {{/is_trend}}\n  </div>\n\n</div>\n",
            "social_proof_summary": "<div class=\"social-context\">\n  <span class=\"summary-closed js-expando-control-unexpanded show\">\n    \n    <div class=\"social-context-avatars\">\n      {{#tweeted_users}}\n        {{>user_avatar_link_24}}\n      {{/tweeted_users}}\n    </div>\n  </span> \n\n  <span class=\"metadata\">\n    {{#is_trend}}\n      \n        {{#status_count_one}}Trending Tweet about{{/status_count_one}}{{#status_count_other}}Trending Tweets about{{/status_count_other}}\n        <a class=\"social-emphasis js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"trend_click\">{{story_name}}</a>\n      \n    {{/is_trend}}\n    {{^is_trend}}\n      {{#first_user}}\n        {{^tweeted_by_count}}\n           Tweeted by <a class=\"social-emphasis show-popup-with-id\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">{{name}}</a>\n        {{/tweeted_by_count}}\n\n        {{#tweeted_by_count}}\n          \n            Tweeted by <a class=\"social-emphasis show-popup-with-id\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">{{name}}</a>\n              {{#tweeted_by_count_one}}and {{tweeted_by_count}} other{{/tweeted_by_count_one}}\n              {{#tweeted_by_count_other}}and {{tweeted_by_count}} others{{/tweeted_by_count_other}}\n          \n        {{/tweeted_by_count}}\n      {{/first_user}}\n    {{/is_trend}}\n\n    \n    <span class=\"metadata discover-item-actions\">\n      <span class=\"separator\">·</span>\n      <a class=\"open-close-tweets-link summary-closed show\" href=\"#\">{{#status_count_one}}View Tweet{{/status_count_one}}{{#status_count_other}}View Tweets{{/status_count_other}}</a>\n      <a class=\"open-close-tweets-link summary-opened hide\" href=\"#\">{{#status_count_one}}Hide Tweet{{/status_count_one}}{{#status_count_other}}Hide Tweets{{/status_count_other}}</a>\n      {{#is_news}}\n        <span class=\"separator\">·</span>\n        <a class=\"story-social-new-tweet\" href=\"#\">Tweet this story</a>\n      {{/is_news}}\n    </span>\n  </span>\n\n</div>\n",
            "story": "<div class=\"{{story_class}} {{#single_expanded_story}}disco-item-expanded stream-item-expanded open{{/single_expanded_story}}\">\n  <div {{>discover/story_data}}>\n    <div class=\"js-expand-trigger-area expand-trigger-area\">\n      {{#show_card_title}}\n        <div class=\"onebox-header\">\n          <h3>{{card_title}}</h3>\n          {{#view_all_path}}<small class=\"view-all\"> · <a class=\"js-onebox-view-all\" href=\"{{view_all_path}}\">View all</a></small>{{/view_all_path}}\n        </div>\n      {{/show_card_title}}\n      <div class=\"discover-item-content\">\n        {{#single_expanded_story}}\n          {{#expanded_tweet}}\n            <div class=\"permalink\">\n              {{>single_tweet}}\n            </div>\n          {{/expanded_tweet}}\n        {{/single_expanded_story}}\n        {{^single_expanded_story}}\n          {{#is_news}}\n            {{>discover/news_story}}\n          {{/is_news}}\n          {{#is_topic}}\n            {{>discover/topic_story}}\n          {{/is_topic}}\n          {{#is_user}}\n            {{>discover/user_story}}\n          {{/is_user}}\n        {{/single_expanded_story}}\n      </div>\n\n      \n      {{#social_proof_summary_view}}\n        {{>discover/social_proof_summary}}\n      {{/social_proof_summary_view}}\n    </div>\n\n    \n    {{#social_proof_view}}\n      {{>discover/social_proof}}\n    {{/social_proof_view}}\n  </div>\n</div>",
            "story_data": "\nclass=\"discover-item js-hover js-story-item {{#is_hashtag}}is-hashtag{{/is_hashtag}} {{#is_news}}discover-news{{/is_news}} {{#is_topic}}discover-topic {{media_type}} js-loading loading {{^has_media}}js-nomedia nomedia{{/has_media}}{{/is_topic}}\"\ndata-query=\"{{escaped_query}}\"\ndata-story-type=\"{{type}}\"\ndata-card-media-type=\"{{#is_topic}}{{media_type}}{{/is_topic}}\"\ndata-url=\"{{#is_news}}{{article_expanded_url}}{{/is_news}}{{#is_topic}}{{query}}{{/is_topic}}\"\ndata-source=\"{{story_source}}\"\ndata-item-key=\"{{story_key}}\"",
            "topic_story": "<h3 class=\"discover-item-title js-story-title js-news-headline\">\n  <a class=\"js-action-card-search\" href=\"{{search_path}}\" data-query-source=\"trend_click\">\n    {{#has_image}}Photo of {{story_name}}{{/has_image}}{{#has_video}}Video of {{story_name}}{{/has_video}}\n  </a>\n</h3>\n\n{{#has_media}}\n  <div class=\"discover-item-media-wrapper\">\n     <div class=\"discover-item-loading\">\n      <p>Loading…</p>\n    </div>\n    <a class=\"discover-item-media js-action-card-media\" href=\"{{card_url}}\">\n      <img class=\"story-{{media_type}} js-story-media\" data-item-id=\"{{escaped_query}}\" alt=\"{{escaped_query}}\" data-img-src=\"{{data_image_url}}\">\n      {{#has_video}}\n        <i class=\"play-large\"></i>\n      {{/has_video}}\n    </a>\n    {{#has_attribution}}\n      <a class=\"discover-item-attribution js-story-attribution\" href=\"{{attribution_url}}\" target=\"_blank\">\n        <img class=\"favicon\" src=\"{{attribution_img}}\" alt=\"{{attribution_name}}\">\n      </a>\n    {{/has_attribution}}\n  </div>\n{{/has_media}}\n",
            "user_story": "{{#items}}\n  {{>stream_item}}\n{{/items}}",
            "discovery_dialog": "<div {{#container_id}}id=\"{{container_id}}\" {{/container_id}}class=\"twttr-dialog-container\" style=\"visibility: hidden;\">\n  <div class=\"twttr-dialog twttr-dialog-discovery\">\n    <div class=\"twttr-dialog-inside\">\n      <div class=\"twttr-dialog-body clearfix\">\n        <div class=\"twttr-dialog-content\">\n          <div>\n            <h2 class=\"discoverability-header\">Be found on Twitter</h2>\n            <p>\n              We were hoping you could help us make it easier for people to discover their friends and colleagues on Twitter. Review your settings below to make sure the people you care about can easily find you.\n            </p>\n            <form action=\"#\" class=\"dialog-form\">\n              <fieldset class=\"common-form\">\n                <ul>\n                  <li>\n                    <label for=\"discoverable_name\">Name</label>\n                    <input type=\"text\" name=\"name\" id=\"discoverable_name\" maxlength=\"20\" value=\"{{name}}\"/>\n                  </li>\n                  <li>\n                    <label for=\"discoverable_description\">Bio<br/>\n                      <small>optional</small>\n                    </label>\n                    <textarea name=\"description\" class=\"discovery-description\" id=\"discoverable_description\">{{description}}</textarea>\n                  </li>\n                  <li>\n                    <label for=\"discoverable_location\">Location<br/>\n                      <small>optional</small>\n                    </label>\n                    <input type=\"text\" name=\"location\" id=\"discoverable_location\" maxlength=\"100\" value=\"{{location}}\"/>\n                  </li>\n                </ul>\n                <ul class=\"discoverability-settings\">\n                  <li>\n                    <label for=\"discoverable_by_email\">Email</label>\n                    <span class=\"input-wrapper\">\n                      <strong>{{email_address}}</strong>\n                      <input type=\"checkbox\" name=\"discoverable_by_email\" id=\"discoverable_by_email\" {{#email_checked}}checked=\"checked\"{{/email_checked}} value=\"1\" />\n                      <span class=\"discover-label\">Let others find me by my email address</span>\n                      <a href=\"{{help_url}}\" target=\"_blank\" class=\"help-discover\"></a>\n                      <input type=\"hidden\" name=\"email_discoverability_set\" value=\"1\" />\n                    </span>\n                  </li>\n                  {{#device_setup}}\n                  <li>\n                    <label for=\"discoverable_by_mobile_phone\">Phone</label>\n                    <span class=\"input-wrapper\">\n                      <strong>{{device_address}}</strong>\n                      <input type=\"checkbox\" name=\"discoverable_by_mobile_phone\" id=\"discoverable_by_mobile_phone\" {{#phone_checked}}checked=\"checked\"{{/phone_checked}} value=\"1\" />\n                      <span class=\"discover-label\">Let others find me by my phone number</span>\n                      <a href=\"{{help_url}}\" target=\"_blank\" class=\"help-discover\"></a>\n                      <input type=\"hidden\" name=\"mobile_phone_discoverability_set\" value=\"1\" />\n                    </span>\n                  </li>\n                  {{/device_setup}}\n                  <li>\n                    <span class=\"input-wrapper privacy-statement\">\n                      {{#device_setup}}\n                        Your email and phone <a href=\"{{help_url}}\" target=\"_blank\">will not be publicly displayed</a>. You can change your settings anytime.\n                      {{/device_setup}}\n                      {{^device_setup}}\n                        Your email <a href=\"{{help_url}}\" target=\"_blank\">will not be publicly displayed</a>. You can change your settings anytime.\n                      {{/device_setup}}\n                    </span>\n                  </li>\n                </ul>\n                <div class=\"discover-buttons\">\n                  <div class=\"button submit\">Good to go!</div>\n                  <div class=\"button cancel\">Ask me later</div>\n                </div>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "discovery_stream_error": "<div class=\"stream-end stream-placeholder js-discovery-error\">\n  <div class=\"stream-end-inner\">\n    <h2>Oops, something went wrong!</h2>\n    <p>Sorry for the inconvenience. Please try refreshing the page in a moment.</p>\n  </div>\n</div>",
            "dismiss_button": "<a class=\"dismiss js-dismiss\" href=\"#\"><i class=\"dismiss-white\"></i></a>\n",
            "dm_footer": "<div class=\"twttr-dialog-footer\">\n  Tip: you can send a message to anyone who follows you. <a href=\"http://support.twitter.com/groups/31-twitter-basics/topics/109-tweets-messages/articles/14606-what-is-a-direct-message-dm\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n</div>",
            "dropdown": "<ul class=\"drop-down\" style=\"visibility: hidden\">\n  {{{items}}}\n</ul>",
            "duplicate_tweet_error_message": "{{#is_dm}}\n  Whoops! You already said that...\n{{/is_dm}}\n{{^is_dm}}\n  Whoops! You already tweeted that...\n{{/is_dm}}\n",
            "edit_list_button": "<div class=\"button edit-list-button js-edit-list-action\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\" title=\"Edit\"><span class=\"edit-list\"></span><b class=\"label\">Edit</b></div>\n",
            "edit_profile_button": "<a class=\"btn js-thats-you edit-profile-btn js-nav\" href=\"{{settings_profile_path}}\">Edit your profile</a>",
            "email_already_verified_banner": "<div class=\"banner-outer\">\n  <div class=\"banner\">\n    <div class=\"banner-inside email-already-verified-banner\">\n      <a class='pane-close' href='#'>close <span>×</span></a>\n      <span class=\"warning\"></span>\n      <h5>{{already_verified_message}}</h5>\n    </div>\n  </div>\n</div>\n",
            "embed_dialog": "<div class=\"embed-code-container\">\n  <p>Add this Tweet to your website by copying the code below. <a href=\"{{embed_documentation_path}}\">Learn more</a></p>\n  <form>\n\n    <ul class=\"embed-target tabs\">\n      <li><a class=\"btn active\" href=\"javascript:;\" data-target=\"HTML\">HTML</a></li>\n      <li><a class=\"btn\" href=\"javascript:;\" data-target=\"shortcode\">Shortcode</a></li>\n      <li><a class=\"btn\" href=\"javascript:;\" data-target=\"link\">Link</a></li>\n    </ul>\n\n    <textarea></textarea>\n\n    <div class=\"clearfix embed-alignment\">\n      <div class=\"legend\">Alignment</div>\n      <div class=\"input\">\n        <label for=\"embed-alignment-none\" class=\"btn btn-first active\"><i class=\"embed-align-none\"></i>None</label>\n        <input type=\"radio\" id=\"embed-alignment-none\" name=\"align\" value=\"none\" checked=\"checked\">\n        <label for=\"embed-alignment-left\" class=\"btn\"><i class=\"embed-align-left\"></i>Left</label>\n        <input type=\"radio\" id=\"embed-alignment-left\" name=\"align\" value=\"left\">\n        <label for=\"embed-alignment-right\" class=\"btn\"><i class=\"embed-align-right\"></i>Right</label>\n        <input type=\"radio\" id=\"embed-alignment-right\" name=\"align\" value=\"right\">\n        <label for=\"embed-alignment-center\" class=\"btn btn-last\"><i class=\"embed-align-center\"></i>Center</label>\n        <input type=\"radio\" id=\"embed-alignment-center\" name=\"align\" value=\"center\">\n      </div>\n      <p class=\"help-block\">Control position and text wrapping on the page.</p>\n    </div>\n\n  </form>\n\n  <div class=\"embed-preview\"></div>\n</div>",
            "embedded_pic_twitter": "<div class=\"tweet-media\">\n  <div class=\"media-instance-container\">\n    <div class=\"twimg\">\n      <a target=\"_blank\" href=\"{{expanded_url}}\">\n        <img src=\"{{media_url_https}}\">\n      </a>\n    </div>\n    <span class=\"flag-container\">\n      <button type=\"button\" class=\"flaggable btn-link\">\n        Flag this media\n      </button>\n      <span class=\"flagged hidden\">\n        Flagged\n        <span>\n          <a target=\"_blank\" href=\"//support.twitter.com/articles/20069937\">\n            (learn more)\n          </a>\n        </span>\n      </span>\n    </span>\n    <div class='media-attribution'>\n      <span>powered by</span> <img src=\"/phoenix/img/turkey-icon.png\"/> <a target='_blank' data-media-type='Twimg' class='media-attribution-link' href='http://photobucket.com/twitter'>Photobucket</a>\n    </div>\n  </div>\n</div>",
            "embedded_tweet": "<div class=\"tweet embedded-tweet\" data-tweet-id=\"{{id}}\" data-item-id=\"{{id}}\" data-screen-name='{{#user}}{{screen_name}}{{/user}}'>\n  <div class=\"tweet-row\">\n    {{#user}}\n      {{>tweet_user_block}}\n    {{/user}}\n  </div>\n  <div class=\"tweet-content\">\n    <div class=\"tweet-row\">\n      {{>latest_tweet_timestamp}}:\n      {{#was_retweeted}}\n        <span class=\"retweet-icon\"></span>\n      {{{retweet_source_screen_name_link}}}\n      {{/was_retweeted}}\n       {{>tweet_text}}\n    </div>\n  </div>\n</div>\n",
            "empty_home": "<div class=\"empty-home empty-stream\">\n\n  <h2>This is your homepage @<strong>{{screen_name}}</strong></h2>\n\n  <p>It's looking mighty bare right now. When you follow people their updates will appear here. So go <a href=\"{{who_to_follow_interests_path}}\">find some interesting people</a> to follow!</p>\n\n  <div class=\"tweeting\">\n    <p>\n      You can tell the world <strong>what's happening</strong> in the box above.\n    </p>\n    <p class=\"protection\">\n      {{#protected_account}}\n        <span>Your Tweets are protected and only available to your followers.</span>\n        <span>You can make your Tweets public on your  <a href=\"{{settings_path}}\">account page</a>.</span>\n      {{/protected_account}}\n      {{^protected_account}}\n        <span>Note that your Tweets will be available publicly.</span>\n        <span>You can make your Tweets private on your <a href=\"{{settings_path}}\">account page</a>.</span>\n      {{/protected_account}}\n    </p>\n  </div>\n\n</div>\n\n\n",
            "empty_timeline_message": "{{^abtest_timeline_copy_317_any_bucket}}\n  Your timeline is currently empty. Follow people and topics you find interesting to see their Tweets in your timeline.\n{{/abtest_timeline_copy_317_any_bucket}}\n{{#abtest_timeline_copy_317_stream}}\n  Your stream is currently empty. Follow people and topics you find interesting to see their Tweets in your stream.\n{{/abtest_timeline_copy_317_stream}}\n",
            "empty_timeline_recommendations_module_followers": "<ul class=\"clearfix js-recommended-followers\">\n  {{#recommendations}}\n    {{>big_avatar_list_item}}\n  {{/recommendations}}\n</ul>",
            "empty_timeline_recommendations_module_short": "<div class=\"module big-avatar-list empty-timeline js-empty-timeline\">\n  <div class=\"empty-timeline-header\">\n    <a href=\"#\" class=\"dismiss js-done disabled\"><i class=\"close\"></i></a>\n    <h2>{{>empty_timeline_title}}</h2>\n    <small><a href=\"#\" class=\"js-refresh-suggestions\">Refresh</a> · <a href=\"{{who_to_follow_suggestions_path}}\">View all</a></small>\n  </div>\n  <div data-section-id=\"wtf\" class=\"empty-timeline-footer\">\n    {{>empty_timeline_recommendations_module_followers}}\n  </div>\n</div>",
            "empty_timeline_subtitle": "{{#following}}\n  \n  {{#follow_event}}\n    {{#one}}Follow more people to make Twitter even better.{{/one}}\n    {{#two}}You’re on your way to a great home timeline.{{/two}}\n    {{#several}}See what’s happening in the world, as it happens.{{/several}}\n    {{#almost}}Watch life unfold in real time.{{/almost}}\n    {{#done}}Keep following people everywhere on Twitter.{{/done}}\n  {{/follow_event}}\n{{/following}}\n{{^following}}\n  {{^abtest_timeline_copy_317_any_bucket}}\n    Your timeline is currently empty. Follow people and topics you find interesting to see their Tweets in your timeline.\n  {{/abtest_timeline_copy_317_any_bucket}}\n  {{#abtest_timeline_copy_317_stream}}\n    Your stream is currently empty. Follow people and topics you find interesting to see their Tweets in your stream.\n  {{/abtest_timeline_copy_317_stream}}\n{{/following}}",
            "empty_timeline_title": "{{#following}}\n  \n  {{^follow_event}}Follow more people to make Twitter even better.{{/follow_event}}\n  \n  {{#follow_event}}\n    {{#one}}Victory! That’s 1.{{/one}}\n    {{#two}}Congratulations! That’s 2.{{/two}}\n    {{#several}}Excellent! You’re making progress.{{/several}}\n    {{#almost}}Good work! You’ve almost reached {{goal}}.{{/almost}}\n    {{#done}}Yee-haw! That’s {{count}} follows. Now you’re on a roll.{{/done}}\n  {{/follow_event}}\n{{/following}}\n{{^following}}\n  Here are some people you might enjoy following.\n{{/following}}\n",
            "hashtag": "{{#theme_user}}\n  {{>user_css_t1}}\n  {{>bg_img_css}}\n{{/theme_user}}\n{{>events/hashtag_header}}\n<div class=\"dashboard\">\n  {{#logged_in}}\n    {{^new_user}}\n      {{>events/hashtag_tweetbox}}\n    {{/new_user}}\n    {{#new_user}}\n      {{>events/hashtag_new_user}}\n    {{/new_user}}\n  {{/logged_in}}\n  {{#youtube_livestream}}\n    {{>events/youtube_livestream}}\n  {{/youtube_livestream}}\n  {{>events/top_people}}\n  {{>footer}}\n</div>\n<div class=\"content-main\" id=\"timeline\" data-pixel-tracking-id=\"{{pixel_tracking_id}}\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      {{#autoplay_timeline}}\n        <div class=\"autoplay-control\">\n          <i class=\"play-pause autoplay-play js-tooltip\" data-placement=\"bottom\" title=\"Stream Tweets as they arrive\"></i>\n          <i class=\"play-pause autoplay-pause js-tooltip\" data-placement=\"bottom\" title=\"Pause streaming of Tweets\"></i>\n        </div>\n      {{/autoplay_timeline}}\n      <small class=\"view-original-search\">\n        <a href=\"{{view_search_url}}\">View all Tweets</a>\n      </small>\n      <h2 class=\"js-timeline-title\">Tweets</h2>\n    </div>\n  </div>\n  {{>timeline}}\n</div>",
            "hashtag_header": "{{#user_view}}\n<div>\n  <div class=\"module header-module hashtag-landing-header minified\" data-component-term=\"search_header\">\n    <div class=\"flex-module\">\n      <div class=\"flex-module-inner\">\n        <h1 class=\"hashtag-landing-title\">{{name}}</h1>\n        <p class=\"hashtag-landing-subline\">{{description}}</p>\n        {{^logged_in}}\n          <a href=\"/signup?event={{key}}\" class=\"btn signup-btn\">Sign up to get closer to {{name}}</a>\n        {{/logged_in}}\n      </div>\n    </div>\n\n    <img class=\"hero-graphic\" src=\"{{#user_view}}{{raw_profile_image_url}}{{/user_view}}\" alt=\"\">\n\n    {{#photo_strip}}\n      {{>media/events_media_thumbnails}}\n    {{/photo_strip}}\n\n  </div>\n</div>\n{{/user_view}}",
            "hashtag_new_user": "<div class=\"module component promptbird finish-signup-prompt\" data-component-term=\"find_people\">\n  <h2>Get started on Twitter</h2>\n  <p>Find people to follow to keep up to date with the things you care about.</p>\n  <a href=\"{{welcome_path}}\" class=\"btn primary-btn\">Find people to follow</a>\n</div>",
            "hashtag_tweetbox": "{{#user_view}}\n<div class=\"module component\" data-component-term=\"profile_tweetbox\">\n  <div class=\"profile-tweet-box flex-module\" data-hashtag=\"{{name}}\">\n    <div class=\"tweet-box-title\">\n      <h2>Tweet about {{name}}</h2>\n    </div>\n    {{>swift_tweet_box}}\n  </div>\n</div>\n{{/user_view}}",
            "top_people": "<div class=\"module component\" id=\"top-people\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-header\">\n      <h3>Top people</h3>\n    </div>\n    <div class=\"flex-module-inner\">\n\n      {{#top_three_people}}\n        {{>events/top_people_item}}\n      {{/top_three_people}}\n\n      <ul class=\"avatar-cluster\">\n        {{#top_people}}\n          <li>\n            <a href=\"/#!/{{screen_name}}\" title=\"{{name}}\" data-user-id=\"{{id}}\" class=\"js-user-tipsy show-popup-with-id\">\n              <img class=\"avatar size48 js-tooltip\" src=\"{{profile_image_url_https}}\" alt=\"{{name}}\" title=\"{{name}}\">\n            </a>\n          </li>\n        {{/top_people}}\n      </ul>\n    </div>\n  </div>\n</div>",
            "top_people_item": "<div class=\"js-account-summary account-summary js-actionable-user\" data-user-id=\"{{id}}\">\n  <div class=\"content\">\n    <a class=\"account-group js-recommend-link js-user-profile-link user-thumb\" href=\"/{{screen_name}}\" data-user-id=\"{{id}}\">\n      \n      <img class=\"avatar js-action-profile-avatar\" src=\"{{profile_image_url_https}}\" alt=\"{{name}}\">\n      <span class=\"account-group-inner js-action-profile-name\" data-user-id=\"{{id}}\">\n        <b class=\"fullname\">{{name}}</b>\n        <span>‏</span>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        <span class=\"username\"><s>@</s><span class=\"js-username\">{{screen_name}}</span></span>\n      </span>\n    </a>\n    <small class=\"metadata social-context\">{{description}}</small>\n    {{>user_item_action}}\n  </div>\n</div>",
            "youtube_livestream": "{{#user_view}}\n{{#url}}\n<div class=\"module component\" id=\"youtube-livestream\">\n  <div class=\"flex-module\">\n    {{#location}}\n    <div class=\"flex-module-header\">\n      <h3><strong>{{location}}</strong></h3>\n    </div>\n    {{/location}}\n    <div class=\"flex-module-inner\">\n      <iframe width=\"275\" height=\"155\" src=\"{{url}}\" frameborder=\"0\" allowfullscreen></iframe>\n    </div>\n  </div>\n</div>\n{{/url}}\n{{/user_view}}",
            "face_pile": "{{#users}}\n  {{>user_avatar_link_24}}\n{{/users}}\n",
            "facebook_token_iframe": "<!DOCTYPE html>\n<html lang=\"{{twitter_locale}}\" xmlns=\"http://www.w3.org/1999/html\">\n  <head>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta charset=\"utf-8\">\n    <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js\"></script>\n    <script>\n      window.facebookFrameConfig = {{{config}}};\n      $.ajaxSetup(facebookFrameConfig.ajaxSetup);\n    </script>\n    \n    <script src=\"//connect.facebook.net/{{language_tag}}/all.js\"></script>\n  </head>\n  <body>\n    \n    <div id=\"fb-root\"></div>\n    \n    <script>{{{facebook_token_js}}}</script>\n  </body>\n</html>",
            "facet_media": "<li class=\"list-link js-facets\">\n  <a href=\"{{view_all_href}}\" class=\"list-action js-view-all\">\n    {{title}} {{#count}}<span class=\"count\">{{count}}</span>{{/count}} <i class=\"chev-right\"></i>\n    <div class=\"media-row media-videos js-media-images\"></div>\n  </a>\n</li>\n",
            "facets_media_not_displayed": "<li class=\"facets-media-not-displayed list-link\">\n <div>\n   <a class=\"header\">Popular images & videos</a>\n   <p class=\"not-displayed-text metadata\">These results include media shared by people you don’t follow.</p>\n   <a class=\"btn small display-this-media\">\n     Display media\n   </a>\n   {{#logged_in}}\n     ·\n     <a href=\"#\" class=\"always-display-media\">Always display media like this</a>\n   {{/logged_in}}\n </div>\n</li>\n",
            "firefox_download": "<div class=\"page-canvas\">\n<div class=\"firefox-header clearfix\">\n\n  {{#firefox_download}}\n    <div class=\"firefox-intro\">\n      <h1><strong>Firefox</strong> with Twitter</h1>\n      <h2>Mozilla Firefox with Twitter instantly connects you to what’s happening in the world. Search people and topics on Twitter using <span>@</span> and <span>#</span> from the address bar.</h2>\n      <div class=\"firefox-download\">\n        <a class=\"btn signup-btn large\" href=\"{{{download_url}}}\" target=\"_blank\">{{#product_addon}}Get Twitter Address Bar Search{{/product_addon}}{{#product_bundle}}Get Firefox with Twitter{{/product_bundle}}</a>\n        <div class=\"firefox-actions\">\n          <a href=\"{{tweet_button_url}}\" class=\"firefox-tweet-button\" ></a>\n          <a href=\"{{twirefox_support_path}}\" target=\"_blank\">Learn more »</a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"firefox-brand\"></div>\n  {{/firefox_download}}\n\n  {{#firefox_welcome}}\n    <div class=\"firefox-intro firefox-installed\">\n      <div class=\"firefox-brand\"></div>\n      <h1>Search Twitter with Firefox. Stay connected.</h1>\n      <h2>Search people and topics on Twitter using <span>@</span> and <span>#</span> from the address bar.</h2>\n    </div>\n  {{/firefox_welcome}}\n\n</div>\n\n<table class=\"mobile-footer firefox-footer\" cellpadding=\"0\" cellspacing=\"0\">\n  <tbody>\n    <tr>\n      <td>\n        <div class=\"screenshot\">\n          <div class=\"screenshot-a\"></div>\n          <h4>Instantly connect</h4>\n          <p>Search people and topics on Twitter using @ and # from the address bar.</p>\n        </div>\n      </td>\n      <td>\n        <div class=\"screenshot\">\n          <div class=\"screenshot-b\"></div>\n          <h4>Stay informed and updated</h4>\n          <p>The pinned Twitter app tab lights up when new Tweets arrive.</p>\n        </div>\n      </td>\n      <td class=\"last\">\n        <div class=\"screenshot\">\n          <div class=\"screenshot-c\"></div>\n          <h4>Search Twitter</h4>\n          <p>Switch to Twitter Search by clicking the drop down arrow in the search box.</p>\n        </div>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n{{#firefox_welcome}}\n  <div class=\"firefox-footer\">\n    <div class=\"firefox-actions\">\n      <a href=\"{{tweet_button_url}}\" class=\"firefox-tweet-button\"></a>\n      <a href=\"{{twirefox_support_path}}\" target=\"_blank\">Need help?</a>\n    </div>\n  </div>\n{{/firefox_welcome}}\n\n</div>",
            "first_time_turkey": "<div {{#container_id}}id=\"{{container_id}}\" {{/container_id}}class=\"twttr-dialog-container\" style=\"visibility: hidden;\">\n  <div class=\"twttr-dialog\">\n    <div class=\"twttr-dialog-inside\">\n      <div class=\"twttr-dialog-body clearfix\">\n        <div class=\"twttr-dialog-content twttr-dialog-first-turkey\">\n          <div>\n            <h2 class=\"first-time\">Share an image on Twitter</h2>\n            <p class=\"first-time-text\">\n              Now you can upload and share images, right from Twitter! Just click the camera icon to add an image to your Tweet.\n            </p>\n            <div class=\"turkey-container first-time\">\n              <div class=\"callout1\">1. Click the camera icon to add</div>\n              <div class=\"callout2\">2. Preview before sharing</div>\n              <div class=\"turkey\"><img src=\"/phoenix/img/first_photo_promo.png\"/></div>\n            </div>\n            <div class=\"first-turkey-actions\">\n              <span class=\"button ok-thanks\"><strong>OK, thanks!</strong></span>\n              <a class=\"learn-more\" target=\"_blank\" href=\"{{turkey_support_path}}\">Learn more</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
            "flex_module": "<div class=\"module {{class_name}}\">\n  <div class=\"flex-module js-items-container\"></div>\n</div>",
            "flex_module_link": "<a href=\"{{route}}\">{{title}}</a>",
            "flex_module_more_links": "<p class=\"more-links js-more-links\">\n  {{#links}}\n    {{>flex_module_link}} {{^is_last}} · {{/is_last}}\n  {{/links}}\n</p>",
            "flex_module_title": "<h4 class=\"flex-module-title\">{{title}} {{#view_all_route}}<small>· <a href=\"{{view_all_route}}\">View all</a></small>{{/view_all_route}}</h4>",
            "follow_link": "<a href=\"#\" class=\"user-follow-link js-action-follow js-link follow-action\" data-user-id=\"{{id}}\" {{#protected}}title=\"Send follow request\"{{/protected}}>Follow</a>",
            "follow_list": "<h3>{{header}}</h3>\n{{#follow_list}}\n  {{{follow_list}}}\n{{/follow_list}}",
            "follow_request_sent_button": "<div class=\"pending-request js-action-unfollow js-button\" data-user-id=\"{{id}}\">\n  <span>pending</span>\n  <a class='follow-request-cancel-button' href=\"#\" data-user-id=\"{{id}}\">(cancel)</a>\n</div>",
            "follow_request_sent_link": "<a href='#' class=\"cancel-request-link js-action-unfollow js-link\" data-user-id=\"{{id}}\" title=\"Cancel follow request\">Cancel</a>",
            "followers_list_small": "{{%TRANSLATION-HINT mode=user_stats}}\n\n<div class=\"your-activity new-followers-activity\">\n  <h2>\n    <a href=\"{{user_followers_path}}\" class=\"title-link\"><span class='dashboard-component-title'>Followers</span> <span class='user-stat-link'>{{followers_count_commaized}}</span></a>\n  </h2>\n</div>\n",
            "followers_page": "<div class=\"main-content\">\n  {{#render_page_content}}\n    {{#profile_user}}\n    <div class=\"profile-subpage-header\">\n      <div class=\"upper-nav\" >\n        <a href=\"{{profile_path}}\">← @{{screen_name}}’s profile</a>\n      </div>\n      <div class=\"profile-subpage-title\">\n        <div class=\"profile-subpage-title-copy\">\n            <h1>{{{followers_header_string}}}</h1>\n            <h2>Here’s more about them.</h2>\n        </div>\n      </div>\n\n      <ul class=\"stream-tabs\">\n        <li class=\"stream-tab stream-tab-followers active\">\n          <a class=\"tab-text\" href=\"{{user_followers_path}}\">People</a>\n        </li>\n      </ul>\n   </div>\n\n    {{/profile_user}}\n    {{>stream_manager}}\n  {{/render_page_content}}\n</div>\n{{>profile_subpage_dashboard}}\n{{>details_pane_container}}\n",
            "followers_stream_view_toggler": "{{>stream_view_toggler}}",
            "followers_subtabs": "<span class=\"subtabs\">\n  <a {{#active_subtab_all}} class='active'{{/active_subtab_all}} href='{{user_followers_path}}'>All</a>\n    ·\n  <a {{#active_subtab_followers_you_follow}} class='active'{{/active_subtab_followers_you_follow}} href='{{followers_you_follow_path}}'>Followers you follow</a>\n</span>\n",
            "following_limit_reached_error_message": "It looks like you've hit a following limit.\n<a href=\"{{follow_limit_reached_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "following_list_full": "{{%TRANSLATION-HINT mode=user_stats}}\n\n<div class=\"your-activity following-activity-full\">\n  <h2>\n    <span class='dashboard-component-title'>Following</span>\n    <span class=\"dot\">·</span>\n    <a href=\"{{user_following_path}}\" class=\"view-all\">view all</a>\n  </h2>\n  {{#show_wtf_links}}\n    {{#following_nobody}}\n      {{>who_to_follow_links}}\n    {{/following_nobody}}\n  {{/show_wtf_links}}\n</div>\n",
            "following_list_small": "{{%TRANSLATION-HINT mode=user_stats}}\n\n<div class=\"your-activity following-activity\">\n  <h2>\n    <a href=\"{{user_following_path}}\" class=\"title-link\"><span class='dashboard-component-title'>\n      Following</span> <span class='user-stat-link'>{{friends_count_commaized}}</span></a>\n  </h2>\n  {{#show_wtf_links}}\n    {{#following_nobody}}\n      {{>who_to_follow_links}}\n    {{/following_nobody}}\n  {{/show_wtf_links}}\n</div>\n",
            "following_page": "<div class=\"main-content\">\n  {{#render_page_content}}\n    {{#profile_user}}\n    <div class=\"profile-subpage-header\">\n      <div class=\"upper-nav\" >\n        <a href=\"{{profile_path}}\">← @{{screen_name}}’s profile</a>\n      </div>\n      <div class=\"profile-subpage-title\">\n        <div class=\"profile-subpage-title-copy\">\n            <h1>{{{following_header_string}}}</h1>\n            <h2 id=\"following-page-context\"></h2>\n        </div>\n      </div>\n\n      <ul class=\"stream-tabs\">\n        <li class=\"stream-tab stream-tab-users{{#active_tab_users}} active{{/active_tab_users}}\">\n          <a class=\"tab-text\" href=\"{{user_following_path}}\">People: {{following_count_commaized}}</a>\n        </li>\n        <li class=\"stream-tab stream-tab-tweets{{#active_tab_tweets}} active{{/active_tab_tweets}}\">\n          <a class=\"tab-text\" href=\"{{user_following_tweets_path}}\">Tweets</a>\n        </li>\n      </ul>\n   </div>\n\n    {{/profile_user}}\n    {{>stream_manager}}\n  {{/render_page_content}}\n</div>\n{{>profile_subpage_dashboard}}\n{{>details_pane_container}}\n",
            "following_page_signup_call_out": "<div class=\"signup-call-out\">\n  <h1>\n    Ready to make Twitter your own?\n  </h1>\n  <h2>\n    Follow your interests to instantly connect to what’s most meaningful to you.\n  </h2>\n  {{>signup_button}}\n</div>\n",
            "following_subtabs": "<span class=\"subtabs\">\n  <a {{#active_subtab_all}} class='active'{{/active_subtab_all}} href='{{user_following_path}}'>All</a>\n    ·\n  <a {{#active_subtab_you_both_follow}} class='active'{{/active_subtab_you_both_follow}} href='{{you_both_follow_path}}'>You both follow</a>\n</span>\n",
            "following_tweet": "{{>stream_tweet}}",
            "footer": "<div class=\"module site-footer {{#is_slim}}slim-site-footer{{/is_slim}}\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-inner js-items-container\">\n      <ul class=\"clearfix\">\n        <li class=\"copyright\">© {{year}} Twitter</li>\n        <li><a href=\"{{about_path}}\">About</a></li>\n        <li><a href=\"{{support_path}}\">Help</a></li>\n        {{^is_slim}}\n        <li><a href=\"{{tos_path}}\">Terms</a></li>\n        <li><a href=\"{{privacy_path}}\">Privacy</a></li>\n        <li><a href=\"{{blog_path}}\">Blog</a></li>\n        <li><a href=\"{{status_path}}\">Status</a></li>\n        <li><a href=\"{{mobile_gallery_path}}\">Apps</a></li>\n        <li><a href=\"{{resources_path}}\">Resources</a></li>\n        <li><a href=\"{{jobs_path}}\">Jobs</a></li>\n        <li><a href=\"{{advertisers_path}}\">Advertisers</a></li>\n        <li><a href=\"{{businesses_path}}\">Businesses</a></li>\n        <li><a href=\"{{partnerships_path}}\">Media</a></li>\n        <li><a href=\"{{developers_path}}\">Developers</a></li>\n        {{/is_slim}}\n      </ul>\n    </div>\n  </div>\n</div>\n",
            "frame_busting": "<script>\nfunction bust () {\n  document.write = \"\";\n  window.top.location = window.self.location;\n  setTimeout(function() {\n    document.body.innerHTML = '';\n    }, 0);\n  window.self.onload = function(evt) {\n    document.body.innerHTML = '';\n  };\n}\nif (window.top !== window.self) { // are you trying to put self in an iframe?\n  try {\n    if (window.top.location.host) { // this is illegal to access unless you share a non-spoofable document domain\n      // fun times\n    } else {\n      bust(); // chrome executes this\n    }\n  } catch (ex) {\n    bust(); // everyone executes this\n  }\n}\n</script>\n",
            "front_page": "<div class=\"leftside\">\n  <h1>Twitter</h1>\n  <h2>Follow your interests</h2>\n  <p>Instant updates from your friends, industry experts, favorite celebrities, and what’s happening around the world.</p>\n</div>\n\n{{#render_page_content}}\n  <noscript>\n    <div class=\"warning\">\n      <strong>Twitter.com makes heavy use of JavaScript.</strong>\n      <em>If you cannot enable it in your browser's preferences, you may have a better experience on our <a href=\"http://m.twitter.com\">mobile site</a>.</em>\n    </div>\n  </noscript>\n{{/render_page_content}}\n\n<div class=\"rightside\">\n\n  <div class=\"front-signin js-front-signin\">\n    <form action=\"{{sessions_path}}\" class=\"signin\" method=\"post\">\n      <fieldset class=\"textbox\">\n        <div class=\"holding username\">\n          <input type=\"text\" name=\"session[username_or_email]\" title=\"Username or email\" autocomplete=\"on\" />\n          <span class=\"holder\">Username</span>\n        </div>\n        <div class=\"holding password\">\n          <input type=\"password\" name=\"session[password]\" title=\"Password\" />\n          <span class=\"holder\">Password</span>\n        </div>\n      </fieldset>\n      {{>signin_form_subchck}}\n      <p>\n        <a class=\"forgot\" href=\"{{resend_password_path}}\">Forgot it?</a>\n      </p>\n    </form>\n  </div>\n\n\n  <div class=\"front-signup js-front-signup\">\n    <h3>New to Twitter? <em>Join today!</em></h3>\n    {{>partial_signup_form}}\n  </div>\n</div>\n\n<div class=\"bottompart\">\n  {{>generic_footer}}\n</div>\n",
            "full_name": "<div class=\"full-name\">\n  <h1>{{name}}</h1>\n  {{#verified}}\n    <span class=\"verified-icon\" title=\"Verified Account\"></span>\n  {{/verified}}\n  {{#protected}}\n    <span class=\"protected-icon\"></span>\n  {{/protected}}\n</div>",
            "full_page_trends": "<div class=\"full-page-trends\">\n  <div class=\"trends-header\">\n    <div class=\"trends-header-gradient\">\n      <div class=\"trends-header-map\">\n        <h2 class=\"trends-header-label\">\n          Trends:\n          <span class=\"trends-inline-controls\">\n            <span class=\"trend-location js-trend-location\">\n              Worldwide\n              </span>\n            <span class='trend-toggle js-trend-toggle'>\n              <a href='#' class=\"trend-toggle-link\">\n              Change location\n              </a>\n            </span>\n          </span>\n        </h2>\n        <form action=\"{{signup_path}}\" class=\"signup signup-btn trends-description-container\" method=\"get\">\n          <div class=\"trends-description\">\n            Topics and #hashtags people are talking about now.\n          </div>\n          {{^logged_in}}\n            <input class=\"promotional\" type=\"submit\" value=\"Sign up »\" />\n          {{/logged_in}}\n        </form>\n      </div>\n    </div>\n  </div>\n  <ul class='trends js-trends'></ul>\n</div>",
            "card_image_onebox": "\n\n<div class=\"{{type}} card\">\n  <div class=\"card-body\">\n    <div class=\"onebox-header\">\n      <h3>Top images</h3>\n      <small class=\"view-all\"> · <a href=\"#\">View all</a></small>\n    </div>\n    <a href=\"#\"><img src=\"http://www.placehold.it/154x154\" alt=\"\"></a>\n    <a href=\"#\"><img src=\"http://www.placehold.it/154x154\" alt=\"\"></a>\n    <a href=\"#\"><img src=\"http://www.placehold.it/154x154\" alt=\"\"></a>\n  </div>\n</div>",
            "card_video_onebox": "\n\n<div class=\"{{type}} card\">\n  <div class=\"card-body\">\n    <div class=\"onebox-header\">\n      <h3>Top videos</h3>\n      <small class=\"view-all\"> · <a href=\"#\">View all</a></small>\n    </div>\n    <a class=\"onebox-video\" href=\"#\">\n        <img src=\"http://www.placehold.it/154x115\" alt=\"\">\n        <i class=\"play-large\"></i>\n    </a>\n    <a class=\"onebox-video\" href=\"#\">\n        <img src=\"http://www.placehold.it/154x115\" alt=\"\">\n        <i class=\"play-large\"></i>\n    </a>\n    <a class=\"onebox-video\" href=\"#\">\n        <img src=\"http://www.placehold.it/154x115\" alt=\"\">\n        <i class=\"play-large\"></i>\n    </a>\n  </div>\n</div>",
            "follow_profile_card_large": "\n\n <div class=\"module follow-card\">\n  <img src=\"http://placehold.it/300x300\" class=\"size300\" />\n  <div class=\"flex-module\">\n   <div class=\"flex-module-header\">\n      <h1>Full Name</h1>\n      <h2>@username</h2>\n      <p class=\"location\">San Francisco, CA</p>\n    </div>\n    <div class=\"full-bio\">\n      <p class=\"bio\">Nulla vitae elit libero, a pharetra augue. Maecenas faucibus mollis interdum. Cras justo odio, dapibus ac facilisis in, egestas eget quame faucibus mollis int.</p>\n      <p class=\"bio2\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justos.</p>\n      <ul class=\"elsewhere\">\n        <li class=\"flickr\"><a href=\"#\">Flickr</a></li>\n        <li class=\"facebook\"><a href=\"#\">Facebook</a></li>\n        <li class=\"formspring\"><a href=\"#\">Formspring</a></li>\n        <li class=\"yelp\"><a href=\"#\">Yelp</a></li>\n        <li class=\"youtube\"><a href=\"#\">Youtube</a></li>\n        <li class=\"nikeplus\"><a href=\"#\">Nike+</a></li>\n        <li class=\"ebay\"><a href=\"#\">eBay</a></li>\n      </ul>\n      <p class=\"url\"><a href=\"#\">something.site.com</a></p>\n    </div>\n  </div>\n  <div class=\"tweet-box\">\n    <input type=\"text\" placeholder=\"Tweet to @username\" />\n  </div>\n  <div class=\"follow-bar\">\n    {{>combo_follow_button}}\n    <span class=\"user-toggles\">\n      <a href=\"#\" class=\"toggle-retweets active\"><i class=\"toggle-retweets\"></i> Toggle Retweets</a>\n      <a href=\"#\" class=\"toggle-sms\"><i class=\"toggle-sms\"></i> Toggle SMS</a>\n    </span>\n  </div>\n</div>\n",
            "modal_account_changes": "\n\n<div class=\"modal-overlay account-changes\">\n  <div class=\"modal modal-small\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n      <h2>Save account settings</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <form clas=\"form-horizontal\">\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"password\">Password</label>\n            <div class=\"controls\">\n              <input class=\"input-medium\" type=\"password\" name=\"password\">\n              <p class=\"help-block\"><a href=\"#\">Forgot your password?</a></p>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn\" href=\"#\">Save changes</a>\n      <a class=\"btn\" href=\"#\">Cancel</a>\n    </div>\n  </div>\n</div>",
            "modal_contact_import": "",
            "modal_dms": "\n<style type=\"text/css\">\n  .modal-overlay.dms .modal-header .btn {\n    float: right;\n    margin: -5px -5px 0 0;\n    font-weight: normal;\n  }\n\n  .dm-thread-list {\n\n  }\n  .dm-thread a {\n    display: block;\n    padding: 12px;\n    border-top: 1px solid #eee;\n  }\n  .dm-thread:first-child a {\n    border-top: 0;\n  }\n  .dm-thread:last-child a {\n    -webkit-border-radius: 0 0 6px 6px;\n       -moz-border-radius: 0 0 6px 6px;\n            border-radius: 0 0 6px 6px;\n  }\n  .dm-thread a:hover {\n    text-decoration: none;\n    background-color: #f5f5f5; /* Old browsers */\n    background-repeat: repeat-x; /* Repeat the gradient */\n    background-image: -moz-linear-gradient(top, #f9f9f9 0%, #f5f5f5 100%); /* FF3.6+ */\n    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#f9f9f9), color-stop(100%,#f5f5f5)); /* Chrome,Safari4+ */\n    background-image: -webkit-linear-gradient(top, #f9f9f9 0%,#f5f5f5 100%); /* Chrome 10+,Safari 5.1+ */\n    background-image: -ms-linear-gradient(top, #f9f9f9 0%,#f5f5f5 100%); /* IE10+ */\n    background-image: -o-linear-gradient(top, #f9f9f9 0%,#f5f5f5 100%); /* Opera 11.10+ */\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f9f9f9', endColorstr='#f5f5f5',GradientType=0 ); /* IE6-9 */\n    background-image: linear-gradient(top, #f9f9f9 0%,#f5f5f5 100%); /* W3C */\n  }\n  .dm-thread .chev-right {\n    float: right;\n    margin-top: 9px;\n  }\n  /* TODO: fix this in the modals css because we have .modal .account-summary elsewhere and that sucks */\n  .modal .dm-thread .account-summary {\n    margin: 0;\n    min-height: 32px;\n    margin-left: 18px;\n  }\n\n  .dm-thread-status {\n    float: left;\n    width: 13px;\n    height: 32px;\n  }\n  .dm-thread-status .unread {\n    margin-top: 9px;\n  }\n  .dm-thread-status .replied {\n    margin-top: 10px;\n  }\n\n  /* DMs\n  -------------------------------------------------- */\n\n  /* The list of threads */\n  .dm-threads .list-link {\n    padding: 12px;\n  }\n  .dm-threads .list-link .chev-right {\n    position: absolute;\n    top: 50%;\n    right: 12px;\n    margin-top: -6px;\n  }\n\n  /* Le DMs */\n  .dms {\n    padding-bottom: 12px;\n    border-bottom: 1px solid #eee;\n  }\n  .dm-item .avatar {\n    position: absolute;\n    top: 12px;\n    left: 12px;\n  }\n  .dm-item .content {\n    margin-left: 58px;\n  }\n  /* Base styles for stream-item types */\n  .dm-item {\n    position: relative;\n    min-height: 48px; /* Never shorter than avatar + padding */\n    padding: 12px;\n  }\n  .dm-item {\n    line-height: 16px;\n  }\n  /* reposition content and avatar to allow for message thread status (unread/replied) */\n  .dm-item .content {\n    margin-left: 58px;\n  }\n  /* unread indicator */\n  .dm-item .unread {\n    float: left;\n    margin: 18px 0 0 -3px;\n  }\n  .dm-item .status {\n    display: none;\n  }\n  .dm-item.new-messages .status {\n    display: block;\n  }\n\n  /* replied-to indicator */\n  .dm-item .status .sm-reply {\n    position: absolute;\n    top: 30px;\n    left: 8px;\n  }\n  /* latest message snippet */\n  .dm-item p {\n    padding: 9px;\n    margin-bottom: 5px;\n    font-size: 12px;\n    color: #999;\n    background-color: #f5f5f5;\n    border: 1px solid #eee;\n    -webkit-border-radius: 4px;\n       -moz-border-radius: 4px;\n            border-radius: 4px;\n  }\n  /* sender gets flipped */\n  .dm-item.sent .avatar {\n    right: 12px;\n    left: auto;\n  }\n  .dm-item.sent .content {\n    margin-left: 0;\n    margin-right: 58px;\n  }\n  /* time stamp */\n  .dm-item time {\n    display: block;\n    text-align: center;\n    font-size: 12px;\n    color: #999;\n  }\n\n\n  .dms .modal-scroll {\n    width: 360px;\n    overflow-x: hidden;\n  }\n  .dm-modal-wrapper {\n    clear: both;\n    width: 720px;\n  }\n  .dm-threads {\n    float: left;\n    width: 345px;\n  }\n  .dm-convos {\n    float: left;\n    width: 345px;\n    display: none;\n  }\n</style>\n\n<script type=\"text/javascript\">\n  $(document).ready(function() {\n\n    $('.dm-thread a').click(function(e) {\n      e.preventDefault();\n      $('.dm-threads').hide();\n      $('.dm-convos').show();\n    });\n\n  });\n</script>\n\n<div class=\"modal-overlay dms\">\n  <div class=\"modal modal-small\">\n    <div class=\"modal-header\">\n      <a class=\"btn js-dismiss\" href=\"#\">Done</a>\n      <h2>Direct messages</h2>\n    </div>\n    <div class=\"modal-body modal-scroll\">\n\n      <div class=\"dm-modal-wrapper\">\n        <div class=\"dm-threads\">\n          <ul class=\"dm-thread-list\">\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"unread\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"unread\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"unread\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"replied\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"replied\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"replied\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"dm-thread-status\">\n                  <i class=\"replied\"></i>\n                </div>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n            <li class=\"dm-thread\">\n              <a href=\"#\">\n                <i class=\"chev-right\"></i>\n                <div class=\"account-summary account-summary-small\">\n                  <div class=\"content\">\n                    <span class=\"account-group\" href=\"#\">\n                      <img src=\"http://placehold.it/32x32\" class=\"avatar size32\">\n                      <b class=\"fullname\">Full Name</b>\n                    </span>\n                    <small class=\"metadata\">@screen_name</small>\n                  </div>\n                </div>\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"dms dm-convos\">\n          <div class=\"dm-item received\">\n            <img class=\"avatar size48\" src=\"http://placehold.it/48x48\">\n            <div class=\"content\">\n              <p>Sed posuere consectetur est at lobortis. Etiam porta sem malesuada magna mollis euismod. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>\n              <small class=\"time\">8/1/11 9:00am</small>\n            </div>\n          </div>\n          <div class=\"dm-item sent\">\n            <img class=\"avatar size48\" src=\"http://placehold.it/48x48\">\n            <div class=\"content\">\n              <p>Sed posuere consectetur est at lobortis.</p>\n              <small class=\"time\">8/1/11 9:00am</small>\n            </div>\n          </div>\n          <div class=\"dm-item received\">\n            <img class=\"avatar size48\" src=\"http://placehold.it/48x48\">\n            <div class=\"content\">\n              <p>Sed posuere consectetur est at lobortis. Etiam porta sem malesuada magna mollis euismod. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>\n              <small class=\"time\">8/1/11 9:00am</small>\n            </div>\n          </div>\n          <div class=\"dm-item sent\">\n            <img class=\"avatar size48\" src=\"http://placehold.it/48x48\">\n            <div class=\"content\">\n              <p>Sed posuere consectetur est at lobortis.</p>\n              <small class=\"time\">8/1/11 9:00am</small>\n            </div>\n          </div>\n          <div class=\"dm-item received\">\n            <img class=\"avatar size48\" src=\"http://placehold.it/48x48\">\n            <div class=\"content\">\n              <p>Sed posuere consectetur est at lobortis. Etiam porta sem malesuada magna mollis euismod. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>\n              <small class=\"time\">8/1/11 9:00am</small>\n            </div>\n          </div>\n          <div class=\"dm-item sent\">\n            <img class=\"avatar size48\" src=\"http://placehold.it/48x48\">\n            <div class=\"content\">\n              <p>Sed posuere consectetur est at lobortis.</p>\n              <small class=\"time\">8/1/11 9:00am</small>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n</div>",
            "modal_go_to_user": "\n\n<div class=\"modal-overlay go-to-user\">\n  <div class=\"modal modal-small\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n      <h2>Go to a person's profile</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <form action=\"\" class=\"\">\n          <input type=\"text\" placeholder=\"Start typing a name to jump to a profile\">\n        </form>\n      </div>\n    </div>\n  </div>\n</div>",
            "modal_list_add_to": "\n\n<div class=\"modal-overlay list-add-to\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>Add [Full Name] to your lists</h2>\n    </div>\n    <div class=\"modal-body modal-scroll\">\n      <div class=\"membership\">\n        <label class=\"item checked\">\n          <input type=\"checkbox\" checked />\n          <span class=\"inner\">\n            <strong>List name</strong>\n            <small>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</small>\n          </span>\n        </label>\n        <label class=\"item\">\n          <input type=\"checkbox\" />\n          <span class=\"inner\">\n            <strong>Another list name</strong>\n          </span>\n        </label>\n        <label class=\"item\">\n          <input type=\"checkbox\" />\n          <span class=\"inner\">\n            <strong>Look, a list!</strong>\n            <small>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum.</small>\n          </span>\n        </label>\n        <label class=\"item checked\">\n          <input type=\"checkbox\" checked />\n          <span class=\"inner\">\n            <strong>List name</strong>\n          </span>\n        </label>\n        <label class=\"item\">\n          <input type=\"checkbox\" />\n          <span class=\"inner\">\n            <strong>Another list name</strong>\n            <small>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</small>\n          </span>\n        </label>\n        <label class=\"item\">\n          <input type=\"checkbox\" />\n          <span class=\"inner\">\n            <strong>Look, a list!</strong>\n            <small>Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum.</small>\n          </span>\n        </label>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn\" href=\"#\">Save changes</a>\n      <a class=\"btn\" href=\"#\">Cancel</a>\n    </div>\n  </div>\n</div>",
            "modal_list_edit": "\n\n<div class=\"modal-overlay list-edit\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>\n        Edit list\n        <small class=\"view-toggler\"><a class=\"active\" href=\"#\">List details</a> / <a href=\"#\">Members</a></small>\n      </h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <form class=\"form-horizontal edit-list\">\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"listName\">Name</label>\n            <div class=\"controls\">\n              <input class=\"input-large\" id=\"listName\" type=\"text\" value=\"SF Food Cards\">\n            </div>\n          </fieldset>\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"listDescription\">Description</label>\n            <div class=\"controls\">\n              <textarea class=\"input-large\" id=\"listDescription\">San Francisco food carts I love.</textarea>\n              <p class=\"help-text\">Optional. Maximum 100 characters.</p>\n            </div>\n          </fieldset>\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"listPrivacy\">Privacy</label>\n            <div class=\"controls\">\n              <div class=\"control-list\">\n                <label class=\"checkbox\">\n                  <input name=\"listPrivacy\" id=\"listPublic\" type=\"checkbox\" checked>\n                  Public <small>anyone can follow this list</small>\n                </label>\n                <label class=\"checkbox\">\n                  <input name=\"listPrivacy\" id=\"listPrivate\" type=\"checkbox\">\n                  Private <small>Only you can access this list</small>\n                </label>\n              </div>\n            </div>\n          </fieldset>\n        </form>\n     </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn\" href=\"#\">Save changes</a>\n      <a class=\"btn\" href=\"#\">Cancel</a>\n    </div>\n  </div>\n</div>",
            "modal_list_edit_members": "\n\n<div class=\"modal-overlay list-edit-members\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>\n        Edit members\n        <small class=\"view-toggler\"><a href=\"#\">List details</a> / <a class=\"active\" href=\"#\">Members</a></small>\n      </h2>\n      <form class=\"modal-search\">\n        <!-- NOTE: fallback to jquery for placeholder? -->\n        <input type=\"text\" class=\"search\" id=\"\" placeholder=\"Search for people to add to this list\" />\n      </form>\n    </div>\n    <div class=\"modal-body modal-scroll\">\n      <div class=\"stream\">\n        <div class=\"stream-item\">\n           {{>stream_user}}\n           {{>stream_user}}\n           {{>stream_user}}\n           {{>stream_user}}\n           {{>stream_user}}\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn\" href=\"#\">Save changes</a>\n      <a class=\"btn\" href=\"#\">Cancel</a>\n    </div>\n  </div>\n</div>",
            "modal_list_new": "\n\n<div class=\"modal-overlay list-new\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>Create list</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <form class=\"form-horizontal edit-list\">\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"listName\">Name</label>\n            <div class=\"controls\">\n              <input class=\"input-large\" id=\"listName\" type=\"text\">\n            </div>\n          </fieldset>\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"listDescription\">Description</label>\n            <div class=\"controls\">\n              <textarea class=\"input-large\" id=\"listDescription\"></textarea>\n              <p class=\"help-text\">Optional. Maximum 100 characters.</p>\n            </div>\n          </fieldset>\n          <fieldset class=\"control-group\">\n            <label class=\"control-label\" for=\"listPrivacy\">Privacy</label>\n            <div class=\"controls\">\n              <div class=\"control-list\">\n                <label class=\"checkbox\">\n                  <input name=\"listPrivacy\" id=\"listPublic\" type=\"checkbox\">\n                  Public <small>anyone can follow this list</small>\n                </label>\n                <label class=\"checkbox\">\n                  <input name=\"listPrivacy\" id=\"listPrivate\" type=\"checkbox\">\n                  Private <small>Only you can access this list</small>\n                </label>\n              </div>\n            </div>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn\" href=\"#\" data-modal=\"list-new-add-members\">Next</a>\n    </div>\n  </div>\n</div>",
            "modal_list_new_add_members": "\n\n<div class=\"modal-overlay list-new-add-members\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>Add members to list</h2>\n      <form class=\"modal-search\">\n        <!-- NOTE: fallback to jquery for placeholder? -->\n        <input type=\"text\" class=\"search\" id=\"\" placeholder=\"Search for people to add to this list\" />\n      </form>\n    </div>\n    <div class=\"modal-body modal-scroll\">\n      <div class=\"placeholder\">\n        <p>\n          <strong>You don't have members in your list yet!</strong><br />\n          Search for a username, first or last name, business, or brand to add as members of this list.\n        </p>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn js-action-dismiss\" href=\"#\">Create list</a>\n      <a class=\"btn\" href=\"#\">Back</a>\n    </div>\n  </div>\n</div>",
            "modal_message_new": "<div class=\"modal-overlay message-new\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>New message</h2>\n    </div>\n    <form class=\"tweet-form\">\n      <div class=\"message-to\">\n        <img src=\"http://placehold.it/24x24\" alt=\"\">\n        <input type=\"text\" placeholder=\"Message anyone who follows you\">\n      </div>\n      <textarea class=\"tweetbox\"></textarea>\n      <button class=\"btn primary-btn\" type=\"submit\">Send</button>\n      <span class=\"tweet-count\">140</span>\n    </form>\n  </div>\n</div>",
            "modal_message_thread": "\n\n<div class=\"modal-overlay message-thread\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>Message Full name <small>@username</small></h2>\n    </div>\n    <div class=\"modal-body modal-scroll\">\n\n     \n      <div class=\"messages\">\n        <div class=\"message-item received\">\n          <img class=\"avatar size48\">\n          <div class=\"content\">\n            <p>Sed posuere consectetur est at lobortis. Etiam porta sem malesuada magna mollis euismod. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>\n            <small class=\"time\">8/1/11 9:00am</small>\n          </div>\n        </div>\n        <div class=\"message-item sent\">\n          <img class=\"avatar size48\">\n          <div class=\"content\">\n            <p>Sed posuere consectetur est at lobortis.</p>\n            <small class=\"time\">8/1/11 9:00am</small>\n          </div>\n        </div>\n        <div class=\"message-item received\">\n          <img class=\"avatar size48\">\n          <div class=\"content\">\n            <p>Sed posuere consectetur est at lobortis. Etiam porta sem malesuada magna mollis euismod. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>\n            <small class=\"time\">8/1/11 9:00am</small>\n          </div>\n        </div>\n        <div class=\"message-item sent\">\n          <img class=\"avatar size48\">\n          <div class=\"content\">\n            <p>Sed posuere consectetur est at lobortis.</p>\n            <small class=\"time\">8/1/11 9:00am</small>\n          </div>\n        </div>\n        <div class=\"message-item received\">\n          <img class=\"avatar size48\">\n          <div class=\"content\">\n            <p>Sed posuere consectetur est at lobortis. Etiam porta sem malesuada magna mollis euismod. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.</p>\n            <small class=\"time\">8/1/11 9:00am</small>\n          </div>\n        </div>\n        <div class=\"message-item sent\">\n          <img class=\"avatar size48\">\n          <div class=\"content\">\n            <p>Sed posuere consectetur est at lobortis.</p>\n            <small class=\"time\">8/1/11 9:00am</small>\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div class=\"modal-footer\">\n      <form class=\"tweet-form\">\n        <textarea class=\"tweetbox\"></textarea>\n        <button class=\"btn primary-btn\" type=\"submit\">Send message</button>\n        <span class=\"tweet-count\">140</span>\n      </form>\n    </div>\n  </div>\n</div>",
            "modal_profile_card": "\n\n<div class=\"modal-overlay profile-modal\">\n  <div class=\"modal\">\n    <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n    {{>profile_pane}}\n  </div>\n</div>",
            "modal_reply": "\n\n<div class=\"modal-overlay tweet-reply\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-action-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n    </div>\n\n    {{>stream_tweet}}\n\n    <div class=\"in-reply-to\">\n      <h4>In reply to</h4>\n    </div>\n\n    <form class=\"tweet-form\">\n      <textarea class=\"tweetbox\"></textarea>\n      <div class=\"tweet-buttons\">\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-hash\"></i></a>\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-at\"></i></a>\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-camera\"></i></a>\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-geo\"></i></a>\n      </div>\n      <button class=\"btn primary-btn\" type=\"submit\">Tweet</button>\n      <span class=\"tweet-count\">140</span>\n    </form>\n  </div>\n</div>",
            "modal_retweet": "\n\n<div class=\"modal-overlay tweet-retweet\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-action-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n      <h2>Retweet this to your followers?</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <div class=\"modal-tweet-wrapper\">\n          Tweet here, please!\n        </div>\n        <div class=\"modal-inner-footer clearfix\">\n          <a class=\"btn primary-btn\" href=\"#\">Retweet</a>\n          <p class=\"learn-more\"><a class=\"muted\" href=\"#\">Learn more about Retweets</a></p>\n        </div>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <a class=\"btn primary-btn\" href=\"#\">Retweet</a>\n      <a class=\"btn js-action-dismiss\" href=\"#\">Cancel</a>\n    </div>\n  </div>\n</div>",
            "modal_shortcuts": "\n\n<div class=\"modal-overlay shortcuts\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-action-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n      <h2>Keyboard shortcuts</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"keyboard-shortcuts clearfix\">\n        <dl>\n          <dt>Actions</dt>\n          <dd><strong>f</strong> <span>: favorite</span></dd>\n          <dd><strong>r</strong> <span>: reply</span></dd>\n          <dd><strong>t</strong> <span>: retweet</span></dd>\n          <dd><strong>m</strong> <span>: direct message</span></dd>\n          <dd><strong>n</strong> <span>: new Tweet</span></dd>\n          <dd><strong>enter</strong> <span>: toggle details pane</span></dd>\n        </dl>\n        <dl>\n          <dt>Navigation</dt>\n          <dd><strong>?</strong> <span>: this menu</span></dd>\n          <dd><strong>j</strong> <span>: next Tweet</span></dd>\n          <dd><strong>k</strong> <span>: previous Tweet</span></dd>\n          <dd><strong>space</strong> <span>: page down</span></dd>\n          <dd><strong>/</strong> <span>: search</span></dd>\n          <dd><strong>.</strong> <span>: load new Tweets</span></dd>\n        </dl>\n        <dl>\n          <dt>Timelines</dt>\n          <dd><strong>g h</strong> <span>: <u>h</u>ome</span></dd>\n          <dd><strong>g r</strong> <span>: @me</span></dd>\n          <dd><strong>g a</strong> <span>: <u>a</u>ctivity</span></dd>\n          <dd><strong>g p</strong> <span>: <u>p</u>rofile</span></dd>\n          <dd><strong>g f</strong> <span>: <u>f</u>avorites</span></dd>\n          <dd><strong>g m</strong> <span>: <u>m</u>essages</span></dd>\n          <dd><strong>g u</strong> <span>: go to <u>u</u>ser</span></dd>\n        </dl>\n      </div>\n    </div>\n  </div>\n</div>",
            "modal_switch_accounts": "\n\n<div class=\"modal-overlay switch-accounts\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a href=\"#\" class=\"dismiss js-action-dismiss\"><i class=\"close-large\"></i></a>\n      <h2>Switch accounts</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <div class=\"account-switcher clearfix\">\n          <a class=\"active\" href=\"#\">\n            <img class=\"avatar size73\" src=\"http://placehold.it/73x73\" alt=\"\" />\n            <strong>@longusername</strong>\n          </a>\n          <a href=\"#\">\n            <img class=\"avatar size73\" src=\"http://placehold.it/73x73\" alt=\"\" />\n            <strong>@user</strong>\n          </a>\n          <a href=\"#\">\n            <img class=\"avatar size73\" src=\"http://placehold.it/73x73\" alt=\"\" />\n            <strong>@leUser</strong>\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
            "modal_trends_change": "\n\n<div class=\"modal-overlay change-trends\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-action-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n      <h2>Change trends location</h2>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"modal-inner\">\n        <div class=\"local-trends\">\n          <div class=\"local-trends-breadcrumb\">\n            <ul>\n              <li><a class=\"trend-breadcrumb-location\" data-woeid=\"1\" href=\"#\">Worldwide</a></li>\n              <li class=\"divider\">/</li>\n              <li><a class=\"trend-breadcrumb-location selected\" data-woeid=\"23424977\" href=\"#\">United States <i class=\"checkmark\"></i></a></li>\n            </ul>\n          </div>\n          <div class=\"clearfix\">\n            <ul class=\"local-trends-list\">\n              <li><a data-woeid=\"23424747\" href=\"#\">Argentina</a></li>\n              <li><a data-woeid=\"23424748\" href=\"#\">Australia</a></li>\n              <li><a data-woeid=\"23424768\" href=\"#\">Brazil</a></li>\n              <li><a data-woeid=\"23424775\" href=\"#\">Canada</a></li>\n              <li><a data-woeid=\"23424782\" href=\"#\">Chile</a></li>\n              <li><a data-woeid=\"23424787\" href=\"#\">Colombia</a></li>\n              <li><a data-woeid=\"23424800\" href=\"#\">Dominican Republic</a></li>\n              <li><a data-woeid=\"23424801\" href=\"#\">Ecuador</a></li>\n              <li><a data-woeid=\"23424819\" href=\"#\">France</a></li>\n              <li><a data-woeid=\"23424829\" href=\"#\">Germany</a></li>\n              <li><a data-woeid=\"23424848\" href=\"#\">India</a></li>\n            </ul>\n            <ul class=\"local-trends-list\">\n              <li><a data-woeid=\"23424846\" href=\"#\">Indonesia</a></li>\n              <li><a data-woeid=\"23424803\" href=\"#\">Ireland</a></li>\n              <li><a data-woeid=\"23424853\" href=\"#\">Italy</a></li>\n              <li><a data-woeid=\"23424856\" href=\"#\">Japan</a></li>\n              <li><a data-woeid=\"23424901\" href=\"#\">Malaysia</a></li>\n              <li><a data-woeid=\"23424900\" href=\"#\">Mexico</a></li>\n              <li><a data-woeid=\"23424909\" href=\"#\">Netherlands</a></li>\n              <li><a data-woeid=\"23424916\" href=\"#\">New Zealand</a></li>\n              <li><a data-woeid=\"23424908\" href=\"#\">Nigeria</a></li>\n              <li><a data-woeid=\"23424919\" href=\"#\">Peru</a></li>\n              <li><a data-woeid=\"23424934\" href=\"#\">Philippines</a></li>\n            </ul>\n            <ul class=\"local-trends-list\">\n              <li><a data-woeid=\"23424948\" href=\"#\">Singapore</a></li>\n              <li><a data-woeid=\"23424942\" href=\"#\">South Africa</a></li>\n              <li><a data-woeid=\"23424950\" href=\"#\">Spain</a></li>\n              <li><a data-woeid=\"23424954\" href=\"#\">Sweden</a></li>\n              <li><a data-woeid=\"23424969\" href=\"#\">Turkey</a></li>\n              <li><a data-woeid=\"23424738\" href=\"#\">United Arab Emirates</a></li>\n              <li><a data-woeid=\"23424975\" href=\"#\">United Kingdom</a></li>\n              <li><a class=\"selected\" data-woeid=\"23424977\" href=\"#\">United States <i class=\"checkmark\"></i></a></li>\n              <li><a data-woeid=\"23424982\" href=\"#\">Venezuela</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
            "modal_tweet": "\n\n<div class=\"modal-overlay new-tweet\">\n  <div class=\"modal\">\n    <div class=\"modal-header\">\n      <a class=\"dismiss js-action-dismiss\" href=\"#\"><i class=\"close-large\"></i></a>\n      <h2>What's happening?</h2>\n    </div>\n    <form class=\"tweet-form\">\n      <textarea class=\"tweetbox\"></textarea>\n      <div class=\"tweet-buttons\">\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-hash\"></i></a>\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-at\"></i></a>\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-camera\"></i></a>\n        <a class=\"btn\" href=\"#\"><i class=\"tweet-geo\"></i></a>\n      </div>\n      <button class=\"btn primary-btn\" type=\"submit\">Tweet</button>\n      <span class=\"tweet-count\">140</span>\n    </form>\n  </div>\n</div>",
            "modals": "\n\n\n{{>modal_tweet}}\n\n\n{{>modal_reply}}\n{{>modal_retweet}}\n\n\n{{>modal_list_new}}\n{{>modal_list_new_add_members}}\n{{>modal_list_edit}}\n{{>modal_list_edit_members}}\n{{>modal_list_add_to}}\n\n\n{{>modal_trends_change}}\n\n\n{{>modal_switch_accounts}}\n\n\n{{>modal_shortcuts}}\n\n\n{{>modal_message_new}}\n{{>modal_message_thread}}\n{{>modal_dms}}\n\n\n{{>modal_profile_card}}\n\n\n{{>modal_go_to_user}}\n\n\n{{>modal_account_changes}}",
            "gallery": "{{>mobile_gallery_all}}\n{{>dialogs/mobile_gallery_download_dialog}}\n{{>footer}}",
            "generic_footer": "<div class=\"footer inline-list\">\n  <ul>\n    <li><a href=\"{{about_path}}\">About</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{support_path}}\">Help</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{blog_path}}\">Blog</a><span class=\"dot divider\"> ·</span></li>\n{{^is_slim}}\n    {{#decider_mobile_download_gallery}}\n      <li><a href=\"{{mobile_gallery_path}}\">Mobile</a><span class=\"dot divider\"> ·</span></li>\n    {{/decider_mobile_download_gallery}}\n{{/is_slim}}\n    <li><a href=\"{{status_path}}\">Status</a><span class=\"dot divider\"> ·</span></li>\n{{#decider_trends_page}}\n    <li><a href=\"{{trends_path}}\">Trends</a><span class=\"dot divider\"> ·</span></li>\n{{/decider_trends_page}}\n    <li><a href=\"{{jobs_path}}\">Jobs</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{tos_path}}\">Terms</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{privacy_path}}\">Privacy</a><span class=\"dot divider\"> ·</span></li>\n{{^is_slim}}\n    {{#logged_in}}\n        <li><a href=\"#\" id=\"keyboard-shortcut-trigger\">Shortcuts</a><span class=\"dot divider\"> ·</span></li>\n    {{/logged_in}}\n{{/is_slim}}\n    <li><a href=\"{{advertisers_path}}\">Advertisers</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{businesses_path}}\">Businesses</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{partnerships_path}}\">Media</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{developers_path}}\">Developers</a><span class=\"dot divider\"> ·</span></li>\n    <li><a href=\"{{resources_path}}\">Resources</a><span class=\"dot divider\"> ·</span></li>\n    <li><span class=\"copyright\">© {{year}} Twitter</span></li>\n  </ul>\n  {{#is_mobile}}\n    <p class=\"mobile-option\">\n      View Twitter in: Standard - <a href=\"{{mobile_path}}\">Mobile</a>\n    </p>\n  {{/is_mobile}}\n</div>\n",
            "disabled_dropdown": "<ul class=\"dropdown-menu\" tabindex=\"-1\">\n  <li class=\"dropdown-caret\">\n    <span class=\"caret-outer\"></span>\n    <span class=\"caret-inner\"></span>\n  </li>\n  <li class=\"geo-not-enabled-yet\">\n    <h2>Add a location to your Tweets</h2>\n    <p>\n      When you tweet with a location, Twitter stores that location. \n      You can switch location on/off before each Tweet and always have the option to delete your location history.\n      <a href=\"http://support.twitter.com/forums/26810/entries/78525\" target=\"_blank\">Learn more</a>\n    </p>\n    <div>\n      <button type=\"button\" class=\"geo-turn-on btn primary-btn\">Turn location on</button>\n      <button type=\"button\" class=\"geo-not-now btn-link\">Not now</button>\n    </div>\n  </li>\n</ul>\n",
            "dropdown_places": "{{#places}}\n  <li class=\"dropdown-link geo-place-result geo-focusable\" data-place-id=\"{{id}}\">{{#is_first_place}}<i class=\"checkmark\"></i>{{/is_first_place}}{{full_name}}</li>\n{{/places}}\n<li class=\"geo-place-result dropdown-divider\"></li>\n",
            "dropdown_search_results": "{{#places}}\n  <li class=\"dropdown-link geo-search-result geo-focusable\" data-place-id=\"{{id}}\">{{full_name}}</li>\n{{/places}}\n{{^places}}\n  <li class=\"dropdown-link geo-search-result geo-no-search-results\">No search results</li>\n{{/places}}\n<li class=\"geo-search-result dropdown-divider\"></li>\n",
            "enabled_dropdown": "<ul class=\"dropdown-menu\" tabindex=\"-1\">\n  <li class=\"dropdown-caret\">\n    <span class=\"caret-outer\"></span>\n    <span class=\"caret-inner\"></span>\n  </li>\n  <li class=\"geo-query-location\">\n    <input type=\"text\" autocomplete=\"off\" placeholder=\"Search for a neighborhood or city\">\n    <i class=\"generic-search\"></i>\n  </li>\n  <li class=\"geo-dropdown-status\"></li>\n  <li class=\"dropdown-link geo-turn-off-item geo-focusable\">\n    <i class=\"close\"></i>Turn off location\n  </li>\n</ul>\n",
            "geo_picker": "<div class=\"geo-picker\">\n  <button class=\"btn geo-picker-btn\" type=\"button\" tabindex=\"-1\">\n    <i class=\"tweet-geo\"><span class=\"hidden-elements\">Add location</span></i> <span class=\"caret\"></span>\n  </button>\n  <span class=\"dropdown-container\"></span>\n  <span class=\"geo-status\"></span>\n  <input type=\"hidden\" name=\"place_id\">\n</div>\n",
            "geo_control": "<span class=\"geo-control\">\n  <a href=\"#\" class=\"geo-location\">\n    <span class=\"geo-icon\"> </span>\n    {{^suppress_geo_text}}<span class=\"geo-text\"></span>{{/suppress_geo_text}}<span class=\"geo-dropdown-icon\"> </span>\n  </a>\n</span>",
            "geo_location_dropdown": "<div class=\"geo-location-dropdown\">\n  <div class=\"geo-location-dropdown-divot\"> </div>\n  <ul class=\"geo\">\n    <li class=\"query-location\">\n      <div class=\"query-location-container\">\n        <input class=\"query-location-input\" type=\"text\" autocomplete=\"off\" />\n        <span class=\"glass\"> </span>\n        <span class=\"help-text\">Search for a neighborhood or city</span>\n      </div>\n      <div class=\"location-error\"></div>\n    </li>\n    <li class=\"geo-turn-off-item focusable\"><a class=\"geo\" href=\"#\">\n      <span class=\"geo-turn-off-icon\"> </span>\n      Turn off location\n    </a></li>\n  </ul>\n</div>\n",
            "geo_location_dropdown_items": "{{#places}}\n  <li class=\"override-location focusable{{#for_search_results}} location-search-result{{/for_search_results}}\">\n    <a class=\"geo\" href=\"#\" data-place-id=\"{{id}}\">\n      <span class=\"menu-item-icon\"> </span>\n      {{full_name}}\n    </a>\n  </li>\n{{/places}}\n",
            "geo_promo_dialog": "<div id=\"geo_promo_dialog_content\">\n  <div class=\"tiny-map\"> </div>\n  <div id=\"geo_dialog_descr\">\n    Ever had something you wanted to share (\"fireworks!\", \"party!\", \"ice cream truck!\", or \"quicksand...\") that would be better with a location? \n    By turning on this feature, you can include location information like neighborhood, town, or exact point when you tweet.<br><br>\n    When you tweet with a location, Twitter stores that location. \n    You can switch location on/off before each Tweet and always have the option to delete your location history. \n    <a id=\"geo_learn_more\" href=\"http://support.twitter.com/forums/26810/entries/78525\" target=\"_blank\">Learn more</a>\n  </div>\n  <div>\n    <button id=\"geo_turn_location_on\" class=\"btn btn-default\">Turn location on</button>\n    <a href=\"#\" id=\"geo_not_now\" class=\"geo_dialog_close\">Not now</a>\n    <span class=\"geo-progress\"> </span>\n  </div>\n  <div class=\"geo-unable-to-turn-location-on\">\n    Unable to turn location on at this time. Please try again later.\n  </div>\n</div>",
            "getting_started_follow": "<li class=\"follow\">\n  <span>Follow your first 10 accounts</span>\n  <ul>\n    <li><a href=\"{{who_to_follow_interests_path}}\">Browse popular accounts by interest</a></li>\n    <li><a href=\"{{who_to_follow_import_path}}\">Look for your friends</a></li>\n    <li class=\"search\"><form class=\"who-to-follow-search\" action=\"{{who_to_follow_search_form_path}}\" method=\"GET\"><input type=\"text\" value=\"\" name=\"q\" placeholder=\"find users by name\" /> <div class=\"submit button\">Search</div></form></li>\n  </ul>\n</li>",
            "getting_started_mobile": "<li class=\"mobile\">\n  <span>Get Twitter on your phone</span>\n  <ul>\n    <li><a href=\"{{devices_path}}\">Set up mobile notifications</a></li>\n    {{#decider_mobile_download_gallery}}\n    <li><a href=\"{{mobile_gallery_path}}\">Download a Twitter application to your phone</a></li>\n    {{/decider_mobile_download_gallery}}\n  </ul>\n</li>\n",
            "getting_started_profile": "<li class=\"profile\">\n  <span>Set up your profile</span>\n  <ul>\n    <li><a href=\"{{settings_profile_path}}\">Upload a profile picture</a></li>\n    <li><a href=\"{{settings_profile_path}}\">Write a short bio</a></li>\n  </ul>\n</li>",
            "getting_started_tweet": "<li class=\"tweet\">\n  <span>Write your first Tweet!</span>\n  <ul>\n    <li><a href=\"#\" class=\"new-tweet\">Tell the world what's happening in 140 characters or less</a></li>\n  </ul>\n</li>",
            "global_nav_saved_search": "<li><a href=\"{{saved_search_path}}\" data-search-query=\"{{query}}\" data-query-source=\"{{search_query_source}}\">{{name}}</a></li>\n",
            "government_account_search": "<div class=\"government-account-search-outer\">\n  <div class=\"header-inner\">\n    <h2>\n      <span class=\"js-stream-title\">{{stream_title}}</span>\n\n      <small class=\"view-toggler js-view-toggler\"></small>\n    </h2>\n  </div>\n\n  <div class=\"government-account-search-inner\">\n    <h3>Find your elected government representatives</h3>\n    <form class=\"js-government-account-search\" action=\"#\">\n      <input type=\"text\" placeholder=\"Enter your zip code\" name=\"zip\" {{#zip_code}}value=\"{{zip_code}}\"{{/zip_code}}>\n      <input type=\"submit\" class=\"btn js-zip-code-btn\" value=\"Search\">\n    </form>\n  </div>\n</div>\n",
            "guest_modal_signup": "\n<div id=\"guest-modal-signup\">\n  <h2>Don't miss any updates on what matters to you. Sign up today and follow these accounts:</h2>\n\n  <ul class=\"users\">\n\t{{#user_data_list}}\n\t\t{{>user_small_list_item}}\n\t{{/user_data_list}}\n  </ul>\n\n  <div class=\"guest-modal-signup-box front-signup\">\n\t  <h3>New to Twitter? <em>Join today!</em></h3>\n\t  {{>partial_signup_form}}\n  </div>\n\n</div>\n",
            "pip": "{{#icon}}\n  <div class=\"js-pip stork-pip stork-pip-right\">\n    <div class=\"stork-pulse\"></div>\n    <i class=\"stork-icon {{icon}}\"></i>\n  </div>\n{{/icon}}\n\n{{^icon}}\n  <div class=\"js-pip module stork stork-open\">\n    <div class=\"contrast-flex-module\">\n      <div class=\"contrast-module-header\">\n        {{#expand_photo}}\n          {{#prompt}}\n            There’s a photo in this Tweet. Check it out.\n          {{/prompt}}\n          {{#explain}}\n            <p>You’ll also find music, videos, and replies inside Tweets, so keep expanding them.</p>\n          {{/explain}}\n        {{/expand_photo}}\n\n        {{#expand_video}}\n          {{#prompt}}\n            There’s a video in this Tweet. Check it out.\n          {{/prompt}}\n          {{#explain}}\n            You’ll also find photos, music, and replies inside Tweets, so keep expanding them.\n          {{/explain}}\n        {{/expand_video}}\n\n        {{#retweet_profile}}\n          {{#explain}}\n            \n            <p>A <strong>retweet</strong> is a Tweet that was shared by someone you’re following.</p> <p>The author of that Tweet may be someone you don’t follow, so it’s a great way to check out somebody new.</p>\n          {{/explain}}\n        {{/retweet_profile}}\n\n        {{#hashtag}}\n          {{#explain}}\n            <p>The # symbol makes this word a <strong>hashtag</strong>. People add hashtags to their Tweets to give them topics.</p> <p>Click on it to find other Tweets with the same hashtag.</p>\n          {{/explain}}\n        {{/hashtag}}\n\n        {{#mention}}\n          {{#explain}}\n            <p>The @ symbol is used to <strong>mention</strong> another person by username. Mentions call attention to someone and can start a conversation.</p> <p>Click on it to see that user’s profile.</p>\n          {{/explain}}\n        {{/mention}}\n      </div>\n\n      <div class=\"pointer\"></div>\n\n      <div class=\"contrast-module-footer\">\n      </div>\n    </div>\n  </div>\n{{/icon}}",
            "home": "{{>dialogs/search_operators_shell}}\n<div id=\"search-home\" class=\"main\">\n  <div class=\"search basic-search\">\n    <h1>See what’s happening <strong>right now</strong></h1>\n    <form id=\"search-home-form\" action=\"{{form_search_results_path}}\" method=\"GET\">\n      <div class=\"input-wrapper\">\n        <input id=\"search-home-input\" class=\"search-input\" autocomplete=\"off\" spellcheck=\"false\" value=\"\" name=\"q\" type=\"text\" placeholder=\"\" />\n        {{#swift_typeahead}}\n          {{>swift_typeahead_dropdown}}\n        {{/swift_typeahead}}\n      </div>\n      <div class=\"button btn primary-btn submit selected search-btn\">Search</div>\n      {{>search_help_operators}}\n    </form>\n    {{>dashboard_trends}}\n  </div>\n  <div class=\"bottompart\">\n    {{>footer}}\n  </div>\n</div>",
            "home_dashboard": "{{^rendering_on_server}}\n  <div class=\"component\">\n  {{>dashboard_your_profile}}\n  <hr/>\n  </div>\n\n  <div class=\"component\">\n  {{>generic_footer}}\n  </div>\n{{/rendering_on_server}}",
            "follower_stat": "\n  {{#number_one}}<strong>{{localized_number}}</strong> Follower{{/number_one}}\n  {{#number_other}}<strong>{{localized_number}}</strong> Followers{{/number_other}}\n",
            "following_stat": "\n  {{#number_one}}<strong>{{localized_number}}</strong> Following{{/number_one}}\n  {{#number_other}}<strong>{{localized_number}}</strong> Following{{/number_other}}\n",
            "tweet_stat": "\n  {{#number_one}}<strong>{{localized_number}}</strong> Tweet{{/number_one}}\n  {{#number_other}}<strong>{{localized_number}}</strong> Tweets{{/number_other}}\n",
            "import_disclaimer": "{{^in_welcome_flow}}\nChoosing a service will open a window for you to log in securely and import your contacts to Twitter. You'll only find users who have allowed their accounts to be found by email address.  We won't email anyone without your consent, but we may use contact information to make Who To Follow suggestions.  You can <a href=\"#\" class=\"js-wipe-addressbook\">remove</a> your contacts from Twitter at any time.\n{{/in_welcome_flow}}\n{{#in_welcome_flow}}\nChoosing a service will open a window for you to log in securely and import your contacts to Twitter. You'll only find users who have allowed their accounts to be found by email address.  We won't email anyone without your consent, but we may use contact information to make Who To Follow suggestions.  You can remove your contacts from Twitter at any time.\n{{/in_welcome_flow}}\n",
            "in_reply_to": "<div class=\"permalink-inner in-reply-to\" data-replied-tweet-id=\"{{id}}\">\n  <div class=\"tweets-wrapper\">\n    {{#has_multiple_ancestors}}\n      <div class=\"ancestors-window-container\">\n        <div class=\"ancestors-window\">\n          {{#ancestors_without_in_reply_to}}\n            {{>simple_tweet}}\n          {{/ancestors_without_in_reply_to}}\n        </div>\n      </div>\n    {{/has_multiple_ancestors}}\n    {{>simple_tweet}}\n  </div>\n</div>\n",
            "inline_media_icon": "<i class=\"js-sm-icon {{#is_image}} sm-image{{/is_image}} {{#is_video}} sm-video{{/is_video}} {{#is_summary}} sm-summary{{/is_summary}} {{#is_audio}} sm-audio{{/is_audio}} {{#is_geo}} sm-geo{{/is_geo}} {{#is_convo}} sm-convo{{/is_convo}} {{#is_embed}} sm-embed{{/is_embed}}\"\n{{#icon}} data-media-class=\"{{icon}}\"{{/icon}} {{#media_name}} data-media-type=\"{{media_name}}\"{{/media_name}}></i>",
            "inline_reply_box": "<div class=\"inline-reply-tweetbox\">\n  <img class=\"inline-reply-user-image avatar size{{profile_image_size}}\" src=\"{{profile_image_url}}\">\n</div>",
            "invite_contacts": "<div class=\"invite-contacts-component\">\n  <div class=\"people-chooser-list\">\n\n    <div class=\"select-all-people\">\n      <label class=\"contacts-select-all\">\n        <input type=\"checkbox\" name=\"select_all\" id=\"select-all-contacts\">\n        {{select_all_text}}\n      </label>\n    </div>\n\n    <div class=\"contacts\">\n      {{#contacts}}\n        <label class=\"contact-item\">\n          <input type=\"checkbox\" name=\"emails[]\" value=\"{{email}}\"\n            id=\"contact-box-{{index}}\">\n          <span class=\"contact-item-name\" title=\"{{name}}\">{{truncated_name}}</span>\n          <span class=\"contact-item-email\" title=\"{{email}}\"><{{truncated_email}}></span>\n        </label>\n      {{/contacts}}\n    </div>\n\n    <div class=\"list-editor\">\n      <div class=\"save\">\n        <div class=\"invite-preview-link\"><a href=\"{{preview_link_url}}\" class=\"js-popup\" name=\"invitation_email_preview\" data-popup=\"height=450,width=670\">See what you'll send them</a>.</div>\n        <button type=\"button\" class=\"btn invite-contacts-button disabled\">Invite these friends</button>\n      </div>\n    </div>\n\n  </div>\n</div>",
            "invite_contacts_header": "<div class=\"contact-import-invite-header\">\n  <p>\n    <span>{{count}} of your contacts aren’t on Twitter yet. We’ll invite the ones you select here.</span>\n  </p>\n</div>",
            "invite_friends": "<form class=\"invite-friends\">\n  <table class=\"flex-table\">\n    <tbody>\n      <tr>\n        <td class=\"flex-table-primary\">\n          <div class=\"flex-table-form\">\n            \n            \n            <textarea class=\"flex-table-input\" name=\"addresses\" rows=\"1\" placeholder=\"Invite friends to Twitter via email\"></textarea>\n          </div>\n        </td>\n        <td class=\"flex-table-secondary\">\n          <button class=\"btn flex-table-btn js-submit\" type=\"submit\">Invite friends</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <p class=\"fine-print\">\n    Lots of people to invite? Separate multiple email addresses with commas.<br>\n    <a href=\"{{invitation_email_preview_path}}\" class=\"js-popup\" name=\"invitation_email_preview\" data-popup=\"height=550,width=750\">See what you'll send them.</a>\n  </p>\n</form>",
            "japanese_ad": "<div id=\"custom_49\" class=\"eTologyToken\"></div>",
            "japanese_ad_iframe": "{{#show_japanese_ad}}\n  <iframe id=\"j_ad\" src=\"//web-jp.ad-v.jp/adam/detect?tag=htm&cat=twitter.all&format=side_banner\" width=\"300\" height=\"185\" frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"></iframe>\n{{/show_japanese_ad}}",
            "javascript_includes": "\n{{!\n\n  IMPORTANT:\n  Do not add JavaScript code directly to this file. If you need to add new code, load it with Loadrunner\n  or inline it using inline_script.\n\n}}\n\n<script type=\"text/javascript\">WATCH('loadrunner', function() {\n    {{{loadrunner_script}}}\n    {{{loadrunner_plugin_json}}}\n    {{{loadrunner_plugin_css}}}\n    {{{loadrunner_plugin_signal}}}\n});</script><script>WATCH.end('loadrunner');</script>\n\n{{^logged_in}}\n  {{#home_page}}\n    <script type=\"text/javascript\">WATCH('javascript_logged_out', function() {\n      {{>mini_scribe}}\n      {{{cookie_disabler_selenium}}}\n      {{{logged_out_js}}}\n    });</script>\n    <script type=\"text/javascript\">WATCH.end('javascript_logged_out');</script>\n  {{/home_page}}\n{{/logged_in}}\n\n{{#logged_in}}\n  {{#render_page_content}}\n  <script>WATCH('actionQueue', function() {\n    {{{action_queue_js}}}\n  });</script><script>WATCH.end('actionQueue');</script>\n  {{/render_page_content}}\n{{/logged_in}}\n\n<script>WATCH('boot', function() {\n  using.cssPath = '{{{loadrunner_csspath}}}';\n  using.path = '{{{loadrunner_modpath}}}';\n  using.autoLoad = {{{loadrunner_autoload}}};\n\n  {{#inline_bootstrap_data}}\n    provide('boot/bootstrap_data', function(exports) {\n      exports({{{bootstrap_data_json}}});\n    });\n  {{/inline_bootstrap_data}}\n\n  {{{boot_js}}}\n  {{{inline_request_log_selenium}}}\n  using('boot/init', function(boot) {\n    var data = {{{boot_data_json}}};\n    boot.init(data);\n  });\n\n  {{^logged_in}}\n    {{#home_page}}\n      {{^front_page_full_signup_256_old_signup_form}}\n        using('bundle/signup').load();\n      {{/front_page_full_signup_256_old_signup_form}}\n    {{/home_page}}\n  {{/logged_in}}\n\n});</script><script>WATCH.end('boot');</script>\n\n{{^logged_in}}\n  {{#home_page}}\n    {{^front_page_full_signup_256_old_signup_form}}\n      {{>banned_passwords}}\n    {{/front_page_full_signup_256_old_signup_form}}\n  {{/home_page}}\n{{/logged_in}}\n\n\n{{{admin_js}}}\n\n<!--[if lte IE 6]>\n  <script>using('bundle/ie6').load();</script>\n<![endif]-->\n",
            "keyboard_shortcuts": "\n<div class=\"keyboard-shortcuts\" id=\"keyboard-shortcut-menu\">\n  {{#logged_in}}\n    <table class=\"modal-table\">\n      <thead>\n        <tr>\n          <th colspan=\"2\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">F</b>\n          </td>\n          <td class=\"shortcut-label\">Favorite</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">R</b>\n          </td>\n          <td class=\"shortcut-label\">Reply</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">T</b>\n          </td>\n          <td class=\"shortcut-label\">Retweet</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">M</b>\n          </td>\n          <td class=\"shortcut-label\">Direct message</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">N</b>\n          </td>\n          <td class=\"shortcut-label\">New Tweet</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">Enter</b>\n          </td>\n          <td class=\"shortcut-label\">Open Tweet details</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">L</b>\n          </td>\n          <td class=\"shortcut-label\">Close all open Tweets</td>\n        </tr>\n      </tbody>\n    </table>\n    <table class=\"modal-table\">\n      <thead>\n        <tr>\n          <th colspan=\"2\">Navigation</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">?</b>\n          </td>\n          <td class=\"shortcut-label\">This menu</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">J</b>\n          </td>\n          <td class=\"shortcut-label\">Next Tweet</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">K</b>\n          </td>\n          <td class=\"shortcut-label\">Previous Tweet</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">Space</b>\n          </td>\n          <td class=\"shortcut-label\">Page down</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">/</b>\n          </td>\n          <td class=\"shortcut-label\">Search</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">.</b>\n          </td>\n          <td class=\"shortcut-label\">Load new Tweets</td>\n        </tr>\n      </tbody>\n    </table>\n    <table class=\"modal-table\">\n      <thead>\n        <tr>\n          <th colspan=\"2\">Timelines</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">H</b>\n          </td>\n          <td class=\"shortcut-label\">Home</td>\n        </tr>\n\n        {{#enable_activity}}\n            <tr>\n              <td class=\"shortcut\">\n                <b class=\"sc-key\">G</b> <b class=\"sc-key\">C</b>\n              </td>\n              <td class=\"shortcut-label\">Connect</td>\n            </tr>\n            <tr>\n              <td class=\"shortcut\">\n                <b class=\"sc-key\">G</b> <b class=\"sc-key\">A</b>\n              </td>\n              <td class=\"shortcut-label\">Activity</td>\n            </tr>\n            <tr>\n              <td class=\"shortcut\">\n                <b class=\"sc-key\">G</b> <b class=\"sc-key\">R</b>\n              </td>\n              <td class=\"shortcut-label\">Mentions</td>\n            </tr>\n        {{/enable_activity}}\n        {{^enable_activity}}\n            <tr>\n              <td class=\"shortcut\">\n                <b class=\"sc-key\">G</b> <b class=\"sc-key\">R</b>\n              </td>\n              <td class=\"shortcut-label\">Mentions</td>\n            </tr>\n        {{/enable_activity}}\n\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">D</b>\n          </td>\n          <td class=\"shortcut-label\">Discover</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">P</b>\n          </td>\n          <td class=\"shortcut-label\">Profile</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">F</b>\n          </td>\n          <td class=\"shortcut-label\">Favorites</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">L</b>\n          </td>\n          <td class=\"shortcut-label\">Lists</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">M</b>\n          </td>\n          <td class=\"shortcut-label\">Messages</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">S</b>\n          </td>\n          <td class=\"shortcut-label\">Settings</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">U</b>\n          </td>\n          <td class=\"shortcut-label\">Go to user...</td>\n        </tr>\n      </tbody>\n    </table>\n  {{/logged_in}}\n  {{^logged_in}}\n    <table class=\"modal-table\">\n      <tbody>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">Enter</b>\n          </td>\n          <td class=\"shortcut-label\">Open Tweet details</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">G</b> <b class=\"sc-key\">F</b>\n          </td>\n          <td class=\"shortcut-label\">Go to user...</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">?</b>\n          </td>\n          <td class=\"shortcut-label\">This menu</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">J</b>\n          </td>\n          <td class=\"shortcut-label\">Next Tweet</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">K</b>\n          </td>\n          <td class=\"shortcut-label\">Previous Tweet</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">Space</b>\n          </td>\n          <td class=\"shortcut-label\">Page down</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">/</b>\n          </td>\n          <td class=\"shortcut-label\">Search</td>\n        </tr>\n        <tr>\n          <td class=\"shortcut\">\n            <b class=\"sc-key\">.</b>\n          </td>\n          <td class=\"shortcut-label\">Load new Tweets</td>\n        </tr>\n      </tbody>\n    </table>\n  {{/logged_in}}\n</div>\n",
            "language_links": "<div class=\"module language-list\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-inner js-items-container\">\n      <div class=\"language inline-list\">\n        <form action=\"{{change_locale_path}}\" method=\"POST\">\n          <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n          <input type=\"hidden\" name=\"lang\" value=\"\">\n          {{#redirect}}\n          <input type=\"hidden\" name=\"redirect\" value=\"{{redirect}}\">\n          {{/redirect}}\n          <strong>Languages</strong>\n          {{#languages_by_own}}\n          <span class=\"dot\">·</span>\n          {{#current}}\n          <em class=\"current\">{{localized_name}}</em>\n          {{/current}}\n          {{^current}}\n          <a href=\"?lang={{code}}\" hreflang=\"{{code}}\">{{name}}</a>\n          {{/current}}\n          {{/languages_by_own}}\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "latest_tweet": "<div class=\"tweet latest-tweet js-actionable-tweet{{#hidden_by_activity}} sub-stream-item-hidden{{/hidden_by_activity}}\" data-tweet-id=\"{{id}}\" data-item-id=\"{{id}}\" data-screen-name='{{#user}}{{screen_name}}{{/user}}'>\n  <div class=\"tweet-content\">\n    <div class=\"tweet-row\">\n      {{>latest_tweet_timestamp}}:\n      {{#was_retweeted}}\n        <span class=\"retweet-icon\"></span>\n      {{{retweet_source_screen_name_link}}}\n      {{/was_retweeted}}\n       {{>tweet_text}}\n    </div>\n  </div>\n</div>\n",
            "latest_tweet_timestamp": "<a href=\"{{permalink_path}}\" class=\"latest-tweet-timestamp js-permalink\" title=\"{{explicit_timestamp}}\"><span class=\"_timestamp\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\">{{full_timestamp}}</span></a>",
            "boot": "{{#content_view}}\n  {{#javascript_module}}\n    {{{prerequisites}}}\n    <script>\n      using.path = '{{javascript_module_path}}';\n\n      {{{loadrunner_aliases}}}\n\n      using('debug/debug', function(debug) {\n        debug.enable({{js_debug}});\n        {{#js_debug}}window.DEBUG = debug;{{/js_debug}}\n\n        {{{setup_logging}}}\n\n        using(\n          '{{javascript_module}}',\n          'core/jquery',\n          {{#selenium}}'app/utils/request_logger',{{/selenium}}\n        function(page, ${{#selenium}}, requestLogger{{/selenium}}) {\n          var initData = {{{javascript_init_data}}};\n          {{#selenium}}\n            window.requestLogger = requestLogger;\n            requestLogger.initialize();\n            window.pageInitialOptions = initData;\n          {{/selenium}}\n          page(initData);\n          window.__swift_loaded = true;\n          window.swiftActionQueue && window.swiftActionQueue.flush($);\n          $(document).trigger('uiSwiftLoaded');\n          {{#track_ttft}}\n            window.ttft && window.ttft.recordMilestone('aq_empty_time',new Date().getTime());\n            using('app/utils/ttft',function(ttft){ttft.startAjaxTracking()});\n          {{/track_ttft}}\n        });\n      });\n    </script>\n  {{/javascript_module}}\n{{/content_view}}\n",
            "browser": "<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n\n{{^current_user}}\n  <meta name=\"description\" content=\"Instantly connect to what's most important to you. Follow your friends, experts, favorite celebrities, and breaking news.\">\n{{/current_user}}\n\n{{#dns_prefetch}}\n  <link rel=\"dns-prefetch\" href=\"{{.}}\">\n{{/dns_prefetch}}\n\n{{#include_ie9_meta}}\n  <link href=\"/favicons/favicon32x32.ico\" rel=\"shortcut icon\" type=\"image/x-icon\">\n{{/include_ie9_meta}}\n{{^include_ie9_meta}}\n  <link href=\"/favicons/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\">\n{{/include_ie9_meta}}\n\n{{#content_view}}\n  {{#provide_mobile_viewport}}\n    <meta name=\"viewport\" id=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n  {{/provide_mobile_viewport}}\n{{/content_view}}\n\n{{#content_view}}\n  {{#canonical_url}}\n    <link rel=\"canonical\" href=\"{{canonical_url}}\">\n  {{/canonical_url}}\n  {{^index_for_search}}\n    <meta name=\"robots\" content=\"noindex\">\n  {{/index_for_search}}\n{{/content_view}}",
            "css": "{{#current_user}}\n  <link rel=\"stylesheet\" href=\"{{core_css_bundle}}\" type=\"text/css\" media=\"screen\">\n{{/current_user}}\n{{^current_user}}\n  <link rel=\"stylesheet\" href=\"{{core_logged_out_css_bundle}}\" type=\"text/css\" media=\"screen\">\n{{/current_user}}\n\n{{#content_view}}\n  {{#include_more_css_early}}\n    <link rel=\"stylesheet\" href=\"{{more_css_bundle}}\" type=\"text/css\" media=\"screen\">\n  {{/include_more_css_early}}\n\n  {{#current_user}}\n    {{>user_css_t1}}\n    {{>bg_img_css}}\n  {{/current_user}}\n{{/content_view}}\n",
            "dialogs": "{{#include_gallery}}\n  {{>gallery/gallery}}\n{{/include_gallery}}\n\n<div class=\"modal-overlay\"></div>\n\n<div class=\"hidden-elements\">\n  <div id=\"flash-preload\"></div>\n  <iframe class=\"tweet-post-iframe\" name=\"tweet-post-iframe\"></iframe>\n\n  {{#include_tweet_dialog}}\n  \n  <div id=\"inline-reply-tweetbox\">\n    {{>swift_tweet_box}}\n  </div>\n  {{/include_tweet_dialog}}\n</div>\n\n{{#include_direct_message_dialog}}\n  {{>dialogs/dm_shell}}\n{{/include_direct_message_dialog}}\n\n{{#include_tweet_dialog}}\n  {{>dialogs/tweet_dialog}}\n\n{{/include_tweet_dialog}}\n\n{{>dialogs/goto_user_dialog}}\n\n{{#include_tweet_action_dialogs}}\n  {{>dialogs/retweet_dialog}}\n  {{>dialogs/delete_tweet_dialog}}\n{{/include_tweet_action_dialogs}}\n\n{{>dialogs/keyboard_shortcuts_dialog}}\n\n{{#include_geo_picker}}\n\n  \n  \n\n  {{^geo_enabled}} \n    <div id=\"geo-disabled-dropdown\">\n      {{>geo/disabled_dropdown}}\n    </div>\n  {{/geo_enabled}}\n\n  <div id=\"geo-enabled-dropdown\">\n    {{>geo/enabled_dropdown}}\n  </div>\n\n{{/include_geo_picker}}\n\n{{#include_profile_popup}}\n  {{>dialogs/profile_popup_container}}\n  {{>dialogs/list_membership_dialog}}\n  {{>dialogs/list_create_dialog}}\n{{/include_profile_popup}}\n\n{{#include_activity_popup}}\n  {{>dialogs/activity_popup_container}}\n{{/include_activity_popup}}\n\n{{>dialogs/confirm_dialog}}\n\n{{^logged_in}}\n  {{>dialogs/signin_or_signup_dialog}}\n  {{>dialogs/sms_codes}}\n{{/logged_in}}",
            "head_scripts": "{{#content_view}}\n  {{#resolve_inline_redirects}}\n  <script>\n  (function() {\n    var events = {{{active_events}}};\n    {{{resolve_inline_redirects}}}\n  }());\n  </script>\n  {{/resolve_inline_redirects}}\n{{/content_view}}\n\n<script>\n  {{{watch_errors_source}}}\n  {{{ttft_boot_data}}}\n  {{{frame_busting_source}}}\n</script>\n\n{{#swift_action_queue}}<script>{{{swift_action_queue}}}</script>{{/swift_action_queue}}",
            "link_list": "<ul>\n  {{#links}}\n    <li>\n      {{#href}}<a href=\"{{href}}\">{{text}}</a>{{/href}}\n      {{^href}}<span>{{text}}</span>{{/href}}\n    </li>\n    {{#separator}}\n    <li class=\"link-separator\">{{{separator}}}</li>\n    {{/separator}}\n  {{/links}}\n</ul>",
            "link_simple_list": "{{%IMPLICIT-ITERATOR iterator=link}}\n<ul class=\"thumbs\">\n  {{#links}}\n    <li><a href=\"{{link}}\" target=\"_blank\">{{link}}</a></li>\n  {{/links}}\n</ul>",
            "list_actions": "<div class=\"list-actions js-list-actions list-actions-{{id}}\">\n  {{#is_own_list}}\n    <div class=\"buttons\">\n      {{>edit_list_button}}\n      {{>delete_list_button}}\n    </div>\n  {{/is_own_list}}\n  {{^is_own_list}}\n    <div class=\"follow-state\">\n      {{#following}}\n        <span class=\"you-follow\">Following <span class=\"dot\">·</span></span>\n        <a href='#' class=\"unfollow-list-link js-unfollow-list-action\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\">Unfollow</a>\n      {{/following}}\n      {{^following}}\n        <div class=\"button follow-list-button js-follow-list-action\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\">\n          <span class=\"plus\"></span> <strong>Follow this list</strong>\n        </div>\n      {{/following}}\n    </div>\n  {{/is_own_list}}\n</div>",
            "list_dialog": "{{%TRANSLATION-HINT mode=lists}}\n<div class=\"list-editor\">\n  <div class=\"field\">\n    <label for=\"list-name\">List name</label>\n    <input type=\"text\" class=\"text\" name=\"name\" value=\"{{name}}\" />\n  </div>\n  <div class=\"field\" style=\"display:none\">\n    <label for=\"list-link\">List link</label>\n    <span>{{full_name}}</span>\n  </div>\n  <hr/>\n\n  <div class=\"field\">\n    <label for=\"description\">Description</label>\n    <textarea name=\"description\">{{description}}</textarea>\n    <span class=\"help-text\">Under 100 characters, optional</span>\n  </div>\n  <hr/>\n\n  <div class=\"field\">\n    <label for=\"mode\">Privacy</label>\n    <div class=\"options\">\n      <label for=\"list-public-radio\">\n        <input class=\"radio\" type=\"radio\" name=\"mode\" id=\"list-public-radio\" value=\"public\" {{#swift}}checked=\"checked\"{{/swift}} {{^swift}}{{#is_public}}checked=\"checked\"{{/is_public}}{{/swift}} />\n        <b>Public</b> · Anyone can follow this list\n      </label>\n      <label for=\"list-private-radio\">\n        <input class=\"radio\" type=\"radio\" name=\"mode\" id=\"list-private-radio\" value=\"private\" {{^swift}}{{^is_public}}checked=\"checked\"{{/is_public}}{{/swift}} />\n        <b>Private</b> · Only you can access this list\n      </label>\n    </div>\n  </div>\n  <hr/>\n\n  <div class=\"list-editor-save\">\n    <div class=\"button btn btn-primary update-list-button\" data-list-id=\"{{id}}\">Save list</div>\n  </div>\n\n</div>",
            "list_follow_actions": "{{#is_own_list}}\n  <a class=\"btn js-edit-list-action\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\" title=\"Edit\">\n    Edit\n  </a>\n\n  <a class=\"btn js-delete-list-action\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\" title=\"Delete\">\n    Delete\n  </a>\n{{/is_own_list}}\n\n{{^is_own_list}}\n  <a class=\"btn subscribe-btn {{^following}}not-{{/following}}subscribed {{^following}}js-follow-list-action{{/following}} {{#following}}js-unfollow-list-action{{/following}}\" data-screen-name=\"{{#user}}{{screen_name}}{{/user}}\" data-list-id=\"{{id}}\">\n    <div class=\"subscribe-text\">\n      <i class=\"subscribe-text\"></i>\n      Subscribe\n    </div>\n    <div class=\"remove-text\">\n      Unsubscribe from list\n    </div>\n  </a>\n{{/is_own_list}}",
            "list_follow_card": "<div class=\"flex-module\">\n  <div class=\"flex-module-header\">\n    <h1 class=\"js-list-name\">{{name}}</h1>\n    <p class=\"metadata\">\n    {{#is_public}}\n      A public list by\n    {{/is_public}}\n    {{^is_public}}\n      A private list by\n    {{/is_public}}\n    {{#user}}<a href=\"{{profile_path}}\">{{name}}</a></p>\n    <a class=\"list-author\" href=\"{{profile_path}}\"><img class=\"avatar size32 \" src=\"{{profile_image_url}}\" alt=\"{{name}}\"></a>\n    {{/user}}\n  </div>\n  <div class=\"flex-module-inner description\">\n    <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{description}}</p>\n  </div>\n</div>\n\n{{>list_follow_card_stats}}\n\n{{#logged_in}}\n  <div class=\"follow-card-footer\">\n    <div class=\"follow-bar js-list-actions\">\n      {{>list_follow_actions}}\n    </div>\n  </div>\n{{/logged_in}}\n",
            "list_follow_card_stats": "<ul class=\"stats\">\n  <li><a href=\"{{list_members_path}}\"><strong>{{member_count}}</strong> Members</a></li>\n  <li><a href=\"{{list_subscribers_path}}\"><strong>{{subscriber_count}}</strong> Subscribers</a></li>\n</ul>",
            "list_header": "<div class=\"list-info\">\n  <h2 class=\"full-name\">{{name}}</h2>\n  <p class=\"description\">{{description}}</p>\n  <hr/>\n  <div class=\"things-below-the-hr\">\n    <div class='list-creator clearfix'>\n      {{#user}}\n        <img id='profile-picture' src=\"{{profile_image_url}}\" alt=\"{{name}}\"/>\n      {{/user}}\n      <p>\n        {{#is_public}}\n          A <strong>public</strong> list\n        {{/is_public}}\n        {{^is_public}}\n          A <strong>private</strong> list\n        {{/is_public}}\n        <br />\n        {{#user}}\n          <span>Curated by <a href=\"{{profile_path}}\">{{name}}</span></a>\n        {{/user}}\n      </p>\n    </div>\n\n    {{#logged_in}}\n      <div class=\"list-actions-component\">\n        {{>list_actions}}\n      </div>\n    {{/logged_in}}\n  </div>\n</div>\n<!-- todo: put the list actions here with display:none rather than appending them in js ( twttr.components.pages.List.renderListInfo() ) -->",
            "list_link": "<span class=\"list\"><a class=\"pretty-link twitter-timeline-link list-link\" data-list-id=\"{{id}}\" href=\"{{user_list_path}}\" title=\"{{full_name}}\"\n  ><s>@</s><b>{{full_name_sans_at}}</b></a></span>",
            "list_membership_content": "<div class=\"add-to-list-prompt {{#has_lists}}has-lists{{/has_lists}}\">\n  <p>Include <span class=\"pretty-link\"><s>@</s><b>{{#user}}{{screen_name}}{{/user}}</b></span> in:</p>\n</div>\n<ul class=\"list-membership-container\" data-user-id=\"{{#user}}{{id}}{{/user}}\">\n  {{#items}}\n    {{>checkbox_list_item}}\n  {{/items}}\n  <li class=\"btn create-a-list\">Create a list</li>\n</ul>",
            "list_page": "<div class=\"main-content\">\n  {{{noscript}}}\n    {{#list}}\n      <div class=\"list-header user-sidebar-color\">\n        <div class=\"js-list-header-container\">\n          {{>list_header}}\n        </div>\n        <ul class=\"stream-tabs\">\n          {{>list_stream_tabs}}\n        </ul>\n      </div>\n      {{>stream_manager}}\n    {{/list}}\n  {{{end_noscript}}}\n</div>\n<div class=\"dashboard\"></div>\n{{>details_pane_container}}",
            "list_stream_tabs": "<li class=\"stream-tab stream-tab-tweets {{#active_tab_tweets}}active{{/active_tab_tweets}}\">\n  <a class=\"tab-text\" href=\"{{user_list_path}}\">Tweets</a>\n</li>\n<li class=\"stream-tab stream-tab-members {{#active_tab_members}}active{{/active_tab_members}}\">\n  <a class=\"tab-text\" href=\"{{list_members_path}}\">Following: <strong>{{member_count}}</strong></a>\n</li>\n<li class=\"stream-tab stream-tab-followers {{#active_tab_followers}}active{{/active_tab_followers}}\">\n  <a class=\"tab-text\" href=\"{{list_subscribers_path}}\">Followers: <strong>{{subscriber_count}}</strong></a>\n</li>",
            "list_stream_title": "<span>\n  {{full_name}}\n</span>\n{{#showTitleLink}}\n  <a class='go-to-list-page' href='{{user_list_path}}'>\n    View list page →\n  </a>\n{{/showTitleLink}}",
            "lists_stream_view_toggler": "{{>stream_view_toggler}}",
            "local_trend_location": "<dd><a href='#' data-woeid=\"{{woeid}}\">{{name}}<span></span></a></dd>",
            "local_trend_location_new": "<li>\n  <a href=\"#\" class=\"trends-location-item js-trend-link\" data-woeid=\"{{woeid}}\">\n    {{name}}\n    <i class=\"checkmark\"></i>\n  </a>\n</li>",
            "local_trends": "<dl class=\"local-trends-list\">\n  <dt>Countries</dt>\n  {{#country_locations}}\n    {{>local_trend_location}}\n  {{/country_locations}}\n</dl>\n<dl class=\"local-trends-list\">\n  <dt>Cities</dt>\n  {{#city_locations}}\n    {{>local_trend_location}}\n  {{/city_locations}}\n</dl>\n",
            "local_trends_new": "{{#show_personalized}}\n  {{>trends_personalized_dialog}}\n{{/show_personalized}}\n{{^show_personalized}}\n  <div class=\"trends-breadcrumb\">\n    {{>trends_dialog_breadcrumbs}}\n  </div>\n  <div class=\"trends-locations clearfix\">\n    <ul class=\"trends-locations-list\">\n      {{#locations0}}\n        {{>local_trend_location_new}}\n      {{/locations0}}\n    </ul>\n    <ul class=\"trends-locations-list\">\n      {{#locations1}}\n        {{>local_trend_location_new}}\n      {{/locations1}}\n    </ul>\n    <ul class=\"trends-locations-list\">\n      {{#locations2}}\n        {{>local_trend_location_new}}\n      {{/locations2}}\n    </ul>\n  </div>\n{{/show_personalized}}",
            "login_page": "<div class=\"page-canvas\">\n\n  <div class=\"signin-wrapper\" data-login-message=\"{{show_must_login_message}}\">\n    <h1>Sign in to Twitter</h1>\n    <form action=\"{{sessions_path}}\" class=\"clearfix signin js-signin\" method=\"post\">\n      {{>signin_form_textbox}}\n      <div class=\"captcha js-captcha\">\n        {{#should_render_captcha}}\n          {{>shared/captcha}}\n        {{/should_render_captcha}}\n      </div>\n      {{>signin_form_subchck}}\n    </form>\n  </div>\n\n  <div class=\"clearfix mobile has-sms\">\n    <p class=\"mobile-helper\">\n      Already using Twitter via text message?\n      <a href=\"{{mobile_complete_path}}\">Activate your account »</a>\n    </p>\n  </div>\n\n</div>\n",
            "logout_page": "<div class=\"page-canvas signout-page\">\n  <div class=\"signout-wrapper\">\n    <form action=\"{{logout_action_path}}\" class=\"signout\" method=\"post\">\n      <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n      <h1><strong>Sign out</strong> of Twitter?</h1>\n      <div class=\"buttons-arrow\"></div>\n      <div class=\"buttons\">\n        <div class=\"btn cancel\">Cancel</div>\n        <div class=\"btn primary-btn js-submit\">Sign out</div>\n      </div>\n      <div class=\"aside\">\n        <p>\n          You can always sign back in at any time.\n        </p>\n      </div>\n    </form>\n  </div>\n</div>\n",
            "machine_translated_tweet": "<div class=\"machine-translated-tweet js-machine-translated-tweet\">\n  <div class=\"machine-translated-text\">{{{translated_text}}}</div>\n  <div class=\"machine-translated-meta\">{{{attribution}}}</div>\n</div>\n",
            "malware_error_message": "{{#is_dm}}\n  Oops! A URL in your message appears to link to a page that has spammy or unsafe content.\n{{/is_dm}}\n{{^is_dm}}\n  Oops! A URL in your Tweet appears to link to a page that has spammy or unsafe content.\n{{/is_dm}}\n<a href=\"{{malware_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "matched_contact_user": "<div class=\"stream-item-content find-friends-result js-actionable-user\" data-user-id=\"{{id}}\" data-screen-name=\"{{screen_name}}\" {{{feedback_token}}}>\n  <a class=\"account-group js-account-group\" data-user-id=\"{{id}}\" href=\"{{profile_path}}\">\n    <img class=\"avatar size128\" src=\"{{reasonably_small_profile_image_url}}\" alt=\"{{name}}\">\n    <strong class=\"fullname\">{{name}}</strong>\n    <small class=\"username\"><s>@</s>{{screen_name}}\n      {{#verified}}\n        <i class=\"verified\"></i>\n      {{/verified}}\n      {{#protected}}\n        <i class=\"sm-lock\"></i>\n      {{/protected}}\n    </small>\n  </a>\n\n  <span class=\"small-follow-all-wrapper\">\n    {{>combo_follow_button}}\n  </span>\n\n</div>\n",
            "events_media_photo": "<a href=\"{{url}}\" target=\"_blank\" data-status-id=\"{{status_id}}\" data-href=\"{{url}}\" data-url=\"{{media_url}}\" {{#resolved_url}}data-resolved-url-medium=\"{{resolved_url}}\"{{/resolved_url}}  {{#resolved_url_large}}data-resolved-url-large=\"{{resolved_url_large}}\"{{/resolved_url_large}} class=\"media-thumbnail\"></a>",
            "events_media_thumbnails": "<div class=\"photo-strip\">\n  <div class=\"inner-shadow\"></div>\n  <ul class=\"photo-list\">\n    {{#items}}\n      {{>media/events_media_photo}}\n    {{/items}}\n  </ul>\n</div>",
            "grid_layout_media_thumbnails": "<div class=\"module enhanced-media-thumbnails\">\n  <div class=\"media-thumbnails {{#class_name}}{{class_name}}{{/class_name}} {{#is_video}}media-videos{{/is_video}}\">\n    <div class=\"media-box\">\n      <div class=\"media-row-content\">\n        {{#items}}\n          {{#is_video}}\n            {{>media/media_video}}\n          {{/is_video}}\n          {{^is_video}}\n            {{>media/media_photo}}\n          {{/is_video}}\n        {{/items}}\n        {{#thumbnail_placeholders}}\n          <span class=\"thumbnail-placeholder\"></span>\n        {{/thumbnail_placeholders}}\n      </div>\n    </div>\n  </div>\n</div>\n",
            "media_photo": "<span data-href=\"{{url}}\" data-url=\"{{media_url}}\" {{#resolved_url}}data-resolved-url-small=\"{{resolved_url}}\"{{/resolved_url}} class=\"media-thumbnail\" data-type=\"photo\"></span>\n",
            "media_thumbnails": "<li class=\"media-thumbnails {{#class_name}}{{class_name}}{{/class_name}} {{#is_video}}media-videos{{/is_video}}\">\n  {{>media/media_thumbnails_inner}}\n</li>",
            "media_thumbnails_inner": "<a href=\"{{view_all_path}}\" class=\"list-link\">\n  <div class=\"media-header\">\n    {{title}}\n    <i class=\"chev-right\"></i>\n  </div>\n  <div class=\"media-row\">\n    <div class=\"media-row-content\">\n      {{#items}}\n        {{#is_video}}\n          {{>media/media_video}}\n        {{/is_video}}\n        {{^is_video}}\n          {{>media/media_photo}}\n        {{/is_video}}\n      {{/items}}\n    </div>\n  </div>\n</a>",
            "media_video": "<span data-href=\"{{url}}\" data-url=\"{{media_url}}\" {{#resolved_url}}data-resolved-url=\"{{resolved_url}}\"{{/resolved_url}} class=\"media-thumbnail video\" data-type=\"video\">\n  <i class=\"play\"></i>\n</span>",
            "media_attribution": "<div class='media-attribution'>\n  <img src='{{icon_url}}'/>\n  <a target='_blank' data-media-type='{{media_type}}' class='media-attribution-link' href='{{url}}'>\n    {{title}}\n  </a>\n</div>\n",
            "media_gallery_controls": "<div class=\"media-gallery-controls\">\n  <div class=\"media-gallery-back-nav\">← <span>{{back_text}}</span></div>\n{{#is_search}}\n  <div class=\"media-gallery-title\">\n    <span class=\"media-gallery-bird\"></span>\n    {{#mode_photos}}\n      <span>Top images for <strong>{{query}}</strong></span>\n    {{/mode_photos}}\n    {{#mode_videos}}\n      <span>Top videos for <strong>{{query}}</strong></span>\n    {{/mode_videos}}\n    <div class=\"media-gallery-loading\"></div>\n  </div>\n{{/is_search}}\n{{#is_usermedia}}\n  <div class=\"media-gallery-title\">\n    <span class=\"media-gallery-bird\"></span>\n    <span>Recent images by <a class=\"controls-profile-link\" href=\"{{profile_path}}\"><em class=\"at\">@</em>{{screen_name}}</a></span>\n    <div class=\"media-gallery-loading\"></div>\n  </div>\n{{/is_usermedia}}\n\n  {{^disable_grid}}\n  <div class=\"media-gallery-buttons {{#disable_thumbs}}no-thumbs{{/disable_thumbs}}\">\n    <div class=\"toggle-set\">\n      <div title=\"View detail\" class=\"toggle-button detailview {{#is_detail_view}}selected{{/is_detail_view}}\">\n        <span></span>\n      </div>\n      <div class=\"divider\"></div>\n      <div title=\"View all\" class=\"toggle-button gridview {{#is_grid_view}}selected{{/is_grid_view}}\">\n        <span></span>\n      </div>\n    </div>\n  </div>\n  {{/disable_grid}}\n</div>\n",
            "media_gallery_no_results": "<div class=\"media-gallery-no-results\">\n  {{#is_search}}\n    {{#mode_photos}}\n      Sorry, there are no top images for <strong>{{query}}</strong>.\n    {{/mode_photos}}\n    {{#mode_videos}}\n      Sorry, there are no top videos for <strong>{{query}}</strong>.\n    {{/mode_videos}}\n  {{/is_search}}\n  {{#is_usermedia}}\n    Sorry, there are no recent images for <em>@</em>{{screen_name}}.\n  {{/is_usermedia}}\n</div>\n",
            "media_gallery_page": "<div class='media-gallery-overlay'>\n  <div class='media-gallery-content'></div>\n</div>\n",
            "media_not_displayed": "{{^rendering_on_server}}\n<div class='media-not-displayed'>\n  <h2>We can't show you everything!</h2>\n\n  {{#logged_in}}\n    {{#possibly_sensitive}}\n      <p>Your <a href=\"{{settings_path}}\" target=\"_blank\">media display settings</a> are set up to hide photos and videos that might contain sensitive content.</p>\n    {{/possibly_sensitive}}\n    {{^possibly_sensitive}}\n      {{#not_following}}\n        <p>Your <a href=\"{{settings_path}}\" target=\"_blank\">media display settings</a> are set up to hide photos and videos from people you don't follow.</p>\n      {{/not_following}}\n    {{/possibly_sensitive}}\n    <p>Lucky for you, that's easy to <a href=\"{{settings_path}}\" target=\"_blank\">change</a>.</p>\n  {{/logged_in}}\n\n  {{^logged_in}}\n    {{#possibly_sensitive}}\n      <p>We automatically hide photos and videos that might contain sensitive content.</p>\n    {{/possibly_sensitive}}\n   <p>Sign in to apply your media display settings. Don't have an account? <a href=\"{{signup_path}}\" target=\"_blank\">Sign up!</a></p>\n  {{/logged_in}}\n\n  <div class=\"btn button display-this-media\">\n    Display this\n  </div>\n\n  {{#logged_in}}\n    ·\n    <a href=\"#\" class=\"always-display-media\">Always display media like this.</a>\n  {{/logged_in}}\n</div>\n{{/rendering_on_server}}\n{{#rendering_on_server}}\n<div class=\"media-not-displayed\">\n  <h2>We can't show you everything!</h2>\n\n  {{#logged_in}}\n    <p>Your <a href=\"{{settings_path}}\" target=\"_blank\">media display settings</a> are set up to hide photos and videos that might contain sensitive content.</p>\n    <p>Lucky for you, that's easy to <a href=\"{{settings_path}}\" target=\"_blank\">change</a>.</p>\n  {{/logged_in}}\n\n  {{^logged_in}}\n    <p>We automatically hide photos and videos that might contain sensitive content.</p>\n    <p>Sign in to apply your media display settings. Don't have an account? <a href=\"/signup\" target=\"_blank\">Sign up!</a></p>\n  {{/logged_in}}\n\n  <button type=\"button\" class=\"btn display-this-media\">\n    Display this\n  </button>\n\n  {{#logged_in}}\n    ·\n    <button type=\"button\" class=\"btn-link always-display-media\">Always display media like this.</button>\n  {{/logged_in}}\n</div>\n{{/rendering_on_server}}",
            "media_slideshow": "<div class=\"media-slideshow-wrapper\">\n  <div class=\"media-slideshow-thumbnails\"></div>\n  <div class=\"media-slideshow-content\">\n    <div class=\"media-slideshow-pictures\">\n      <div class=\"media-slideshow-picture\">\n        <div class=\"media-slideshow-media-container\"></div>\n      </div>\n      <div class=\"media-control-button prev\">\n        <div class=\"media-control-button-arrow\"></div>\n      </div>\n      <div class=\"media-control-button next\">\n        <div class=\"media-control-button-arrow\"></div>\n      </div>\n    </div>\n    <div class=\"media-slideshow-tweet\"></div>\n  </div>\n</div>",
            "media_slideshow_not_found": "<div class=\"media-slideshow-not-found\">\n  Sorry, we couldn't find that!\n</div>\n",
            "media_type_container": "<div class=\"media-instance-container {{media_type_class}}-container\" data-url-id=\"{{url}}\" data-media-type=\"{{media_type}}\"></div>",
            "mentioned_in_tweet": "<div class=\"mentioned-in-tweet\">\n  <h3>Mentioned in this Tweet</h3>\n  <ul class=\"clearfix\">\n  {{#mentioned_users}}\n    {{>user_detailed_list}}\n  {{/mentioned_users}}\n  </ul>\n</div>\n",
            "mentions_stream_view_toggler": "{{>stream_view_toggler}}",
            "message": "<div class=\"js-message message-item message-temp\" data-message-id=\"{{id}}\" data-thread-id=\"{{thread_id}}\">\n  <div class=\"message-inner\">\n    {{#sender}}\n    <img src=\"{{profile_image_url}}\" alt=\"{{name}}\" class=\"thumb user-profile-link\" data-user-id=\"{{id}}\">\n    <span class=\"user-name\">\n      {{>message_user_name}}\n    </span>\n    {{/sender}}\n    <div class=\"message-content\">\n      <div class=\"linked-text\">{{>linked_tweet}}</div>\n      <div class=\"message-footer\">\n        <span class=\"created-at\"><span class=\"_timestamp\" data-time=\"{{actual_timestamp}}\" data-long-form=\"true\" data-include-sec=\"true\">{{timestamp}}</span></span>\n        <a class=\"js-delete-message delete-action\" href=\"#\"><span class=\"icon delete-icon\"></span> <b>Delete</b></a>\n      </div>\n    </div>\n  </div>\n</div>",
            "message_drawer_outer": "<div class=\"alert-messages {{#content_view}}{{#hide_message_drawer}}hidden{{/hide_message_drawer}}{{/content_view}}\" id=\"message-drawer\">\n  {{#content_view}}\n    {{>message_drawer}}\n  {{/content_view}}\n</div>\n",
            "message_thread": "<div class=\"messages-pane js-modal-scrollable js-twttr-dialog-not-draggable\" data-thread-id=\"{{thread_id}}\">\n  {{#items}}\n    {{>message}}\n  {{/items}}\n</div>\n",
            "message_thread_preview": "<div class=\"js-message message-item message-temp {{#has_new_message}} new-messages{{/has_new_message}}\" data-modal=\"message-thread\">\n  <div class=\"status\">\n    <i class=\"unread private\"></i>\n  </div>\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      <small class=\"time\">\n        {{#last_message}}<a href=\"#\">{{timestamp}}</a>{{/last_message}}\n      </small>\n      <div>\n        {{#other_person}}\n          <img class=\"avatar\" src=\"{{profile_image_url}}\" alt=\"{{name}}\"/>\n          <strong class=\"fullname\">{{name}}</strong>\n          <span class=\"username\">@{{screen_name}}</span>\n        {{/other_person}}\n      </div>\n    </div>\n    <p class=\"js-last-message-text\">{{#last_message}}{{text}}{{/last_message}}</p>\n  </div>\n</div>",
            "message_user_name": "<span class=\"user-profile-name\" title='{{name}}'>{{screen_name}}</span>\n",
            "messages_page": "<div class=\"main-content messages-main-content\">\n  {{{noscript}}}\n    <div class=\"messages-header header\">\n      <h1>Messages</h1><div class=\"new-message-button js-new-message-button button\">New Message</div>\n    </div>\n    {{>stream_manager}}\n  {{{end_noscript}}}\n</div>\n{{>details_pane_container}}\n",
            "mini_current_user": "\n\n<a href=\"{{#site_header_with_profile_tab}}{{profile_info_path}}{{/site_header_with_profile_tab}}{{^site_header_with_profile_tab}}{{profile_path}}{{/site_header_with_profile_tab}}\"\n   class=\"account-summary account-summary-small{{^site_header_with_profile_tab}} js-nav{{/site_header_with_profile_tab}}\"\n   data-nav=\"{{#site_header_with_profile_tab}}edit_profile{{/site_header_with_profile_tab}}{{^site_header_with_profile_tab}}profile{{/site_header_with_profile_tab}}\">\n  <div class=\"content\">\n    <div class=\"account-group js-mini-current-user\" data-user-id=\"{{id}}\" data-screen-name=\"{{screen_name}}\">\n      <img class=\"avatar size32\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" data-user-id=\"{{id}}\">\n      <b class=\"fullname\">{{name}}</b>\n      <small class=\"metadata\">\n          {{#site_header_with_profile_tab}}Edit profile{{/site_header_with_profile_tab}}\n          {{^site_header_with_profile_tab}}View my profile page{{/site_header_with_profile_tab}}\n      </small>\n    </div>\n  </div>\n</a>",
            "mini_home_profile": "<div class=\"module mini-profile\">\n\n  <div class=\"flex-module profile-summary js-profile-summary\">\n    {{#user}}\n      {{>mini_current_user}}\n    {{/user}}\n  </div>\n\n  {{^short_profile}}\n    <div class=\"js-mini-profile-stats-container\">\n      {{#rendering_on_server}}\n        {{#stats}}\n          {{>mini_profile_stats}}\n        {{/stats}}\n      {{/rendering_on_server}}\n    </div>\n\n    {{#swift}}\n      <div class=\"home-tweet-box tweet-box component tweet-user\">\n        {{>swift_tweet_box}}\n      </div>\n    {{/swift}}\n    {{^swift}}\n      {{#rendering_on_server}}\n        <div class=\"component tweet-user tweetbox-placeholder\"></div>\n      {{/rendering_on_server}}\n    {{/swift}}\n  {{/short_profile}}\n</div>\n",
            "mini_profile_stats": "{{#swift}}\n  <ul class=\"stats js-mini-profile-stats\" data-user-id=\"{{id}}\">\n    <li><a class=\"js-nav\" href=\"{{profile_path}}\" data-element-term=\"tweet_stats\" data-nav='profile'>{{{tweet_stat}}}</a></li>\n    <li><a class=\"js-nav\" href=\"{{following_path}}\" data-element-term=\"following_stats\" data-nav='following'>{{{following_stat}}}</a></li>\n    <li><a class=\"js-nav\" href=\"{{followers_path}}\" data-element-term=\"follower_stats\" data-nav='followers'>{{{follower_stat}}}</a></li>\n  </ul>\n{{/swift}}\n{{^swift}}\n  <ul class=\"stats js-mini-profile-stats\">\n    <li><a href=\"{{profile_path}}\" data-element-term=\"tweet_stats\" data-nav='profile'>\n      \n        {{#statuses_count_one}}<strong>{{statuses_count_commaized}}</strong> Tweet{{/statuses_count_one}}\n        {{#statuses_count_other}}<strong>{{statuses_count_commaized}}</strong> Tweets{{/statuses_count_other}}\n      \n    </a></li>\n    <li><a href=\"{{#is_current_user}}{{following_path}}{{/is_current_user}}{{^is_current_user}}{{user_following_path}}{{/is_current_user}}\" data-element-term=\"following_stats\" data-nav='following'><strong>{{friends_count_commaized}}</strong> Following</a></li>\n    <li><a href=\"{{#is_current_user}}{{followers_path}}{{/is_current_user}}{{^is_current_user}}{{user_followers_path}}{{/is_current_user}}\" data-element-term=\"follower_stats\" data-nav='followers'><strong>{{followers_count_commaized}}</strong> Followers</a></li>\n  </ul>\n{{/swift}}",
            "mini_profile_user": "<div class=\"account-summary\">\n  <div class=\"content\">\n    <a class=\"account-group js-account-group js-bubble-event\" href=\"{{profile_path}}\" data-element-term=\"view_profile_link\">\n      <img class=\"avatar\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" data-user-id=\"{{id}}\">\n      <b class=\"fullname\">{{name}}</b>\n    </a>\n    {{#verified}}<i class=\"verified\"></i>{{/verified}}\n    <small class=\"metadata\">\n      <a class=\"js-screen-name\" href=\"{{profile_path}}\"><s>@</s>{{screen_name}}</a>\n      {{^is_current_user}}\n        <span class=\"js-follows-you maybe-follows-you\">follows you</span>\n      {{/is_current_user}}\n      {{#protected}}<i class=\"sm-lock\"></i>{{/protected}}\n    </small>\n    {{^rendering_on_server}}{{#location}}<small class=\"location js-profile-location\">{{location}}</small>{{/location}}{{/rendering_on_server}}\n    <small><a class=\"view-profile js-mini-profile-user\" href=\"{{profile_path}}\" data-element-term=\"view_profile_link\">\n      {{#is_current_user}}\n        View your profile page\n      {{/is_current_user}}\n      {{^is_current_user}}\n        View @{{screen_name}}'s profile page\n      {{/is_current_user}}\n    </a></small>\n  </div>\n</div>\n",
            "mini_social_proof": "<p class=\"social-proof\">\n  {{#mini_social_proof_context}}\n    {{#shared_count_1}}\n      Followed by {{#follower_0}}{{>mini_social_proof_link}}{{/follower_0}}.\n    {{/shared_count_1}}\n    {{#shared_count_2}}\n      Followed by {{#follower_0}}{{>mini_social_proof_link}}{{/follower_0}} and\n      {{#follower_1}}{{>mini_social_proof_link}}{{/follower_1}}.\n    {{/shared_count_2}}\n    {{#shared_count_3}}\n      Followed by {{#follower_0}}{{>mini_social_proof_link}}{{/follower_0}},\n      {{#follower_1}}{{>mini_social_proof_link}}{{/follower_1}} and\n      {{#follower_2}}{{>mini_social_proof_link}}{{/follower_2}}.\n    {{/shared_count_3}}\n    {{#shared_count_4}}\n      Followed by {{#follower_0}}{{>mini_social_proof_link}}{{/follower_0}},\n      {{#follower_1}}{{>mini_social_proof_link}}{{/follower_1}},\n      {{#follower_2}}{{>mini_social_proof_link}}{{/follower_2}} and\n      {{#follower_3}}{{>mini_social_proof_link}}{{/follower_3}}.\n    {{/shared_count_4}}\n    {{#shared_count_more}}\n      Followed by {{#follower_0}}{{>mini_social_proof_link}}{{/follower_0}},\n      {{#follower_1}}{{>mini_social_proof_link}}{{/follower_1}},\n      {{#follower_2}}{{>mini_social_proof_link}}{{/follower_2}} and\n      <a href=\"{{followers_you_follow_url}}\" class=\"pretty-link\"><b>{{remaining_follower_count}} others</b></a>.\n    {{/shared_count_more}}\n  {{/mini_social_proof_context}}\n</p>\n",
            "mini_scribe": "\nfunction miniScribe(eName,more,cat){\nvar log=[],cat=cat||'client_event',more=more||{};more.event_name=eName;for(var k in more){log.push('\"'+k+'\":\"'+more[k]+'\"');};\n(new Image()).src='{{scribe_path}}?category='+encodeURIComponent(cat)+'&log='+encodeURIComponent('{'+log.join(',')+'}')+'&ts='+(+new Date);\n}",
            "mini_social_proof_link": "<a href=\"{{profile_path}}\" data-user-id=\"{{id}}\" class=\"show-popup-with-id\">{{name}}</a>",
            "apps": "<div class=\"page-canvas\">\n\n  <div class=\"gallery-link\">\n    <a href=\"{{mobile_gallery_path}}{{lang_param}}\">← Back to Mobile</a>\n  </div>\n\n  <div class=\"mobile-gallery-app mobile-gallery-{{app_id}}\">\n    <div class=\"mobile-gallery-app-wrapper\">\n      <div class=\"app-header\">\n        <h2>{{app_short_name}}</h2>\n        <p class=\"compatibility\">{{compatibility}}</p>\n      </div>\n      <div class=\"actions actions-single yes-script {{^no_camera}} qr-code-actions {{/no_camera}}\">\n{{#app_link}}\n        <div class=\"app-link\">\n          <p>URL:</p>\n          <a href=\"{{app_link}}\" class=\"js-app-link\">{{app_link}}</a>\n        </div>\n{{/app_link}}\n{{^no_download}}\n        <div class=\"app-download\">\n          <a class=\"btn signup-btn promotional\" href=\"{{url}}\" target=\"_blank\">Download now</a>\n        </div>\n        <form class=\"app-download-form dialog-form\" method=\"post\" action=\"send_link\">\n          <p>Or email a link to your {{device_noun}} to download: {{download_notice}}</p>\n          <fieldset>\n            <div class=\"field\">\n              <input type=\"hidden\" name=\"appId\" value=\"{{app_id}}\">\n              <input type=\"email\" autocomplete=\"off\" class=\"email\" name=\"email\" placeholder=\"Email address\">\n              <input type='submit' class=\"btn primary-btn submit js-submit\" value=\"Send link\">\n\t          <span class=\"notification\"></span>\n            </div>\n          </fieldset>\n        </form>\n{{/no_download}}\n{{#qr_code_url}}\n        <div class=\"qr-code\">\n          <p>QR Code:</p>\n          <img width=\"{{qr_code_width}}\" height=\"{{qr_code_height}}\" src=\"{{qr_code_url}}\">\n        </div>\n{{/qr_code_url}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mobile-download clearfix\">\n\n    <table class=\"mobile-footer mobile-footer-app\" cellpadding=\"0\">\n      <tbody>\n        <tr>\n          <td>\n            <h4>What’s happening?</h4>\n            <p>\n              Discover what’s happening right now, anywhere in the world, with the official {{app_long_name}} app.\n            </p>\n          </td>\n          <td>\n            <h4>What matters to you</h4>\n            <p>\n              Search, Top Tweets, trending topics, and maps show what’s happening everywhere and nearby.\n            </p>\n          </td>\n          <td>\n            <h4>Communicate easily</h4>\n            <p>\n              {{^no_video}}\n              Tweet, send messages, share photos, videos, and links with your friends and the world.\n              {{/no_video}}\n              {{#no_video}}\n              Tweet, send messages, share photos and links with your friends and the world.\n              {{/no_video}}\n            </p>\n          </td>\n          <td>\n            <h4>It’s free!</h4>\n            <p>\n              Don't have an account? Just sign up from the app! Questions? See <a href=\"{{support_url}}\">Twitter Support: {{app_long_name}}</a>\n            </p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n{{>footer}}",
            "firefox": "{{>firefox_download}}\n{{>footer}}",
            "mobile_gallery_all": "<div class=\"page-canvas\">\n\n  <h1>{{^logged_out_justnow}}Take Twitter with you. Get the app.{{/logged_out_justnow}}{{#logged_out_justnow}}<b>You’ve signed out of Twitter.</b> Now go mobile.{{/logged_out_justnow}}</h1>\n\n  <ul class=\"gallery\">\n    <li><a href=\"{{mobile_gallery_path}}/iphone{{lang_param}}\" class=\"mobile-app iphone\"><i></i><br><span>iPhone</span></a></li>\n    <li><a href=\"{{mobile_gallery_path}}/android{{lang_param}}\" class=\"mobile-app android\"><i></i><br><span>Android</span></a></li>\n    <li><a href=\"{{mobile_gallery_path}}/ipad{{lang_param}}\" class=\"mobile-app ipad\"><i></i><br><span>iPad</span></a></li>\n{{#lang_ja}}\n    <li><a href=\"{{mobile_gallery_path}}/iappli{{lang_param}}\" class=\"mobile-app iappli\"><i></i><br><span>iAppli</span></a></li>\n    <li><a href=\"{{mobile_gallery_path}}/twtrjp{{lang_param}}\" class=\"mobile-app twtrjp\"><i></i><br><span>Keitai</span></a></li>\n{{/lang_ja}}\n{{^lang_ja}}\n    <li><a href=\"{{mobile_gallery_path}}/blackberry{{lang_param}}\" class=\"mobile-app blackberry\"><i></i><br><span>BlackBerry</span></a></li>\n{{/lang_ja}}\n    <li><a href=\"{{mobile_gallery_path}}/wp7{{lang_param}}\" class=\"mobile-app wp7\"><i></i><br><span>Windows Phone 7</span></a></li>\n    <li><a href=\"{{mobile_gallery_path}}/nokias40{{lang_param}}\" class=\"mobile-app nokias40\"><i></i><br><span>Nokia s40</span></a></li>\n  </ul>\n\n  <div class=\"mobile-download clearfix\">\n    <div class=\"actions yes-script\">\n      <div class=\"download-info\">\n        <a class=\"promotional download-now btn signup-btn\">Download now</a>\n        <a class=\"btn primary-btn activate-sms has-sms\" href=\"{{devices_settings_path}}\">Use via text message</a>\n      </div>\n    </div>\n\n    <table class=\"mobile-footer mobile-footer-home\" cellpadding=\"0\">\n      <tbody>\n        <tr>\n          <td>\n            <p>Have your device with you?<br><a href=\"http://m.twitter.com\">Visit m.twitter.com on your device »</a></p>\n          </td>\n          <td>\n            <p>Questions about using Twitter mobile?<br><a href=\"{{mobile_help_path}}\">Visit our Mobile Help Center »</a></p>\n          </td>\n          <td>\n            {{#logged_out_totally}}\n            <p>Already using Twitter via text message?<br><a href=\"{{mobile_complete_path}}\">Complete signup »</a></p>\n            {{/logged_out_totally}}\n            {{^logged_out_totally}}\n            <p>Privacy controls & notification settings?<br><a href=\"{{devices_path}}\">Visit our Mobile Settings page »</a></p>\n            {{/logged_out_totally}}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n",
            "mobile_gallery_app": "<div class=\"page-canvas\">\n\n  <div class=\"gallery-link\">\n    <a href=\"{{mobile_gallery_path}}\">← Back to Mobile</a>\n  </div>\n\n  <div class=\"mobile-gallery-app mobile-gallery-{{app_id}}\">\n    <div class=\"mobile-gallery-app-wrapper\">\n      <div class=\"app-header\">\n        <h2>{{app_short_name}}</h2>\n        <p class=\"compatibility\">{{compatibility}}</p>\n      </div>\n      <div class=\"actions actions-single yes-script {{^no_camera}} qr-code-actions {{/no_camera}}\">\n{{#app_link}}\n        <div class=\"app-link\">\n          <p>URL:</p>\n          <a href=\"{{app_link}}\" class=\"js-app-link\">{{app_link}}</a>\n        </div>\n{{/app_link}}\n{{^no_download}}\n        <div class=\"app-download\">\n          <a class=\"btn signup-btn promotional\" href=\"{{url}}\" target=\"_blank\">Download now</a>\n        </div>\n        <form class=\"app-download-form dialog-form\">\n          <p>Or email a link to your {{device_noun}} to download: {{download_notice}}</p>\n          <fieldset>\n            <div class=\"field\">\n              <input type=\"hidden\" name=\"appId\" value=\"{{app_id}}\" />\n              <input type=\"email\" autocomplete=\"off\" class=\"email\" name=\"email\" placeholder=\"Email address\"><div class=\"btn submit js-submit\">Send link</div>\n              \n              <div class='label'></div>\n            </div>\n          </fieldset>\n        </form>\n{{/no_download}}\n{{#qr_code_url}}\n        <div class=\"qr-code\">\n          <p>QR Code:</p>\n          <img width=\"{{qr_code_width}}\" height=\"{{qr_code_height}}\" src=\"{{qr_code_url}}\">\n        </div>\n{{/qr_code_url}}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"mobile-download clearfix\">\n\n    <table class=\"mobile-footer mobile-footer-app\" cellpadding=\"0\">\n      <tbody>\n        <tr>\n          <td>\n            <h4>What’s happening?</h4>\n            <p>\n              Discover what’s happening right now, anywhere in the world, with the official {{app_long_name}} app.\n            </p>\n          </td>\n          <td>\n            <h4>What matters to you</h4>\n            <p>\n              Search, Top Tweets, trending topics, and maps show what’s happening everywhere and nearby.\n            </p>\n          </td>\n          <td>\n            <h4>Communicate easily</h4>\n            <p>\n              {{^no_video}}\n              Tweet, send messages, share photos, videos, and links with your friends and the world.\n              {{/no_video}}\n              {{#no_video}}\n              Tweet, send messages, share photos and links with your friends and the world.\n              {{/no_video}}\n            </p>\n          </td>\n          <td>\n            <h4>It’s free!</h4>\n            <p>\n              Don't have an account? Just sign up from the app! Questions? See <a href=\"{{support_url}}\">Twitter Support: {{app_long_name}}</a>\n            </p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n",
            "mobile_gallery_logged_out_header": "<div id=\"mobile-gallery-logged-out-header\">\n</div>\n",
            "mobile_gallery_page": "{{#render_page_content}}\n  {{^firefox}}\n    {{#app_id}}\n      {{>mobile_gallery_app}}\n    {{/app_id}}\n    {{^app_id}}\n      {{>mobile_gallery_all}}\n    {{/app_id}}\n  {{/firefox}}\n  {{#firefox}}\n    {{>firefox_download}}\n  {{/firefox}}\n\n  <div class=\"logged-out\">\n    <div class=\"bottompart\"></div>\n  </div>\n{{/render_page_content}}\n",
            "module": "<div class=\"module {{class_name}}\"></div>",
            "module_section": "<{{tag}} data-section-id=\"{{id}}\"></{{tag}}>",
            "more_css": "{{#is_t1}}\n  <link rel=\"stylesheet\" href=\"{{t1_more_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n{{/is_t1}}\n{{^is_t1}}\n  <link rel=\"stylesheet\" href=\"{{phoenix_more_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n{{/is_t1}}",
            "more_lists": "<div class=\"module\">\n  <div class=\"flex-module\">\n    {{#user}}\n      <div class=\"flex-module-header\">\n        <h3>More lists by <a href=\"{{profile_path}}\">@{{screen_name}}</a></h3>\n        <small class=\"view-all\">· <a href=\"{{user_lists_path}}\">View all</a></small>\n      </div>\n    {{/user}}\n    {{#lists}}\n      <div class=\"flex-module-inner\">\n        <ul class=\"list-of-lists\">\n          {{#items}}\n            <li><a href=\"{{user_list_path}}\">{{name}}</a></li>\n          {{/items}}\n        </ul>\n      </div>\n    {{/lists}}\n    {{#show_new_list_link}}\n      {{>create_list_button}}\n    {{/show_new_list_link}}\n  </div>\n</div>\n",
            "must_follow_first_error_message": "{{#dm_recipient}}\n  You must follow @{{dm_recipient}} before sending a message to them.\n{{/dm_recipient}}\n{{^dm_recipient}}\n  You must follow this user first before sending a message to them.\n{{/dm_recipient}}\n\n<a href=\"{{dms_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "mute_users": "<div class=\"muted-users\">\n  <div class=\"input-autocomplete\">\n    <input type=\"text\" size=\"20\" class=\"mute-input\"/> <a href=\"#\" class=\"button\">Add</a>\n  </div>\n  <ul class=\"muted-user-list\"></ul>\n</div>",
            "nav": "<div class=\"module {{name}}\">\n  <ul class=\"js-items-container\">\n    {{#items}}\n      {{#visible}}\n        {{>nav_item}}\n      {{/visible}}\n    {{/items}}\n  </ul>\n</div>",
            "nav_item": "<li class=\"js-sidenav-link{{#active}} active{{/active}}\" data-name=\"{{name}}\" data-element-term=\"{{element_term}}\">\n  <a class=\"list-link\" href=\"{{route}}\">\n    {{title}}\n    {{#count}}<small>{{count_commaized}}</small>{{/count}}\n    <i class=\"chev-right\"></i>\n    {{#show_metadata_container}}<span class=\"js-metadata metadata\">{{{metadata}}}</span>{{/show_metadata_container}}\n  </a>\n</li>",
            "new_message_button": "<a class=\"btn js-new-message-button\" href=\"#\" data-modal=\"dm-new\">New message</a>",
            "new_signup_call_out": "<div class=\"module signup-call-out search-signup-call-out\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-header profile-signup\">\n      <h2>{{#query}}Get instant updates on {{query}}{{/query}}{{^query}}New to Twitter?{{/query}} <small>Join Twitter today</small></h2>\n    </div>\n    {{>partial_signup_form}}\n  </div>\n</div>\n",
            "newest_list_members": "<div class=\"module\">\n  <div class=\"flex-module\">\n  {{#list}}\n    <div class=\"flex-module-header\">\n      <h3>Recently added members</h3>\n      <small class=\"view-all\">· <a href=\"{{list_members_path}}\">View all</a></small>\n    </div>\n  {{/list}}\n    <div class=\"flex-module-inner js-recent-members\">\n    {{#members}}\n      {{>user_small_list}}\n    {{/members}}\n    </div>\n  </div>\n</div>\n",
            "no_letter_start_list_name_error_message": "Oops! List names can't start with a number.\n<a href=\"{{list_name_error_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>",
            "no_list_members": "<div class=\"stream-placeholder centered-placeholder\">\n  <div class=\"stream-end-inner\">\n    <p>This list doesn’t follow any users yet. It probably will soon, though.</p>\n  </div>\n</div>",
            "no_lists": "<div class=\"empty-drop-down\">\n  <div class=\"no-lists title\">You don't have any lists yet.</div>\n  <p class=\"no-lists info\">\n    {{^abtest_timeline_copy_317_any_bucket}}\n      Create a custom timeline of Tweets by adding users to a list (<a href=\"{{lists_help_path}}\" target=\"_blank\">see how</a>). You can also follow lists curated by others.\n    {{/abtest_timeline_copy_317_any_bucket}}\n    {{#abtest_timeline_copy_317_stream}}\n      Create a custom stream of Tweets by adding users to a list (<a href=\"{{lists_help_path}}\" target=\"_blank\">see how</a>). You can also follow lists curated by others.\n    {{/abtest_timeline_copy_317_stream}}\n  </p>\n</div>",
            "no_saved_searches": "<div class=\"empty-drop-down\">\n  <div class=\"no-saved-searches title\">You haven't saved any searches yet.</div>\n  <p class=\"no-saved-searches info\">\n    Click on \"Save this search\" from the results page to quickly access the latest Tweets about a topic or query, right from here. <a href=\"{{saved_searches_help_path}}\" target=\"_blank\">Learn More</a>\n  </p>\n</div>",
            "noscript_banner": "<div class=\"banner-outer\">\n  <div class=\"banner\">\n    <div class=\"banner-inside noscript-warning\">\n      <h5>Twitter.com makes heavy use of JavaScript.</h5>\n      <span class=\"warning\">If you cannot enable it in your browser's preferences, you may have a better experience on our <a href=\"http://m.twitter.com\">mobile site</a>.</span>\n    </div>\n  </div>\n</div>\n",
            "not_following_error_message": "{{#dm_recipient}}\n  Your message could not be sent to @{{dm_recipient}} because they do not follow you.\n{{/dm_recipient}}\n{{^dm_recipient}}\n  You cannot send messages to users who are not following you.\n{{/dm_recipient}}\n\n<a href=\"{{dms_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "not_found_error_message": "{{#is_user_not_found}}\n  Sorry, we couldn't find that user.\n{{/is_user_not_found}}\n{{#is_generic}}\n  Sorry, something went wrong.\n{{/is_generic}}\n",
            "nothing": "<!-- nothing! -->",
            "onebox": "<div class=\"onebox {{#is_new_search_header_available}}ddg-192-new-header{{/is_new_search_header_available}}\">\n  <div class=\"js-onebox-container onebox-inner {{#is_new_search_header_available}}ddg-192-new-header{{/is_new_search_header_available}}\"></div>\n</div>",
            "other_user_suspended_error_message": "{{#is_follow}}\n  Sorry, the user you tried to follow is suspended.\n{{/is_follow}}\n{{^is_follow}}\n  Sorry, that user is suspended.\n{{/is_follow}}",
            "page_profile": "{{^render_withheld}}\n{{>top_content}}\n{{>dashboard}}\n{{>content}}\n{{/render_withheld}}\n{{#render_withheld}}\n<div class=\"permalink-header\"></div>\n<div class=\"permalink\">\n  <div class=\"components-above\"></div>\n  <div class=\"components-middle\">\n    <div class=\"tweet js-actionable-tweet permalink-tweet permalink-tweet-withheld\">\n      {{#profile_user}}\n      <div class=\"tweet-row\">\n        <div class=\"tweet-user-withheld\">\n          @{{screen_name}} withheld\n        </div>\n      </div>\n      <div class=\"tweet-row\">\n        {{description}} <a href={{#is_withheld_copyright}}\"{{withheld_copyright_help_path}}\"{{/is_withheld_copyright}}{{^is_withheld_copyright}}\"{{withheld_help_path}}\"{{/is_withheld_copyright}} target=\"_blank\">Learn more</a>\n      </div>\n    {{/profile_user}}\n    </div>\n  </div>\n  <div class=\"components-below\"></div>\n</div>\n<div class=\"permalink-footer\"></div>\n{{/render_withheld}}\n",
            "partial": "t1 partial\n",
            "partial_signup_form": "<form action=\"{{signup_path}}\" class=\"clearfix signup\" method=\"post\">\n  <div class=\"holding name\">\n    <input type=\"text\" autocomplete=\"off\" name=\"user[name]\" maxlength=\"20\">\n    <span class=\"holder\">Full name</span>\n  </div>\n  <div class=\"holding email\">\n    <input class=\"email-input\" type=\"text\" autocomplete=\"off\" name=\"user[email]\">\n    <span class=\"holder\">Email</span>\n  </div>\n  <div class=\"holding password\">\n    <input type=\"password\" name=\"user[user_password]\">\n    <span class=\"holder\">Password</span>\n  </div>\n  {{#screen_name}}\n    <input name=\"follow\" type=\"hidden\" value=\"{{screen_name}}\">\n  {{/screen_name}}\n  <input type=\"hidden\" value=\"{{signup_source}}\" name=\"context\">\n  <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n  <input name=\"follows\" type=\"hidden\" value=\"{{screen_names}}\">\n  <input type=\"submit\" class=\"btn signup-btn js-submit js-signup-btn\" value=\"{{#in_ja_profile_page}}Registration is free{{/in_ja_profile_page}}{{^in_ja_profile_page}}Sign up{{/in_ja_profile_page}}\">\n</form>\n",
            "people_results": "<h2>People results for <strong>{{query}}</strong> ·\n\t<a class=\"view-all\" href=\"{{#logged_in}}{{who_to_follow_search_path}}{{/logged_in}}{{^logged_in}}{{user_search_path}}{{/logged_in}}\">view all</a>\n</h2>\n<ul class='people-results clearfix'>\n  {{#found_people}}\n    {{>user_small_list}}\n  {{/found_people}}\n</ul>\n",
            "people_search": "<form class=\"js-search-form content-searchbar\">\n  <table class=\"flex-table\">\n    <tbody>\n      <tr>\n        <td class=\"flex-table-primary\">\n          <div class=\"flex-table-form\">\n            <input class=\"flex-table-input search-query\" type=\"text\" name=\"q\" {{#query}}value=\"{{query}}\"{{/query}} placeholder=\"{{placeholder}}\">\n          </div>\n        </td>\n        <td class=\"flex-table-secondary\">\n          <button class=\"btn flex-table-btn js-submit\" type=\"submit\">{{button_text}}</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  {{#search_note}}\n    <p class=\"search-note\">{{search_note}}</p>\n  {{/search_note}}\n</form>\n",
            "permalink_page": "{{#theme_user}}\n  {{>user_css_t1}}\n  {{>bg_img_css}}\n{{/theme_user}}\n<div class=\"permalink\">\n\n  {{#rendering_on_server}}\n    {{#include_embed_link}}\n      {{>dialogs/embed}}\n    {{/include_embed_link}}\n  {{/rendering_on_server}}\n\n\n  \n  {{^rendering_on_server}}\n  <div class=\"components-above\">\n  {{/rendering_on_server}}\n\n    {{#rendering_on_server}}\n      {{#in_reply_to}}\n        <div class=\"permalink-in-reply-tos\" data-component-term=\"in_reply_to\">\n          {{>in_reply_to}}\n        </div>\n      {{/in_reply_to}}\n    {{/rendering_on_server}}\n\n  \n  {{^rendering_on_server}}\n  </div>\n  <div class=\"components-middle\">\n  {{/rendering_on_server}}\n\n    {{#render_page_content}}\n      {{#tweet}}\n        {{>single_tweet}}\n      {{/tweet}}\n    {{/render_page_content}}\n\n  \n  {{^rendering_on_server}}\n  </div>\n  <div class=\"components-below\">\n  {{/rendering_on_server}}\n\n    {{#rendering_on_server}}\n      {{^render_withheld}}\n        {{>replies}}\n      {{/render_withheld}}\n    {{/rendering_on_server}}\n\n  \n  {{^rendering_on_server}}\n  </div>\n  {{/rendering_on_server}}\n\n</div>\n\n<div class=\"permalink-footer\">\n  {{#rendering_on_server}}\n    {{^logged_in}}\n      {{#status}}\n        {{#user}}\n          {{>permalink_signup_call_out}}\n        {{/user}}\n      {{/status}}\n    {{/logged_in}}\n    {{>footer}}\n  {{/rendering_on_server}}\n</div>\n",
            "permalink_photo_page": "<div class=\"media-gallery-overlay swift\">\n  <div class=\"media-gallery-content big-photo-permalink media-slideshow-tweet\">\n    {{#tweet}}\n      {{>slideshow_tweet}}\n    {{/tweet}}\n    {{#photo}}\n      {{#large}}\n        <div class=\"media-gallery-image-wrapper\">\n          <img class=\"large media-slideshow-image\" alt=\"\" src=\"{{url}}\" height=\"{{h}}\" width=\"{{w}}\">\n        </div>\n      {{/large}}\n    {{/photo}}\n  </div>\n</div>",
            "permalink_signup_call_out": "<div class=\"module signup-call-out\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-header\">\n      <h2>Don’t miss any updates from {{name}} <small>Join Twitter today and follow what interests you!</small></h2>\n    </div>\n    {{>partial_signup_form}}\n    {{#rendering_on_server}}\n      {{>sms_follow_prompt}}\n    {{/rendering_on_server}}\n    {{^rendering_on_server}}\n      {{>sms_follow}}\n    {{/rendering_on_server}}\n  </div>\n</div>",
            "permission_error_message": "Your account may not be allowed to perform this action. Please <a class=\"js-reload\" href=\"#\">refresh the page</a> and try again.",
            "phoenix": "<!DOCTYPE html>\n<html{{#nav_highlight_class_name}} data-nav-highlight-class-name=\"{{nav_highlight_class_name}}\"{{/nav_highlight_class_name}}>\n  <head>\n    \n    {{>phoenix_head}}\n\n    {{#is_t1}}\n      {{#escaped_js_redirect_path}}\n      <script type=\"text/javascript\">\n        \n          window.location.replace('{{escaped_js_redirect_path}}');\n      </script>\n      {{/escaped_js_redirect_path}}\n\n      {{#logged_in}}\n        <link rel=\"stylesheet\" href=\"{{t1_core_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n      {{/logged_in}}\n      {{^logged_in}}\n        <link rel=\"stylesheet\" href=\"{{t1_core_logged_out_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n      {{/logged_in}}\n\n    {{/is_t1}}\n    {{^is_t1}}\n      {{#logged_in}}\n        {{#inline_core_css}}\n          <style type=\"text/css\" media=\"screen\">{{{phoenix_core_css_content}}}</style>\n        {{/inline_core_css}}\n        {{^inline_core_css}}\n          <link rel=\"stylesheet\" href=\"{{phoenix_core_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n        {{/inline_core_css}}\n      {{/logged_in}}\n      {{^logged_in}}\n        <link rel=\"stylesheet\" href=\"{{phoenix_core_logged_out_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n      {{/logged_in}}\n\n      {{#render_page_content}}\n        {{#no_script}}\n          <link rel=\"stylesheet\" href=\"/phoenix/css/noscript.css\" type=\"text/css\" media=\"screen\" />\n        {{/no_script}}\n      {{/render_page_content}}\n    {{/is_t1}}\n\n    {{#render_page_content}}\n      <link rel=\"canonical\" href=\"{{canonical_url}}\" />\n    {{/render_page_content}}\n\n    {{#noscript_detection}}\n      <noscript>\n        {{#noscript_url}}\n          <meta http-equiv=refresh content=\"0; URL={{noscript_url}}\" />\n        {{/noscript_url}}\n      </noscript>\n    {{/noscript_detection}}\n\n    {{#theme_user}}\n      {{#is_t1}}\n        {{>user_css_t1}}\n      {{/is_t1}}\n      {{^is_t1}}\n        {{>user_css_p1}}\n      {{/is_t1}}\n      {{>bg_img_css}}\n    {{/theme_user}}\n\n    {{#render_page_content}}\n      <script>{{{swift_preboot_js}}}</script>\n    {{/render_page_content}}\n\n\n    {{#include_more_css_early}}{{>more_css}}{{/include_more_css_early}}\n\n\n    <script>{{{google_analytics_js}}}</script>\n\n  </head>\n{{#is_t1}}\n  {{>t1_body}}\n{{/is_t1}}\n{{^is_t1}}\n  <body class=\"{{^theme}}user-style-twttr{{/theme}} {{theme}} {{locale_css}} {{^render_page_content}}loading-body{{/render_page_content}} {{#logged_in}} logged-in {{/logged_in}} {{^logged_in}} logged-out {{/logged_in}}\">\n    <div id=\"doc\">\n      <div id=\"top-stuff\" class=\"js-topbar\">\n        <div id=\"banners\" class=\"js-banners\" style=\"clear:both;\">\n          {{#became_user}}{{>became_user_banner}}{{/became_user}}\n          {{#noscript_banner}}<noscript>{{>noscript_banner}}</noscript>{{/noscript_banner}}\n          {{#logged_in}}{{>slow_load_banner}}{{/logged_in}}\n        </div>\n        <div id=\"top-bar-outer\">\n          <div id=\"top-bar-bg\"></div>\n          <div id=\"top-bar\">\n            <div class=\"top-bar-inside\">\n              {{>phoenix_top_bar}}\n            </div>\n          </div>\n          <div id=\"message-drawer\"></div>\n        </div>\n      </div>\n\n      \n      <div id=\"page-outer\" {{#expando}}class=\"flush-to-top\"{{/expando}}>\n        {{^logged_in}}\n          {{#home_page}}\n            <div id=\"front-container\" class=\"js-front-container\">\n              {{>front_page}}\n            </div>\n          {{/home_page}}\n        {{/logged_in}}\n\n        <div id=\"page-container\" class=\"page-container {{#container_class}}{{container_class}}{{/container_class}}\">\n          <div{{#page_node_id}} id=\"{{page_node_id}}\"{{/page_node_id}}>\n            {{#home_page}}\n              {{#current_user}}\n                {{>home_page}}\n              {{/current_user}}\n            {{/home_page}}\n\n            {{#four_oh_four_page}}\n              {{>404_page}}\n            {{/four_oh_four_page}}\n\n            {{#profile_page}}\n              {{>profile_page}}\n            {{/profile_page}}\n\n            {{#mobile_gallery_page}}\n              {{>mobile_gallery_page}}\n            {{/mobile_gallery_page}}\n          </div>\n        </div>\n      </div>\n\n      \n      {{^logged_in}}\n        {{#home_page}}\n          <div class=\"homepage-gradient\"></div>\n          <div class=\"homepage-gold-bar\"></div>\n        {{/home_page}}\n      {{/logged_in}}\n\n      <div id=\"message-notifications\"></div>\n    </div>\n\n    <div id=\"flash-message-storage\" style=\"display:none\"></div>\n    <div id=\"flash-object-container\"></div>\n\n    <div id=\"off-screen-preload\">\n      <div class=\"content-fe-sprites\"></div>\n    </div>\n\n    {{#escaped_js_redirect_path}}\n    <script type=\"text/javascript\">\n      \n        window.location.replace('{{escaped_js_redirect_path}}');\n    </script>\n    {{/escaped_js_redirect_path}}\n\n    {{>javascript_includes}}\n\n    {{#include_more_css}}\n      {{^include_more_css_early}}{{>more_css}}{{/include_more_css_early}}\n    {{/include_more_css}}\n  </body>\n{{/is_t1}}\n\n</html>\n",
            "phoenix_head": "<title>{{page_title}}</title>\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n<meta charset=\"utf-8\" />\n\n{{^logged_in}}\n  {{#meta_description}}\n    <meta name=\"description\" content=\"{{meta_description}}\" />\n  {{/meta_description}}\n{{/logged_in}}\n\n{{#dns_prefetch}}\n  <link rel=\"dns-prefetch\" href=\"{{.}}\">\n{{/dns_prefetch}}\n\n<script type=\"text/javascript\" charset=\"utf-8\">\n  \n  \n  document.domain = 'twitter.com';\n\n  // this will be copied to twttr.appStartTime once our JS has started up\n  document.startTime = new Date().getTime();\n  var twttr = {};\n  twttr.versionName = 'phoenix';\n  {{#is_t1}}twttr.isT1 = true;{{/is_t1}}\n  twttr.didPingKeynote = false;\n  twttr.keynoteTTFTPing = function() {\n    if (!twttr.didPingKeynote && window.location.href.indexOf('keynoteTest') > 0) {\n      var image = document.createElement('img');\n      image.src = '/images/keynote.gif';\n      twttr.didPingKeynote = true;\n    }\n  }\n\n  {{{fake_console_js}}}\n\n  {{#include_events_reroute}}\n    twttr.griffin = {\n      current: {{{active_events}}}\n    };\n\n    \n    {{{swift_reroute}}}\n  {{/include_events_reroute}}\n\n</script>\n\n{{#ttft_data}}\n<script type=\"text/javascript\">\nwindow.ttftData={{{ttft_data}}};{{{ttft_js}}}\n</script>\n{{/ttft_data}}\n\n<script type=\"text/javascript\">{{{watch_script}}}</script>\n<script type=\"text/javascript\">\n  {{#js_watch_enabled}}\n    WATCH.activate();\n    WATCH.natives();\n  {{/js_watch_enabled}}\n</script>\n\n\n{{^is_admin}}\n  {{>frame_busting}}\n{{/is_admin}}\n\n{{#include_ie9_meta}}\n  <link href=\"/favicons/favicon32x32.ico\" rel=\"shortcut icon\" type=\"image/x-icon\">\n{{/include_ie9_meta}}\n{{^include_ie9_meta}}\n  <link href=\"/favicons/favicon.ico\" rel=\"shortcut icon\" type=\"image/x-icon\">\n{{/include_ie9_meta}}\n\n{{#base_url}}<base href=\"{{base_url}}\" />{{/base_url}}\n",
            "phoenix_signup": "<!DOCTYPE html>\n<html lang=\"{{locale}}\">\n  <head>\n    {{>phoenix_head}}\n\n    <script>\n      twttr.versionName = \"phoenix-signup\";\n      {{^abtest_recaptcha_in_your_language_154_not_translated}}\n        twttr.pageLocale = \"{{locale}}\";\n      {{/abtest_recaptcha_in_your_language_154_not_translated}}\n      {{#is_selenium}}\n      // loadrunner target that we know exists\n      twttr.recaptchaUrlForTest = 'constants';\n      {{/is_selenium}}\n    </script>\n\n    {{^assets_from_cdn}}\n      {{#is_t1}}\n        <link rel=\"stylesheet\" href=\"{{signup_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n      {{/is_t1}}\n      {{^is_t1}}\n        {{#css_files}}\n          <link rel=\"stylesheet\" href=\"{{file_name}}\" type=\"text/css\" media=\"screen\" />\n        {{/css_files}}\n      {{/is_t1}}\n    {{/assets_from_cdn}}\n\n    {{#assets_from_cdn}}\n      <link rel=\"stylesheet\" href=\"{{signup_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n    {{/assets_from_cdn}}\n\n    <script>{{{google_analytics_js}}}</script>\n  </head>\n  {{>t1_signup}}\n</html>\n",
            "phoenix_top_bar": "<div class=\"static-links\">\n  <div id=\"logo\">\n    <a href=\"{{index_path}}\">Twitter</a>\n  </div>\n  <form id=\"search-form\" class=\"js-search-form\" action=\"{{search_path}}\" method=\"GET\">\n    <span class=\"glass js-search-action\"><i></i></span>\n    <input value=\"\" placeholder=\"Search\" name=\"q\" id=\"search-query\" type=\"text\" />\n  </form>\n  <div id=\"global-nav\">\n    <ul id=\"global-actions\">\n      {{#current_user}}\n        <li id=\"global-nav-home\" data-global-action=\"home\"><a href=\"{{index_path}}\">Home</a></li>\n        <li id=\"global-nav-profile\" data-global-action=\"profile\"><a href=\"{{profile_path}}\">Profile</a></li>\n        <li id=\"global-nav-messages\" data-global-action=\"messages\"><a href=\"{{messages_path}}\">Messages</a></li>\n        <li id=\"global-nav-who_to_follow\" data-global-action=\"who_to_follow\"><a href=\"{{who_to_follow_path}}\">Who To Follow</a></li>\n      {{/current_user}}\n    </ul>\n  </div>\n  <div id=\"sections\"></div>\n</div>\n<div class=\"active-links\">\n  {{#current_user}}\n    <a id=\"new-tweet\" class=\"js-global-new-tweet\" title=\"New Tweet\">\n      <span>New Tweet</span>\n    </a><span class=\"vr\">\n    </span><span id=\"session\" class=\"loggedin js-session\">\n      <a class=\"profile-links\" href=\"#\">\n        <img src=\"{{profile_image_url}}\" />\n      </a>\n      <span id=\"screen-name\">\n        {{screen_name_from_server}}\n      </span> <span id=\"screen-name-dropdown\"> </span>\n      <div class=\"dropdown\">\n        {{>user_dropdown}}\n      </div>\n    </span>\n  {{/current_user}}\n  {{^current_user}}\n    <div id=\"session\" class=\"js-session\">\n      <a id=\"signin-link\" href=\"{{login_path}}\">\n        <em>Have an account?</em>\n        <strong>Sign in</strong><i></i>\n      </a>\n      <a id=\"signup-link\" href=\"{{signup_path}}?context=login\">\n        <em>New to Twitter?</em>\n        <strong>Join Today »</strong>\n      </a>\n      <div id=\"signin-dropdown\" class=\"dropdown dark\">\n        {{>signin_form}}\n      </div>\n    </div>\n  {{/current_user}}\n</div>\n",
            "phone_setup_prompt": "<div>Before you can receive mobile notifications for @{{screen_name}}'s Tweets, you need to set up your phone.<div>\n{{>prompt}}\n",
            "phone_tweets_off_prompt": "<div>Before you can receive mobile notifications for @{{screen_name}}'s Tweets, you need to enable the Tweet notification setting.<div>\n{{>prompt}}\n",
            "photo_control": "<div class=\"turkey-control\">\n  <div class=\"turkey-add-action\">\n    <div class=\"turkey\"></div>\n    <div class=\"swf\"></div>\n  </div>\n  <form method=\"post\" action=\"{{api_url}}/1/statuses/update_with_media.iframe\" enctype=\"multipart/form-data\" class=\"turkey-selected-files\" target=\"{{tweet_box_id}}\"></form>\n  <iframe class=\"turkey-post-target\" name=\"{{tweet_box_id}}\"></iframe>\n</div>",
            "photo_timeout_error_message": "Tweeting a photo timed out. Try sending your Tweet again in a minute.",
            "photobucket_attribution": "<div class='media-attribution'>\n  <span>powered by</span> <img src=\"/phoenix/img/turkey-icon.png\"/> <a target='_blank' data-media-type='{{media_type}}' class='media-attribution-link' href='http://photobucket.com/twitter'>Photobucket</a>\n</div>",
            "profile_actions": "{{#rendering_on_server}}\n  \n  {{^is_current_user}}\n    {{#no_follow_bar}}\n       {{>user_actions}}\n    {{/no_follow_bar}}\n    {{^no_follow_bar}}\n      \n      <div class=\"follow-bar\">\n        {{>user_actions}}\n      </div>\n    {{/no_follow_bar}}\n  {{/is_current_user}}\n  {{#is_current_user}}\n    {{>edit_profile_button}}\n  {{/is_current_user}}\n{{/rendering_on_server}}\n\n{{^rendering_on_server}}\n  \n  {{^is_current_user}}\n    {{>combo_follow_button}}\n  {{/is_current_user}}\n  {{#is_current_user}}\n    {{>edit_profile_button}}\n  {{/is_current_user}}\n{{/rendering_on_server}}\n",
            "profile_banner": "<div class=\"profile-banner\">\n  <div class=\"banner-shadow\"></div>\n  <img src=\"{{banner_url}}\">\n</div>",
            "profile_dashboard": "<div class=\"dashboard profile-dashboard\">\n  {{#render_page_content}}\n    {{#rendering_on_server}}\n      {{#profile_user}}\n      <div class=\"component\">\n        {{>dashboard_profile_stats}}\n        <hr/>\n      </div>\n      <div class=\"component\">\n        {{>generic_footer}}\n      </div>\n      {{/profile_user}}\n    {{/rendering_on_server}}\n  {{/render_page_content}}\n</div>\n",
            "profile_follow_card": "<div class=\"flex-module clearfix {{#is_current_user_withheld}}withheld-user{{/is_current_user_withheld}}\">\n  {{#is_current_user_withheld}}\n    <div class=\"withheld-message\">{{description}}  <a href={{#is_withheld_copyright}}\"{{withheld_copyright_help_path}}\"{{/is_withheld_copyright}}{{^is_withheld_copyright}}\"{{withheld_help_path}}\"{{/is_withheld_copyright}} target=\"_blank\">Learn more</a></div>\n  {{/is_current_user_withheld}}\n\n  <a href=\"{{raw_profile_image_url}}\" class=\"profile-picture\" target=\"_blank\">\n    <img src=\"{{reasonably_small_profile_image_url}}\" alt=\"{{name}}\" class=\"avatar size128\">\n  </a>\n  <div class=\"profile-card-inner js-actionable-user\" data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\">\n    <h1 class=\"fullname\">\n      {{name}}\n      {{#verified}}<i class=\"verified-large\" title=\"Verified profile\"></i>{{/verified}}\n      {{#is_translator}}\n        <a class=\"translator-badge\" href=\"{{translator_profile_path}}\">\n          <i class=\"translator-large\" title=\"Translator\"></i>\n        </a>\n      {{/is_translator}}\n    </h1>\n    <h2 class=\"username\">\n      <span class=\"js-username\"></span>\n      {{#protected}}<i class=\"sm-lock\"></i>{{/protected}}\n    </h2>\n    <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{{linkified_description}}}</p>\n    <p class=\"location-and-url\">\n      <span class=\"location\">\n        {{location}}\n      </span>\n      {{#location}}\n        {{#display_url_or_url}}\n          <span class=\"divider\">·</span>\n        {{/display_url_or_url}}\n      {{/location}}\n      <span class=\"url\">\n        <a target=\"_blank\" rel=\"me nofollow\" href=\"{{url}}\">\n          {{{display_url_or_url}}}\n        </a>\n      </span>\n    </p>\n    {{#is_only_admin_accessible}}\n      {{>admin_banner}}\n    {{/is_only_admin_accessible}}\n  </div>\n  <div class=\"profile-card-actions js-profile-card-actions\">\n    <div class=\"follow-btn-container\">\n      {{>profile_actions}}\n    </div>\n    {{>mini_profile_stats}}\n  </div>\n</div>\n",
            "profile_header": "{{%TRANSLATION-HINT mode=profile_tabs}}\n\n<div class=\"profile-header\" {{#user_data}}data-user=\"{{user_data}}\"{{/user_data}} data-screen-name=\"{{screen_name}}\">\n  {{#is_only_admin_accessible}}\n    {{>admin_banner}}\n  {{/is_only_admin_accessible}}\n  <div class=\"profile-info clearfix\">\n\n    {{#is_withheld}}\n      <div class=\"withheld-message\">{{description}} <a href={{#is_withheld_copyright}}\"{{withheld_copyright_help_path}}\"{{/is_withheld_copyright}}{{^is_withheld_copyright}}\"{{withheld_help_path}}\"{{/is_withheld_copyright}} target=\"_blank\">Learn more</a></div>\n    {{/is_withheld}}\n\n    <div class=\"profile-image-container\">\n      <a href=\"{{raw_profile_image_url}}\" class='profile-picture' target=\"_blank\"><img src=\"{{reasonably_small_profile_image_url}}\" alt=\"{{name}}\" /></a>\n    </div>\n    <div class=\"profile-details\">\n      {{>full_name}}\n      <div class=\"screen-name-and-location\"><span class=\"screen-name screen-name-{{screen_name}} pill\">@{{screen_name}}</span> {{location}}</div>\n      <div class=\"bio\">{{{linkified_description}}}</div>\n      <div class=\"url\"><a target=\"_blank\" rel=\"me nofollow\" href=\"{{url}}\">{{{display_url_or_url}}}</a></div>\n    </div>\n  </div>\n  <div class=\"profile-actions-container {{#should_show_tweet_box}}preceeding-profile-tweet-box{{/should_show_tweet_box}}\" data-user-id=\"{{id}}\">\n    {{#rendering_on_server}}\n      <div class=\"component profile-actions-component\">\n        {{>profile_actions}}\n      </div>\n    {{/rendering_on_server}}\n  </div>\n  {{#rendering_on_server}}\n    {{#should_show_tweet_box}}\n    <div class=\"profile-actions profile-tweet-box profile-tweet-box-placeholder\"></div>\n    {{/should_show_tweet_box}}\n  {{/rendering_on_server}}\n\n    <ul class=\"stream-tabs\">\n      <li class=\"stream-tab stream-tab-tweets {{#active_tab_tweets}}active{{/active_tab_tweets}}\">\n        <a class=\"tab-text js-nav\" href=\"{{profile_path}}\">Tweets</a>\n      </li>\n      {{#can_view}}\n        <li class=\"stream-tab stream-tab-favorites {{#active_tab_favorites}}active{{/active_tab_favorites}}\">\n          <a class=\"tab-text\" href=\"{{user_favorites_path}}\">Favorites</a>\n        </li>\n      {{/can_view}}\n      {{#social_context}}\n        <li class=\"stream-tab stream-tab-following dropdown-link {{#active_tab_following}}active{{/active_tab_following}}\">\n          <p class=\"tab-text\">Following<i></i></p>\n        </li>\n      {{/social_context}}\n      {{^social_context}}\n      <li class=\"stream-tab stream-tab-following {{#active_tab_following}}active{{/active_tab_following}}\">\n        <a class=\"tab-text\" href=\"{{user_following_path}}\">Following</a>\n      </li>\n      {{/social_context}}\n      {{#social_context}}\n      <li class=\"stream-tab stream-tab-followers dropdown-link {{#active_tab_followers}}active{{/active_tab_followers}}\">\n        <p class=\"tab-text\">Followers<i></i></p>\n      </li>\n      {{/social_context}}\n      {{^social_context}}\n      <li class=\"stream-tab stream-tab-followers {{#active_tab_followers}}active{{/active_tab_followers}}\">\n        <a class=\"tab-text\" href=\"{{user_followers_path}}\">Followers</a>\n      </li>\n      {{/social_context}}\n      {{#has_pending_requests}}\n        <li class=\"stream-tab stream-tab-pending {{#active_tab_pending}}active{{/active_tab_pending}}\">\n          <a class=\"tab-text pending-follow\" title='Follower requests' href=\"{{follower_requests_path}}\">Requests</a>\n        </li>\n      {{/has_pending_requests}}\n      <li class=\"stream-tab stream-tab-lists dropdown-link {{#active_tab_lists}}active{{/active_tab_lists}}\">\n        <p class=\"tab-text\">Lists<i></i></p>\n      </li>\n    </ul>\n</div>\n",
            "profile_lists_stream_view_toggler": "{{>stream_view_toggler}}",
            "profile_page": "{{^render_withheld}}\n  <div class=\"main-content\">\n    {{#render_page_content}}\n      {{#profile_user}}\n        {{>profile_header}}\n      {{/profile_user}}\n      {{>stream_manager}}\n      {{#rendering_on_server}}<script>if (window.ttft) window.ttft.serverRendered('profile');</script>{{/rendering_on_server}}\n    {{/render_page_content}}\n  </div>\n  {{>profile_dashboard}}\n  {{>details_pane_container}}\n{{/render_withheld}}\n{{#render_withheld}}\n  {{>profile_page_withheld}}\n{{/render_withheld}}\n",
            "profile_page_withheld": "<div class=\"withheld-content\">\n  {{#render_page_content}}\n  <div class=\"withheld-user\">\n    {{#profile_user}}\n      <h2>@{{screen_name}}</h2>\n      <p>{{description}}  <a href={{#is_withheld_copyright}}\"{{withheld_copyright_help_path}}\"{{/is_withheld_copyright}}{{^is_withheld_copyright}}\"{{withheld_help_path}}\"{{/is_withheld_copyright}} target=\"_blank\">Learn more</a></p>\n    {{/profile_user}}\n  </div>\n  {{/render_page_content}}\n  <div class=\"profile-actions-container\"/>\n</div>",
            "profile_pane": "<div class=\"profile-modal\" {{{source_impression_id}}} {{#impression_cookie}}data-impression-cookie=\"{{impression_cookie}}\"{{/impression_cookie}}>\n\n  <div class=\"profile-modal-header js-twttr-dialog-draggable\">\n    <div class=\"twttr-dialog-close\"/>\n    <a class=\"account-group js-account-group js-bubble-event\" href=\"{{profile_path}}\" data-element-term=\"view_profile_link\" {{#impression_cookie}}data-send-impression-cookie=\"true\"{{/impression_cookie}}>\n      <img class=\"avatar\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" data-user-id=\"{{id}}\">\n    </a>\n    <div class=\"profile-modal-header-inner\">\n      <h2 class=\"fullname\">\n        <a href=\"{{profile_path}}\" {{#impression_cookie}}data-send-impression-cookie=\"true\"{{/impression_cookie}}>{{name}}</a>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        {{#is_translator}}\n          <a class=\"translator-badge\" href=\"{{translator_profile_path}}\">\n            <i class=\"translator\" title=\"Translator\"></i>\n          </a>\n        {{/is_translator}}\n      </h2>\n      <h3 class=\"username\">\n        <a class=\"pretty-link js-screen-name\" href=\"{{profile_path}}\" {{#impression_cookie}}data-send-impression-cookie=\"true\"{{/impression_cookie}}><s>@</s>{{screen_name}}</a>\n        {{^is_current_user}}\n          <span class=\"follow-status js-follows-you\">follows you</span>\n        {{/is_current_user}}\n        {{#protected}}<i class=\"sm-lock\"></i>{{/protected}}\n      </h3>\n    </div>\n  </div>\n\n  <div class=\"profile-modal-extended\">\n    <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{{linkified_description}}}</p>\n    <p class=\"location-and-url\">\n      <span class=\"location\">\n        {{location}}\n      </span>\n      {{#location}}\n        {{#display_url_or_url}}\n          <span class=\"divider\">·</span>\n        {{/display_url_or_url}}\n      {{/location}}\n      <span class=\"url\">\n        <a target=\"_blank\" rel=\"me nofollow\" href=\"{{url}}\">\n          {{{display_url_or_url}}}\n        </a>\n      </span>\n    </p>\n    <p class=\"social-proof js-mini-social-proof-container\"></p>\n  </div>\n\n  {{>mini_profile_stats}}\n\n  <div class=\"mini-profile-footer {{#protected}}protected-mini-profile-footer{{/protected}}\">\n    <div class=\"follow-bar\">\n      <small><a class=\"view-profile js-mini-profile-user\" href=\"{{profile_path}}\" {{#impression_cookie}}data-send-impression-cookie=\"true\"{{/impression_cookie}}>Go to full profile →</a></small>\n      {{>profile_actions}}\n    </div>\n  </div>\n\n</div>\n",
            "profile_popup": "{{#user_view}}\n    <div class=\"profile-modal-header\"  data-user-id=\"{{id}}\" data-screen-name=\"{{screen_name}}\">\n      <a class=\"account-group js-nav\" href=\"{{profile_path}}\" data-send-impression-cookie=\"true\">\n        <img class=\"avatar\" src=\"{{profile_image_url}}\" alt=\"{{name}}\">\n      </a>\n      <div class=\"profile-modal-header-inner\">\n        <h2 class=\"fullname\">\n          <a class=\"js-nav\" href=\"{{profile_path}}\" data-send-impression-cookie=\"true\">{{name}}</a>\n          {{#verified}}<i class=\"verified\"></i>{{/verified}}\n          {{#is_translator}}\n            <a class=\"translator-badge\" href=\"{{translator_profile_path}}\">\n              <i class=\"translator\" title=\"Translator\"></i>\n            </a>\n          {{/is_translator}}\n        </h2>\n        <h3 class=\"username\">\n          <a class=\"pretty-link js-nav\" href=\"{{profile_path}}\" data-send-impression-cookie=\"true\"><s>@</s>{{screen_name}}</a>\n          {{^is_current_user}}\n            {{#follows_you}}\n              <span class=\"follow-status\">follows you</span>\n            {{/follows_you}}\n          {{/is_current_user}}\n          {{#protected}}<i class=\"sm-lock\"></i>{{/protected}}\n        </h3>\n      </div>\n    </div>\n\n    <div class=\"profile-modal-extended\">\n      <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{{linkified_description}}}</p>\n      <p class=\"location-and-url\">\n        <span class=\"location\">\n          {{location}}\n        </span>\n        {{#location}}\n          {{#url}}\n            <span class=\"divider\">·</span>\n          {{/url}}\n        {{/location}}\n        <span class=\"url\">\n          {{>profiles/swift_profile_user_url}}\n        </span>\n      </p>\n      {{^is_current_user}}\n        {{>mini_social_proof}}\n      {{/is_current_user}}\n    </div>\n\n    {{#page_links}}\n      {{>mini_profile_stats}}\n    {{/page_links}}\n\n    <div class=\"mini-profile-footer {{#protected}}profile-popup-rounded-bottom{{/protected}}{{^last_three_tweets}}profile-popup-rounded-bottom{{/last_three_tweets}}\">\n      <div class=\"follow-bar\">\n        <small><a class=\"view-profile js-nav\" href=\"{{profile_path}}\" data-send-impression-cookie=\"true\">Go to full profile →</a></small>\n        {{#is_current_user}}\n          <a class=\"btn edit-profile-btn js-nav\" href=\"{{settings_profile_path}}\">Edit your profile</a>\n        {{/is_current_user}}\n        {{^is_current_user}}\n          {{>user_actions}}\n        {{/is_current_user}}\n      </div>\n    </div>\n\n    {{#can_view_tweets}}\n    <div class=\"recent-tweets clearfix\">\n      {{{last_three_tweets}}}\n    </div>\n    {{/can_view_tweets}}\n{{/user_view}}\n",
            "profile_signup_call_out": "<div class=\"module signup-call-out profile-signup-call-out\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-header\">\n      <h2>Follow {{name}}</h2>\n    </div>\n    {{>partial_signup_form}}\n  </div>\n</div>\n",
            "profile_similar_to_header": "<div class=\"profile-similar-to-header clearfix\">\n  <a class=\"profile-back-link\" href=\"{{profile_path}}\">← Back to @{{screen_name}}</a>\n  <div class=\"profile-similar-to-image-container component\">\n    <a href=\"{{profile_path}}\" class=\"user-profile-link user-thumb\" target=\"_blank\"><img src=\"{{profile_image_url}}\" alt=\"{{name}}\" /></a>\n    <h2 >Similar to @{{screen_name}}</h2>\n  </div>\n</div>\n",
            "profile_subpage_dashboard": "<a id=\"user-shuffle\" title=\"{{#logged_in}}Jump to someone you follow{{/logged_in}}{{^logged_in}}Jump to a featured account{{/logged_in}}\" />\n<div class=\"dashboard profile-subpage-dashboard\">\n  {{#render_page_content}}\n    {{#rendering_on_server}}\n      {{#profile_user}}\n      <div class=\"component\">\n        {{>generic_footer}}\n      </div>\n      {{/profile_user}}\n    {{/rendering_on_server}}\n  {{/render_page_content}}\n</div>\n",
            "profile_tweet_to_button": "<a class=\"js-tweet-btn module btn tweet-btn large-tweet-btn\" href=\"#\"><i class=\"tweet-new\"></i><span class=\"tweet-to-text\">Tweet to {{name}}</span></a>",
            "profile_tweetbox": "<h3>Tweet to {{name}}</h3>",
            "swift_profile_dashboard": "<div class=\"dashboard\">\n  {{#show_profile_redesign}}\n    {{>profiles/swift_profile_nav}}\n  {{/show_profile_redesign}}\n\n  {{#logged_in}}\n    {{^is_current_user}}\n      {{>profiles/swift_profile_tweet_to}}\n    {{/is_current_user}}\n  {{/logged_in}}\n  {{^logged_in}}\n    {{>profile_signup_call_out}}\n  {{/logged_in}}\n\n  {{^show_profile_redesign}}\n    {{>profiles/swift_profile_nav}}\n  {{/show_profile_redesign}}\n\n  {{#show_profile_redesign}}\n    {{#photo_thumbnails}}\n      {{>media/grid_layout_media_thumbnails}}\n    {{/photo_thumbnails}}\n  {{/show_profile_redesign}}\n\n  {{>japanese_ad_iframe}}\n\n  {{#logged_in}}\n    {{#similar_to}}\n      <div class=\"component\" data-component-term=\"similar_user_recommendations\">\n        {{>dashboard_user_similarities}}\n      </div>\n    {{/similar_to}}\n  {{/logged_in}}\n  {{>footer}}\n</div>\n",
            "swift_profile_enhanced_nav": "<ul class=\"timelines-navigation\">\n  <li class=\"profile-nav-btn {{#on_tweets}}active{{/on_tweets}}\">\n    <a href=\"{{tweets_path}}\" class=\"profile-nav-link js-tooltip\" data-placement=\"bottom\" title=\"Tweets\" original-title=\"Tweets\" data-original-title=\"Tweets\"><i class=\"profile-nav-icon icon-nav-tweets\"></i></a>\n  </li>\n  <li class=\"profile-nav-btn {{#on_following}}active{{/on_following}}\">\n    <a href=\"{{following_path}}\" class=\"profile-nav-link js-tooltip\" data-placement=\"bottom\" title=\"People\" original-title=\"People\" data-original-title=\"People\"><i class=\"profile-nav-icon icon-nav-people\"></i></a>\n  </li>\n  <li class=\"profile-nav-btn {{#on_lists}}active{{/on_lists}}\">\n    <a href=\"{{lists_path}}\" class=\"profile-nav-link js-tooltip\" data-placement=\"bottom\" title=\"Lists\" original-title=\"Lists\" data-original-title=\"Lists\"><i class=\"profile-nav-icon icon-nav-lists\"></i></a>\n  </li>\n  <li class=\"profile-nav-btn {{#on_favorites}}active{{/on_favorites}}\">\n    <a href=\"{{favorites_path}}\" class=\"profile-nav-link js-tooltip\" data-placement=\"bottom\" title=\"Favorites\" original-title=\"Favorites\" data-original-title=\"Favorites\"><i class=\"profile-nav-icon icon-nav-favorites\"></i></a>\n  </li>\n</ul>",
            "swift_profile_header": "<div class=\"module profile-card component{{#show_profile_redesign}} profile-header{{/show_profile_redesign}}\" data-component-term=\"profile_follow_card\" {{#user_view}}{{#impression_id}}data-impression-id=\"{{impression_id}}\"{{/impression_id}}{{/user_view}}>\n  <div class=\"profile-header-inner flex-module clearfix {{#is_current_user_withheld}}withheld-user{{/is_current_user_withheld}}\">\n\n    {{#is_current_user_withheld}}\n      <div class=\"withheld-message\">{{description}}  <a href={{#is_withheld_copyright}}\"{{withheld_copyright_help_path}}\"{{/is_withheld_copyright}}{{^is_withheld_copyright}}\"{{withheld_help_path}}\"{{/is_withheld_copyright}} target=\"_blank\">Learn more</a></div>\n    {{/is_current_user_withheld}}\n\n    {{#should_show_add_photo_image}}\n    <a href=\"{{settings_profile_path}}\" class=\"profile-picture\" target=\"_blank\">\n      {{^show_profile_redesign}}\n        <img src=\"{{default_profile_add_photo}}\" alt=\"{{name}}\" class=\"avatar size128\">\n      {{/show_profile_redesign}}\n      {{#show_profile_redesign}}\n        <img src=\"{{default_profile_add_photo}}\" alt=\"{{name}}\" class=\"avatar size73\">\n      {{/show_profile_redesign}}\n    </a>\n    {{/should_show_add_photo_image}}\n    {{^should_show_add_photo_image}}\n    <a href=\"{{raw_profile_image_url}}\" class=\"profile-picture\" target=\"_blank\">\n      {{^show_profile_redesign}}\n        <img src=\"{{reasonably_small_profile_image_url}}\" alt=\"{{name}}\" class=\"avatar size128\">\n      {{/show_profile_redesign}}\n      {{#show_profile_redesign}}\n        <img src=\"{{bigger_profile_image_url}}\" alt=\"{{name}}\" class=\"avatar size73\">\n      {{/show_profile_redesign}}\n    </a>\n    {{/should_show_add_photo_image}}\n\n    <div class=\"profile-card-inner\" data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\">\n      <h1 class=\"fullname\">\n        {{name}}\n        {{#verified}}<i class=\"verified-large\" title=\"Verified profile\"></i>{{/verified}}\n        {{#is_translator}}\n          <a class=\"translator-badge\" href=\"{{translator_profile_path}}\">\n            <i class=\"translator-large\" title=\"Translator\"></i>\n          </a>\n        {{/is_translator}}\n      </h1>\n      <h2 class=\"username\">\n        <span class=\"screen-name\"><s>@</s>{{screen_name}}</span>\n        {{^is_current_user}}\n          {{#follows_you}}\n            <span class=\"follow-status\">follows you</span>\n          {{/follows_you}}\n        {{/is_current_user}}\n        {{#protected}}<i class=\"sm-lock\"></i>{{/protected}}\n      </h2>\n      <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{{linkified_description}}}</p>\n      <p class=\"location-and-url\">\n        <span class=\"location\">\n          {{location}}\n        </span>\n        {{#location}}\n          {{#url}}\n            <span class=\"divider\">·</span>\n          {{/url}}\n        {{/location}}\n\n      <span class=\"url\">\n        {{>profiles/swift_profile_user_url}}\n      </span>\n\n      </p>\n      {{#is_only_admin_accessible}}\n        {{>admin_banner}}\n      {{/is_only_admin_accessible}}\n    </div>\n\n    {{^show_profile_redesign}}\n      <div class=\"profile-card-actions\">\n        {{#is_current_user}}\n          <a class=\"btn edit-profile-btn js-nav\" href=\"{{settings_profile_path}}\">Edit your profile</a>\n        {{/is_current_user}}\n        {{^is_current_user}}\n          {{>user_actions}}\n        {{/is_current_user}}\n\n        {{#page_links}}\n          {{>mini_profile_stats}}\n        {{/page_links}}\n      </div>\n    {{/show_profile_redesign}}\n  </div>\n  {{^show_profile_redesign}}\n    {{#show_legacy_banner}}\n      {{>profile_banner}}\n    {{/show_legacy_banner}}\n  {{/show_profile_redesign}}\n  {{#show_profile_redesign}}\n    <div class=\"flex-module profile-banner-footer clearfix\">\n      {{#page_links}}\n        {{>mini_profile_stats}}\n      {{/page_links}}\n\n      {{#is_current_user}}\n        <button class=\"btn dm-button\" type=\"button\"></button>\n      {{/is_current_user}}\n      {{^is_current_user}}\n        {{>user_actions}}\n      {{/is_current_user}}\n    </div>\n  {{/show_profile_redesign}}\n</div>\n",
            "swift_profile_nav": "<div class=\"component\">\n  <div class=\"module profile-nav\">\n    {{#page_links}}\n    <ul class=\"js-nav-links\">\n      <li class=\"{{#on_tweets}}active{{/on_tweets}}\">\n        <a class=\"list-link js-nav\" href=\"{{tweets_path}}\" data-nav=\"profile\">Tweets<i class=\"chev-right\"></i></a>\n      </li>\n      <li class=\"{{#on_following}}active{{/on_following}}\">\n        <a class=\"list-link js-nav\" href=\"{{following_path}}\" data-nav=\"following\">Following<i class=\"chev-right\"></i></a>\n      </li>\n      <li class=\"{{#on_followers}}active{{/on_followers}}{{#on_followers_you_follow}}active{{/on_followers_you_follow}}\">\n        <a class=\"list-link js-nav\" href=\"{{followers_path}}\" data-nav=\"followers\">Followers<i class=\"chev-right\"></i></a>\n      </li>\n      <li class=\"{{#on_favorites}}active{{/on_favorites}}\">\n        <a class=\"list-link js-nav\" href=\"{{favorites_path}}\" data-nav=\"favorites\">Favorites<i class=\"chev-right\"></i></a>\n      </li>\n      {{#show_requests_link}}\n        <li class=\"{{#on_follower_requests}}active{{/on_follower_requests}}\">\n          <a class=\"list-link js-nav\" href=\"{{follower_requests_path}}\" data-nav=\"follower_requests\">Requests<i class=\"chev-right\"></i></a>\n        </li>\n      {{/show_requests_link}}\n      <li class=\"{{#on_lists}}active{{/on_lists}}\">\n        <a class=\"list-link\" href=\"{{lists_path}}\" data-nav=\"all_lists\">Lists<i class=\"chev-right\"></i></a>\n      </li>\n      {{^show_profile_redesign}}\n        {{#photo_thumbnails}}\n          {{>media/media_thumbnails}}\n        {{/photo_thumbnails}}\n      {{/show_profile_redesign}}\n    </ul>\n    {{/page_links}}\n  </div>\n</div>\n",
            "swift_profile_page": "{{#theme_user}}\n  {{>user_css_t1}}\n  {{>bg_img_css}}\n{{/theme_user}}\n{{#user_view}}\n  {{#show_profile_redesign}}\n    {{>profiles/swift_profile_dashboard}}\n    {{>profiles/swift_profile_header}}\n  {{/show_profile_redesign}}\n  {{^show_profile_redesign}}\n    {{>profiles/swift_profile_header}}\n    {{>profiles/swift_profile_dashboard}}\n  {{/show_profile_redesign}}\n\n  {{>profiles/swift_profile_suggested_users_shell}}\n{{/user_view}}\n{{>profiles/swift_profile_timeline}}\n",
            "swift_profile_suggested_users_shell": "<div class=\"component\" id=\"suggested-users\"></div>\n",
            "swift_profile_timeline": "<div class=\"content-main\" id=\"timeline\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      {{#enhanced_navigation}}\n        {{>profiles/swift_profile_enhanced_nav}}\n      {{/enhanced_navigation}}\n      {{#show_new_list_link}}\n        <span class=\"content-header-buttons js-header-button-container\">\n          {{>create_list_button}}\n        </span>\n      {{/show_new_list_link}}\n      <h2 class=\"js-timeline-title\">{{timeline_title}}\n        {{#toggle}}\n          <small class=\"view-toggler\">{{>stream_view_toggler}}</small>\n        {{/toggle}}\n      </h2>\n    </div>\n  </div>\n  {{#can_view_tweets}}\n    {{>timeline}}\n  {{/can_view_tweets}}\n  {{^can_view_tweets}}\n    {{>protected_user}}\n  {{/can_view_tweets}}\n</div>\n",
            "swift_profile_tweet_to": "<div class=\"module component\" data-component-term=\"profile_tweetbox\">\n  <div class=\"profile-tweet-box flex-module\" data-screen-name=\"{{screen_name}}\">\n    <div class=\"tweet-box-title\">\n      <h2>Tweet to {{name}}</h2>\n    </div>\n    {{>swift_tweet_box}}\n  </div>\n</div>\n",
            "swift_profile_user_url": "{{#display_url}}\n<a target=\"_blank\" rel=\"me nofollow\" href=\"{{tco_url}}\" title=\"{{expanded_url}}\">\n  {{display_url}}\n</a>\n{{/display_url}}\n\n{{^display_url}}\n<a target=\"_blank\" rel=\"me nofollow\" href=\"{{url}}\">\n  {{url}}\n</a>\n{{/display_url}}",
            "promoted_icon": "{{#promoted_content}}<i class=\"badge-tweet badge-tweet-{{disclosure_type}}\"></i><b>Promoted</b>{{/promoted_content}}",
            "prompt": "<div class=\"twttr-prompt\">\n  <div class=\"btn js-prompt-ok\">{{ok}}</div>\n  <div class=\"btn js-prompt-cancel\">{{cancel}}</div>\n</div>",
            "prompt_facebook": "\n{{>dismiss_button}}\n<div class=\"facebook\">\n  <h2>Send tweets to Facebook</h2>\n  <p>Share your tweets with your friends on Facebook.</p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action\" href=\"{{settings_profile_path}}#fb-button\">Try it out</a>\n</div>",
            "prompt_facebook_de": "\n\n{{>dismiss_button}}\n<div class=\"prompt facebook-de\">\n  <h2>Sende Tweets zu Facebook</h2>\n  <p>Teile Deine Tweets mit Deinen Freunden auf Facebook.</p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action js-nav\" href=\"{{settings_profile_path}}#fb-button\">Probiere es aus</a>\n</div>\n",
            "prompt_import": "\n{{>dismiss_button}}\n<div class=\"prompt import\">\n  <h2>Find your friends on Twitter</h2>\n  <p class=\"wide\">Import your contacts from <strong>{{email}}</strong> or</p>\n  <p class=\"narrow\">Import your contacts from <strong>{{email}}</strong></p>\n  <p class=\"narrow\">Select another service:</p>\n  <a class=\"services call-to-action\" href=\"{{who_to_follow_import_path}}\">\n    <span class=\"gmail\"></span>\n    <span class=\"yahoo\"></span>\n    <span class=\"msn\"></span>\n    <span class=\"aol\"></span>\n    <span class=\"linkedin\"></span>\n  </a>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a href=\"{{who_to_follow_import_path}}\" class=\"btn call-to-action\">Find friends</a>\n</div>\n",
            "prompt_import_inline": "\n{{>dismiss_button}}\n<div class=\"prompt import import-inline\">\n{{>dashboard_contact_import}}\n</div>\n",
            "prompt_invite": "\n{{>dismiss_button}}\n<div class=\"prompt invite\">\n  <h2>Invite friends via email</h2>\n  <p class=\"fine-print\">Lots of people to invite? Separate multiple email addresses with commas.</p>\n  <p class=\"fine-print\">\n    <a href=\"/invitations/email_preview\" class=\"js-popup\" name=\"invitation_email_preview\" data-popup=\"height=450,width=670\">See what you'll send them.</a>\n  </p>\n  <div class=\"promptbird-action-bar\">\n    <form>\n      <table class=\"flex-table\">\n        <tbody>\n          <tr>\n            <td class=\"flex-table-primary\">\n              <div class=\"flex-table-form\">\n                <textarea class=\"flex-table-input\" name=\"addresses\" placeholder=\"Your friend's email address\"></textarea>\n              </div>\n            </td>\n            <td class=\"flex-table-secondary\">\n              <button class=\"btn flex-table-btn js-submit call-to-action\" type=\"submit\" tabindex=\"0\">Send</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  </div>\n</div>\n",
            "prompt_language": "{{>dismiss_button}}\n<div class=\"language\" data-language=\"{{lang_code}}\"{{dir}}>\n  \n  <h2>{{speak_text}}</h2>\n  <p>\n    \n    {{available_text}}\n  </p>\n</div>\n<div class=\"promptbird-action-bar\"{{dir}}>\n  \n  <span class=\"btn call-to-action set-language\">{{button_text}}</span>\n</div>",
            "prompt_language_de": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"de\">\n  \n  <h2>Sprichst du deutsch?</h2>\n  <p>\n    \n    Twitter ist auf deutsch verfügbar. Klicke, um deine Spracheinstellung zu ändern.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">Verwende Twitter auf deutsch</span>\n</div>\n",
            "prompt_language_es": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"es\">\n  \n  <h2>¿Hablas español?</h2>\n  <p>\n    \n    Twitter esta disponible en español. Haz clic para cambiar tu configuración de idioma.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">Usa Twitter en español</span>\n</div>\n",
            "prompt_language_fil": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"fil\">\n  \n  <h2>Nagsasalita ka ba ng Filipino?</h2>\n  <p>\n    \n    Ang Twitter ay magagamit na sa Filipino. I-click upang baguhin ang iyong mga setting ng wika.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">Gamitin ang Twitter sa Filipino.</span>\n</div>\n",
            "prompt_language_fr": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"fr\">\n  \n  <h2>Parlez-vous français?</h2>\n  <p>\n    \n    Twitter est disponible en français. Cliquez pour changer de langue.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">Utiliser Twitter en français</span>\n</div>\n",
            "prompt_language_hi": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"hi\">\n  \n  <h2>क्या आप हिंदी बोलते हैं?</h2>\n  <p>\n    \n    ट्विट्टर हिन्दी में उपलब्ध है. अपनी भाषा सेटिंग बदलने के लिए क्लिक करें.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">हिंदी में ट्विट्टर का प्रयोग करें</span>\n</div>\n",
            "prompt_language_id": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"id\">\n  \n  <h2>Bisa berbahasa Indonesia?</h2>\n  <p>\n    \n    Twitter tersedia dalam Bahasa Indonesia. Klik untuk mengubah bahasa.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">Pakai Twitter dalam Bahasa Indonesia</span>\n</div>\n",
            "prompt_language_it": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"it\">\n    \n    <h2>Parli italiano?</h2>\n    \n    <p>Twitter è disponibile in italiano. Clicca per modificare le impostazioni sulla lingua</p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">Usa Twitter in italiano</span>\n</div>\n",
            "prompt_language_ja": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"ja\">\n    \n    <h2>日本語を使いますか？</h2>\n    <p>\n      \n      日本語で Twitter を利用できます。言語設定を変更するにはクリックしてください。\n    </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  \n  <span class=\"btn call-to-action set-language\">日本語で Twitter を利用する </span>\n</div>\n",
            "prompt_language_ko": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"ko\">\n      \n      <h2>한국어를 사용하세요?</h2>\n      \n      <p>\n        트위터를 한국어로 즐기실 수 있습니다. 클릭하면 언어설정으로 이동합니다.\n      </p>\n</div>\n<div class=\"promptbird-action-bar\">\n      \n      <span class=\"btn call-to-action set-language\">한국어로 트위터 이용하기</span>\n</div>\n",
            "prompt_language_msa": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"msa\">\n  \n  <h2>Anda cakap Malaysia?</h2>\n  <p>\n    \n    Twitter tersedia dalam Bahasa Malaysia. Klik untuk mengubah tetapan bahasa anda.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">Pakai Twitter dalam Bahasa Malaysia.</span>\n</div>\n",
            "prompt_language_nl": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"nl\">\n  \n  <h2>Spreek je Nederlands?</h2>\n  <p>\n    \n    Twitter is beschikbaar in het Nederlands. Klik om je taalinstelling te wijzigen.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">Twitter gebruiken in het Nederlands.</span>\n</div>\n",
            "prompt_language_pt": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\">\n    \n    <h2>Você fala Português?</h2>\n    <p>\n      \n      Twitter está disponível em Português. Clique para alterar a configuração de idioma.\n    </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action\">Use o Twitter em Português</span>\n</div>\n",
            "prompt_language_ru": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"ru\">\n    \n    <h2>Вы говорите по-русски?</h2>\n    \n    <p>\n      Твиттер доступен на русском языке. Нажмите ниже, чтобы сменить язык.\n    </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">Перейти на русский язык</span>\n</div>\n",
            "prompt_language_tr": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"tr\">\n    \n    <h2>Türkçe biliyor musun?</h2>\n    <p>\n      \n      Twitter, Türkçe kullanılabilir. Dil ayarını değiştirmek için tıkla.\n    </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">Twitter'ı Türkçe kullan</span>\n</div>\n",
            "prompt_language_zh_cn": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"zh-cn\">\n    \n    <h2>你用简体中文吗? </h2>\n    <p>\n      \n       Twitter 有简体中文版本可用。 点击以更改语言设置。\n    </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">使用简体中文版 Twitter。</span>\n</div>\n",
            "prompt_language_zh_tw": "\n\n{{>dismiss_button}}\n<div class=\"prompt language\" data-language=\"zh-tw\">\n    \n    <h2>你使用繁體中文嗎？</h2>\n    <p>\n      \n      Twitter終於有繁體中文了。按這裡改變你的語言設定。\n    </p>\n</div>\n<div class=\"promptbird-action-bar\">\n    \n    <span class=\"btn call-to-action set-language\">使用繁體中文的Twitter。</span>\n</div>\n",
            "prompt_lifeline_ja": "\n\n{{>dismiss_button}}\n<div class=\"prompt lifeline-ja\">\n  <h2>ツイッターをライフラインとして活用する</h2>\n  <p>災害時に緊急情報をツイートするアカウントをフォローしましょう</p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action\" href=\"/#!/who_to_follow/lifeline\">ライフラインアカウントをチェックする</a>\n</div>\n",
            "prompt_mobile": "\n{{>dismiss_button}}\n<div class=\"prompt mobile\">\n  <h2>Take Twitter with you</h2>\n  <div class=\"promptbird-image mobile-devices\"></div>\n  <p>\n    \n    \n    \n    Get the Twitter app for your <a href=\"{{android_path}}\" class=\"call-to-action\">Android</a>, <a href=\"{{blackberry_path}}\" class=\"call-to-action\">Blackberry</a>, <a href=\"{{iphone_path}}\" class=\"call-to-action\">iPhone</a>, <a href=\"{{ipad_path}}\" class=\"call-to-action\">iPad</a>, or <a href=\"{{wp7_path}}\" class=\"call-to-action\">Windows Phone 7</a>.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action\" href=\"{{mobile_gallery_path}}\">Download the app</a>\n</div>\n",
            "prompt_olympics": "\n\n{{>dismiss_button}}\n<div class=\"prompt olympics\">\n  <div class=\"promptbird-image olympics-image\"></div>\n  <h2>The #Olympics are here!</h2>\n  <p class=\"olympics-copy\">\n    Dedication. Sacrifice. Guts. Glory.\n    <br />\n    Get closer to the #Olympics on Twitter.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action\" href=\"/hashtag/olympics\">View Tweets about #Olympics</a>\n</div>\n",
            "prompt_one_click_import": "\n{{>dismiss_button}}\n<div class='one-click-import'>\n  <h2 class='one-click-import-header'>Find your friends on Twitter</h2>\n</div>\n<div class=\"prompt promptbird-action-bar\">\n  <span href=\"#\" class=\"one-click-import-button btn call-to-action\" data-email=\"{{email}}\">Import your contacts from {{email}}</span>\n</div>\n",
            "prompt_profile": "\n{{>dismiss_button}}\n<div class=\"prompt profile\">\n  <h2>\n    Complete your profile\n  </h2>\n  <p>\n    It helps instantly identify you to those following you, and tells those who aren't more about you.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action js-nav\" href=\"{{settings_profile_path}}\">Complete your profile</a>\n</div>\n",
            "prompt_self_serve_ads": "\n{{>dismiss_button}}\n<div class=\"prompt grow-your-presence\">\n  <h2>Advertise on Twitter</h2>\n  <p>\n    Grow your followers and help them spread the word about you.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action\" href=\"https://ads.twitter.com\">Start now</a>\n</div>\n",
            "prompt_sms": "\n{{>dismiss_button}}\n<div class=\"sms\">\n  <h2>Take Twitter with you</h2>\n  <p>\n    Get notifications, follow people – all the same great features, on your phone.\n  </p>\n</div>\n<div class=\"promptbird-action-bar\">\n  <a class=\"btn call-to-action\" href=\"/settings/devices\">Add your mobile phone</a>\n</div>\n",
            "prompt_vit_de": "\n\n{{>dismiss_button}}\n<div class=\"prompt vit-de\">\n  <div class=\"text\">\n    <h2>@tape_tv ist jetzt auf Twitter (<a href=\"/tape_tv\">@tape_tv</a>)</h2>\n    <img class=\"vit_de_img\" src=\"//si0.twimg.com/profile_images/1104820344/Untitled-1_normal.jpg\"></img>\n    <h3>\n      tape.tv ist Dein Musikfernsehen.  Hier gibt es Empfehlungen zu neuen, guten und alten Musikvideos.\n    </h3>\n  </div>\n  <div class=\"buttons promptbird-action-bar\">\n    {{>combo_follow_button}}\n  </div>\n</div>\n",
            "prompt_wings_vit_notification_below_black_bar": "{{>dismiss_button}}\n<div class=\"wings-reminder-prompt prompt\">\n  <h2>\n    Let people know you're the real {{#current_user}}{{name}}{{/current_user}}.\n  </h2>\n  <div class=\"wings-wrapper clearfix\">\n    <img src=\"/images/vit_onboarding/prompt_verified_badge.png\" class=\"wings-reminder-badge\">\n    <div class=\"wings-reminder-explanation\">\n      <p>\n        Twitter verifies accounts, by adding a badge to their profile, to help our users find notable people and brands.\n      </p>\n    </div>\n  </div>\n</div>\n<div class=\"buttons promptbird-action-bar\">\n  <a class=\"primary-btn btn call-to-action\" href=\"/vit_onboard/onboarding\">Get verified</a>\n</div>",
            "promptbird": "<div class=\"promptbird {{css_format_class}}\" data-prompt-id=\"{{prompt_id}}\">\n  {{{prompt_contents}}}\n</div>\n",
            "protected_ancestor_tweet": "<div class=\"simple-tweet tweet js-stream-tweet js-actionable-tweet js-profile-popup-actionable\">\n  <i class=\"dogear\"></i>\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      {{>tweet_user_block}}\n    </div>\n    {{#user}}<p class=\"js-tweet-text\"><em>@{{screen_name}}'s account is protected.</em></p>{{/user}}\n    <div class=\"stream-item-footer\"></div>\n  </div>\n</div>",
            "protected_user": "<div class=\"stream-protected stream-placeholder\">\n  <div class=\"stream-end-inner\">\n    <h2>@{{screen_name}}'s account is protected.</h2>\n    <p>Only confirmed followers have access to @{{screen_name}}'s Tweets and complete profile. Click the \"Follow\" button to send a follow request.</p>\n    <i class=\"watermark-lock\"></i>\n  </div>\n</div>",
            "proxy_tweet": "{{#rendering_on_server}}\n  {{!\n    When Swift dialogs open in response to a Tweet action, they copy the Tweet into the dialog.\n    Some presentations of Tweets don't look right when inside of a dialog, so we include a\n    standard stream Tweet, hidden inside of a proxy container, for use by the dialog.\n  }}\n  <div class=\"proxy-tweet-container\">\n    {{>stream_tweet}}\n  </div>\n{{/rendering_on_server}}",
            "qunit_tests": "\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\"/>\n  <title>{{#is_t1}}T1 Tests{{/is_t1}}{{^is_t1}}Phoenix Tests{{/is_t1}}</title>\n\n  <style type=\"text/css\" media=\"screen\">\n    iframe {\n      position: absolute;\n      left: -9999em;\n      top: -9999em;\n    }\n  </style>\n\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner.js\"></script>\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner_plugin_signal.js\"></script>\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner_plugin_json.js\"></script>\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner_plugin_css.js\"></script>\n  <script type=\"text/javascript\" src=\"/phoenix/js/tests/test_setup.js\"></script>\n\n  {{#qunit_css}}\n    <link rel=stylesheet href=\"{{file_name}}\" />\n  {{/qunit_css}}\n\n  <script type=\"text/javascript\">\n    /* Degrade gracefully if the browser doesn't support console.log */\n    {{{fake_console_js}}}\n\n    // Make these globally overrideable in IE\n    window.setTimeout = window.setTimeout;\n    window.setInterval = window.setInterval;\n    window.clearTimeout = window.clearTimeout;\n    window.clearInterval = window.clearInterval;\n  </script>\n\n  <!-- QUnit and other libraries -->\n  <script src=\"/phoenix/external_resources/watch.js\" type=\"text/javascript\"></script>\n  <script src=\"/phoenix/js/lib/qunit.js\" type=\"text/javascript\"></script>\n  <script>\n    testSetup.loadrunnerOptions('{{{loadrunner_modpath}}}');\n\n  // We always line bootstrap data in qunit since caching for logged out is not a concern here\n  provide('boot/bootstrap_data', function(exports) {\n    signal('>deciderFeaturesFromBootstrap');\n    exports({{{bootstrap_data_json}}});\n  });\n\n  {{{inline_request_log}}}\n\n  {{#assets_from_cdn}}\n    var bootData = {{{boot_data_json}}};\n    using.bundles.push(bootData.loadrunnerAssets);\n  {{/assets_from_cdn}}\n\n  // QUnit logging extensions\n  var _qunitErrorLog = \"\",\n      _qunitDone = false,\n      _qunitFailures,\n      _qunitTotal;\n\n  var twttr = {};\n\n  </script>\n\n  <script src=\"/phoenix/external_resources/swift_reroute.js\" type=\"text/javascript\"></script>\n  <script>\n\n  // used by bluejs\n  window.isTestMode = true;\n\n  // Make sure to use precompiled scripts for Hogan testing\n  function compileTemplates() {\n     var func;\n     for (var t in twttr.templates) {\n       eval('func = ' + Mustache.twitterHogan.compile(twttr.templates[t], {asString: true, sectionTags:[{o: '_i', c: 'i'}]}));\n       twttr.templates[t] = new Mustache.TwitterTemplate(func, \"\", Mustache.twitterHogan, {sectionTags:[{o: \"_i\", c: \"i\"}], disableLambda:true});\n       var view = twttr.util.camelize(t);\n       view = view.charAt(0).toUpperCase() + view.slice(1);\n       twttr.views[view]._template = twttr.templates[t];\n     }\n  }\n\n  var useHogan = ~window.location.search.indexOf('hogan=force');\n\n  using(\n      '/phoenix/js/run/qunitExtensions.js',\n      '/phoenix/js/bluejs/test/helpers/shadow.js',\n      '/phoenix/js/tests/test_helpers.js',\n      'boot/bootstrap_data',\n      function(data) {\n\n      testSetup.qunitOptions();\n      localStorage && localStorage.clear();\n      sessionStorage && sessionStorage.clear();\n      testSetup.twttrGlobals(data, {{is_t1}}, {{expando}});\n\n      using(\n        twttr.bundleCore,\n        'requestLog', // only required for selenium and qunit tests\n            function() {\n              using(\n                twttr.bundleMore,\n                'phoenix/external_resources/admin.js',\n                function() {\n                  window.getFixtureData = function(fixture_name) {\n                    var allFixtures = {{{json_fixtures}}};\n                    return allFixtures[fixture_name] || {};\n                  };\n\n                  testSetup.overwriteScribeAndDecider();\n\n                  using(\n                    '/phoenix/js/bluejs/test/helpers/api_harness.js',\n                    '/phoenix/js/bluejs/test/fixtures/fixtures.js',\n                    '/phoenix/js/tests/fixtures/autocomplete_fixtures.js',\n                    function() {\n                    mockAPI();\n                    signal('>payload');\n                    signal('>api_ready');\n\n                    var bundleFetchEndTime = new Date();\n\n                    testSetup.overwriteScribeAndDecider();\n                    twttr.$win = $(window);\n                    twttr.$doc = $(document);\n                    var scripts = [];\n\n                    if (useHogan) {\n                      scripts.push('/phoenix/js/lib/hogan.js');\n                    }\n\n                    {{#phoenix_js_tests}}\n                      scripts.push('{{file_name}}');\n                      using(scripts, function() {\n                        sanityCheckTestFile(\"{{file_name}}\");\n                      });\n                    {{/phoenix_js_tests}}\n\n                    using(scripts, function() {\n                      if (useHogan) {\n                        compileTemplates();\n                      }\n                      start();\n                    });\n                  });\n                }\n          );\n        }\n      );\n    });\n  </script>\n\n</head>\n<body>\n  <h1 id=\"qunit-header\">{{#is_t1}}T1 Tests{{/is_t1}}{{^is_t1}}Phoenix Tests{{/is_t1}}</h1>\n  <h2 id=\"qunit-banner\"></h2>\n  <h2 id=\"qunit-userAgent\"></h2>\n  <ol id=\"qunit-tests\"></ol>\n  <div id='test-content'></div>\n  <!-- This is (our version of) QUnit's default HTML fixture area -->\n  <div id='main'></div>\n  <div class=\"twttr-dialog-wrapper\"></div>\n</body>\n</html>\n",
            "rate_limit_page": "<div class=\"four-twenty\">\n  {{#render_page_content}}\n    <h2>Uh-oh! You're being rate-limited!</h2>\n\n    <p class='rate-limit-message'>\n      While we appreciate your enthusiasm, in order to control abuse, we limit how often you can search.\n    </p>\n\n    <p class='rate-limit-message'>\n      For locations where many people share the same IP address (e.g., corporations and conferences), our rate limits may be too strict. If you believe you are using Twitter normally, please <a href=\"{{support_path}}\">let us know</a>.\n    </p>\n\n    <p>{{>generic_footer}}</p>\n  {{/render_page_content}}\n</div>",
            "reactivated_banner": "<div class=\"banner-outer banner-border\">\n  <div class=\"banner\">\n    <div class=\"banner-inside\">\n      <div id=\"account-reactivated\" class=\"first-banner-row\">\n        <a class='pane-close' href='#'>Close <span>×</span></a>\n        <span class=\"title\">Welcome back!</span>\n        <span>If you didn't mean to reactivate your account, you can deactivate it again from the <a class=\"reactivate-settings-link\" href=\"{{settings_path}}\">settings page</a>.</span>\n      </div>\n    </div>\n  </div>\n</div>\n",
            "recent_profile_activity": "{{#show_following}}\n  {{>following_list_small}}\n{{/show_following}}\n\n{{#show_following_full}}\n  {{>following_list_full}}\n{{/show_following_full}}\n\n{{#show_followers}}\n  {{>followers_list_small}}\n{{/show_followers}}\n\n{{#show_wtf_links}}\n  {{^following_nobody}}\n    {{#positive_nooblevel}}\n      {{>who_to_follow_links}}\n    {{/positive_nooblevel}}\n  {{/following_nobody}}\n{{/show_wtf_links}}",
            "recent_tweets": "<div class=\"recent-tweets\">\n  {{#items}}\n    {{>simple_tweet}}\n  {{/items}}\n</div>",
            "recently_followed": "<div class=\"recently-followed-users\">\n\n  <div class=\"followed clearfix {{#following_10}}following-10{{/following_10}}\">\n    {{#welcome_flow}}\n      {{#screen_name}}\n        <h2>Welcome To Twitter @{{screen_name}}!</h2>\n      {{/screen_name}}\n      {{^screen_name}}\n        <h2>Who do you want to follow?</h2>\n      {{/screen_name}}\n\n      <p class=\"welcome-few-followers\">To get the most out of Twitter follow your first <strong>10 accounts</strong> that are of interest to you.</p>\n      {{^abtest_timeline_copy_317_any_bucket}}\n        <p class=\"welcome-many-followers\">Awesome, you've followed your first 10! As you follow more users, your timeline of updates will get better and better.</p>\n      {{/abtest_timeline_copy_317_any_bucket}}\n      {{#abtest_timeline_copy_317_stream}}\n        <p class=\"welcome-many-followers\">Awesome, you've followed your first 10! As you follow more users, your stream of updates will get better and better.</p>\n      {{/abtest_timeline_copy_317_stream}}\n      <h2 class=\"welcome-follow-count\">You follow <span>{{following_count}}</span></h2>\n    {{/welcome_flow}}\n    {{^welcome_flow}}\n        <h2>\n          You recently followed\n          {{#user}}\n            <span class=\"dot\">·</span>\n            <a class='view-all' href=\"{{user_following_path}}\">view all</a>\n          {{/user}}\n        </h2>\n    {{/welcome_flow}}\n\n    {{#latest_friends}}\n      {{>user_thumb_list}}\n    {{/latest_friends}}\n\n  </div>\n\n  {{#latest_friend}}\n    <div class=\"suggestions clearfix\">\n        <hr />\n        <p>Similar to <span>{{latest_friend}}</span></p>\n        <ul />\n    </div>\n  {{/latest_friend}}\n</div>\n",
            "recently_viewed": "<div class=\"recently-viewed-users clearfix\">\n\n  <h2>\n    You recently viewed\n    <span class=\"dot\">·</span>\n    <a class='clear-all' href=\"#\">clear</a>\n  </h2>\n\n  <ul>\n    {{>user_small_list}}\n  </ul>\n\n</div>\n",
            "related_queries": "<div class=\"js-related-queries search-assist-related-queries\" data-component-term=\"related_queries\">\n  Related:\n  {{#related_queries}}\n    <a href=\"{{url}}\" title=\"{{related_query}}\" data-nav=\"search\" data-query=\"{{query}}\" data-search-assistance=\"{{related_query}}\" data-query-source=\"{{search_query_source}}\">{{related_query}}</a>{{delimiter}}\n  {{/related_queries}}\n</div>",
            "related_tweets_data_attributes": "data-related-impression-id=\"{{related_impression_id}}\" data-related-group-name=\"{{related_group_name}}\" data-related-annotations=\"{{related_annotations}}\"\n{{#ab_data_bucket}}\n  data-ab-data-bucket=\"{{ab_data_bucket}}\" data-ab-data-experiment-key=\"{{ab_data_experiment_key}}\" data-ab-data-version=\"{{ab_data_version}}\"\n{{/ab_data_bucket}}",
            "replies": "{{#rendering_on_server}}\n  {{^on_permalink}}\n    <div class=\"replies js-conversation-replies\">\n  {{/on_permalink}}\n\n    {{#reply_tweet_box}}\n      <div class=\"inline-reply-tweetbox swift\">\n        {{#current_user}}\n        <img class=\"inline-reply-user-image avatar size32\" src=\"{{profile_image_absolute_url}}\">\n        {{/current_user}}\n\n        {{#on_permalink}}\n          {{>swift_tweet_box}}\n        {{/on_permalink}}\n      </div>\n    {{/reply_tweet_box}}\n{{/rendering_on_server}}\n\n{{#has_replies}}\n  {{>replies_to}}\n{{/has_replies}}\n\n{{^has_replies}}\n  {{#swift}}\n    {{>replies_to}}\n  {{/swift}}\n{{/has_replies}}\n\n{{#rendering_on_server}}\n  {{^on_permalink}}\n  </div>\n  {{/on_permalink}}\n{{/rendering_on_server}}\n",
            "replies_to": "<div class=\"{{^has_replies}}hidden {{/has_replies}}replies-to{{#on_permalink}} permalink-inner permalink-replies{{/on_permalink}}{{#rendering_on_server}} swift{{/rendering_on_server}}\" {{>related_tweets_data_attributes}}>\n  <div class=\"tweets-wrapper\">\n    {{#has_replies}}\n      {{#replies_html}}\n        {{{replies_html}}}\n      {{/replies_html}}\n      {{^replies_html}}\n        {{#descendant_tweet_views}}\n          {{>simple_tweet}}\n        {{/descendant_tweet_views}}\n        {{#fork_tweet_views}}\n          {{>simple_tweet}}\n        {{/fork_tweet_views}}\n      {{/replies_html}}\n    {{/has_replies}}\n  </div>\n</div>\n",
            "reply_dialog_footer": "<div class=\"tweet twttr-dialog-reply-footer colored-links\">\n  <img src=\"{{profile_image_url}}\" title=\"{{screen_name}}\"/>\n  <p>\n    <span class=\"twttr-reply-screenname\">{{screen_name}}</span>\n    <p class=\"js-tweet-text\">\n    {{{text}}}\n    </p>\n  </p>\n</div>\n",
            "retweeters": "<h3 class='retweets_count'>{{{retweeted_by_count}}}</h3>\n<div class=\"meta-links clearfix\">\n  <ul class='retweeters'>\n    {{#retweeters}}\n      {{>user_thumb_list_item}}\n    {{/retweeters}}\n  </ul>\n</div>\n",
            "saved_search_button": "<div class=\"saved-search-container\">\n  {{#show_trashcan}}\n    <div class=\"delete-search\">\n      <div class=\"button delete-search-button\">\n        <span class=\"trashcan\"></span> <strong>Delete this saved search</strong>\n      </div>\n    </div>\n  {{/show_trashcan}}\n  {{^show_trashcan}}\n    <div class=\"save-search\">\n      <div class=\"button save-search-button\">\n        <span class=\"plus\"></span> <strong>Save this search</strong>\n      </div>\n    </div>\n  {{/show_trashcan}}\n<div>",
            "screen_name_followed_by": "{{#followed_by}}<span class=\"screen-name\"><s>@</s>{{screen_name}}</span><small class=\"follow-status\">follows you</small>{{/followed_by}}\n{{^followed_by}}<span class=\"screen-name\"><s>@</s>{{screen_name}}</span>{{/followed_by}}\n",
            "advanced": "<div class=\"main\">\n  {{>search_advanced}}\n  <div class=\"bottompart\">\n    {{>footer}}\n  </div>\n</div>",
            "dashboard_search": "<div class=\"dashboard\">\n  {{^logged_in}}\n    {{>new_signup_call_out}}\n  {{/logged_in}}\n  <div class=\"module\">\n    <ul class=\"js-nav-links\">\n      <li class=\"{{#on_tweets}}active{{/on_tweets}}\"><a class=\"list-link\" href=\"{{search_path}}\">Tweets<i class=\"chev-right\"></i></a></li>      <li class=\"people {{#on_users}}active{{/on_users}}\">\n        <a class=\"list-link\" href=\"{{search_users_path}}\" data-nav=\"people\">\n          People\n          <i class=\"chev-right\"></i>\n        </a>\n      </li> \n      {{^show_all_inline_media}}\n        {{>facets_media_not_displayed}}\n      {{/show_all_inline_media}}\n      <li class=\"media-thumbnails top-images\"></li> \n      <li class=\"media-thumbnails top-videos media-videos\"></li> \n    </ul>\n  </div>\n  {{>dashboard_trends}}\n  {{>footer}}\n</div>\n",
            "search": "{{>search/dashboard_search}}\n{{>dialogs/trends_dialog_shell}}\n<div class=\"content-main\" id=\"timeline\" data-pixel-tracking-id=\"{{pixel_tracking_id}}\">\n  {{#spelling_correction}}\n    {{>spelling_corrections}}\n  {{/spelling_correction}}\n  <div class=\"content-header\">\n    {{>swift_search_header}}\n  </div>\n  {{>timeline}}\n</div>\n",
            "swift_onebox": "{{#onebox}}\n  {{>discover/story}}\n{{/onebox}}",
            "search_advanced": "<div class=\"search advanced-search\">\n  <h1>Advanced <strong>Search</strong></h1>\n\n  <form class=\"twitter-form\">\n\n    <fieldset>\n      <legend><span>Words</span></legend>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">All of these words</span>\n          <input type=\"text\" name=\"ands\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">This exact phrase</span>\n          <input type=\"text\" name=\"phrase\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">Any of these words</span>\n          <input type=\"text\" name=\"ors\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">None of these words</span>\n          <input type=\"text\" name=\"nots\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">These hashtags</span>\n          <input type=\"text\" name=\"tag\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">Written in</span>\n          <select id=\"lang\" name=\"lang\">\n            <option value=\"all\" selected=\"selected\">Any Language</option>\n            {{#languages}}\n              <option value=\"{{code}}\">{{localized_name}} ({{name}})</option>\n            {{/languages}}\n          </select>\n        </label>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <legend><span>People</span></legend>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">From these accounts</span>\n          <input type=\"text\" name=\"from\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">To these accounts</span>\n          <input type=\"text\" name=\"to\" />\n        </label>\n      </div>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">Mentioning these accounts</span>\n          <input type=\"text\" name=\"ref\" />\n        </label>\n      </div>\n    </fieldset>\n\n    <fieldset class=\"geo\">\n      <legend><span>Places</span></legend>\n      <div class=\"txt\">\n        <label>\n          <span class=\"td\">Near this place</span>\n          <input type=\"text\" name=\"near\" />\n        </label>\n      </div>\n      <div class=\"sel\">\n        <label>\n          <span class=\"td\">Within this distance</span>\n          <select name=\"within\">\n            <option value=\"1\">1</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"15\" selected=\"selected\">15</option>\n            <option value=\"25\">25</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n            <option value=\"500\">500</option>\n            <option value=\"1000\">1000</option>\n          </select>\n        </label>\n        <span class=\"rad\">\n          <label><input name=\"units\" type=\"radio\" value=\"mi\" checked=\"checked\" /><span>miles</span></label>\n          <label><input name=\"units\" type=\"radio\" value=\"km\" /><span>kilometers</span></label>\n        </span>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <legend><span>Other</span></legend>\n      <div class=\"chk\">\n        <span class=\"td\">Select:</span>\n        <span class=\"chk-inner\">\n          <label><input name=\"attd\" type=\"checkbox\" value=\":)\" /><span>Positive :)</span></label>\n          <label><input name=\"attd\" type=\"checkbox\" value=\":(\" /><span>Negative :(</span></label>\n          <label><input name=\"attd\" type=\"checkbox\" value=\"?\" /><span>Question ?</span></label>\n          <label><input name=\"include\" type=\"checkbox\" value=\"retweets\" /><span>Include retweets</span></label>\n        </span>\n      </div>\n    </fieldset>\n\n    \n    <button class=\"button btn primary-btn submit selected\" type=\"submit\" value=\"go\">Search</button>\n\n  </form>\n\n</div>",
            "search_basic": "<div class=\"search basic-search\">\n  <h1>See what’s happening <strong>right now</strong></h1>\n  <form action=\"{{form_search_results_path}}\" method=\"GET\">\n    <input value=\"\" name=\"q\" type=\"text\" placeholder=\"\" />\n    <div>\n      \n      <div class=\"button btn primary-btn submit selected\">Search</div>\n      {{>search_help_operators}}\n    </div>\n  </form>\n  <div class=\"trends-container\"></div>\n</div>",
            "search_button": "<div class=\"combo-btn\">\n  <a class=\"combo-btn-action\" href=\"#\">\n    Search\n  </a>\n  <span class=\"combo-btn-toggle\">\n    <span class=\"combo-btn-carrot\"></span>\n  </span>\n  <ul class=\"combo-btn-dropdown\">\n    <li><a href=\"#\">Refine results</a></li>\n  </ul>\n</div>",
            "search_header": "<div class=\"module header-module js-search-header\">\n  <div class=\"flex-module\">\n    <form class=\"search-header js-search-form\" action=\"/search\" method=\"GET\">\n      <table class=\"flex-table\">\n        <tbody>\n          <tr>\n            <td class=\"flex-table-primary\">\n              <div class=\"flex-table-form\">\n                <input class=\"flex-table-input search-query js-search-header-query\" name=\"q\" type=\"text\" placeholder=\"Search Twitter\">\n              </div>\n            </td>\n            <td class=\"flex-table-secondary\">\n              <div class=\"btn-group flex-table-btn js-search-dropdown\">\n                <button type=\"submit\" class=\"btn search-btn js-submit\">\n                  Search\n                </button>\n                <button type=\"button\" class=\"dropdown btn btn-search-actions js-search-dropdown-button\">\n                  <i class=\"search-toggle\"></i>\n                </button>\n                <ul class=\"dropdown-menu btn-group-dropdown js-combo-btn-dropdown-options\">\n                  <li><a class=\"js-toggle-saved-search-link\" href=\"#\">Save search</a></li>\n                  <li><a href=\"{{search_advanced_path}}\">Advanced search</a></li>\n                  \n                  <li class=\"dropdown-caret right\">\n                    <span class=\"caret-outer\"></span>\n                    <span class=\"caret-inner\"></span>\n                  </li>\n                </ul>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n    <h2 class=\"js-search-title\">Search results</h2>\n  </div>\n</div>\n",
            "search_help_operators": "<p class=\"operators\">\n  {{^decider_advanced_search}}\n    <strong>Tip:</strong> use <a class=\"search-operators-link\" href=\"#\">operators</a> for advanced search.\n  {{/decider_advanced_search}}\n  {{#decider_advanced_search}}\n    <strong>Tip:</strong> use <a class=\"search-operators-link\" href=\"#\">operators</a> for <a class=\"advanced-search\" href=\"{{search_advanced_path}}\">advanced search</a>.\n  {{/decider_advanced_search}}\n</p>",
            "search_home": "<div class=\"main\">\n\n  {{#is_advanced}}\n    {{>search_advanced}}\n  {{/is_advanced}}\n  {{^is_advanced}}\n    {{>search_basic}}\n  {{/is_advanced}}\n\n  <div class=\"logged-out\">\n    <div class=\"bottompart\"></div>\n  </div>\n\n</div>",
            "search_operators": "<table class=\"modal-table modal-table-bordered\">\n  <thead>\n    <tr>\n      <th>Operator</th>\n      <th>Finds tweets...</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>twitter search</td><td>containing both \"twitter\" and \"search\". This is the default operator.</td></tr>\n    <tr><td><b>\"</b>happy hour<b>\"</b></td><td>containing the exact phrase \"happy hour\".</td></tr>\n    <tr><td>love <b>OR</b> hate</td><td>containing either \"love\" or \"hate\" (or both).</td></tr>\n    <tr><td>beer <b>-</b>root</td><td>containing \"beer\" but not \"root\".</td></tr>\n    <tr><td><b>#</b>haiku</td><td>containing the hashtag \"haiku\".</td></tr>\n    <tr><td><b>from:</b>alexiskold</td><td>sent from person \"alexiskold\".</td></tr>\n    <tr><td><b>to:</b>techcrunch</td><td>sent to person \"techcrunch\".</td></tr>\n    <tr><td><b>@</b>mashable</td><td>referencing person \"mashable\".</td></tr>\n    <tr><td>\"happy hour\" <b>near:</b>\"san francisco\"</td><td>containing the exact phrase \"happy hour\" and sent near \"san francisco\".</td></tr>\n    <tr><td><b>near:</b>NYC <b>within:</b>15mi</td><td>sent within 15 miles of \"NYC\".</td></tr>\n    <tr><td>superhero <b>since:</b>2010-12-27</td><td>containing \"superhero\" and sent since date \"2010-12-27\" (year-month-day).</td></tr>\n    <tr><td>ftw <b>until:</b>2010-12-27</td><td>containing \"ftw\" and sent up to date \"2010-12-27\".</td></tr>\n    <tr><td>movie -scary <b>:)</b></td><td>containing \"movie\", but not \"scary\", and with a positive attitude.</td></tr>\n    <tr><td>flight <b>:(</b></td><td>containing \"flight\" and with a negative attitude.</td></tr>\n    <tr><td>traffic <b>?</b></td><td>containing \"traffic\" and asking a question.</td></tr>\n    <tr><td>hilarious <b>filter:links</b></td><td>containing \"hilarious\" and linking to URLs.</td></tr>\n    <tr><td>news <b>source:twitterfeed</b></td><td>containing \"news\" and entered via TwitterFeed</td></tr>\n  </tbody>\n</table>\n",
            "search_page": "{{>dashboard}}\n{{>content}}",
            "search_page_tabs": "<li class=\"stream-tab stream-tab-title\">\n  <h2 class=\"stream-tab-title-inner\">Tweets <span class=\"dot\">·</span></h2>\n</li>\n<li class=\"stream-tab stream-tab-dropdown\">\n  <a class=\"tab-text\" href=\"#\">\n    {{#top_mode}}\n      Top\n    {{/top_mode}}\n    {{#all_mode}}\n      All\n    {{/all_mode}}\n    {{#with_links_mode}}\n      With links\n    {{/with_links_mode}}\n    <i></i>\n  </a>\n</li>\n<li class=\"stream-tab refine-search\">\n  <a href=\"{{search_advanced_path}}\">Refine results »</a>\n</li>",
            "search_stream_title": "<ul class=\"stream-tabs\">\n  <div class='delete-saved-search'>\n    <a href='#' class='delete-saved-search-x'></a>\n    <a href='#'>Remove saved search</a>\n  </div>\n  <li class=\"stream-tab stream-tab-title\">\n    <span class=\"stream-tab-title-inner\">\n    Search results for <strong>{{query}}</strong> <span class=\"dot\">·</span>\n    </span>\n  </li>\n  <li class=\"stream-tab stream-tab-dropdown\">\n    <a class=\"tab-text\" href=\"#\">\n      {{#top_mode}}\n        Top\n      {{/top_mode}}\n      {{#all_mode}}\n        All\n      {{/all_mode}}\n      {{#with_links_mode}}\n        With links\n      {{/with_links_mode}}\n      <i></i>\n    </a>\n  </li>\n</ul>",
            "search_stream_view_toggler": "<a class=\"toggle-item-1 {{#active1}}active{{/active1}}\" href=\"{{route1}}\" title=\"{{tip1}}\">{{title1}}</a> / <a class=\"toggle-item-2 {{#active2}}active{{/active2}}\" href=\"{{route2}}\" title=\"{{tip2}}\">{{title2}}</a>{{#decider_blender_search_timeline}} / <a class=\"toggle-item-3 {{#active3}}active{{/active3}}\" href=\"{{route3}}\" title=\"{{tip3}}\">{{title3}}</a>{{/decider_blender_search_timeline}}",
            "send_message_box": "<div class=\"tweet-box condensed\">\n  <h2>Send {{screen_name}} a message</h2>\n  <div class=\"send-message-box\"></div>\n</div>",
            "account": "{{>dashboard_settings}}\n\n{{#user}}\n\n<div class=\"content-main\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <h2>Account</h2>\n      <p class=\"subheader\">Change your basic account, language, Tweet privacy, and location settings.</p>\n    </div>\n  </div>\n  <div class=\"content-inner no-stream-end\">\n    {{#accounts_page_disabled}}\n      {{> settings/alert_partial}}\n    {{/accounts_page_disabled}}\n    {{^accounts_page_disabled}}\n    <form id=\"account-form\" class=\"form-horizontal requires-password\" method=\"POST\" action=\"{{form_url}}\">\n      {{> settings/alert_partial}}\n      {{#user_verified?}}\n        <div class=\"alert\">\n          <p>Your account has been verified. Any change to your username will remove your verification badge. You can change your bio, URL and picture without losing your badge.</p>\n        </div>\n      {{/user_verified?}}\n      <input type=\"hidden\" value=\"PUT\" name=\"_method\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <fieldset id=\"username_fieldset\" class=\"control-group\">\n        <label for=\"user_screen_name\" class=\"control-label\">Username</label>\n        <div class=\"controls\">\n          <p id=\"username_notification\" class=\"notification\"></p>\n          <input id=\"user_screen_name\" maxlength=\"15\" name=\"user[screen_name]\" type=\"text\" value=\"{{screen_name}}\">\n          <p class=\"notification\">{{username_url_base}}<span id=\"username_path\">{{screen_name}}</span></p>\n        </div>\n      </fieldset>\n\n      {{#email_pending}}\n      <div id=\"email-pending-group\" class=\"control-group\">\n        <div class=\"controls\">\n          <p>{{{settings_email_message}}}</p>\n          <div id=\"email-confirmation\" class=\"resend-message\">\n            <p>\n              <a href=\"{{resend_confirmation_email_path}}\" class=\"resend-confirmation-email\">Resend confirmation</a>\n              {{#email}}\n              <span class=\"bullet\">· </span>\n              <a href=\"{{cancel_pending_email_path}}\" class=\"cancel-pending-email\">Cancel this change</a>\n              {{/email}}\n            </p>\n            <span class=\"activation resending-email\" style=\"display: none\">\n              Resending confirmation\n              <img src=\"/images/spinner.gif\"  height=\"14\" width=\"14\">\n            </span>\n          </div>\n        </div>\n      </div>\n      {{/email_pending}}\n\n      <fieldset id=\"email_fieldset\" class=\"control-group\">\n        <label for=\"user_email\" class=\"control-label\">Email</label>\n        <div class=\"controls\">\n          <p id=\"email_notification\" class=\"notification\"></p>\n          <input id=\"user_email\" class=\"email-input\" name=\"user[email]\" type=\"text\" value=\"{{email}}\">\n          <p>Email will not be publicly displayed. <a href=\"https://support.twitter.com/articles/15356\" target=\"_blank\">Learn more</a>.</p>\n          <label class=\"checkbox\">\n            <input id=\"user_discoverable_by_email\" name=\"user[discoverable_by_email]\" type=\"checkbox\" value=\"1\" {{#discoverable_by_email}}checked{{/discoverable_by_email}}>\n            Let others find me by my email address\n          </label>\n          <input type=\"hidden\" value=\"0\" name=\"user[discoverable_by_email]\">\n          {{^email_discoverability_set}}\n            <p>Review and confirm your email setting by pressing 'Save'.\n            <a href=\"https://support.twitter.com/articles/14022\" target=\"_blank\" class=\"help-discover\"></a>\n            </p>\n          {{/email_discoverability_set}}\n        </div>\n      </fieldset>\n\n      <hr>\n\n      <fieldset class=\"control-group\">\n        <label for=\"user_lang\" class=\"control-label\">Language</label>\n        <div class=\"controls\">\n          <select id=\"user_lang\" name=\"user[lang]\">\n             {{> shared/lang_select_options}}\n          </select>\n          {{#new_translation_center_available}}\n          <p>Interested in helping translate Twitter? Check out the <a href=\"http://translate.twttr.com\">Translation Center</a>.</p>\n          {{/new_translation_center_available}}\n        </div>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label for=\"user_time_zone\"  class=\"control-label\">Time zone</label>\n        <div class=\"controls\">\n          <select id=\"user_time_zone\" name=\"user[time_zone]\">\n            {{#time_zone_options}}\n              <option data-offset=\"{{offset}}\" value=\"{{zone_name}}\" {{#selected}}selected{{/selected}}>{{display}}</option>\n            {{/time_zone_options}}\n          </select>\n        </div>\n      </fieldset>\n\n      <hr>\n\n      <fieldset class=\"control-group\">\n        <label for=\"user_geo_enabled\" class=\"control-label\">Tweet location</label>\n        <div class=\"controls\">\n          <label class=\"checkbox\">\n            <input {{#geo_enabled}}checked{{/geo_enabled}} id=\"user_geo_enabled\" name=\"user[geo_enabled]\" type=\"checkbox\" value=\"1\">Add a location to my Tweets\n          </label>\n          <input type=\"hidden\" value=\"0\" name=\"user[geo_enabled]\">\n          <p>When you tweet with a location, Twitter stores that location. You can switch location on/off before each Tweet. <a href=\"https://support.twitter.com/articles/78525\" target=\"_blank\">Learn more</a></p>\n          <div id=\"delete_geo_data\">\n            <p><a class=\"delete-info btn\" id=\"geo_button\" href=\"#\">Delete all location information</a></p>\n            <p id=\"delete_geo_info\">This will delete all location information from past Tweets. This may take up to 30 minutes.</p>\n            <p id=\"deleting_geo_data\" style=\"display: none;\">Deleting all location information from your past Tweets... This may take up to 30 minutes. You may leave this page.</p>\n          </div>\n        </div>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label for=\"user_nsfw_view\" class=\"control-label\">Tweet media</label>\n        <div class=\"controls\">\n          <label class=\"checkbox\">\n            <input {{#nsfw_view}}checked{{/nsfw_view}} id=\"user_nsfw_view\" name=\"user[nsfw_view]\" type=\"checkbox\" value=\"1\"> Display media that may contain sensitive content\n          </label>\n          <input type=\"hidden\" value=\"0\" name=\"user[nsfw_view]\">\n          {{#sensitive_editable}}\n            <label class=\"checkbox\">\n              <input {{#nsfw_user}}checked{{/nsfw_user}} id=\"user_nsfw_user\" name=\"user[nsfw_user]\" type=\"checkbox\" value=\"1\"> Mark my media as containing sensitive content\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[nsfw_user]\">\n          {{/sensitive_editable}}\n          {{^sensitive_editable}}\n            <label class=\"checkbox\">\n              <input {{#nsfw_user}}checked{{/nsfw_user}} id=\"user_nsfw_admin\" name=\"user[nsfw_admin]\" type=\"checkbox\" disabled> Mark my media as containing sensitive content\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[nsfw_admin]\">\n          {{/sensitive_editable}}\n          <p>If you tweet images or videos that may contain sensitive content, please check this box so that people can be warned before they see it. <a href=\"https://support.twitter.com/articles/20169200\" target=\"_blank\">Learn more</a>.</p>\n        </div>\n      </fieldset>\n\n      <fieldset id=\"user_protected_fieldset\" class=\"control-group\">\n        {{>dialogs/protected_verified_dialog}}\n        <label for=\"user_protected\" class=\"control-label\">Tweet privacy</label>\n        <div class=\"controls\">\n          <label class=\"checkbox\">\n            <input {{#user_protected}}checked{{/user_protected}} id=\"user_protected\" name=\"user[protected]\" type=\"checkbox\" value=\"1\"> Protect my Tweets\n          </label>\n          <input type=\"hidden\" value=\"0\" name=\"user[protected]\">\n          {{#user_protected}}\n            <p>Your Tweets are currently protected; only those you approve will receive your Tweets. Your future Tweets will not be available publicly. Tweets posted previously may still be publicly visible in some places. <a href=\"https://support.twitter.com/articles/14016\" target=\"_blank\">Learn more</a>.</p>\n          {{/user_protected}}\n          {{^user_protected}}\n            <p>If selected, only those you approve will receive your Tweets. Your future Tweets will not be available publicly. Tweets posted previously may still be publicly visible in some places. <a href=\"https://support.twitter.com/articles/14016\" target=\"_blank\">Learn more</a>.</p>\n          {{/user_protected}}\n        </div>\n      </fieldset>\n\n      {{#personalization_settings_available}}\n        <fieldset class=\"control-group\">\n          <label class=\"control-label {{#personalization_settings_disabled}}personalization-settings-disabled{{/personalization_settings_disabled}}\">Personalization</label>\n          <div class=\"controls\">\n\n            {{^personalization_settings_disabled}}\n              <label class=\"checkbox\">\n                <input {{#use_cookie_personalization}}checked{{/use_cookie_personalization}} id=\"use_cookie_personalization\" name=\"user[use_cookie_personalization]\" type=\"checkbox\" value=\"1\">\n                Tailor Twitter based on my recent website visits\n                <input type=\"hidden\" value=\"0\" name=\"user[use_cookie_personalization]\">\n                <input type=\"hidden\" name=\"asked_cookie_personalization_setting\" value=\"1\">\n              </label>\n              <p><a class=\"personalization-preview-link\" href=\"{{web_personalization_preview_path}}\" target=\"_blank\">Preview</a> suggestions tailored for you (not currently available to all users). <a class=\"personalization-support-link\" href=\"https://support.twitter.com/articles/20169421\" target=\"_blank\">Learn more</a> about how this works and your additional privacy controls.</p>\n            {{/personalization_settings_disabled}}\n\n            {{#personalization_settings_disabled}}\n              <div class=\"control-list\">\n                <p>The feature to tailor Twitter based on your recent website visits is not available to you.</p>\n              </div>\n            {{/personalization_settings_disabled}}\n\n            {{#has_do_not_track_header}}\n              <label>Do Not Track <img src=\"/images/accept_small.gif\" id=\"do-not-track-check\"></label>\n              <p>While you have Do Not Track turned on, your visits to sites that feature Twitter are not available to personalize your experience.</p>\n            {{/has_do_not_track_header}}\n          </div>\n        </fieldset>\n      {{/personalization_settings_available}}\n\n      {{#ssl_only_available}}\n      <fieldset class=\"control-group\">\n        <label for=\"user_ssl_only\" class=\"control-label\">HTTPS only</label>\n        <div class=\"controls\">\n          <label class=\"checkbox\">\n            <input id=\"user_ssl_only\" name=\"user[ssl_only]\" type=\"checkbox\" value=\"1\" {{#ssl_only_enabled}}checked{{/ssl_only_enabled}}>Always use HTTPS\n          </label>\n          <input name=\"user[ssl_only]\" type=\"hidden\" value=\"0\">\n          <p>Use a secure connection where possible.</p>\n        </div>\n      </fieldset>\n      {{/ssl_only_available}}\n\n      {{#no_username_only_password_reset_enabled}}\n      <fieldset class=\"control-group\">\n        <label for=\"user_no_username_only_password_reset\" class=\"control-label\">Password reset</label>\n        <div class=\"controls\">\n          <div class=\"control-list\">\n            <label class=\"checkbox\">\n              <input id=\"user_no_username_only_password_reset\" name=\"user[no_username_only_password_reset]\" type=\"checkbox\" value=\"1\" {{#no_username_only_password_reset}}checked{{/no_username_only_password_reset}}>Require personal information to reset my password\n            </label>\n            <input name=\"user[no_username_only_password_reset]\" type=\"hidden\" value=\"0\">\n          </div>\n          <p>By default, you can initiate a password reset by entering only your @username. If you check this box, you will be prompted to enter your email address or phone number if you forget your password.</p>\n        </div>\n      </fieldset>\n      {{/no_username_only_password_reset_enabled}}\n      <hr>\n\n      {{#commercial_account_enabled}}\n        <fieldset class=\"control-group\">\n          <label for=\"user_can_receive_direct_messages_from_all_followers\" class=\"control-label\">Messages</label>\n          <div class=\"controls\">\n            <label class=\"checkbox\">\n              <input id=\"user_can_receive_direct_messages_from_all_followers\" name=\"user[can_receive_direct_messages_from_all_followers]\" type=\"checkbox\" value=\"1\"\n              {{#can_receive_direct_messages_from_all_followers}}checked{{/can_receive_direct_messages_from_all_followers}}\n              >Receive direct messages from any follower\n            </label>\n            <input name=\"user[can_receive_direct_messages_from_all_followers]\" type=\"hidden\" value=\"0\">\n            <p>Generally, you must follow someone before they have the ability to direct message you. If you check this option, any Twitter user that follows you will be able to send you a DM, regardless of whether you decide to follow them back.</p>\n          </div>\n        </fieldset>\n        <hr>\n      {{/commercial_account_enabled}}\n\n      {{#per_country_takedown}}\n        <fieldset class=\"control-group\">\n          <label for=\"user_country\" class=\"control-label\">Country</label>\n          <div class=\"controls\">\n            <select id=\"user_country\" name=\"user[country]\">\n              {{> shared/country_select_options}}\n            </select>\n            <p>Select your country. This setting is saved to this browser.</p>\n          </div>\n        </fieldset>\n        <hr>\n      {{/per_country_takedown}}\n\n      {{>settings/save_button}}\n      {{>dialogs/password_dialog}}\n\n      <hr>\n\n      <fieldset class=\"control-group\">\n        <div class=\"controls\">\n          {{^deactivation_available}}\n          <p><a id=\"account_deactivate_link\" class=\"deactivated\" href=\"#\">Deactivate my account</a></p>\n          {{/deactivation_available}}\n          {{#deactivation_available}}\n          {{^suspended?}}\n          <p><a id=\"account_deactivate_link\" href=\"{{confirm_deactivation_path}}\">Deactivate my account</a></p>\n          {{/suspended?}}\n          {{/deactivation_available}}\n        </div>\n      </fieldset>\n    </form>\n    {{/accounts_page_disabled}}\n  </div>\n</div>\n{{/user}}\n",
            "alert_partial": "<div id=\"settings-alert-box\" class=\"alert\" {{^alerts}}style=\"display: none;\"{{/alerts}}>\n  <i id=\"settings-alert-close\" class=\"close\"></i>\n  {{#alerts}}\n    <h4>{{first}}</h4>\n    <div id=\"settings-alert-message\">\n      {{#rest}}<p>{{{to_s}}}</p>{{/rest}}\n    </div>\n  {{/alerts}}\n</div>\n",
            "applications": "{{>dashboard_settings}}\n\n{{#user}}\n  <div class=\"content-main\">\n    <div class=\"content-header\">\n      <div class=\"header-inner\">\n        <h2>Applications</h2>\n        <p class=\"subheader\">These are the apps that can access your Twitter account. <a href=\"https://support.twitter.com/articles/76052\" target=\"_blank\">Learn more</a>.</p>\n      </div>\n    </div>\n\n    {{^has_apps}}\n      <div class=\"content-inner no-stream-end\">\n        <fieldset class=\"control-group\">\n          <h3 class=\"settings-header\">No applications have been approved to use your account.</h3>\n        </fieldset>\n      </div>\n    {{/has_apps}}\n    {{#has_apps}}\n      <div class=\"stream\" id=\"apps-stream\">\n      {{#apps}}\n        <div id=\"{{id_attr}}\" class=\"stream-item oauth-application {{#suspended}}suspended{{/suspended}}\">\n          <div class=\"app\">\n            {{#ios_revoke}}\n              <a href=\"https://support.twitter.com/articles/20169494#remove-account\" target=\"_blank\" class=\"revoke ios-revoke-access\">Learn how to revoke an iOS app.</a>\n            {{/ios_revoke}}\n            {{^ios_revoke}}\n              <a class=\"revoke btn\" id=\"btn_{{id_attr}}\" type=\"button\" href=\"#\">Revoke access</a>\n            {{/ios_revoke}}\n            <div class=\"content\">\n              <div>\n                <img class=\"app-img\" src=\"{{img_url}}\" width=\"48\" height=\"48\" alt=\"{{name}}\">\n                <strong>{{name}}</strong>{{#organization}}<span class=\"creator\"> by <a href=\"{{organization_url}}\" class=\"oauth-organization\">{{organization}}</a></span>{{/organization}}\n              </div>\n              {{#description}}\n                <p class=\"description\">{{description}}</p>\n              {{/description}}\n              <p><small class=\"metadata\">{{access_type}} access</small></p>\n              <p><small class=\"metadata\">Approved: {{approved}}</small></p>\n            </div>\n          </div>\n        </div>\n      {{/apps}}\n      </div>\n      {{> stream_end}}\n    {{/has_apps}}\n  </div>\n{{/user}}",
            "confirm_deactivation": "{{#user}}\n<div id=\"confirm_deactivation_section\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <h2>Is this goodbye?</h2>\n      <p class=\"subheader\">\n        Are you sure you don't want to reconsider?\n        Was it something we said? <a href=\"http://support.twitter.com/forms/general\" id=\"support_feedback\">Tell us.</a>\n      </p>\n    </div>\n  </div>\n  <div class=\"content-inner no-stream-end\">\n    <div class=\"deactivation-info\">\n      <h3 class=\"deactivation-info-header\">Before you deactivate @{{screen_name}}, know this:</h3>\n      <ul>\n        <li><strong>We will only retain your user data for 30 days</strong> and then it will be permanently deleted. You can reactivate your account at any point within 30 days of deactivation by logging back in.</li>\n        <li>You don't need to deactivate your account to <a href=\"{{settings_link}}\">change your username or Twitter URL</a>. You can change it on the <a href=\"{{settings_link}}\">settings</a> page. All @replies and followers will remain unchanged.</li>\n        <li>If you want to use this account's username or email address on another Twitter account, <a href=\"http://support.twitter.com/articles/14609\">change it</a> before you deactivate. Until the user data is permanently deleted, that information won't be available for use.</li>\n        <li>Your account should be removed from Twitter within a few minutes, but some content may be viewable on twitter.com for a few days after deactivation.</li>\n        <li>We have no control over <a href=\"http://support.twitter.com/articles/15349\">content indexed by search engines</a> like Google.</li>\n      </ul>\n    </div>\n    <hr>\n    <form id=\"confirm-deactivate-account-form\" class=\"form-horizontal requires-password\" name=\"f\" method=\"post\" action=\"{{deactivate_account_link}}\">\n      <input name=\"_method\" type=\"hidden\" value=\"delete\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      <div class=\"form-actions\">\n        <button id=\"settings_save\" class=\"btn primary-btn\" type=\"submit\">Deactivate @{{screen_name}}</button>\n        <a href=\"{{settings_link}}\" id=\"deactivate_account_cancel\" class=\"btn\">Cancel</a>\n      </div>\n      {{>dialogs/deactivation_password_dialog}}\n    </form>\n  </div>\n</div>\n{{/user}}",
            "confirmation_modal": "<!-- Confirmation modal -->\n<h2 id=\"password_dialog_header\" style=\"display:none\">Save account changes</h2>\n<div id=\"password_dialog\" style=\"display: none\">\n  <div class=\"dialog-form\">\n    <p>Re-enter your Twitter password to save changes to your account.</p>\n    <fieldset class=\"common-form\">\n      <ul>\n        <li>\n          <label for=\"auth_password\">Password</label>\n          <div class=\"input-wrapper password-wrapper\">\n            <input id=\"auth_password\" name=\"auth_password\" type=\"password\">\n            <div>\n              <a href=\"{{resend_password_path}}\" id=\"forgot_password\">Forgot your password?</a>\n              <span id=\"reminder_sent\" style=\"visibility: hidden\">Reminder sent!</span>\n            </div>\n          </div>\n        </li>\n      </ul>\n    </fieldset>\n  </div>\n</div>\n<div id=\"password_dialog_footer\" style=\"display:none;\">\n  <a class=\"btn modal-submit\" id=\"save_password\">Save changes</a>\n  <a href=\"{{settings_path}}\" id=\"cancel_link\">Cancel</a>\n</div>\n<h2 id=\"protected_dialog_header\" style=\"display:none;\">Warning!</h2>\n<div id=\"protected_dialog\" style=\"display: none;\">\n  <div class=\"dialog-form\">\n    <p>We're sorry, Twitter only verifies public accounts. If you protect your account, you will lose your verified badge.</p>\n  </div>\n</div>\n<div id=\"protected_dialog_footer\" style=\"display:none\">\n  <a id=\"stay_verified_link\" class=\"btn\" href=\"#\">Stay verified</a>\n  <a id=\"protect_my_tweets_link\" class=\"btn\" href=\"#\">Protect my Tweets</a>\n</div>",
            "design": "{{>dashboard_settings}}\n\n{{#current_user}}\n<div class=\"content-main\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <h2>Design</h2>\n      <p class=\"subheader\">Customize the way Twitter looks for you and how your profile looks to others.</p>\n    </div>\n  </div>\n  <div class=\"content-inner no-stream-end\">\n    <form id=\"design-form\" class=\"form-horizontal\" method=\"post\" enctype=\"multipart/form-data\" action=\"{{form_url}}\">\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      {{> settings/alert_partial}}\n      <h3 class=\"settings-header\">Pick a premade theme</h3>\n      <input id=\"user_profile_theme\" name=\"profile_theme\" type=\"hidden\" value=\"{{profile_theme}}\">\n      <input id=\"user_profile_default\" name=\"user[profile_default]\" type=\"hidden\" value=\"{{profile_default}}\">\n      <fieldset class=\"control-group\">\n        <ul class=\"theme-list clearfix\">\n          {{#themes}}\n          <li class=\"theme-item\">\n            <label class=\"theme{{#active}} selected{{/active}}\" data-image=\"{{image}}\" data-id=\"{{id}}\" data-background_color=\"{{background_color}}\" data-link_color=\"{{link_color}}\" data-tiled=\"{{tiled}}\">\n              <span class=\"selected-border\"></span><img class=\"theme-image\" src=\"{{ swatch }}\">\n            </label>\n          </li>\n        {{/themes}}\n        </ul>\n        <div class=\"themeleon-callout\">\n          <strong>\n            <a href=\"http://www.colourlovers.com/themeleon/twitter\" target=\"_blank\" id=\"themeleon_link\">Check out Themeleon »</a>\n          </strong>\n          Thousands of background patterns & color palettes available to customize your Twitter profile.\n        </div>\n      </fieldset>\n      <hr>\n      <h3 class=\"settings-header\">Customize your own</h3>\n      <fieldset class=\"control-group\">\n        <p>See your changes instantly; they're not saved until you click \"Save changes.\" <a href=\"https://support.twitter.com/articles/15357\" target=\"_blank\">Learn more</a>.</p>\n      </fieldset>\n      {{#profile_banner_settings_available}}\n        <fieldset class=\"control-group\">\n          <label class=\"control-label\">Header</label>\n          <div class=\"controls header-settings\">\n            <div class=\"uploader-image uploader-background clearfix\">\n              <span id=\"image_preview\" class=\"image-preview bg-preview\" {{#profile_use_header_image}}style=\"background-image: url({{profile_header_image_url}})\"{{/profile_use_header_image}}></span>\n              <div class=\"uploader-tools\">\n                <input type=\"file\" name=\"user[profile_header_image]\">\n                <button class=\"btn-link\" id=\"remove_header\" type=\"button\" {{^profile_use_header_image}}style=\"display:none\"{{/profile_use_header_image}} >Remove header</button>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      {{/profile_banner_settings_available}}\n      <fieldset class=\"control-group\">\n        <label class=\"control-label\">Background</label>\n        <div class=\"controls background-settings\">\n          <div class=\"uploader-image uploader-background clearfix\">\n            <span id=\"image_preview\" class=\"image-preview bg-preview\" {{#profile_use_background_image}}style=\"background-image: url({{profile_background_image_url}})\"{{/profile_use_background_image}}></span>\n            <div class=\"uploader-tools\">\n              <input id=\"user_profile_use_background_image\" type=\"hidden\" name=\"user[profile_use_background_image]\" value=\"{{profile_use_background_image}}\">\n              {{>swift_photo_selector}}\n              {{^profile_banner_settings_available}}<p>Maximum size of 800k. GIF, JPG, PNG.</p>{{/profile_banner_settings_available}}\n              <button class=\"btn-link\" id=\"remove_background\" type=\"button\" {{^profile_use_background_image}}style=\"display:none\"{{/profile_use_background_image}} >Remove background</button>\n              <label class=\"checkbox\">\n                <input id=\"user_profile_background_tile\" name=\"user[profile_background_tile]\" type=\"checkbox\" value=\"1\" {{#profile_background_tile}}checked{{/profile_background_tile}}>\n                <input name=\"user[profile_background_tile]\" type=\"hidden\" value=\"0\"> Tile background</label>\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label class=\"control-label\">Background color</label>\n        <div class=\"controls\">\n          <div id=\"background_color\" class=\"color-preview\" style=\"background-color: #{{profile_background_color}};\"></div>\n          <input id=\"background_color_hex\" class=\"input-small input-color\" type=\"text\" data-type=\"background_color\" data-color=\"#{{profile_background_color}}\" value=\"#{{profile_background_color}}\" name=\"user[profile_background_color]\">\n        </div>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label class=\"control-label\">Link color</label>\n        <div class=\"controls\">\n          <div id=\"links_color\" class=\"color-preview\" style=\"background-color: #{{profile_link_color}};\"></div>\n          <input id=\"links_color_hex\" class=\"input-small input-color\" data-type=\"links_color\" data-color=\"#{{profile_link_color}}\" type=\"text\" value=\"#{{profile_link_color}}\" name=\"user[profile_link_color]\">\n        </div>\n      </fieldset>\n      {{#profile_banner_settings_available}}\n        <fieldset class=\"control-group overlay-color-group\">\n          <label class=\"control-label\">Overlay</label>\n          <div class=\"controls\">\n            <label class=\"radio\"><input type=\"radio\" name=\"user[overlay_color]\" value=\"black\"> Black</label>\n            <label class=\"radio\"><input type=\"radio\" name=\"user[overlay_color]\" value=\"white\"> White</label>\n          </div>\n        </fieldset>\n      {{/profile_banner_settings_available}}\n      <hr>\n      {{> settings/save_button}}\n    </form>\n  </div>\n</div>\n{{/current_user}}\n",
            "email": "<div class=\"content-header\">\n  <div class=\"header-inner\">\n    <h2>Mobile</h2>\n    <p class=\"subheader\">Set up your mobile phone with Twitter to receive notifications.</p>\n  </div>\n</div>\n<div class=\"content-inner no-stream-end\">\n  {{> settings/alert_partial}}\n\n  <form id=\"sms-email-form\" class=\"form-horizontal sms-form form-flush-actions\" method=\"post\" action=\"/settings/devices/enable/{{device_id}}\">\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n\n    <fieldset class=\"control-group\">\n      <label for=\"\" class=\"control-label\">Email Notification</label>\n      <div class=\"controls\">\n        <p id=\"device-country-carrier\">\n          {{device_address}}\n        </p>\n      </div>\n    </fieldset>\n\n    {{> settings/devices/notifications}}\n    {{> settings/devices/sleep_settings}}\n\n    <hr>\n\n    {{> settings/save_button}}\n    {{> dialogs/password_dialog}}\n  </form>\n\n  <form id=\"sms-email-delete-form\" class=\"form-horizontal sms-form\" method=\"post\" action=\"/settings/devices/destroy/{{device_id}}\">\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n    <input type=\"hidden\" name=\"_method\" value=\"delete\">\n    <div class=\"form-actions\" id=\"delete_device_link\">\n      <button type=\"submit\" class=\"btn-link\" id=\"delete_device\">Delete my email address</button>\n    </div>\n  </form>\n</div>",
            "email_create": "<div class=\"content-header\">\n  <div class=\"header-inner\">\n    <h2>Mobile</h2>\n    <p class=\"subheader\">Set up your mobile phone with Twitter to receive notifications.</p>\n  </div>\n</div>\n<div class=\"content-inner no-stream-end\">\n  {{> settings/alert_partial}}\n\n  <div class=\"email-create sms-form\">\n    <h3 class=\"settings-header\">Email Notification</h3>\n    <p>\n      Twitter is more fun when used through your Keitai email. Set yours up! It's easy! Twitter does not charge for this service. Standard data rates may apply.\n    </p>\n\n    <div class=\"email-create-list\">\n      <div class=\"email-create-list-item\">\n        <div class=\"email-create-list-header\">1.</div>\n        <div class=\"email-create-list-body\">\n          From your Keitai, Send a blank email to<br>\n          <code>{{email_create_verify_address}}</code><br>\n          to verify your email address.\n          <p>You can send a blank email from this QR code.</p>\n\n          <div class=\"email-create-verify-qr-code\">\n            <img src=\"{{verify_qr_code_image_url}}\" width=\"136\" height=\"136\" alt=\"{{email_create_verify_address}}\">\n          </div>\n        </div>\n      </div>\n\n      <div class=\"email-create-list-item\">\n        <div class=\"email-create-list-header\">2.</div>\n        <div class=\"email-create-list-body\">\n          Twitter send a verification email to your Keitai.\n        </div>\n      </div>\n\n      <div class=\"email-create-list-item\">\n        <div class=\"email-create-list-header\">3.</div>\n        <div class=\"email-create-list-body\">\n          Open a link on the verification email to complete your verification.\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
            "notifications": "{{>dashboard_settings}}\n{{#user}}\n<div class=\"content-main\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <h2>Email notifications</h2>\n      <p class=\"subheader\">Control when and how often Twitter sends emails to you. <a href=\"https://support.twitter.com/articles/127860-how-to-change-your-email-preferences\" target=\"_blank\">Learn more.</a></p>\n    </div>\n  </div>\n  <div class=\"content-inner no-stream-end\" id=\"notifications-content\">\n    <form id=\"notifications-form\" class=\"form-horizontal notifications-form\" method=\"POST\" action=\"{{form_url}}\">\n      {{> settings/alert_partial}}\n      <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n      {{#show_send_email_vit_weekly}}\n        <fieldset class=\"control-group\">\n          <h3 class=\"settings-header\">For Verified Accounts only</h3>\n        </fieldset>\n        <fieldset class=\"control-group\">\n          <label class=\"control-label\">Email me</label>\n          <div class=\"controls\">\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"1\" id=\"send_email_vit_weekly\" name=\"user[send_email_vit_weekly]\" {{#send_email_vit_weekly}}checked{{/send_email_vit_weekly}}>Weekly reports for my account\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_email_vit_weekly]\">\n          </div>\n        </fieldset>\n        <hr>\n      {{/show_send_email_vit_weekly}}\n      <fieldset class=\"control-group\">\n        <h3 class=\"settings-header\">Activity on you and your Tweets</h3>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label class=\"control-label\">Email me when</label>\n        <div class=\"controls\">\n          {{#favorite_emails_available}}\n            {{#send_favorited_email_data}}\n              <span id=\"send-favorited-email-dropdown\">\n                <label class=\"checkbox\">\n                  <input type=\"checkbox\" value=\"{{default}}\" id=\"send_favorited_email\" name=\"user[send_favorited_email]\" {{#send_favorited_email}}checked{{/send_favorited_email}}>My Tweets are marked as favorites\n                </label>\n                {{>settings/notifications_partials/tweet_notification_dropdown}}\n              </span>\n            {{/send_favorited_email_data}}\n            <input type=\"hidden\" value=\"{{off}}\" name=\"user[send_favorited_email]\">\n          {{/favorite_emails_available}}\n          {{#retweet_emails_available}}\n            {{#send_retweeted_email_data}}\n              <span id=\"send-retweeted-email-dropdown\">\n                <label class=\"checkbox\">\n                  <input type=\"checkbox\" value=\"{{default}}\" id=\"send_retweeted_email\" name=\"user[send_retweeted_email]\" {{#send_retweeted_email}}checked{{/send_retweeted_email}}>My Tweets are retweeted\n                </label>\n                {{>settings/notifications_partials/tweet_notification_dropdown}}\n              </span>\n              <input type=\"hidden\" value=\"{{off}}\" name=\"user[send_retweeted_email]\">\n            {{/send_retweeted_email_data}}\n          {{/retweet_emails_available}}\n          {{#mention_emails_available}}\n            {{#send_mention_email_data}}\n              <span id=\"send-mention-email-dropdown\">\n                <label class=\"checkbox\">\n                  <input type=\"checkbox\" value=\"{{default}}\" id=\"send_mention_email\" name=\"user[send_mention_email]\" {{#send_mention_email}}checked{{/send_mention_email}}>My Tweets get a reply or I'm mentioned on a Tweet\n                </label>\n                {{>settings/notifications_partials/tweet_notification_dropdown}}\n              </span>\n              <input type=\"hidden\" value=\"{{off}}\" name=\"user[send_mention_email]\">\n            {{/send_mention_email_data}}\n          {{/mention_emails_available}}\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"1\" id=\"send_new_friend_email\" name=\"user[send_new_friend_email]\" {{#send_new_friend_email}}checked{{/send_new_friend_email}}>I'm followed by someone new\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_new_friend_email]\">\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"1\" id=\"send_new_direct_text_email\" name=\"user[send_new_direct_text_email]\" {{#send_new_direct_text_email}}checked{{/send_new_direct_text_email}}>I'm sent a direct message\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_new_direct_text_email]\">\n          {{#listed_emails_available}}\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"2\" id=\"send_listed_email\" name=\"user[send_listed_email]\" {{#send_listed_email}}checked{{/send_listed_email}}> I'm added to a list\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_listed_email]\">\n          {{/listed_emails_available}}\n        </div>\n      </fieldset>\n      <hr/>\n      <fieldset class=\"control-group\">\n        <h3 class=\"settings-header\">Activity from your network</h3>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label class=\"control-label\">Email me with</label>\n        <div class=\"controls\">\n            {{#network_digest_schedule_data}}\n              <span id=\"network-digest-schedule-dropdown\">\n                <label class=\"checkbox\">\n                  <input type=\"checkbox\" value=\"{{DIGEST_SCHEDULE_DEFAULT}}\" id=\"network_digest_schedule\" name=\"user[network_digest_schedule]\" {{#network_digest_schedule}}checked{{/network_digest_schedule}}>Top Tweets and Stories\n                </label>\n                {{#network_digest_schedule_options}}\n                  <select class=\"email-preference\" data-attribute=\"{{field}}\">\n                    <option value=\"{{DIGEST_SCHEDULE_WEEKLY}}\" {{^daily_checked}}selected=\"selected\"{{/daily_checked}}>Sent as a weekly digest</option>\n                    <option value=\"{{DIGEST_SCHEDULE_DAILY}}\" {{#daily_checked}}selected=\"selected\"{{/daily_checked}}>Sent as a daily digest</option>\n                  </select>\n                {{/network_digest_schedule_options}}\n              </span>\n              <input type=\"hidden\" value=\"{{off}}\" name=\"user[network_digest_schedule]\">\n            {{/network_digest_schedule_data}}\n        </div>\n      </fieldset>\n      <hr/>\n      <fieldset class=\"control-group\">\n        <h3 class=\"settings-header\">Updates from Twitter</h3>\n      </fieldset>\n      <fieldset class=\"control-group\">\n        <label class=\"control-label\">Email me with</label>\n        <div class=\"controls\">\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"1\" id=\"send_email_newsletter\" name=\"user[send_email_newsletter]\" {{#send_email_newsletter}}checked{{/send_email_newsletter}}>News about Twitter product and feature updates\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_email_newsletter]\">\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"1\" id=\"send_account_updates_email\" name=\"user[send_account_updates_email]\" {{#send_account_updates_email}}checked{{/send_account_updates_email}}>Service updates related to my Twitter account\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_account_updates_email]\">\n            <label class=\"checkbox\">\n              <input type=\"checkbox\" value=\"1\" id=\"send_resurrection_email_1\" name=\"user[send_resurrection_email_1]\" {{#send_resurrection_email_1}}checked{{/send_resurrection_email_1}}>Account suggestions from Twitter\n            </label>\n            <input type=\"hidden\" value=\"0\" name=\"user[send_resurrection_email_1]\">\n        </div>\n      </fieldset>\n      <hr>\n      {{> settings/save_button}}\n    </form>\n  </div>\n</div>\n{{/user}}\n",
            "phone_create": "<div class=\"content-header\">\n  <div class=\"header-inner\">\n    <h2>Add your mobile phone to your account</h2>\n    <p class=\"subheader\">Expand your experience, get closer, and stay current.</p>\n  </div>\n</div>\n<div class=\"content-inner no-stream-end\">\n  {{> settings/alert_partial}}\n\n  <form id=\"sms-phone-create-form\" class=\"form-horizontal sms-form\" method=\"post\" action=\"/settings/devices/create\">\n    <input type=\"hidden\" name=\"device_type\" value=\"phone\">\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n    <fieldset>\n      <h3 class=\"app-promo\"><a href=\"https://www.twitter.com/download\" target=\"_blank\">Download Twitter mobile app</a></h3>\n      <p>Available for iPhone, iPad, Android, BlackBerry, and Windows Phone 7.</p>\n    </fieldset>\n    <hr class=\"app-promo-spacing\">\n    <fieldset class=\"control-group\" id=\"choose-country\">\n      <h3 class=\"settings-header\">Activate Twitter text messaging</h3>\n      <p>It’s fast and easy. Get new features and help protect your account.</p>\n      <br>\n      <label class=\"control-label\">Country/region</label>\n      <div class=\"controls\">\n        <select id=\"device_country_code\" name=\"device[country_code]\">\n          {{#regions_and_country_codes}}\n            {{#is_region}}\n              <optgroup label=\"{{country_name}}\">\n                {{#countries}}\n                  <option value=\"{{country_code}}\" data-region=\"{{region}}\" {{#is_country_for_phone_device}}selected{{/is_country_for_phone_device}}>{{country_name}}</option>\n                {{/countries}}\n              </optgroup>\n            {{/is_region}}\n            {{^is_region}}\n              <option value=\"{{country_code}}\" {{#is_country_for_phone_device}}selected{{/is_country_for_phone_device}}>{{country_name}}</option>\n            {{/is_region}}\n          {{/regions_and_country_codes}}\n        </select>\n        <input type=\"hidden\" name=\"device_country_intl_prefix\" id=\"device_country_intl_prefix\" value=\"+{{#device_country_code}}{{device_country_code}}{{/device_country_code}}{{^device_country_code}}1{{/device_country_code}}\">\n        <input type=\"hidden\" name=\"device[region_country_code]\" id=\"region_country_code\">\n      </div>\n    </fieldset>\n    <fieldset class=\"control-group\">\n      <label class=\"control-label\">Phone number</label>\n      <div class=\"controls\">\n        <div class=\"input-prepend\">\n          <label class=\"add-on\" id=\"country_code_display\">{{#device_country_code}}+{{device_country_code}}{{/device_country_code}}{{^device_country_code}}{{default_country_code}}{{/device_country_code}}</label>\n          <input class=\"input-medium\" type=\"text\" value=\"{{device_address}}\" name=\"device[address]\" id=\"device_address\">\n        </div>\n        <p class=\"carrier-help-note\" id=\"carrier-message-jawwal-ps\">Users with either a +972 or +970 dialing code are able to subscribe to Twitter on this carrier. Example: if your mobile number is +97259XXXYYYY, please enter 59XXXYYYY as your phone number above.</p>\n        <p class=\"carrier-help-note\" id=\"carrier-message-wataniya-ps\">Users with either a +972 or +970 dialing code are able to subscribe to Twitter on this carrier. Example: if your mobile number is +97256XXXYYYY, please enter 56XXXYYYY as your phone number above.</p>\n      </div>\n    </fieldset>\n    <fieldset class=\"control-group\" id=\"choose-carrier\">\n      <label class=\"control-label\">Carrier</label>\n      <div class=\"controls\">\n        <input type=\"hidden\" name=\"carrier_name\" id=\"device_carrier_name\">\n        <select id=\"device_carrier\" name=\"device[carrier]\"></select>\n        <p class=\"carrier-help-note\" id=\"carrier-message-no-mt\">Note: This carrier only allows you to send messages to Twitter. Twitter will not be able to send you text message notifications.</p>\n      </div>\n    </fieldset>\n    <hr>\n    <div class=\"form-actions\">\n      <button id=\"start\" class=\"btn primary-btn\" type=\"submit\">Activate phone</button>\n    </div>\n  </form>\n</div>\n",
            "phone_deactivated": "<div class=\"content-header\">\n  <div class=\"header-inner\">\n    <h2>Add your mobile phone to your account</h2>\n    <p class=\"subheader\">Expand your experience, get closer, and stay current.</p>\n  </div>\n</div>\n<div class=\"stream-placeholder content-placeholder\">\n  {{> settings/alert_partial}}\n\n  {{#phone_device}}\n  <div class=\"stream-end-inner\">\n    <h2 class=\"title\">Update your mobile settings</h2>\n    <p>\n      We're unable to connect to your mobile phone at <strong>+{{device_country_code}} {{device_address}}</strong>.\n      Please reactivate or delete your current phone.\n    </p>\n    <p class=\"placeholder-actions\">\n      <form id=\"sms-phone-deactivated-form\" method=\"post\" action=\"/settings/devices/destroy/{{device_id}}\">\n        <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n        <input type=\"hidden\" name=\"_method\" value=\"delete\">\n        <input type=\"hidden\" name=\"reactivation\" value=\"1\">\n        <button type=\"submit\" class=\"btn primary-btn\" id=\"reactivate_device\">Reactivate phone</button>\n      </form>\n      <form id=\"sms-phone-deactivated-form\" method=\"post\" action=\"/settings/devices/destroy/{{device_id}}\">\n        <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n        <input type=\"hidden\" name=\"_method\" value=\"delete\">\n        <button type=\"submit\" class=\"btn\" id=\"delete_device\">Delete</button>\n      </form>\n    </p>\n  </div>\n  {{/phone_device}}\n</div>",
            "phone_duplicate": "<div class=\"content-no-header\">\n  <div class=\"no-header-inner\">\n    <div class=\"content-placeholder\">\n      <h3 class=\"title\">\n        Sorry, we can't activate your phone.\n        Text <strong>{{stop_command}}</strong> to <strong>{{device_short_code}}</strong> to retry.\n      </h3>\n      <p>The phone number you gave us, +{{device_country_code}} {{device_address}}, is currently used by another Twitter account. Only one account can be used with a mobile phone at a time.</p>\n\n      <form id=\"sms-phone-duplicate-form\" class=\"form-inline sms-form\" method=\"post\" action=\"{{retry_url}}\">\n        <input type=\"hidden\" name=\"device_type\" value=\"phone\" />\n        <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n        <input id=\"device_country_intl_prefix\" name=\"device_country_intl_prefix\" type=\"hidden\" value=\"+{{device_country_code}}\">\n        <button id=\"retry_verification\" class=\"btn primary-btn\" type=\"submit\">Retry activation</button>\n      </form>\n      <form id=\"sms-phone-duplicate-destroy-form\" class=\"form-inline sms-form\" method=\"post\" action=\"{{cancel_url}}\">\n        <input type=\"hidden\" value=\"DELETE\" name=\"_method\">\n        <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n        <button type=\"submit\" class=\"btn\" id=\"cancel_verification\">Cancel</button>\n      </form>\n    </div>\n  </div>\n</div>",
            "phone_unsupported": "<div class=\"content-header\">\n  <div class=\"header-inner\">\n    <h2>Add your mobile phone to your account</h2>\n    <p class=\"subheader\">Expand your experience, get closer, and stay current.</p>\n  </div>\n</div>\n<div class=\"content-inner no-stream-end\" id=\"sms-unsupported-carrier\">\n  {{> settings/alert_partial}}\n\n  <form id=\"sms-phone-unsupported-form\" class=\"form-horizontal sms-form\" method=\"post\" action=\"/settings/devices/destroy/{{device_id}}\">\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n    <input type=\"hidden\" name=\"_method\" value=\"delete\">\n\n    <div class=\"content-placeholder\">\n      <div class=\"stream-end-inner\">\n        {{#device_carrier_disabled}}\n          <h3 class=\"title\">Sorry, we don't have a connection to your carrier yet!</h3>\n          <p>\n            Don't worry, we're on it and will let you know once things are set up. In the meantime, use one of our long codes.\n            <a href=\"https://support.twitter.com/articles/14226-how-to-find-your-twitter-short-code-or-long-code\" target=\"_blank\" id=\"sms_info\">Learn more</a>.\n          </p>\n          <p class=\"placeholder-actions\">\n            <button type=\"submit\" class=\"btn primary-btn\" id=\"delete_device\">Try again</button>\n          </p>\n        {{/device_carrier_disabled}}\n        {{^device_carrier_disabled}}\n          <h3 class=\"title\">Thanks for waiting! We now have a connection to your carrier!</h3>\n          <p>\n            Activate your phone to use Twitter on the go.\n          </p>\n          <p class=\"placeholder-actions\">\n            <button type=\"submit\" class=\"btn primary-btn\" id=\"delete_device\">Activate phone</button>\n          </p>\n        {{/device_carrier_disabled}}\n      </div>\n    </div>\n  </form>\n</div>",
            "phone_verified": "<div class=\"content-header\">\n  <div class=\"header-inner\">\n    <h2>Mobile</h2>\n    <p class=\"subheader\">Customize Twitter for your mobile phone.</p>\n  </div>\n</div>\n<div class=\"content-inner no-stream-end\">\n  {{> settings/alert_partial}}\n\n  <form id=\"sms-phone-verified-form\" class=\"form-horizontal sms-form form-flush-actions\" method=\"post\" action=\"/settings/devices/enable/{{device_id}}\">\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n\n    <fieldset class=\"app-promo-group\">\n      <label class=\"control-label\">Mobile apps</label>\n      <div class=\"controls\">\n        <div class=\"app-promo-link\">\n          <a href=\"https://www.twitter.com/download\" target=\"_blank\">Download Twitter mobile app</a>\n        </div>\n        <p>Available for iPhone, iPad, Android, BlackBerry, and Windows Phone 7.</p>\n      </div>\n    </fieldset>\n\n    <hr>\n\n    <fieldset class=\"control-group\">\n      <label class=\"control-label\">My phone</label>\n      <div class=\"controls\">\n        <p id=\"device-country-carrier\">\n          +{{device_country_code}} {{device_address}} ({{device_country_name}})\n        </p>\n        <label class=\"checkbox\">\n          <input type=\"checkbox\" id=\"user_mobile_discoverable\" name=\"user[discoverable_by_mobile_phone]\" value=\"1\" {{#discoverable_by_mobile_phone}}checked{{/discoverable_by_mobile_phone}}> Let others find me by my phone number.\n          <input type=\"hidden\" id=\"user_mobile_discoverable_set\" name=\"user[discoverable_by_mobile_phone]\" value=\"0\">\n        </label>\n      </div>\n    </fieldset>\n\n    {{#device_can_have_pin}}\n    <fieldset class=\"control-group\">\n      <label class=\"control-label\">PIN</label>\n      <div class=\"controls\">\n        <input type=\"input\" id=\"device_pin\" name=\"device[pin]\" maxlength=\"4\" value=\"{{#device_pin}}{{device_pin}}{{/device_pin}}\">\n        <p>\n          Help protect against someone spoofing your account.\n          <a href=\"https://support.twitter.com/articles/20169928\" target=\"_blank\" id=\"sms_info\">Learn more</a>.\n        </p>\n      </div>\n    </fieldset>\n    {{/device_can_have_pin}}\n\n    \n    {{#device_notifications_enabled}}\n      {{#device_address_for_sms_is_international_longcode}}\n        <label class=\"control-label\">How to Tweet</label>\n        <div class=\"controls\">\n          <p>\n            To Tweet via text message, send a message to one of our \n            <a href=\"https://support.twitter.com/articles/14226-how-to-find-your-twitter-short-code-or-long-code\" target=\"_blank\" id=\"sms_info\">long codes</a>.\n            If you'd like to view Tweets, try using <a href=\"http://m.twitter.com\">m.twitter.com</a> on your phone.\n          </p>\n          <p>\n            Note: Your carrier may charge you an international text messaging tariff to send a Tweet.\n            Twitter doesn’t charge for this service, but standard message and data rates may apply.\n          </p>\n        </div>\n      {{/device_address_for_sms_is_international_longcode}}\n      {{^device_address_for_sms_is_international_longcode}}\n        {{#device_delivers}}\n          {{> settings/devices/notifications}}\n          {{> settings/devices/sleep_settings}}\n        {{/device_delivers}}\n\n        <p class=\"education-promo\">\n          Want to know about all the things you can do with Twitter text messaging?\n          <a href=\"https://support.twitter.com/groups/34-apps-sms-and-mobile/topics/153-twitter-via-sms/articles/14020-twitter-for-sms-basic-features\" target=\"_blank\" id=\"sms_info\">Learn more</a>.\n        </p>\n      {{/device_address_for_sms_is_international_longcode}}\n    {{/device_notifications_enabled}}\n    {{^device_notifications_enabled}}\n      <p>Note: This carrier only allows you to send messages to Twitter. Twitter will not be able to send you text message notifications. Try using <a href=\"http://m.twitter.com\">m.twitter.com</a> on your phone to view your Tweets.</p>\n    {{/device_notifications_enabled}}\n\n    <hr>\n\n    {{> settings/save_button}}\n\n  </form>\n\n  <form id=\"sms-phone-delete-form\" class=\"form-horizontal sms-form\" method=\"post\" action=\"/settings/devices/destroy/{{device_id}}\">\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n    <input type=\"hidden\" name=\"_method\" value=\"delete\">\n    <div class=\"form-actions\" id=\"delete_device_link\">\n      <button type=\"submit\" class=\"btn-link\" id=\"delete_device\">Delete my phone</button>\n    </div>\n  </form>\n</div>\n",
            "phone_verify": "<form id=\"sms-phone-verify-form\" class=\"form-horizontal sms-form form-flush-actions\" method=\"post\" action=\"/settings/devices/destroy/{{device_id}}\">\n  <input type=\"hidden\" name=\"device_type\" value=\"phone\">\n  <input type=\"hidden\" name=\"device_id\" value=\"{{device_id}}\">\n  <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n\n  <div class=\"content-no-header\">\n    <div class=\"no-header-inner\">\n      <div class=\"content-placeholder\">\n        <h3 class=\"title\">\n          Text <strong>{{device_go_command}}</strong> to <strong>{{device_short_code}}</strong>.\n        </h3>\n\n        <div id=\"settings-alert-box\" class=\"alert content-placeholder-alert\">\n          <p>\n            <span class=\"spinner-small\"></span>\n            Waiting for your activation text from +{{device_country_code}}{{device_address}}...\n          </p>\n        </div>\n\n        <p>\n          If you have texted {{device_go_command}} to {{device_short_code}} and this page hasn't updated, try <a href=\"\" id=\"reload\">refreshing</a> this page or texting again.\n          Twitter doesn’t charge for this service, but standard message and data rates may apply.\n        </p>\n        <p class=\"placeholder-actions\">\n          <button id=\"cancel_verification\" class=\"btn\" type=\"submit\">Cancel activation</button>\n        </p>\n      </div>\n    </div>\n  </div>\n</form>",
            "sleep_settings": "<fieldset class=\"control-group sleep-settings\">\n  <label class=\"control-label\">Sleep settings</label>\n  <div class=\"controls\">\n    <label class=\"checkbox sleep-settings-toggle\">\n      <input type=\"checkbox\" class=\"toggler user_scheduled_sleeping\" name=\"user[scheduled_sleeping]\" id=\"user_scheduled_sleeping\" value=\"1\" {{#user_scheduled_sleeping}}checked{{/user_scheduled_sleeping}}> Turn off updates during these hours\n    </label>\n    <select class=\"toggleable\" {{^user_scheduled_sleeping}}disabled{{/user_scheduled_sleeping}} name=\"user[scheduled_sleep_start_hour]\" id=\"user_scheduled_sleep_start_hour\">\n      {{#hours}}\n        <option value=\"{{value}}\" {{#user_scheduled_sleep_start_hour}}selected{{/user_scheduled_sleep_start_hour}}>{{hour}}</option>\n      {{/hours}}\n    </select>\n    to\n    <select class=\"toggleable\" {{^user_scheduled_sleeping}}disabled{{/user_scheduled_sleeping}} name=\"user[scheduled_sleep_end_hour]\" id=\"user_scheduled_sleep_end_hour\">\n      {{#hours}}\n        <option value=\"{{value}}\" {{#user_scheduled_sleep_end_hour}}selected{{/user_scheduled_sleep_end_hour}}>{{hour}}</option>\n      {{/hours}}\n    </select>\n  </div>\n</fieldset>\n",
            "devices_main": "{{>dashboard_settings}}\n\n{{#user}}\n<div class=\"content-main\">\n  {{#phone_device_deactivated}}\n    {{> settings/devices/phone_deactivated}}\n  {{/phone_device_deactivated}}\n  {{^phone_device_deactivated}}\n    {{#phone_device}}\n      {{#device_dupe}}\n        {{> settings/devices/phone_duplicate}}\n      {{/device_dupe}}\n      {{^device_dupe}}\n        {{#device_carrier_unsupported}}\n          {{> settings/devices/phone_unsupported}}\n        {{/device_carrier_unsupported}}\n        {{^device_carrier_unsupported}}\n          {{#device_verified}}\n            {{> settings/devices/phone_verified}}\n          {{/device_verified}}\n          {{^device_verified}}\n            {{> settings/devices/phone_verify}}\n          {{/device_verified}}\n        {{/device_carrier_unsupported}}\n      {{/device_dupe}}\n    {{/phone_device}}\n\n    {{^phone_device}}\n      {{#phone_device_available}}\n        {{> settings/devices/phone_create}}\n      {{/phone_device_available}}\n    {{/phone_device}}\n\n    {{^phone_device_verification_in_progress}}\n      {{#email_device}}\n        {{#phone_device}}\n          <hr>\n        {{/phone_device}}\n        {{> settings/devices/email}}\n      {{/email_device}}\n\n      {{^email_device}}\n        {{#email_device_available}}\n          {{> settings/devices/email_create}}\n        {{/email_device_available}}\n      {{/email_device}}\n    {{/phone_device_verification_in_progress}}\n  {{/phone_device_deactivated}}\n</div>\n{{/user}}\n",
            "enhanced_profile": "{{>dashboard_settings}}\n\n{{#current_user}}\n  <div class=\"content-main\">\n    <div class=\"content-header\">\n      <div class=\"header-inner\">\n        <h2>Enhanced Profile</h2>\n      </div>\n    </div>\n    <div class=\"content-inner no-stream-end\">\n      <form action=\"{{upload_banner_preview_path}}\" class=\"twitter-form {{form_class}}\" target=\"banner_upload_frame\" enctype=\"multipart/form-data\" method=\"POST\" id=\"profile_banner\">\n        {{> settings/alert_partial}}\n        <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n        <h3 class=\"settings-header\">Banner Image</h3>\n        <fieldset id=\"profile-banner-controls\" class=\"control-group\">\n          <div class=\"controls\">\n            <div class=\"clearfix\">\n              <div class=\"banner-preview-box  {{proxy_uploader_class}}\">\n                <div class=\"banner-shadow\"></div>\n                <div class=\"banner-preview-image\">\n                  {{{sample_banner}}}\n                </div>\n                <div class=\"preview-loading-overlay\">\n                  <img id=\"preview_spinner\" src=\"{{bigger_spinner_path}}\" />\n                </div>\n              </div>\n\n              <div class=\"avatar-upload banner-upload-input\">\n                <input id=\"brand_banner_uploaded_data\" name=\"brand_banner[image_data]\" size=\"15\" type=\"file\">\n                <p class=\"help-block\">Upload a JPG or PNG that is 835 pixels wide by 90 pixels tall.</p>\n\n                <input class=\"btn primary-btn publish-banner-btn action-btn {{preview_class}}\" name=\"commit\" type=\"submit\" value=\"Publish Banner\"/>\n                <input class=\"btn btn-gray delete-preview-btn action-btn {{preview_class}}\" name=\"commit\" type=\"submit\" value=\"Remove Preview\"/>\n                <input class=\"btn btn-gray delete-banner-btn action-btn {{live_class}}\" name=\"commit\" type=\"submit\" value=\"Remove Banner\"/>\n                <img alt=\"Spinner\" class=\"action-spinner\" src=\"{{spinner_path}}\" />\n              </div>\n            </div>\n            <iframe id=\"banner_upload_frame\" name=\"banner_upload_frame\" style=\"width:1px;height:1px;border:0px;visibility:hidden\"></iframe>\n          </div>\n        </fieldset>\n      </form>\n\n      {{#show_promoted_tweets_section}}\n        <hr>\n        <h3 class=\"settings-header\">{{promoted_tweets_label}}</h3>\n        <a href=\"{{promoted_tweets_link_href}}\">{{promoted_tweets_link_text}}</a>\n      {{/show_promoted_tweets_section}}\n    </div>\n  </div>\n{{/current_user}}\n",
            "tweet_notification_dropdown": "<select class=\"email-preference\" data-attribute=\"{{field}}\">\n  <option value=\"{{EMAIL_NOTIFICATIONS_FOLLOWS}}\" {{^everybody_checked}}selected=\"selected\"{{/everybody_checked}}>By people I follow</option>\n  <option value=\"{{EMAIL_NOTIFICATIONS_EVERYBODY}}\" {{#everybody_checked}}selected=\"selected\"{{/everybody_checked}}>By anyone</option>\n</select>\n",
            "password": "<div id=\"password-match-pair\">\n  <fieldset class=\"control-group\">\n    <label for=\"user_password\" class=\"control-label\">New password</label>\n    <div id=\"password_strength\" class=\"controls\">\n      <input id=\"user_password\" type=\"password\" name=\"user_password\">\n      <small id=\"password_strength_feedback\" class=\"help-inline help-error\" style=\"display: none;\"></small>\n    </div>\n  </fieldset>\n  <fieldset class=\"control-group\">\n    <label for=\"user_password_confirmation\" class=\"control-label\">Verify password</label>\n    <div class=\"controls\">\n      <input id=\"user_password_confirmation\" type=\"password\" name=\"user_password_confirmation\">\n      <small id=\"password_match\" class=\"help-inline help-error\" style=\"display: none;\">Passwords don't match</small>\n    </div>\n  </fieldset>\n</div>\n",
            "password_confirmation": "<div class=\"content-narrow\">\n  <div class=\"error-page error-403 clearfix\">\n    <h1 class=\"heading\">Woo hoo! Your password has been changed!</h1>\n    {{#show_app_review}}\n    <p class=\"lead\">\n      {{#multiple_apps}}\n        As a reminder, you have <strong>{{number_of_apps}}</strong> applications that can access your account. Do you want to review them?\n      {{/multiple_apps}}\n      {{^multiple_apps}}\n        As a reminder, you have an application that can access your account. Do you want to review it?\n      {{/multiple_apps}}\n    </p>\n    <a class=\"primary-btn btn js-nav\" href=\"{{connections_path}}\">Review applications</a>\n    <a class=\"btn js-nav\" href=\"{{home_path}}\">No thanks</a>\n    {{/show_app_review}}\n    {{^show_app_review}}\n      <p><a class=\" js-nav\" href=\"{{home_path}}\">← Go to the homepage</a></p>\n    {{/show_app_review}}\n  </div>\n</div>\n",
            "profile": "{{>dashboard_settings}}\n\n{{#user}}\n        <div class=\"content-main\">\n          <div class=\"content-header\">\n            <div class=\"header-inner\">\n              <h2>Profile</h2>\n              <p class=\"subheader\">This information appears on your public profile, search results, and beyond.</p>\n            </div>\n          </div>\n          <div class=\"content-inner no-stream-end\">\n            <form id=\"profile-form\" class=\"form-horizontal\"  enctype=\"multipart/form-data\" method=\"POST\" action=\"{{form_url}}\">\n              {{> settings/alert_partial}}\n              <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n              <input type=\"hidden\" value=\"PUT\" name=\"_method\">\n              {{#image_upload_available}}\n              {{> settings/profile_image}}\n              {{/image_upload_available}}\n              <hr>\n              {{> settings/profile_user}}\n              <hr>\n              {{> settings/save_button}}\n            </form>\n\n            {{> dialogs/in_product_help_dialog}}\n\n            {{#show_delete_image_link}}\n              <form id=\"profile_image_delete_form\" class=\"form-horizontal\" method=\"POST\" action=\"{{form_url}}\">\n                <input type=\"hidden\" value=\"Delete\" name=\"_method\">\n                <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n              </form>\n            {{/show_delete_image_link}}\n          </div>\n        </div>\n{{/user}}\n",
            "profile_image": "<fieldset id=\"profile-image-controls\" class=\"control-group\">\n  <label class=\"control-label\" for=\"profile_image_uploaded_data\">Picture</label>\n  <div class=\"controls\">\n    <div class=\"uploader-avatar clearfix\">\n      <img class=\"avatar size73\" id=\"avatar_preview\" src=\"{{avatar}}\">\n      <div class=\"uploader-tools\">\n        {{>swift_photo_selector}}\n        <p>\n          Maximum size of 700k. JPG, GIF, PNG.<br>\n          Need help uploading a profile image? <a href={{{profile_learn_more_attrs}}} id=\"profile_image_help\">Learn more</a>.<br>\n          {{#show_delete_image_link}}\n            <a href=\"#\" id=\"delete-image\" class=\"delete-image btn-link\">Delete this image</a>\n          {{/show_delete_image_link}}\n        </p>\n      </div>\n    </div>\n  </div>\n</fieldset>",
            "profile_user": "<fieldset class=\"control-group\">\n  <label class=\"control-label\" for=\"user_name\">Name</label>\n  <div class=\"controls\">\n    <input id=\"user_name\" maxlength=\"20\" type=\"text\" name=\"user[name]\" value=\"{{name}}\">\n    <p>Enter your real name, so people you know can recognize you.</p>\n  </div>\n</fieldset>\n<fieldset class=\"control-group\">\n  <label class=\"control-label\" for=\"user_location\">Location</label>\n  <div class=\"controls\">\n    <input id=\"user_location\" name=\"user[location]\" type=\"text\" value=\"{{location}}\">\n    <p>Where in the world are you?</p>\n  </div>\n</fieldset>\n<fieldset id=\"user_web_fieldset\" class=\"control-group\">\n  <label class=\"control-label\" for=\"user_url\">Website</label>\n  <div class=\"controls\">\n    <input id=\"user_url\" name=\"user[url]\" rel=\"{{url_display}}\" size=\"30\" type=\"text\" value=\"{{url_display}}\">\n    <p>Have a homepage or a blog? Put the address here.</p>\n    <p> <a href=\"/goodies\" title=\"Put Twitter on your site!\" id=\"tfw_link\">You can also add Twitter to your site here.</a></p>\n  </div>\n</fieldset>\n<fieldset class=\"control-group\">\n  <label class=\"control-label\" for=\"user_description\">Bio</label>\n  <div class=\"controls\">\n    <textarea class=\"input-xlarge\" id=\"user_description\" maxlength=\"160\" name=\"user[description]\">{{description}}</textarea>\n    <p>{{{bio_description}}}</p>\n  </div>\n</fieldset>\n\n<hr>\n\n{{#facebook_available}}\n<div id=\"fb-button\" class=\"fb-button-or-iframe\">\n  <label class=\"control-label\" for=\"\">Facebook</label>\n  <div class=\"controls\">\n    <iframe id=\"fb-iframe\" scrolling=\"no\" frameborder=\"0\" style=\"display: none;\"></iframe>\n    <p><a href=\"#\" id=\"fb-anchor\" class=\"btn\" style=\"display: none;\"><span>Post your Tweets to Facebook</span></a></p>\n    <p>Having trouble? <a href=\"https://support.twitter.com/articles/31113\" target=\"_blank\">Learn more</a>.</p>\n  </div>\n</div>\n{{/facebook_available}}\n",
            "save_button": "<div class=\"form-actions\">\n  <button id=\"settings_save\" class=\"btn primary-btn\" type=\"submit\">Save changes</button>\n</div>",
            "widgets": "{{>dashboard_settings}}\n\n{{#user}}\n  <div class=\"content-main widgets\">\n    <div class=\"content-header\">\n      <div class=\"header-inner\">\n        <a href=\"{{new_widget_path}}\" class=\"btn btn-widgets-new\">Create new</a>\n        <h2>Widgets</h2>\n        <p class=\"subheader\">Create and manage your widgets.</p>\n      </div>\n    </div>\n    <ul class=\"content-inner no-stream-end\">\n      {{#widgets}}\n        <li class=\"widgets-list-item\">\n          <a href=\"{{delete_widget_url}}\" class=\"btn-link btn-widgets-delete\">Delete</a>\n          <a href=\"{{update_widget_url}}\" class=\"btn btn-widgets-edit\">Edit</a>\n          <i class=\"configurator_{{widget_type}}\"></i>\n          <h3><strong>{{title}}</strong></h3>\n          <p>Domains: {{domains}}</p>\n        </li>\n      {{/widgets}}\n      {{^widgets}}\n        <li class=\"widgets-list-item\"><p class=\"muted\">You currently have no widgets.</p></li>\n      {{/widgets}}\n    </ul>\n  </div>\n{{/user}}",
            "widgets_configurator": "<div class=\"module widgets\">\n  <div class=\"flex-module clearfix\">\n\n    <div class=\"header row\">\n      <h1>Configure a widget</h1>\n      <div class=\"muted subheader\">\n        <p>Add any public Twitter timeline to your website using the tool below. </p>\n        <p>Simply select your timeline source, options, and copy and paste the code in the HTML of your page.</p>\n        <p>For more information, read the <a href=\"https://dev.twitter.com/docs/embedded-timelines\">developer documentation</a>.</p>\n      </div>\n    </div>\n\n    {{^is_edit}}\n      <div class=\"row clearfix\">\n        <h2>Choose a timeline source</h2>\n        <ul class=\"widgets-source nav-tabs\">\n          <li {{#is_user}}class=\"active\"{{/is_user}}>\n            <a href=\"{{new_user_widget_path}}\">\n              <i class=\"configurator-user\"></i>User timeline\n            </a>\n          </li>\n          <li {{#is_favorites}}class=\"active\"{{/is_favorites}}>\n            <a href=\"{{new_favorites_widget_path}}\">\n              <i class=\"configurator-favorites\"></i>Favorites\n            </a>\n          </li>\n          <li {{#is_list}}class=\"active\"{{/is_list}}>\n            <a href=\"{{new_list_widget_path}}\">\n              <i class=\"configurator-list\"></i>List\n            </a>\n          </li>\n          <li {{#is_search}}class=\"active\"{{/is_search}}>\n            <a href=\"{{new_search_widget_path}}\">\n              <i class=\"configurator-search\"></i>Search\n            </a>\n          </li>\n        </ul>\n      </div>\n    {{/is_edit}}\n\n    <div class=\"row clearfix\">\n      <div class=\"options-column\">\n        <h2>Options</h2>\n        <form id=\"widget-form\" class=\"form-horizontal\" method=\"post\"\n          action=\"{{^is_edit}}{{create_widget_path}}{{/is_edit}}{{#is_edit}}{{update_widget_action}}{{/is_edit}}\">\n\n          <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\">\n          <input type=\"hidden\" value=\"{{widget_type}}\" name=\"widget\">\n\n          {{#is_fav_user}}\n            <fieldset id=\"username_fieldset\" class=\"control-group\">\n              <label for=\"screen_name\" class=\"control-label\">Username</label>\n              <div class=\"controls\">\n                <div class=\"controls-inner\">\n                  <div class=\"input-prepend\">\n                    <span class=\"add-on\">@</span><input type=\"text\" id=\"screen_name\" class=\"screen-name\" name=\"screen_name\" autocomplete=\"on\" class=\"username-prepended-input\" value=\"{{username}}\">\n                  </div>\n                  {{>swift_autocomplete_dropdown}}\n                </div>\n              </div>\n            </fieldset>\n          {{/is_fav_user}}\n\n          {{#is_list}}\n            <fieldset id=\"list_fieldset\" class=\"control-group\">\n              <label for=\"list_id\" class=\"control-label\">List</label>\n              <div class=\"controls\">\n                  {{#has_lists}}\n                    <select id=\"list_id\" name=\"list_id\">\n                      {{#lists}}\n                        <option {{#selected}}selected=\"selected\"{{/selected}}value=\"{{id}}\">\n                          @{{owner}}/{{name}}\n                        </option>\n                      {{/lists}}\n                    </select>\n                  {{/has_lists}}\n                  {{^has_lists}}\n                    <input id=\"list_id\" name=\"list\" type=\"text\" value=\"No available lists\" disabled=disabled class=\"disabled\">\n                  {{/has_lists}}\n                <p class=\"help-text\">Available lists include only those you own and/or subscribe to.</p>\n              </div>\n            </fieldset>\n          {{/is_list}}\n\n          {{#is_search}}\n            <fieldset id=\"query_fieldset\" class=\"control-group\">\n              <label for=\"query\" class=\"control-label\">Search Query</label>\n              <div class=\"controls\">\n                <div class=\"controls-inner\">\n                  <input type=\"text\" id=\"query\" name=\"query\" autocomplete=\"off\" spellcheck=\"false\" value=\"{{query}}\">\n                  {{>swift_typeahead_dropdown}}\n                </div>\n                <label>\n                  <input type=\"checkbox\" name=\"safe_mode\" {{#safe_mode}}checked=\"checked\"{{/safe_mode}}> Safe mode <small class=\"muted\">(exclude sensitive content, profanity, etc.)</small>\n                </label>\n              </div>\n            </fieldset>\n          {{/is_search}}\n\n          <fieldset id=\"height_fieldset\" class=\"control-group\">\n            <label for=\"height\" class=\"control-label\">Height</label>\n            <div class=\"controls\">\n              <input id=\"height\" name=\"height\" maxlength=\"15\" type=\"text\" value=\"{{height}}\">\n            </div>\n          </fieldset>\n\n          <fieldset id=\"theme_fieldset\" class=\"control-group\">\n            <label for=\"theme\" class=\"control-label\">Theme</label>\n            <div class=\"controls\">\n              <select id=\"theme\" name=\"theme\">\n                <option {{#light_theme}}selected=\"selected\"{{/light_theme}} value=\"light\">Light</option>\n                <option {{^light_theme}}selected=\"selected\"{{/light_theme}} value=\"dark\">Dark</option>\n              </select>\n            </div>\n          </fieldset>\n\n          <fieldset class=\"control-group\">\n            <div class=\"controls\">\n              <label>\n                <input type=\"checkbox\" name=\"expand_media\"  {{#expand_media}}checked=\"checked\"{{/expand_media}}> Auto expand media\n              </label>\n            </div>\n          </fieldset>\n\n          <fieldset id=\"link_color_fieldset\" class=\"control-group\">\n            <label for=\"link_color\" class=\"control-label\">Link color</label>\n            <div class=\"controls\">\n              <input id=\"link_color\" maxlength=\"15\" class=\"input-color\" data-type=\"links_color\" data-color=\"{{link_color}}\" type=\"text\" value=\"{{link_color}}\" name=\"link_color\">\n            </div>\n          </fieldset>\n\n          <fieldset id=\"domains_fieldset\" class=\"control-group\">\n            <label for=\"domains\" class=\"control-label\">Domains</label>\n            <div class=\"controls\">\n              <textarea id=\"domains\" name=\"domains\" type=\"text\" placeholder=\"example.com, sample.com\">{{domains}}</textarea>\n              <p class=\"help-text\">Enter the domains of the sites where you'll be embedding this timeline.</p>\n            </div>\n          </fieldset>\n\n          <fieldset id=\"do_not_track_fieldset\" class=\"control-group\">\n            <div class=\"controls\">\n              <label>\n                <input type=\"checkbox\" name=\"do_not_track\" {{#do_not_track}}checked=\"checked\"{{/do_not_track}}> Opt-out of tailoring Twitter [<a href=\"https://support.twitter.com/articles/20169421\">?</a>]\n              </label>\n            </div>\n          </fieldset>\n\n          <div class=\"form-actions\">\n            <button id=\"settings_save\" class=\"btn primary-btn\" type=\"submit\">\n            {{#is_edit}}Update widget{{/is_edit}}\n            {{^is_edit}}Create widget{{/is_edit}}\n            </button>\n\n            <a href=\"{{widgets_path}}\" class=\"btn\">Cancel</a>\n          </div>\n\n        </form>\n      </div>\n\n      <div class=\"preview-column\">\n        <h2>Preview</h2>\n        <div id=\"preview\" class=\"preview\" data-url=\"{{preview_widget_path}}\"></div>\n        {{#code}}\n        <div class=\"configurator-code{{^code}} hide{{/code}}\">\n          <textarea id=\"code\" class=\"code\" type=\"text\">{{code}}</textarea>\n          <p class=\"help-text\">Copy and paste the code into the HTML of your site.</p>\n        </div>\n        {{/code}}\n      </div>\n    </div>\n\n    <hr>\n\n    <div class=\"footer row\">\n      \n        By using Twitter Widgets, you agree to the <a href=\"https://dev.twitter.com/terms/api-terms\">Developer Rules of the Road</a>.\n      \n    </div>\n  </div>\n</div>",
            "captcha": "<script>\n  var RecaptchaOptions = {\n    theme: 'white',\n    lang: '{{lang}}'\n  };\n</script>\n<script type=\"text/javascript\" src=\"https://www.google.com/recaptcha/api/challenge?k=6LfbTAAAAAAAAE0hk8Vnfd1THHnn9lJuow6fgulO&lang={{lang}}\"></script>\n",
            "country_select_options": "{{#takedown_country_options}}\n  <option value=\"{{code}}\" {{#selected}}selected{{/selected}}>{{name}}</option>\n{{/takedown_country_options}}",
            "lang_select_options": "<option>Select Language...</option>\n{{#available_language_options}}\n  <option value=\"{{code}}\" {{#selected_lang}}selected{{/selected_lang}}>{{display_name}}</option>\n{{/available_language_options}}\n",
            "signin_form": "<form action=\"{{sessions_path}}\" class=\"signin\" method=\"post\">\n  {{>signin_form_textbox}}\n  {{>signin_form_subchck}}\n  <div class=\"divider\"></div>\n  <p>\n    <a class=\"forgot\" href=\"{{resend_password_path}}\">Forgot password?</a><br />\n    <a class=\"mobile has-sms\" href=\"{{mobile_complete_path}}\">Already using Twitter via text message?</a>\n  </p>\n</form>\n",
            "signin_form_subchck": "<div class=\"clearfix\">\n\n  <input type=\"hidden\" name=\"scribe_log\">\n  <input type=\"hidden\" name=\"redirect_after_login\" value=\"{{redirect_after_login}}\">\n  <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n  <button type=\"submit\" class=\"submit btn primary-btn\" tabindex=4>Sign in</button>\n\n  <fieldset class=\"subchck\">\n    <label class=\"remember\">\n      <input type=\"checkbox\" value=\"1\" name=\"remember_me\" {{#remember_checked}}checked=\"checked\"{{/remember_checked}} tabindex=3>\n      Remember me\n    </label>\n  </fieldset>\n\n</div>\n",
            "signin_form_textbox": "<fieldset>\n\n  <div class=\"clearfix holding{{#username_or_email}} hasome{{/username_or_email}}\">\n    <span class=\"username js-username holder\">Username or email</span>\n    <input class=\"js-username-field email-input\" type=\"text\" name=\"session[username_or_email]\" autocomplete=\"on\" value=\"{{username_or_email}}\" tabindex=1>\n    <p class=\"help-text-inline\">Forgot your <a href=\"{{resend_password_path}}\" title=\"{{password_reset_title}}\" tabindex=\"-1\">username</a>?</p>\n  </div>\n\n  <div class=\"clearfix holding\">\n    <span class=\"password holder\">Password</span>\n    <input class=\"js-password-field\" type=\"password\" name=\"session[password]\" tabindex=2>\n    <p class=\"help-text-inline\">Forgot your <a href=\"{{resend_password_path}}\" tabindex=\"-1\">password</a>?</p>\n  </div>\n\n  <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n\n</fieldset>\n",
            "signin_or_signup": "<div id=\"signin-or-signup\">\n\n  {{#is_signup_only}}\n    <div class=\"signup-call-out\">\n      {{>partial_signup_form}}\n    </div>\n  {{/is_signup_only}}\n\n  {{^is_signup_only}}\n    {{>signin_form}}\n    <div class=\"signup\">\n      <h2>Not on Twitter? Sign up, tune into the things you care about, and get updates as they happen.</h2>\n      {{>signup_button}}\n    </div>\n  {{/is_signup_only}}\n\n</div>",
            "front_page_signup_form": "<div class=\"front-signup js-front-signup front_page_full_signup_256\">\n  <h2><strong>Sign up</strong></h2>\n  \n  <form id=\"phx-signup-form\" class=\"signup\" method=\"post\" action=\"{{account_create_path}}\" data-front_page_full_signup_256_bucket=\"{{front_page_full_signup_256_bucket}}\">\n    <div class=\"name\">\n      <div class=\"placeholding-input holding\" data-fieldname=\"name\">\n        <input type=\"text\" class=\"text-input\" autocomplete=\"off\" name=\"user[name]\" maxlength=\"20\">\n        <span class=\"placeholder\">Full name</span>\n        <div class=\"sidetip\">\n          <p class=\"ok isaok\"></p>\n          <p class=\"blank invalid error js-user-tipsy\" title=\"A name is required!\" role=\"alert\"></p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"email\">\n      <div class=\"placeholding-input holding js-user-tipsy\" data-fieldname=\"email\">\n        <input type=\"text\" class=\"text-input email-input\" autocomplete=\"off\" name=\"user[email]\">\n        <span class=\"placeholder\">Email</span>\n        <div class=\"sidetip\">\n          <p class=\"ok isaok\"></p>\n          <p class=\"checking\"></p>\n          <p class=\"invalid error js-user-tipsy\" title=\"Doesn't look like a valid email.\" role=\"alert\"></p>\n          <p class=\"blank error js-user-tipsy\" title=\"An email is required!\" role=\"alert\"></p>\n          <p class=\"taken error js-user-tipsy\" title=\"This email is already registered.\" role=\"alert\"></p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"password\">\n      <div class=\"placeholding-input holding js-user-tipsy\" data-fieldname=\"password\">\n        <input type=\"password\" class=\"text-input\" name=\"user[user_password]\">\n        <span class=\"placeholder\">Password</span>\n        <div class=\"sidetip\">\n          {{#password_error}}\n          <p class=\"active error js-user-tipsy\" title=\"{{password_error}}\"></p>\n          {{/password_error}}\n          <p class=\"perfect isaok\"></p>\n          <p class=\"ok isaok\"></p>\n          <p class=\"weak isaok\"></p>\n          <p class=\"weak error js-user-tipsy\" title=\"Password is not secure enough.\" role=\"alert\"></p>\n          <p class=\"obvious error js-user-tipsy\" title=\"Password is too obvious.\" role=\"alert\"></p>\n          <p class=\"invalid error js-user-tipsy\" title=\"Password must be at least 6 characters.\" role=\"alert\"></p>\n          <p class=\"blank error js-user-tipsy\" title=\"Password cannot be blank!\" role=\"alert\"></p>\n        </div>\n      </div>\n      <div class=\"score\"><span><b class=\"fill\"></b></span></div>\n    </div>\n\n    <div class=\"username\">\n      <div class=\"placeholding-input holding js-user-tipsy\" data-fieldname=\"username\">\n        <input type=\"text\" class=\"text-input\" name=\"user[screen_name]\">\n        <span class=\"placeholder\">Username</span>\n        <div class=\"sidetip\">\n          {{#screen_name_error}}\n          <p class=\"active error js-user-tipsy\" title=\"{{screen_name_error}}\"></p>\n          {{/screen_name_error}}\n          <p class=\"ok isaok js-user-tipsy\" title=\"Username is available. You can change it later.\"></p>\n          <p class=\"checking\"></p>\n          <p class=\"taken error js-user-tipsy\" title=\"This username is already taken!\" role=\"alert\"></p>\n          <p class=\"invalid error js-user-tipsy\" title=\"Invalid username! Alphanumerics only.\" role=\"alert\"></p>\n          <p class=\"blank error js-user-tipsy\" title=\"A username is required! You can change it later.\" role=\"alert\"></p>\n        </div>\n      </div>\n      <div class=\"suggestions\">Suggestions: <ul></ul></div>\n    </div>\n\n    <div class=\"details\">\n      <div class=\"prompt rememberme\">\n        <label class=\"checkbox\">\n          <input type=\"checkbox\" checked=\"checked\" name=\"user[remember_me_on_signup]\" value=\"1\">\n          Keep me logged in\n        </label>\n      </div>\n\n      {{#ask_cookie_personalization}}\n      <div class=\"prompt optin\">\n        <label class=\"checkbox\">\n          <input type=\"checkbox\" {{^do_not_track}}checked=\"checked\"{{/do_not_track}} name=\"user[use_cookie_personalization]\" value=\"1\">\n          <input type=\"hidden\" name=\"asked_cookie_personalization_setting\" value=\"1\">\n          Tailor Twitter based on my recent website visits. <a class=\"cookie-personalization-support\" href=\"https://support.twitter.com/articles/20169421\" target=\\\"_blank\\\">Learn more</a>.\n        </label>\n      </div>\n      {{/ask_cookie_personalization}}\n\n      <div class=\"terms\">\n        <p>By creating an account, you are agreeing to the <a href=\"/tos\" target=\"_blank\">Terms of Service</a> and <a href=\"/privacy\" target=\"_blank\">Privacy Policy</a>. Others will be able to find you by name, username or email. Your email will not be shown publicly. You can change your privacy settings at any time.</p>\n      </div>\n    </div>\n\n    <input type=\"submit\" class=\"button submit btn signup-btn\" value=\"Create my account\">\n\n    <input type=\"hidden\" name=\"scribe_log\">\n    <input type=\"hidden\" value=\"{{signup_source}}\" name=\"context\">\n    <input type=\"hidden\" value=\"1\" name=\"front_page_full_signup_256\">\n    <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\">\n  </form>\n</div>\n{{#front_page_full_signup_256_login_form_below}}<a href=\"#\" id=\"back-to-login\">Did you mean to log in?</a>{{/front_page_full_signup_256_login_form_below}}\n",
            "signup": "<link href=\"{{signup_css_bundle}}\" rel=\"stylesheet\">\n<div class=\"page-canvas\">\n  <div class=\"signup-wrapper\">\n\n    {{#event}}\n      <h1>Join Twitter today.</h1>\n      <p>Complete signup now to follow top accounts for <strong>{{event_hashtag}}</strong>.</p>\n      <div class=\"ambassador event-signup clearfix\">\n        {{#top_people}}<img src=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\" class=\"avatar size48\" alt=\"{{name}}\" title=\"{{name}}\">\n{{/top_people}}\n      </div>\n\n    {{/event}}\n    {{^event}}\n      {{#ambassadors_exist}}\n        {{#follow_many}}\n          <h1>It's your turn. Join Twitter.</h1>\n        {{/follow_many}}\n        {{^follow_many}}\n          <h1>Join Twitter today.</h1>\n        {{/follow_many}}\n\n        <div class=\"ambassador clearfix\">\n          {{#ambassadors}}\n            <img src=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\" class=\"avatar size48\" alt=\"{{name}}\" title=\"{{name}}\">\n          {{/ambassadors}}\n          {{#follow_many}}\n            <p>Complete signup now to receive updates from <strong>{{first_ambassador_name}}</strong> and others. </p>\n          {{/follow_many}}\n          {{^follow_many}}\n            <p>Complete signup now to receive updates from <strong>{{first_ambassador_name}}</strong>.</p>\n          {{/follow_many}}\n        </div>\n      {{/ambassadors_exist}}\n      {{^ambassadors_exist}}\n        <h1>\n          {{#user_found_by_device}}\n          Complete your account.\n          {{/user_found_by_device}}\n          {{^user_found_by_device}}\n          Join Twitter today.\n          {{/user_found_by_device}}\n        </h1>\n      {{/ambassadors_exist}}\n    {{/event}}\n\n    {{>signup/signup_form}}\n  </div>\n</div>\n",
            "signup_form": "<form id=\"phx-signup-form\" method=\"POST\" action=\"{{account_create_path}}\" class=\"{{#captcha_tryagain}}validated captcha-tryagain{{/captcha_tryagain}}{{#user_found_by_device}} device-complete{{/user_found_by_device}} {{#show_captcha}}validated captcha-show{{/show_captcha}}\">\n<input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\" />\n\n{{#event}}\n  <input type=\"hidden\" value=\"{{event}}\" name=\"event\" />\n{{/event}}\n{{#follow_field}}\n  <input type=\"hidden\" value=\"{{follow_handles}}\" name=\"follows\" />\n{{/follow_field}}\n{{#oauth_token}}\n  <input type=\"hidden\" value=\"{{oauth_token}}\" name=\"oauth_token\" />\n{{/oauth_token}}\n\n{{#signup_user}}\n\n  <fieldset class=\"textbox\">\n\n    <div class=\"prompt name\">\n      <div class=\"holding {{#name}}hasome{{/name}}\" data-fieldname=\"name\">\n        <div class=\"sidetip\">\n          {{#name_error}}\n            <p class=\"active error\">{{name_error}}</p>\n          {{/name_error}}\n          <p class=\"ok isaok\">Name looks great.</p>\n          <p class=\"tip\">Enter your first and last name.</p>\n          <p class=\"blank invalid error\" role=\"alert\">A name is required!</p>\n        </div>\n        <input type=\"text\" autocomplete=\"off\" value=\"{{name}}\" name=\"user[name]\" maxlength=\"20\" aria-required=\"true\" />\n        <span class=\"holder\">Full name</span>\n      </div>\n    </div>\n\n    <div class=\"prompt email\">\n      <div class=\"holding {{#email}}hasome{{/email}}\" data-fieldname=\"email\">\n        <div class=\"sidetip\">\n          {{#email_error}}\n            <p class=\"active error\">{{email_error}}</p>\n          {{/email_error}}\n          <p class=\"tip\">What’s your email address?</p>\n          <p class=\"ok isaok\">We will email you a confirmation.</p>\n          <p class=\"checking\">Validating...</p>\n          <p class=\"invalid error\" role=\"alert\">Doesn't look like a valid email.</p>\n          <p class=\"blank error\" role=\"alert\">An email is required!</p>\n          <p class=\"taken error\" role=\"alert\">This email is already registered. Want to <a href=\"{{login_path}}\">login</a> or <a href=\"{{resend_password_path}}\">recover your password</a>?</p>\n          <p class=\"domain tip {{#abtest_autocorrect_email_domain_266_enabled}}ddg-autocorrect_email_domain_266_enabled{{/abtest_autocorrect_email_domain_266_enabled}}\">Did you mean <em><a class=\"js-email-correction\" href=\"#\"></a></em>?</p>\n        </div>\n        <input class=\"email-input\" type=\"text\" autocomplete=\"off\" value=\"{{email}}\" name=\"user[email]\" aria-required=\"true\" />\n        <span class=\"holder\">Email</span>\n      </div>\n    </div>\n\n    <div class=\"prompt password\">\n      <div class=\"holding {{#password}}hasome{{/password}}\" data-fieldname=\"password\">\n        <div class=\"sidetip\">\n          {{#password_error}}\n            <p class=\"active error\">{{password_error}}</p>\n          {{/password_error}}\n          <p class=\"tip\">6 characters or more! Be tricky.</p>\n          <p class=\"perfect isaok\">Password is perfect!</p>\n          <p class=\"ok isaok\">Password is okay.</p>\n          <p class=\"weak isaok\">Password could be more secure.</p>\n          <p class=\"weak error\" role=\"alert\">Password is not secure enough.</p>\n          <p class=\"obvious error\" role=\"alert\">Password is too obvious.</p>\n          <p class=\"invalid error\" role=\"alert\">Password must be at least 6 characters.</p>\n          <p class=\"blank error\" role=\"alert\">Password cannot be blank!</p>\n        </div>\n        <input type=\"password\" value=\"{{password}}\" name=\"user[user_password]\" aria-required=\"true\" />\n        <span class=\"holder\">Password</span>\n      </div>\n      {{#decider_phoenix_signup_show_password_score}}\n      <div class=\"score\"><span><b></b></span></div>\n      {{/decider_phoenix_signup_show_password_score}}\n    </div>\n\n    <div class=\"prompt username\">\n      <div class=\"holding {{#screen_name}}hasome{{/screen_name}}\" data-fieldname=\"username\">\n        <div class=\"sidetip\">\n          {{#screen_name_error}}\n            <p class=\"active error\">{{screen_name_error}}</p>\n          {{/screen_name_error}}\n          <p class=\"ok isaok\">Username is available.<br>You can change it later.</p>\n          <p class=\"tip\">Don't worry, you can change it later.</p>\n          <p class=\"checking\">Validating...</p>\n          <p class=\"taken error\" role=\"alert\">This username is already taken!</p>\n          <p class=\"invalid error\" role=\"alert\">Invalid username! Alphanumerics only.</p>\n          <p class=\"blank error\" role=\"alert\">A username is required!<br>You can change it later.</p>\n        </div>\n        <input type=\"text\" autocomplete=\"off\" value=\"{{screen_name}}\" data-pre-input-value=\"{{screen_name}}\" name=\"user[screen_name]\" maxlength=\"15\" aria-required=\"true\" />\n        <span class=\"holder\">Username</span>\n      </div>\n      <div class=\"suggestions\">Suggestions: <ul></ul></div>\n    </div>\n\n    <div class=\"prompt rememberme\">\n      <label class=\"checkbox\">\n        <input type=\"checkbox\" {{#remember_me_on_signup}}checked=\"checked\"{{/remember_me_on_signup}} name=\"user[remember_me_on_signup]\" value=\"1\" />\n        <span>Keep me signed-in on this computer.</span>\n      </label>\n      <input type=\"hidden\" name=\"user[remember_me_on_signup]\" value=\"\" />\n    </div>\n\n    {{#ask_cookie_personalization}}\n    <div class=\"prompt optin\">\n      <label class=\"checkbox\">\n        <input type=\"checkbox\" {{^do_not_track}}checked=\"checked\"{{/do_not_track}} name=\"user[use_cookie_personalization]\" value=\"1\" />\n        <input type=\"hidden\" name=\"asked_cookie_personalization_setting\" value=\"1\" />\n        <span>Tailor Twitter based on my recent website visits. <a class=\"cookie-personalization-support\" href=\"https://support.twitter.com/articles/20169421\" target=\\\"_blank\\\">Learn more</a>.</span>\n      </label>\n    </div>\n    {{/ask_cookie_personalization}}\n\n    <input type=\"hidden\" name=\"context\" value=\"{{signup_context}}\" />\n    <input type=\"hidden\" name=\"ad_ref\" value=\"{{ad_ref}}\" />\n\n  </fieldset>\n\n  <div class=\"tos\">\n    <div class=\"sidetip\">\n      <p class=\"active tip\">Printable versions:<br/><a href=\"{{tos_path}}\" target=\"_blank\">Terms of Service</a> · <a href=\"{{privacy_path}}\" target=\"_blank\">Privacy Policy</a></p>\n    </div>\n    {{>tos_scroller}}\n  </div>\n\n  {{#captcha_available}}\n    <div class=\"captcha-container\">\n      {{^captcha_tryagain}}\n        <h6>Are you human?</h6>\n      {{/captcha_tryagain}}\n      {{#captcha_tryagain}}\n        <h6>Please try again…</h6>\n      {{/captcha_tryagain}}\n      <div class=\"embed\">\n        <noscript>\n          <p>You will need to enable JavaScript to answer the CAPTCHA and complete signup.</p>\n        </noscript>\n      </div>\n    </div>\n  {{/captcha_available}}\n\n  <div class=\"standby\">\n    <p>Creating your account…</p>\n  </div>\n\n  <fieldset class=\"doit\">\n\n    <div class=\"sign-up-box\"><input class=\"submit button promotional\" type=\"submit\" value=\"{{^user_found_by_device}}Create my account{{/user_found_by_device}}{{#user_found_by_device}}Complete my account{{/user_found_by_device}}\" /></div>\n\n    <div class=\"befound\">\n      {{#decider_phoenix_signup_show_befound}}\n      <p>\n        Let friends find you by email address?<br />\n        <em>Your name will always be publicly searchable.</em>\n      </p>\n      <div class=\"radios\">\n        <label>\n          <input type=\"radio\" name=\"user[discoverable_by_email]\" value=\"1\" {{#discoverable_by_email}}checked=\"checked\"{{/discoverable_by_email}} />\n          <span>Yes</span>\n        </label>\n        <label>\n          <input type=\"radio\" name=\"user[discoverable_by_email]\" value=\"\" {{^discoverable_by_email}}checked=\"checked\"{{/discoverable_by_email}} />\n          <span>No</span>\n        </label>\n      </div>\n    {{/decider_phoenix_signup_show_befound}}\n    {{^decider_phoenix_signup_show_befound}}\n      <p>\n        Note: Others will be able to find you by name, username or email. Your email will not be shown publicly. You can change your privacy settings at any time.\n      </p>\n      <input type=\"hidden\" name=\"user[discoverable_by_email]\" value=\"1\" />\n    {{/decider_phoenix_signup_show_befound}}\n    </div>\n\n    {{#decider_phoenix_signup_show_newsletter}}\n    <p class=\"newsletter\">\n      <label>\n        <input type=\"checkbox\" name=\"user[send_email_newsletter]\" value=\"1\" {{#send_email_newsletter}}checked=\"checked\"{{/send_email_newsletter}} />\n        <span>Sign up for our email newsletter</span>\n      </label>\n    </p>\n    {{/decider_phoenix_signup_show_newsletter}}\n    {{^decider_phoenix_signup_show_newsletter}}\n      <input type=\"hidden\" name=\"user[send_email_newsletter]\" value=\"1\" />\n    {{/decider_phoenix_signup_show_newsletter}}\n\n    {{#show_captcha}}\n      <input type=\"hidden\" name=\"captcha_shown\" value=\"1\">\n    {{/show_captcha}}\n  </fieldset>\n\n{{/signup_user}}\n</form>\n",
            "signup_button": "<form action=\"{{signup_path}}\" class=\"signup\" method=\"get\">\n  {{#screen_name}}\n    <input name=\"follow\" type=\"hidden\" value=\"{{screen_name}}\">\n  {{/screen_name}}\n  {{#signup_source}}\n    <input type=\"hidden\" name=\"context\" value=\"{{signup_source}}\">\n    <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n  {{/signup_source}}\n  <button class=\"btn promotional signup-btn\" type=\"submit\">Sign up »</button>\n</form>\n",
            "download": "\n<div class=\"content-no-header\">\n    <div class=\"no-header-inner promptbox\">\n      <div class=\"content-placeholder\">\n        <form method=\"post\" action=\"{{signup_download_create_path}}\">\n          <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n          <h3 class=\"title\">What's your phone number?</h3>\n          <p>We'll send you a link to download the Twitter app. We’ll also activate Twitter text messaging so you can tweet by texting. Standard message rates apply. Others will be able to find you by your phone number.</p>\n          <br>\n          <div id=\"settings-alert-box\" class=\"alert\" {{^alerts}}style=\"display: none;\"{{/alerts}}>\n            {{#alerts}}\n              <h4>{{first}}</h4>\n              <div id=\"settings-alert-message\">\n                {{#rest}}<p>{{{to_s}}}</p>{{/rest}}\n              </div>\n            {{/alerts}}\n          </div>\n          <div class=\"input-prepend\">\n            <label class=\"add-on\" id=\"country_code_display\">+1</label>\n            <input class=\"input-medium\" type=\"text\" value=\"{{device_address}}\" name=\"device[address]\" id=\"device_address\" placeholder=\"xxx-xxx-xxxx\">\n          </div>\n          <p class=\"placeholder-actions\">\n            <input class=\"btn primary-btn next\" type=\"submit\" value=\"Send link to my phone\">\n            <a class=\"btn skip\" href={{welcome_url}}>Skip</a>\n          </p>\n        </form>\n      </div>\n    </div>\n</div>\n\n<div class=\"cover\"></div>\n{{>welcome_learn_flow_background}}\n",
            "verify": "\n<div class=\"content-no-header\">\n  <div class=\"no-header-inner promptbox\">\n    <div class=\"content-placeholder\">\n      {{#error}}\n        {{#unsupported_carrier}}\n        <h3 class=\"title\">We couldn’t send you a text message.</h3>\n        <p>We do not yet support your mobile carrier. Not to worry, you can <a href=\"{{signup_download_url}}\" class=\"try_different_number\">try a different number</a> or get the Twitter app later. Let's continue building your Twitter on this computer.</p>\n        <p class=\"placeholder-actions\">\n          <a class=\"btn primary-btn next\" href=\"{{welcome_url}}\">Continue</a>\n        </p>\n        {{/unsupported_carrier}}\n        {{^unsupported_carrier}}\n          <h3 class=\"title\">Hmm, something seems to have gone wrong.</h3>\n          <p>We weren’t able to verify your device. Not to worry, you can <a href=\"{{signup_download_url}}\" class=\"try_again\">try again</a>  or get the Twitter app later. Let's continue building your Twitter on this computer.</p>\n          <p class=\"placeholder-actions\">\n            <a class=\"btn primary-btn next\" href=\"{{welcome_url}}\">Continue</a>\n          </p>\n        {{/unsupported_carrier}}\n      {{/error}}\n      {{^error}}\n        {{^verified}}\n          <form id=\"sms-phone-verify-form\">\n            <input type=\"hidden\" name=\"device_id\" value=\"{{device_id}}\">\n            <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n            <input type=\"hidden\" name=\"awaiting_verification\" value=\"true\">\n            <h3 class=\"title\">Is our text message on your phone yet?</h3>\n            <p>\n             <span class=\"spinner-small\"></span>\n             When the text message arrives, open it and click on the link to download the Twitter app. If the message does not come soon, you can <a href=\"{{welcome_url}}\" class=\"continue\">continue</a> building your Twitter on this computer.\n            </p>\n          </form>\n        {{/verified}}\n        {{#verified}}\n          <h3 class=\"title\">Great, your phone is verified!</h3>\n          <p>Now download the Twitter app on your phone, and login as <strong>{{username}}</strong>.</p>\n          <p>While the app is downloading, let's continue building your Twitter on this computer.</p>\n          <p class=\"placeholder-actions\">\n            <a class=\"btn primary-btn next\" href=\"{{welcome_url}}\">Continue</a>\n          </p>\n        {{/verified}}\n      {{/error}}\n    </div>\n  </div>\n</div>\n\n<div class=\"cover\"></div>\n{{>welcome_learn_flow_background}}\n",
            "similar_to_page": "<div class=\"main-content\">\n  {{#render_page_content}}\n    {{^logged_in}}\n      {{#profile_user}}\n        {{>sign_up_call_out}}\n      {{/profile_user}}\n    {{/logged_in}}\n    {{#profile_user}}\n      {{>profile_similar_to_header}}\n    {{/profile_user}}\n    {{>stream_manager}}\n  {{/render_page_content}}\n</div>\n{{>profile_dashboard}}\n{{>details_pane_container}}\n",
            "simple_tweet": "{{^render_withheld}}\n\n  \n  {{#is_current_user_withheld}}\n    {{>withheld_message}}\n  {{/is_current_user_withheld}}\n\n  <div class=\"simple-tweet tweet js-stream-tweet js-hover js-actionable-tweet js-profile-popup-actionable {{#is_slideshow}}slideshow-tweet{{/is_slideshow}} {{>common_tweet_classes}}\" {{>tweet_data}}>\n\n    \n    <i class=\"dogear\"></i>\n\n    \n    <div class=\"content\">\n\n      \n      <div class=\"stream-item-header\">\n        {{>tweet_timestamp}}\n        {{>tweet_user_block}}\n      </div>\n\n      \n      <p class=\"js-tweet-text\">{{>linked_tweet}}</p>\n\n      \n      <div class=\"stream-item-footer\">\n        \n        \n\n        \n        <a class=\"details with-icn js-details\" href=\"{{permalink_path}}\">\n          <span class=\"details-icon js-icon-container\"{{#place_name}} data-placename=\"{{place_name}}\"{{/place_name}}>\n            {{#rendering_on_server}}\n            {{#has_embedded_photo}}\n              <i class=\"sm-image\"></i>\n            {{/has_embedded_photo}}\n            {{#has_embedded_summary}}\n              <i class=\"sm-embed\"></i>\n            {{/has_embedded_summary}}\n            {{#has_embedded_player}}\n              <i class=\"sm-video\"></i>\n            {{/has_embedded_player}}\n            {{#has_strong_geo}}\n              <i class=\"sm-geo\"></i>\n            {{/has_strong_geo}}\n            {{/rendering_on_server}}\n          </span>\n          <b>\n            <span class=\"simple-details-link\">Details</span>\n            <span class=\"expand-stream-item js-view-details\">\n              {{#rendering_on_server}}\n                {{expand_callout_text}}\n                {{^expand_callout_text}}\n                  <span class=\"expand-action-wrapper\">\n                    Expand\n                  </span>\n                {{/expand_callout_text}}\n              {{/rendering_on_server}}\n              {{^rendering_on_server}}\n                <span class=\"expand-action-wrapper\">\n                  Expand\n                </span>\n              {{/rendering_on_server}}\n            </span>\n            <span class=\"collapse-stream-item js-hide-details\">\n              {{#rendering_on_server}}\n                {{collapse_callout_text}}\n              {{/rendering_on_server}}\n              {{^rendering_on_server}}\n                Collapse\n              {{/rendering_on_server}}\n            </span>\n          </b>\n        </a>\n\n        \n        {{>tweet_actions}}\n      </div>\n\n      \n      {{>stream_tweet_expansion}}\n\n    </div>\n  </div>\n\n{{/render_withheld}}\n",
            "simple_tweet_large": "<div class=\"stream-item-content tweet js-actionable-tweet stream-tweet simple-tweet\"\n  data-tweet-id=\"{{id}}\" {{{tweet_impression_id}}} {{#current_user_retweet}}data-my-retweet-id=\"{{id}}\"{{/current_user_retweet}} data-item-id=\"{{id}}\" {{#was_retweeted}}{{#retweeting_status}}data-retweet-id=\"{{id}}\"{{/retweeting_status}}{{/was_retweeted}} {{#user}}data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\"{{/user}} {{#protected}}data-protected=\"true\"{{/protected}} {{#is_sponsored}}data-promoted=\"true\"{{/is_sponsored}}>\n  {{>tweet_dogear}}\n  <div class=\"tweet-image\">\n      {{>tweet_user_image_48}}\n  </div>\n  <div class=\"tweet-content\">\n    <div class=\"tweet-row\">\n      {{>tweet_user_name}}\n      <div class=\"tweet-corner\">\n        {{>tweet_meta}}\n      </div>\n    </div>\n    <div class=\"tweet-row\">\n      {{>tweet_text}}\n    </div>\n  </div>\n</div>",
            "single_tweet": "{{^render_withheld}}\n  \n  <div class=\"permalink-inner permalink-tweet-container\">\n\n    {{#is_current_user_withheld}}\n      {{>withheld_message}}\n    {{/is_current_user_withheld}}\n\n    <div class=\"tweet permalink-tweet js-actionable-user js-hover js-actionable-tweet {{>common_tweet_classes}} {{#logged_in}}logged-in{{/logged_in}} preexpanded\" data-associated-tweet-id=\"{{id}}\" {{>tweet_data}}>\n\n      \n      <i class=\"dogear\"></i>\n\n      \n      <div class=\"content clearfix\">\n        <div class=\"permalink-header\">\n          {{#user}}\n            {{>profile_actions}}\n          {{/user}}\n          {{>tweet_user_block}}\n          \n          {{>tweet_timestamp}}\n        </div>\n      </div>\n\n      \n      <p class=\"js-tweet-text tweet-text {{#is_rtl_tweet}} tweet-text-rtl{{/is_rtl_tweet}}\">{{>linked_tweet}}</p>\n\n      \n      <div class=\"stream-item-footer\">\n        \n        {{>tweet_context}}\n\n        \n        {{>tweet_actions}}\n      </div>\n\n      <div class=\"permalink-footer\">\n        {{>stream_tweet_expansion}}\n        {{>tweet_details}}\n        {{>proxy_tweet}}\n      </div>\n    </div>\n\n  </div>\n{{/render_withheld}}\n{{#render_withheld}}\n  {{>single_tweet_withheld}}\n{{/render_withheld}}\n",
            "single_tweet_withheld": "<div class=\"tweet js-actionable-tweet permalink-tweet permalink-tweet-withheld {{css_classes}}\" data-tweet-id=\"{{id}}\" data-item-id=\"{{id}}\" {{#current_user_retweet}}data-my-retweet-id=\"{{id}}\"{{/current_user_retweet}} data-screen-name='{{#user}}{{screen_name}}{{/user}}'>\n  <div class=\"tweet-row\">\n    <div class=\"tweet-user-withheld\">\n        Tweet withheld\n    </div>\n  </div>\n  <div class=\"tweet-row\">\n    {{>tweet_text_large}}\n  </div>\n</div>",
            "slideshow_tweet": "<div class=\"tweet slideshow-tweet js-actionable-tweet\" data-tweet-id=\"{{id}}\" data-item-id=\"{{id}}\" {{#current_user_retweet}}data-my-retweet-id=\"{{id}}\"{{/current_user_retweet}} {{#was_retweeted}}{{#retweeting_status}}data-retweet-id=\"{{id}}\"{{/retweeting_status}}{{/was_retweeted}} {{#user}}data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\"{{/user}} {{#protected}}data-protected=\"true\"{{/protected}} {{#is_sponsored}}data-promoted=\"true\"{{/is_sponsored}}>\n  <div class=\"tweet-image\">\n      {{>tweet_user_image_48}}\n  </div>\n  <div class=\"tweet-content\">\n    <div class=\"tweet-row\">\n      {{>tweet_user_name}}\n      {{>tweet_timestamp}}\n    </div>\n    <div class=\"tweet-row\">\n      {{>tweet_text}}\n    </div>\n    <div class=\"tweet-row stream-item-footer\">\n      <a class=\"details with-icn js-details\" href=\"{{permalink_path}}\">\n        <b><span class=\"simple-details-link\">Details</span></b>\n      </a>\n      {{>tweet_actions}}\n    </div>\n    <div class=\"tweet-row\">\n      {{>tweet_labels}}\n    </div>\n  </div>\n  {{>proxy_tweet}}\n</div>\n",
            "slow_load_banner": "<div class=\"banner-outer\" id=\"slow-load-banner\" style=\"display:none;\">\n  <div class=\"banner\">\n    <div class=\"banner-inside slow-warning\">\n      <h5>Twitter.com is loading slowly.</h5>\n      <span class=\"warning\">Hmm, this seems to be taking a while. If problems persist, <a href=\"javascript:window.location.reload(true);\">please reload</a> to try again.</span>\n    </div>\n  </div>\n</div>\n",
            "small_follow_button": "{{%TRANSLATION-HINT mode=actions}}\n<div class=\"follow-combo btn-group js-actionable-user {{#blocking}}blocked{{/blocking}}{{^blocking}}{{^following}}not-following{{/following}}{{#following}}following{{/following}}{{#follow_request_sent}} follow-request-sent{{/follow_request_sent}}{{#protected}} protected{{/protected}}{{#following}}{{#want_retweets}} including{{/want_retweets}}{{#notifications}} notifying{{/notifications}}{{/following}}{{#can_dm}} can-dm{{/can_dm}}{{/blocking}}\" data-user-id=\"{{id}}\" data-screen-name=\"{{screen_name}}\">\n  <a class=\"small follow-btn btn js-combo-btn js-recommended-item\">\n    <div class=\"js-action-follow follow-text\" data-user-id=\"{{id}}\">\n      <i class=\"follow\"></i>\n      Follow\n    </div>\n    <div class=\"following-text\">\n      Following\n    </div>\n    <div class=\"js-action-unfollow unfollow-text\" data-user-id=\"{{id}}\">\n      Unfollow\n    </div>\n    <div class=\"block-text\">\n      Blocked\n    </div>\n    <div class=\"js-action-unblock unblock-text\" data-user-id=\"{{id}}\">\n      Unblock\n    </div>\n    <div class=\"pending-text\">\n      Pending\n    </div>\n    <div class=\"js-action-unfollow cancel-req-text\" data-user-id=\"{{id}}\">\n      Cancel\n    </div>\n  </a>\n  <span href=\"#\" class=\"small btn btn-user-actions\">\n    <i class=\"account-arrow\"></i>\n    <ul class=\"js-combo-btn-dropdown-options dropdown-menu btn-group-dropdown\">\n      <li><a class=\"js-action-mention is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">Mention {{screen_name}}</a></li>\n      <li><a class=\"js-direct-message-action can-send-dm\" href=\"#\">Send a direct message</a></li>\n      <li><a class=\"js-action-add-to-list is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">Add/Remove from lists</a></li>\n      <li><a class=\"js-action-block is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">Block {{screen_name}}</a></li>\n      <li><a class=\"js-action-unblock is-blocked\" href=\"#\" data-user-id=\"{{id}}\">Unblock {{screen_name}}</a></li>\n      <li><a class=\"js-action-spam is-not-blocked\" href=\"#\" data-user-id=\"{{id}}\">Report {{screen_name}} for spam</a></li>\n      <li class=\"is-following divider\"></li>\n      <li><a class=\"js-retweet-setting is-not-including\" href=\"#\" data-user-id=\"{{id}}\">Turn on Retweets</a></li>\n      <li><a class=\"js-retweet-setting is-including\" href=\"#\" data-user-id=\"{{id}}\">Turn off Retweets</a></li>\n      <li><a class=\"js-device-notifications is-not-notifying\" href=\"#\" data-user-id=\"{{id}}\">Turn on mobile notifications</a></li>\n      <li><a class=\"js-device-notifications is-notifying\" href=\"#\" data-user-id=\"{{id}}\">Turn off mobile notifications</a></li>\n    </ul>\n  </span>\n</div>\n",
            "sms_follow": "{{#show_sms_prompt}}\n  <div class=\"sms-follow\">\n    <span class=\"icon\"></span> {{{sms_follow_text}}}\n  </div>\n{{/show_sms_prompt}}",
            "sms_follow_prompt": "{{#show_sms_prompt}}\n  <div class=\"sms-follow\">\n    <span class=\"icon\"></span>\n    {{#show_detailed_command}}\n      Text <strong>follow {{screen_name}}</strong> to <strong>{{number}}</strong> in <a href=\"{{sms_codes_link}}\" class=\"sms-codes-link\">{{where}}</a>\n    {{/show_detailed_command}}\n    {{^show_detailed_command}}\n      Text <strong>follow {{screen_name}}</strong> to <a href=\"{{sms_codes_link}}\" class=\"sms-codes-link\">your carrier's shortcode</a>\n    {{/show_detailed_command}}\n  </div>\n{{/show_sms_prompt}}",
            "soccer_matched_event": "{{#home_team}}\n<span class=\"home-team\">\n  <a class=\"account-group js-user-profile-link\" href=\"{{profile_path}}\" data-user-id=\"{{#user}}{{id}}{{/user}}\">\n  <div class=\"team\">\n    <div class=\"fullname\">{{team_name}} </div>\n    {{#user}}\n    <div class=\"follow-team\">\n      {{#show_follow}}\n        Follow\n      {{/show_follow}}\n      {{^show_follow}}\n        @{{screen_name}}\n      {{/show_follow}}\n    </div>\n    {{/user}}\n  </div>\n  <img class=\"team-logo\" src=\"{{team_logo_url}}\">\n  </a>\n</span>\n{{/home_team}}\n\n<span class=\"score\">\n  {{#score}}\n  <a class=\"matched-score live\" href=\"{{search_path}}\">\n    <span class=\"home-score\">{{home}}</span><span class=\"divider\"><i class=\"dot\"></i><i class=\"dot\"></i></span><span class=\"away-score\">{{away}}</span>\n  </a>\n  {{/score}}\n  {{#preview}}\n  <span class=\"preview\">\n    <div class=\"scheduled-time\">\n      <span>{{time}}</span>\n    </div>\n    {{#url}}\n    <div class=\"detail\">\n      <a target=\"_blank\" href=\"{{url}}\">View details</a>\n    </div>\n    {{/url}}\n  </span>\n  {{/preview}}\n  <div class=\"time-status\">\n    <a href=\"{{search_path}}\" class=\"hashtag\" data-hashtag=\"{{hashtag}}\">{{hashtag}}</a>\n    {{#match_state}}\n    <span class=\"bullet\">⋅</span>\n    {{#current_period_string}}\n    <span class=\"half\">{{current_period_string}}</span>\n    {{/current_period_string}}\n    {{#show_time_elapsed_time}}\n    <span class=\"elapsed_time\">{{current_period_elapsed_time_string}}</span>\n    {{/show_time_elapsed_time}}\n    {{/match_state}}\n    {{#recap}}{{#url}}\n    <span class=\"bullet\">⋅</span> <a class=\"recap\" target=\"_blank\" href=\"{{url}}\">View recap »</a>\n    {{/url}}{{/recap}}\n  </div>\n</span>\n\n{{#away_team}}\n<span class=\"away-team\">\n  <a class=\"account-group js-user-profile-link\" href=\"{{profile_path}}\" data-user-id=\"{{#user}}{{id}}{{/user}}\">\n  <div class=\"team\">\n    <div class=\"fullname\"> {{team_name}}</div>\n    {{#user}}\n    <div class=\"follow-team\">\n      {{#show_follow}}\n        Follow\n      {{/show_follow}}\n      {{^show_follow}}\n        @{{screen_name}}\n      {{/show_follow}}\n    </div>\n    {{/user}}\n  </div>\n  <img class=\"team-logo\" src=\"{{team_logo_url}}\">\n  </a>\n</span>\n{{/away_team}}\n",
            "soccer_ticker": "{{#preview}}\n  {{#user}}\n  Follow <a class=\"follow-news js-follow-news js-user-profile-link\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">{{name}}</a> <span class=\"username\"><s>@</s><b>{{screen_name}}</b></span> for game updates.\n  <a class=\"follow-news js-follow-news js-user-profile-link\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">Follow</a>\n  {{/user}}\n{{/preview}}\n{{^preview}}\n  <ul class=\"ticker\">\n    {{#ticker_list}}\n      <li class='event-item' event_id={{event_id}}>\n        <a class=\"ticker-event\" href=\"{{search_path}}\" data-hashtag=\"{{hashtag}}\">\n        <span class=\"ticker-team\">{{home_name}}</span>\n          <span class=\"ticker-score {{#live}}live{{/live}}\"> {{#score}} {{home}} : {{away}} {{/score}} </span>\n        <span class=\"ticker-team\">{{away_name}}</span>\n        </a>\n      </li>\n    {{/ticker_list}}\n  </ul>\n{{/preview}}\n",
            "social_context_narrow": "{{#following_followers_of}}\n  {{^is_plural}}\n    You follow an account that follows @{{screen_name}}\n  {{/is_plural}}\n  {{#is_plural}}\n    You follow accounts that follow @{{screen_name}}\n  {{/is_plural}}\n{{/following_followers_of}}\n{{^following_followers_of}}\n  {{^is_plural}}\n    You both follow this account\n  {{/is_plural}}\n  {{#is_plural}}\n    You both follow these accounts\n  {{/is_plural}}\n{{/following_followers_of}}\n<span class=\"dot\">·</span> <a href=\"{{{view_all}}}\" class=\"view-all\">view</a>",
            "spelling_corrections": "<div class=\"module js-spelling-corrections search-assist-spelling\" data-component-term=\"spelling_corrections\">\n  <div class=\"flex-module\">\n    <div class=\"flex-module-inner\">\n      <div class=\"dismiss js-action-dismiss\" data-query=\"{{query}}\" data-search-assistance=\"{{correction}}\">\n        <i class=\"close\"></i>\n      </div>\n      <span class=\"search-spelling-suggestions\">\n        <span class=\"label\">Did you mean:</span>\n        <a href=\"{{url}}\" class=\"corrected-query\" data-nav=\"search\" data-query=\"{{query}}\" data-search-assistance=\"{{correction}}\" data-query-source=\"{{search_query_source}}\">\n          \n          {{#partitions}}\n            {{nonhighlighted}}{{#highlighted}}<em>{{highlighted}}</em>{{/highlighted}}\n          {{/partitions}}\n        </a>\n      </span>\n    </div>\n  </div>\n</div>",
            "stork_pip_icon": "<div class=\"js-pip stork-pip stork-pip-right\">\n  <div class=\"stork-pulse\"></div>\n  <i class=\"stork-icon {{icon}}\"></i>\n</div>\n",
            "stork_pip_text": "<div class=\"js-pip module stork stork-open\">\n\n  <div class=\"contrast-flex-module\">\n\n    <div class=\"contrast-module-header\">\n      {{{contents}}}\n      {{#dismiss}}\n      <div>\n        <a href=\"#\" class=\"stork-dismiss js-dismiss\">Dismiss</a>\n      </div>\n      {{/dismiss}}\n    </div>\n\n    <div class=\"pointer\"></div>\n\n    <div class=\"contrast-module-footer\">\n    </div>\n\n  </div>\n</div>\n\n",
            "story_item": "{{{card_view_html}}}",
            "stream_end_bird": "",
            "stream_end": "<div class=\"stream-end\">\n  <div class=\"stream-end-inner\">\n    {{#show_stream_end_bird}}\n      <i class=\"bird-etched\"></i>\n    {{/show_stream_end_bird}}\n    {{#swift}}\n      <p class=\"empty-text\">{{empty_text}}</p>\n      {{#in_product_help_bucket}}\n        <a href=\"#\" id=\"search_result_help\">Why?</a>\n        {{> dialogs/iph_search_result_dialog}}\n      {{/in_product_help_bucket}}\n      {{#link_to_realtime?}}\n        {{>switch_to_realtime}}\n      {{/link_to_realtime?}}\n      {{^link_to_realtime?}}\n        {{>back_to_top}}\n      {{/link_to_realtime?}}\n    {{/swift}}\n    {{#end_text}}\n      {{^abtest_timeline_copy_317_any_bucket}}\n        <p>{{{end_text}}}</p>\n      {{/abtest_timeline_copy_317_any_bucket}}\n      {{#abtest_timeline_copy_317_stream}}\n        <p>\n          {{{end_text_timeline_copy_experiment}}}\n          {{^end_text_timeline_copy_experiment}}\n            {{{end_text}}}\n          {{/end_text_timeline_copy_experiment}}\n        </p>\n      {{/abtest_timeline_copy_317_stream}}\n    {{/end_text}}\n  </div>\n</div>\n",
            "stream_follower_request": "<div class=\"js-follower-request js-actionable-user account {{#promoted_content}}promoted-account{{/promoted_content}}\" data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  <div class=\"friend-actions btn-group\">\n    <a class=\"btn js-action-accept\">\n      <span class=\"active-btn-text\">Accept</span>\n      <span class=\"pending-btn-text\">Accepting</span>\n    </a>\n    <a class=\"btn js-action-deny\">\n      <span class=\"active-btn-text\">Decline</span>\n      <span class=\"pending-btn-text\">Declining</span>\n    </a>\n  </div>\n  {{#swift}}\n    <div class=\"js-profile-actions\" style=\"display: none\">\n      {{>profile_actions}}\n    </div>\n  {{/swift}}\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      <a class=\"js-user-profile-link account-group\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n        <img class=\"avatar\" src=\"{{profile_image_url}}\" alt=\"{{name}}\"/>\n        <strong class=\"fullname\">{{name}}</strong>\n        <span class=\"username\">@{{screen_name}}</span>\n      </a>\n    </div>\n    <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{description}}</p>\n    \n  </div>\n</div>\n",
            "stream_header_people_search": "{{>stream_header}}\n{{>people_search}}",
            "stream_interest_category": "<div class=\"interest-category\">\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      <a href=\"#\"><strong>{{interest_name}}</strong></a>\n      <span class=\"metadata\">{{size}} suggestions</span>\n    </div>\n\n    {{#user_sample}}\n      <div class=\"large avatar-row\">\n        {{>user_static_list}}\n      </div>\n    {{/user_sample}}\n  </div>\n</div>",
            "stream_link": "<li class=\"stream-link\" data-item-id=\"{{id}}\">\n  <a title='{{name}}' href=\"{{{href}}}\">\n    {{#icon_class}}\n      <span class=\"{{icon_class}}\"></span>\n    {{/icon_class}}\n    <b class=\"item-name\">\n      {{name}}\n    </b>\n    {{#show_delete}}\n      <span title=\"{{delete_title}}\" class=\"delete-icon\"></span>\n    {{/show_delete}}\n    {{#is_private}}\n      <span title=\"Private List\" class=\"lock-icon\"></span>\n    {{/is_private}}\n  </a>\n</li>\n",
            "stream_list": "<div class=\"list js-list js-profile-popup-actionable\" data-user-id=\"{{#user}}{{id}}{{/user}}\" data-list-id=\"{{id}}\">\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      <a class=\"js-list-link\" href=\"{{user_list_path}}\">\n        <strong>{{name}}</strong></a>\n      \n      {{#user}}\n        <a class=\"js-user-profile-link\">\n          <img class=\"avatar size32\" src=\"{{profile_image_url}}\" alt=\"{{name}}\">\n        </a>{{^is_own_list}}<span class=\"username\"> by <a class=\"js-user-profile-link\" href=\"{{profile_path}}\">{{name}}</a></span>{{/is_own_list}}\n      {{/user}}\n      {{^is_public}}<i title=\"Private List\" class=\"sm-lock\"></i>{{/is_public}}\n    </div>\n    <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{description}}</p>\n    {{^swift}}\n      <p class=\"metadata\">{{member_count}} members</p>\n    {{/swift}}\n    {{#swift}}\n      <p class=\"metadata\">\n        {{#member_count_one}}{{member_count}} member{{/member_count_one}}\n        {{#member_count_other}}{{member_count}} members{{/member_count_other}}\n      </p>\n    {{/swift}}\n  </div>\n</div>\n",
            "stream_saved_search": "<div class=\"saved-search\">\n  <div class=\"stream-item-header\">\n    <a href=\"{{saved_search_path}}\" data-query-source=\"{{search_query_source}}\">\n      <strong>{{name}}</strong>\n    </a>\n  </div>\n</div>",
            "stream_suggestion_category": "<div class=\"stream-suggestion-category\">\n\n  <h3 class=\"category-title\">\n    {{category_name}}\n    <a class=\"category-count\" href=\"{{category_link}}\"><strong>{{size}}</strong> suggestions</a>\n    <a class=\"view-all\" href=\"{{category_link}}\">View all →</a>\n  </h3>\n  {{#user_sample}}\n  <ul>\n    {{>user_static_list}}\n  </ul>\n  {{/user_sample}}\n\n</div>",
            "stream_tweet_hidden": "<div id=\"hidden-tweet-template\">\n  <div class=\"hidden-tweet\">\n    <a href=\"#\" class=\"undo-hide-action\">Undo</a>\n    <div class=\"spam-message\">\n      <strong><span class=\"hidden-name\"></span></strong>\n      <small class=\"username\"><s>@</s><span class=\"hidden-screen-name\"></span> was reported spam</small>\n    </div>\n    <div class=\"block-message\">\n      <strong><span class=\"hidden-name\"></span></strong>\n      <small class=\"username\"><s>@</s><span class=\"hidden-screen-name\"></span> was blocked</small>\n    </div>\n  </div>\n</div>",
            "stream_user": "{{#is_withheld}}\n  {{>stream_user_withheld}}\n{{/is_withheld}}\n{{^is_withheld}}\n\n<div class=\"account {{#promoted_content}}promoted-account {{/promoted_content}} js-actionable-user js-profile-popup-actionable {{#hidden_by_activity}} sub-stream-item-hidden{{/hidden_by_activity}}\" data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}} {{#impression_cookie}}data-impression-cookie=\"{{impression_cookie}}\"{{/impression_cookie}}>\n  {{^for_activity}}\n    {{>profile_actions}}\n  {{/for_activity}}\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      <a class=\"account-group js-user-profile-link\" href=\"{{profile_path}}\">\n        <img class=\"avatar js-action-profile-avatar {{avatar_size_class}}\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" data-user-id=\"{{id}}\"{{#embedded_by_activity}} title=\"{{name}}\"{{/embedded_by_activity}}/>\n        <strong class=\"fullname js-action-profile-name\">{{name}}</strong>\n        <span>‏</span>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        <span class=\"username js-action-profile-name\">@{{screen_name}}</span>\n        {{#protected}}\n          <i class=\"sm-lock\"></i>\n        {{/protected}}\n      </a>\n    </div>\n    {{^with_followers_count}}\n      <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{{linkified_description}}}</p>\n    {{/with_followers_count}}\n    {{#with_followers_count}}\n      <div class=\"followers-count\">{{{follower_stat}}}</div>\n    {{/with_followers_count}}\n    {{#for_activity}}\n      {{>profile_actions}}\n    {{/for_activity}}\n    {{#socialcontext}}\n      <p class=\"metadata\">{{{socialcontext}}}</p>\n    {{/socialcontext}}\n    {{#is_sponsored}}\n      <span class=\"metadata with-icn\">\n        <a class=\"js-promoted-badge js-user-profile-link js-tooltip js-disclosure\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\" title=\"{{#promoted_content}}{{disclosure_text}}{{/promoted_content}}\"><i class=\"{{promoted_badge_class}}\"></i>Promoted</a>\n      </span>\n    {{/is_sponsored}}\n\n  </div>\n</div>\n\n{{/is_withheld}}\n",
            "stream_user_buttons": "{{%TRANSLATION-HINT mode=actions}}\n<div class=\"stream-user-buttons\">\n  {{^is_current_user}}\n    {{^following}}\n      {{#follow_request_sent}}\n        {{>follow_request_sent_button}}\n      {{/follow_request_sent}}\n      {{^follow_request_sent}}\n        {{>follow_button}}\n      {{/follow_request_sent}}\n    {{/following}}\n    {{#following}}\n      {{>unfollow_button}}\n    {{/following}}\n  {{/is_current_user}}\n\n  {{#logged_in}}\n    {{^in_home_page}}\n      {{^is_current_user}}\n        {{^is_onebox}}\n          <div class=\"button user-profile-actions-button js-action-profilemenu\" data-user-id=\"{{id}}\">\n            <span class=\"user-actions\"></span><span class=\"down-arrow\"></span>\n          </div>\n        {{/is_onebox}}\n      {{/is_current_user}}\n      {{#dismissable}}\n        <div class=\"dismiss\">\n          <a class=\"dismiss js-action-dismiss\" href=\"#\" title=\"Hide this suggestion\">× Hide</a>\n        </div>\n      {{/dismissable}}\n    {{/in_home_page}}\n  {{/logged_in}}\n</div>\n",
            "stream_user_withheld": "<div class=\"account {{#promoted_content}}promoted-account {{/promoted_content}} js-actionable-user js-profile-popup-actionable {{#hidden_by_activity}} sub-stream-item-hidden{{/hidden_by_activity}} withheld-user\" data-screen-name=\"{{screen_name}}\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  <div class=\"content\">\n    <div class=\"stream-item-header\">\n      <span class=\"account-group\">\n        <strong class=\"fullname js-action-profile-name\">@{{screen_name}} withheld</strong>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        {{#protected}}\n          <i class=\"sm-lock\"></i>\n        {{/protected}}\n      </span>\n    </div>\n    <p class=\"bio {{#description_is_rtl}}bio-description-rtl{{/description_is_rtl}}\">{{{linkified_description}}}  <a href={{#is_withheld_copyright}}\"{{withheld_copyright_help_path}}\"{{/is_withheld_copyright}}{{^is_withheld_copyright}}\"{{withheld_help_path}}\"{{/is_withheld_copyright}} target=\"_blank\">Learn more</a>\n    {{#following}}<span class=\"js-follow-state follow-action\"> · <a href=\"#\" class=\"js-action-unfollow js-link\" data-user-id=\"{{id}}\">Unfollow @{{screen_name}}</a></span>{{/following}}</p>\n    {{#socialcontext}}\n      <p class=\"metadata\">{{{socialcontext}}}</p>\n    {{/socialcontext}}\n  </div>\n</div>\n",
            "stream_view_toggler": "<a class=\"toggle-item-1 {{#active1}}active{{/active1}}\" href=\"{{route1}}\">{{title1}}</a> / <a class=\"toggle-item-2 {{#active2}}active{{/active2}}\" href=\"{{route2}}\">{{title2}}</a>",
            "stream_whale_end": "<div class=\"js-stream-whale-end stream-whale-end stream-placeholder centered-placeholder\">\n  <div class=\"stream-end-inner\">\n    <h2 class=\"title\">{{{stream_fail_header}}}</h2>\n    <p>\n      Twitter may be over capacity or experiencing a momentary hiccup. <a href=\"#\" class=\"try-again-after-whale\">Try again</a> or visit <a target=\"_blank\" href=\"{{status_path}}\">Twitter Status</a> for more information.\n    </p>\n  </div>\n</div>",
            "subscribe_button": "<a class=\"btn subscribe-btn not-subscribed\" href=\"#\">\n  <div class=\"subscribe-text\">\n    <i class=\"subscribe\"></i>\n    Subscribe\n  </div>\n  <div class=\"remove-text\">\n    Unsubscribe from list\n  </div>\n</a>",
            "suspended_banner": "<div class=\"module module-banner\">\n  <div class=\"flex-module\">\n    <div id=\"account-suspended\" class=\"first-banner-row\">\n      <span class=\"title\">Your account (@{{screen_name}}) is currently suspended.</span>\n      <span>For more information, please visit <a href=\"{{suspended_help_path}}\">Suspended Accounts</a>.</span>\n    </div>\n  </div>\n</div>\n",
            "suspended_error_message": "{{#is_dm}}\n  Your account is suspended and is not permitted to send messages.\n{{/is_dm}}\n{{^is_dm}}\n  {{#is_tweet}}\n    Your account is suspended and is not permitted to send Tweets.\n  {{/is_tweet}}\n  {{^is_tweet}}\n    {{#is_follow}}\n      Your account is suspended and is not permitted to follow users.\n    {{/is_follow}}\n    {{^is_follow}}\n      Your account is suspended and is not permitted to perform this action.\n    {{/is_follow}}\n  {{/is_tweet}}\n{{/is_dm}}\n<a href=\"{{suspended_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n",
            "suspended_user_page": "<div class=\"content-narrow\">\n  <div class=\"error-page error-403 clearfix\">\n    {{#render_page_content}}\n      <h1 class=\"heading\">Account suspended</h1>\n      <p class=\"lead\">The profile you are trying to view has been suspended.</p>\n      <p><a href=\"{{home_path}}\">← Go to the homepage</a></p>\n    {{/render_page_content}}\n  </div>\n</div>",
            "swift_autocomplete_dropdown": "<ul class=\"dropdown-menu autocomplete-results\">\n  <li class=\"dropdown-link dropdown-account template-row autocomplete-item\">\n    <img width=\"24\" height=\"24\" class=\"avatar size24\">\n    <strong class=\"fullname\"></strong>\n    <span class=\"pretty-link\"><s>@</s><b class=\"username\"></b></span>\n  </li>\n</ul>",
            "swift_dm_box": "<form class=\"dm-tweetbox tweet-form\">\n  <div class=\"tweet-content\">\n    {{#with_unique_id}}\n      <label class=\"hidden-elements\" for=\"tweet-box-{{unique_id}}\">Tweet text</label>\n      <textarea id=\"tweet-box-{{unique_id}}\" class=\"tweet-box\"></textarea>\n    {{/with_unique_id}}\n  </div>\n  <div class=\"tweet-button\">\n    <span class=\"spinner\"></span>\n    <span class=\"tweet-counter\">140</span>\n    <button class=\"btn tweet-action primary-btn disabled\" type=\"submit\">Send message</button>\n  </div>\n  <div class=\"dm-delete-confirm js-dm-delete-confirm\">\n    {{>direct_message_delete_confirm}}\n  </div>\n</form>",
            "swift_empty_timeline_recommendations": "<div class=\"component wtf-module\" id=\"empty-timeline-recommendations\">\n  <div class=\"content-main empty-timeline big-avatar-list breakable\">\n    <div class=\"content-header\">\n      <div class=\"header-inner empty-timeline-header\">\n        <small class=\"pull-right\"><a href=\"#\" class=\"js-done disabled\">Close</a></small>\n        <h2 class=\"header-text\">\n          Here are some people you might enjoy following.\n        </h2>\n        <small>\n          <a href=\"#\" class=\"js-refresh-suggestions\">Refresh</a> ·\n          <a href=\"{{who_to_follow_suggestions_path}}\">View all</a>\n        </small>\n      </div>\n    </div>\n\n    <div class=\"empty-timeline-footer content-no-header\">\n      <ul class=\"clearfix js-recommended-followers\">\n        {{>user_large_list}}\n      </ul>\n    </div>\n  </div>\n</div>",
            "swift_layout": "<!DOCTYPE html>\n<html lang=\"{{lang}}\">\n  <head>\n    <meta charset=\"utf-8\">\n    \n    <script>document.domain='twitter.com'</script>\n\n    {{#content_view}}\n      <title>{{env_warning}}{{page_title}}</title>\n    {{/content_view}}\n\n    {{>layout/browser}}\n    {{>layout/css}}\n    {{>layout/head_scripts}}\n  </head>\n  <body class=\"{{#content_view}}{{body_class_names}}{{/content_view}}\"\n    {{#locale_is_rtl}}\n    dir=\"rtl\"\n    {{/locale_is_rtl}}\n    >\n    <div id=\"doc\" class=\"{{#content_view}}{{doc_class_names}}{{/content_view}}\">\n      {{#include_standard_chrome}}\n        {{>t1_global_nav}}\n        <div id=\"page-outer\">\n          <div id=\"page-container\" class=\"{{#content_view}}{{page_container_class_names}}{{/content_view}}\">\n            {{#current_user}}\n              {{#suspended}}{{>suspended_banner}}{{/suspended}}\n              {{^suspended}}\n                {{#pending_email}}{{>verify_email_banner}}{{/pending_email}}\n                {{#current_bouncing}}{{>bouncing_email_banner}}{{/current_bouncing}}\n                {{#detached}}{{>detached_email_banner}}{{/detached}}\n              {{/suspended}}\n            {{/current_user}}\n            {{#swift}} \n              {{>message_drawer_outer}}\n            {{/swift}}\n            {{{content_for_layout}}}\n          </div>\n        </div>\n      {{/include_standard_chrome}}\n      {{^include_standard_chrome}}\n        {{{content_for_layout}}}\n      {{/include_standard_chrome}}\n      {{#track_ttft}}{{#content_view}}\n      <script>\n        if(window.ttft){window.ttft.recordMilestone('page','{{page_name}}');\n        window.ttft.recordMilestone('client_record_time',new Date().getTime())}\n      </script>\n      {{/content_view}}{{/track_ttft}}\n    </div>\n\n    {{>layout/dialogs}}\n  </body>\n</html>\n{{>layout/boot}}\n",
            "swift_photo_selector": "<div class=\"photo-selector\">\n  <button class=\"btn\" type=\"button\" disabled=\"true\">Choose file</button>\n  <span class=\"photo-file-name\">No file selected</span>\n  <div class=\"image-selector\">\n    <input type=\"hidden\" name=\"media_file_name\" class=\"file-name\">\n    <input type=\"hidden\" name=\"media_data_empty\" class=\"file-data\">\n    <input type=\"file\" name=\"media_empty\" class=\"file-input\">\n    <div class=\"swf-container\"></div>\n  </div>\n</div>\n",
            "swift_saved_searches": "<ul class=\"typeahead-items saved-searches-list\">\n  \n  <li class=\"saved-search-item search-item\"><a href=\"\" data-search-query=\"\" data-query-source=\"\" data-ds=\"saved_search\"><i class=\"generic-search\"></i></a></li>\n</ul>",
            "swift_search_header": "<div class=\"header-inner\">\n  <div class=\"search-header swift-search-header js-search-header\">\n    <div class=\"btn-group flex-table-btn js-search-dropdown\">\n      <button type=\"button\" class=\"dropdown btn btn-search-actions js-search-dropdown-button\">\n        <i class=\"search-toggle\"></i>\n      </button>\n      <ul class=\"dropdown-menu btn-group-dropdown js-combo-btn-dropdown-options\">\n        <li>\n          {{#saved_search}}\n            <a class=\"js-toggle-saved-search-link js-saved-search\" href=\"#\" data-id=\"{{id_str}}\" data-query=\"{{query}}\">Remove saved search</a>\n          {{/saved_search}}\n          {{^saved_search}}\n            <a class=\"js-toggle-saved-search-link js-unsaved-search\" href=\"#\" data-query=\"{{query}}\">Save search</a>\n          {{/saved_search}}\n        </li>\n        <li>\n          <a href=\"{{search_advanced_path}}\" class=\"advanced-search\">Advanced search</a>\n        </li>\n        \n        <li class=\"dropdown-caret right\">\n          <span class=\"caret-outer\"></span>\n          <span class=\"caret-inner\"></span>\n        </li>\n      </ul>\n    </div>\n    {{#saved_search}}\n      <h2 class=\"search-title\">Saved search: <strong class=\"search-query\">{{query}}</strong></h2>\n    {{/saved_search}}\n    {{^saved_search}}\n      <h2 class=\"search-title\">Results for <strong class=\"search-query\">{{query}}</strong></h2>\n    {{/saved_search}}\n\n    {{^spelling_correction}}\n      {{#related_query}}\n        {{>related_queries}}\n      {{/related_query}}\n    {{/spelling_correction}}\n\n  </div>\n  {{>search/swift_onebox}}\n  <h2 class=\"js-timeline-title search-nav\">Tweets\n    <small class=\"view-toggler js-view-toggler\">\n      <a class=\"toggle-item-1{{#on_relevant_search}} active{{/on_relevant_search}} js-nav\" data-nav=\"search\" href=\"{{search_path}}\" title=\"Find the most relevant tweets\">Top</a> /\n      <a class=\"toggle-item-2{{#on_realtime_search}} active{{/on_realtime_search}} js-nav\" data-nav=\"realtime\" href=\"{{realtime_path}}\" title=\"Find the most recent tweets\">All</a>\n      {{#logged_in}}\n        / <a class=\"toggle-item-2{{#on_timeline_search}} active{{/on_timeline_search}} js-nav\" data-nav=\"timeline\" href=\"{{timeline_path}}\" title=\"Find tweets from people you follow\">People you follow</a>\n      {{/logged_in}}\n    </small>\n  </h2>\n</div>\n",
            "activity_stream_items": "{{#activity_items}}\n  <div class=\"js-stream-item stream-item {{item_class}} js-activity js-activity-{{event}}\" data-item-id=\"{{item_id}}\" data-item-type=\"activity\" data-item-key=\"{{activity_key}}\" id=\"stream-item-activity-{{item_id}}\">\n    {{#should_wrap}}\n      <div class=\"stream-item-content clearfix stream-item-activity stream-item-{{event}} {{#is_your_activity}}stream-item-activity-me{{/is_your_activity}}{{^is_your_activity}}stream-item-activity-network{{/is_your_activity}}\"\n         data-activity-type=\"{{event}}\"\n         data-activity-min-position=\"{{min_position}}\"\n         data-activity-max-position=\"{{max_position}}\">\n         {{>activities/activity_item_content}}\n      </div>\n    {{/should_wrap}}\n    {{^should_wrap}}\n      {{>activities/activity_item_content}}\n    {{/should_wrap}}\n  </div>\n{{/activity_items}}",
            "all_stream_items": "{{>swift_stream_items/tweet_stream_items}}\n{{>swift_stream_items/user_stream_items}}\n{{>swift_stream_items/follower_request_stream_items}}\n{{>swift_stream_items/activity_stream_items}}\n\n\n\n{{{items_html}}}",
            "follower_request_stream_items": "{{#follower_request_items}}\n  <div class=\"js-stream-item stream-item {{item_class}}\" data-item-id=\"{{item_id}}\" data-item-type=\"user\" id=\"stream-item-user-{{item_id}}\">\n    {{#follower_request_view}}\n      {{>stream_follower_request}}\n    {{/follower_request_view}}\n  </div>\n{{/follower_request_items}}",
            "json_stream_items": "{{#timeline}}\n  {{>swift_stream_items/all_stream_items}}\n{{/timeline}}",
            "tweet_stream_items": "{{#tweet_items}}\n  <div class=\"js-stream-item stream-item {{item_class}}\" data-item-id=\"{{item_id}}\" data-item-type=\"tweet\" id=\"stream-item-tweet-{{item_id}}\">\n    {{#tweet_view}}\n      {{>stream_tweet}}\n    {{/tweet_view}}\n  </div>\n{{/tweet_items}}",
            "user_stream_items": "{{#user_items}}\n  <div class=\"js-stream-item stream-item {{item_class}}\" data-item-id=\"{{item_id}}\" data-item-type=\"user\" id=\"stream-item-user-{{item_id}}\">\n    {{#user_view}}\n      {{>stream_user}}\n    {{/user_view}}\n  </div>\n{{/user_items}}",
            "swift_tweet_box": "<form class=\"tweet-form {{^preexpand_tweetbox}}condensed{{/preexpand_tweetbox}}\" method=\"post\" target=\"tweet-post-iframe\" action=\"//{{upload_domain}}/i/tweet/create_with_media.iframe\" enctype=\"multipart/form-data\">\n  <input type=\"hidden\" name=\"post_authenticity_token\" class=\"auth-token\">\n  <input type=\"hidden\" name=\"iframe_callback\" class=\"iframe-callback\">\n  <input type=\"hidden\" name=\"in_reply_to_status_id\" class=\"in-reply-to-status-id\">\n  <input type=\"hidden\" name=\"impression_id\" class=\"impression-id\">\n\n  <div class=\"tweet-content\">\n\n    {{#with_unique_id}}\n      <label class=\"hidden-elements\" for=\"tweet-box-{{unique_id}}\">Tweet text</label>\n      <textarea class=\"tweet-box\" name=\"status\" id=\"tweet-box-{{unique_id}}\"></textarea>\n    {{/with_unique_id}}\n\n    {{>swift_autocomplete_dropdown}}\n\n    \n    <div class=\"thumbnail-container\">\n      <div class=\"preview\">\n        {{>dismiss_button}}\n        <span class=\"filename\"></span>\n      </div>\n      <div class=\"preview-message\">Image will appear as a link</div>\n    </div>\n\n  </div>\n\n  <div class=\"tweet-box-extras\">\n\n    {{#include_image_picker}}\n    <div class=\"photo-selector\">\n      <button class=\"btn\" type=\"button\" tabindex=\"-1\">\n        <i class=\"tweet-camera\"></i>\n      </button>\n      <div class=\"image-selector\">\n        <input type=\"hidden\" name=\"media_data_empty\" class=\"file-data\">\n        <input type=\"file\" name=\"media_empty\" class=\"file-input\" tabindex=\"-1\">\n        <div class=\"swf-container\"></div>\n      </div>\n    </div>\n    {{/include_image_picker}}\n\n    {{#include_geo_picker}}\n      {{>geo/geo_picker}}\n    {{/include_geo_picker}}\n\n  </div>\n  <div class=\"tweet-button\">\n    <span class=\"link-message single\">Link will appear shortened</span>\n    <span class=\"link-message plural\">Links will appear shortened</span>\n    <span class=\"spinner\"></span>\n    <span class=\"tweet-counter\">140</span>\n    <button class=\"btn primary-btn tweet-action disabled\" type=\"button\">Tweet</button>\n  </div>\n</form>\n",
            "swift_typeahead_accounts": "<div class=\"typeahead-accounts js-typeahead-accounts\">\n  <ul class=\"typeahead-items\">\n    \n    <li data-user-id=\"\" data-user-screenname=\"\" data-remote=\"true\" data-score=\"\" class=\"typeahead-item typeahead-account-item js-selectable\">\n      \n      <a data-query-source=\"typeahead_click\" data-search-query=\"\" data-ds=\"account\">\n        <img src=\"\" width=\"24\" height=\"24\" class=\"avatar size24\">\n        <span class=\"fullname\"></span>\n        <i class=\"verified hidden\"></i>\n        <span class=\"username\"><s>@</s><b></b></span>\n      </a>\n    </li>\n    <li class=\"js-selectable typeahead-accounts-shortcut js-shortcut\"><a href=\"\" data-search-query=\"\" data-query-source=\"typeahead_click\" data-shortcut=\"true\" data-ds=\"account_search\"></a></li>\n  </ul>\n</div>",
            "swift_typeahead_dropdown": "<div class=\"dropdown-menu typeahead\">\n  <div class=\"dropdown-caret\">\n    <div class=\"caret-outer\"></div>\n    <div class=\"caret-inner\"></div>\n  </div>\n  <div class=\"dropdown-inner js-typeahead-results\">\n    {{>swift_saved_searches}}\n    {{>swift_typeahead_topics}}\n    {{>swift_typeahead_accounts}}\n  </div>\n</div>",
            "swift_typeahead_topics": "<ul class=\"typeahead-items topics-list\">\n  \n  <li class=\"topics-item search-item\"><a href=\"\" data-search-query=\"\" data-query-source=\"typeahead_click\" data-ds=\"topics\"><i class=\"generic-search\"></i></a></li>\n</ul>",
            "switch_to_realtime": "<p>You’ve reached the end of the Top Tweets for <strong>{{query}}</strong>.</p><p><a href='{{realtime_path}}'>View all Tweets</a>.</p>",
            "t1_anatomy_experiment": "",
            "t1_body": "<body class=\"t1 {{#logged_in}} logged-in user-style-{{style_namespace}}{{/logged_in}}{{^logged_in}} logged-out {{#no_script}} front-page {{/no_script}} {{/logged_in}} {{t1_front_page_image_class}} {{locale_css}} {{ms_windows_class}}\"\n  {{#locale_is_rtl}}\n    dir=\"rtl\"\n  {{/locale_is_rtl}}\n>\n  <div id=\"doc\">\n    {{>t1_global_nav}}\n    <div id=\"page-outer\">\n      {{^logged_in}}\n        {{#home_page}}\n          {{>t1_front_page}}\n        {{/home_page}}\n      {{/logged_in}}\n      <div id=\"page-container\" class=\"wrapper\">\n        <div class=\"new-js-banners\"></div>\n        {{#tweets}}\n          <div id=\"page-node-{{page_name_underscore}}\">\n            {{>page}}\n          </div>\n        {{/tweets}}\n      </div>\n    </div>\n  </div>\n  <div class=\"twttr-dialog-wrapper\"></div>\n\n  {{#include_more_css}}\n    {{^include_more_css_early}}{{>more_css}}{{/include_more_css_early}}\n  {{/include_more_css}}\n\n  {{>javascript_includes}}\n</body>\n",
            "t1_for_mockview_unit_test": "{{happy_feet}}!",
            "t1_front_page": "<div class=\"front-container {{#front_page_full_signup_256}}front-container-full-signup{{/front_page_full_signup_256}}  {{#front_page_full_signup_256_login_form_below}}front_page_full_signup_256_login_form_below{{/front_page_full_signup_256_login_form_below}}\" id=\"front-container\">\n  <noscript>\n    <div class=\"front-warning\">\n      <h3>Twitter.com makes heavy use of JavaScript</h3>\n      <p>If you cannot enable it in your browser's preferences, you may have a better experience on our <a href=\"http://m.twitter.com\">mobile site</a>.</p>\n    </div>\n  </noscript>\n\n  <div class=\"front-warning\" id=\"front-no-cookies-warn\">\n    <h3>Twitter.com makes heavy use of browser cookies</h3>\n    <p>Please enable cookies in your browser preferences before signing in.</p>\n  </div>\n\n  {{#front_page_full_signup_256}}\n  <div class=\"front-bg\">\n    <img class=\"front-image\" src=\"{{front_page_full_signup_256_image_url}}\">\n  </div>\n  {{/front_page_full_signup_256}}\n\n  {{#olympics_homepage}}\n    <div class=\"front-bg\">\n      <img class=\"front-image\" src=\"{{t1_front_page_image}}\">\n    </div>\n\n    <div class=\"front-card event-takeover\">\n      <div class=\"front-welcome-text\">\n        <p>\n\t\t\t\t\t<a href=\"/#olympics\"><img src=\"t1/img/front_page/web_logged_out_nbc.png\"><img src=\"t1/img/front_page/web_logged_out_usot.png\"><img src=\"t1/img/front_page/web_logged_out_rings.png\"></a>\n        </p>\n        <h1>Dedication. Sacrifice. Guts. Glory.</h1>\n        <p>Get closer to the <a href=\"/hashtag/olympics\" class=\"hashtag\"><s>#</s><b>Olympics</b></a> on Twitter.</p>\n        <p class=\"call-to-action\"><a href=\"/hashtag/olympics\">Check it out now.</a></p>\n      </div>\n    </div>\n  {{/olympics_homepage}}\n\n  <div class=\"front-card\">\n    {{^swift_events}}\n      <div class=\"front-welcome\">\n        <div class=\"front-welcome-text\">\n          <h1>Welcome to Twitter.</h1>\n          <p>Find out what’s happening, right now, with the people and organizations you care about.</p>\n        </div>\n      </div>\n    {{/swift_events}}\n\n    {{#swift_events}}\n      {{#nascar_homepage}}\n        <a href=\"/hashtag/nascar\">\n          <div class=\"front-welcome\">\n            <div class=\"front-welcome-text\">\n              <h1>Happening now: #NASCAR</h1>\n              <p>Every turn. Every Angle.</p>\n            </div>\n          </div>\n        </a>\n      {{/nascar_homepage}}\n    {{/swift_events}}\n\n    {{#olympics_homepage}}\n    <div class=\"front-signin js-front-signin\">\n      <form action=\"{{sessions_path}}\" class=\"signin\" method=\"post\">\n        <div class=\"placeholding-input username\">\n          <input type=\"text\" class=\"text-input email-input\" name=\"session[username_or_email]\" title=\"Username or email\" autocomplete=\"on\" tabindex=1>\n            <span class=\"placeholder\">Username or email</span>\n        </div>\n\n        <table class=\"flex-table password-signin\">\n          <tbody>\n            <tr>\n              <td class=\"flex-table-primary\">\n                <div class=\"placeholding-input password flex-table-form\">\n                  <input type=\"password\" class=\"text-input flex-table-input\" name=\"session[password]\" title=\"Password\" tabindex=2>\n                  <span class=\"placeholder\">Password</span>\n                </div>\n              </td>\n              <td class=\"flex-table-secondary\">\n                <button type=\"submit\" class=\"submit btn primary-btn flex-table-btn js-submit\" tabindex=4>Sign in</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n        <div class=\"remember-forgot\">\n          <label class=\"remember\">\n            <input type=\"checkbox\" value=\"1\" name=\"remember_me\" tabindex=3>\n            <span>Remember me</span>\n          </label>\n          <span class=\"separator\">·</span>\n          <a class=\"forgot\" href=\"{{resend_password_path}}\">Forgot password?</a>\n        </div>\n\n        {{#is_ssl}}\n          <input type=\"hidden\" name=\"return_to_ssl\" value=\"true\">\n        {{/is_ssl}}\n\n        <input type=\"hidden\" name=\"scribe_log\">\n        <input type=\"hidden\" name=\"redirect_after_login\" value=\"{{redirect_after_login}}\">\n        <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n      </form>\n    </div>\n\n    <div class=\"front-signup js-front-signup\">\n      <h2><strong>New to Twitter?</strong> Sign up</h2>\n\n      <form action=\"{{signup_path}}\" class=\"signup\" method=\"post\">\n        <div class=\"placeholding-input\">\n          <input type=\"text\" class=\"text-input\" autocomplete=\"off\" name=\"user[name]\" maxlength=\"20\">\n          <span class=\"placeholder\">Full name</span>\n        </div>\n        <div class=\"placeholding-input\">\n          <input type=\"text\" class=\"text-input email-input\" autocomplete=\"off\" name=\"user[email]\">\n          <span class=\"placeholder\">Email</span>\n        </div>\n        <div class=\"placeholding-input\">\n          <input type=\"password\" class=\"text-input\" name=\"user[user_password]\">\n          <span class=\"placeholder\">Password</span>\n        </div>\n\n        <input type=\"hidden\" value=\"{{signup_source}}\" name=\"context\">\n        <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\">\n        <button type=\"submit\" class=\"btn signup-btn\">\n          Sign up for Twitter\n        </button>\n      </form>\n    </div>\n    {{/olympics_homepage}}\n    {{^olympics_homepage}}\n      {{#front_page_full_signup_256_login_form_below}}\n        {{>signup/front_page_signup_form}}\n      {{/front_page_full_signup_256_login_form_below}}\n\n      {{#front_page_full_signup_256_old_login_form}}\n      <div class=\"front-signin js-front-signin\">\n        {{#front_page_full_signup_256_login_form_below}}<h2><strong>Log in</strong></h2>{{/front_page_full_signup_256_login_form_below}}\n        <form action=\"{{sessions_path}}\" class=\"signin\" method=\"post\">\n          <div class=\"placeholding-input username\">\n            <input type=\"text\" class=\"text-input email-input\" name=\"session[username_or_email]\" title=\"Username or email\" autocomplete=\"on\" tabindex=1>\n              <span class=\"placeholder\">Username or email</span>\n          </div>\n\n          <table class=\"flex-table password-signin\">\n            <tbody>\n              <tr>\n                <td class=\"flex-table-primary\">\n                  <div class=\"placeholding-input password flex-table-form\">\n                    <input type=\"password\" class=\"text-input flex-table-input\" name=\"session[password]\" title=\"Password\" tabindex=2>\n                    <span class=\"placeholder\">Password</span>\n                  </div>\n                </td>\n                <td class=\"flex-table-secondary\">\n                  <button type=\"submit\" class=\"submit btn primary-btn flex-table-btn js-submit\" tabindex=4>\n                    {{#front_page_full_signup_256_login_form_below}}Log in{{/front_page_full_signup_256_login_form_below}}\n                    {{^front_page_full_signup_256_login_form_below}}Sign in{{/front_page_full_signup_256_login_form_below}}\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n\n          <div class=\"remember-forgot\">\n            <label class=\"remember\">\n              <input type=\"checkbox\" value=\"1\" name=\"remember_me\" tabindex=3>\n              <span>Remember me</span>\n            </label>\n            <span class=\"separator\">·</span>\n            <a class=\"forgot\" href=\"{{resend_password_path}}\">Forgot password?</a>\n          </div>\n\n          {{#is_ssl}}\n            <input type=\"hidden\" name=\"return_to_ssl\" value=\"true\">\n          {{/is_ssl}}\n\n          <input type=\"hidden\" name=\"scribe_log\">\n          <input type=\"hidden\" name=\"redirect_after_login\" value=\"{{redirect_after_login}}\">\n          <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n        </form>\n      </div>\n      {{/front_page_full_signup_256_old_login_form}}\n\n      {{#front_page_full_signup_256_old_signup_form}}\n      <div class=\"front-signup js-front-signup\">\n        <h2><strong>New to Twitter?</strong> Sign up</h2>\n\n        <form action=\"{{signup_path}}\" class=\"signup\" method=\"post\">\n          <div class=\"placeholding-input\">\n            <input type=\"text\" class=\"text-input\" autocomplete=\"off\" name=\"user[name]\" maxlength=\"20\">\n            <span class=\"placeholder\">Full name</span>\n          </div>\n          <div class=\"placeholding-input\">\n            <input type=\"text\" class=\"text-input email-input\" autocomplete=\"off\" name=\"user[email]\">\n            <span class=\"placeholder\">Email</span>\n          </div>\n          <div class=\"placeholding-input\">\n            <input type=\"password\" class=\"text-input\" name=\"user[user_password]\">\n            <span class=\"placeholder\">Password</span>\n          </div>\n\n          <input type=\"hidden\" value=\"{{signup_source}}\" name=\"context\">\n          <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\">\n          <button type=\"submit\" class=\"btn signup-btn\">\n            Sign up for Twitter\n          </button>\n        </form>\n      </div>\n      {{/front_page_full_signup_256_old_signup_form}}\n\n      {{^front_page_full_signup_256_login_form_below}}\n        {{^front_page_full_signup_256_old_signup_form}}\n          {{>signup/front_page_signup_form}}\n        {{/front_page_full_signup_256_old_signup_form}}\n      {{/front_page_full_signup_256_login_form_below}}\n    {{/olympics_homepage}}\n  </div>\n\n  {{>generic_footer}}\n\n  {{#remember_default}}\n    <div id=\"remember_default_checked\" style=\"display:none;\"></div>\n  {{/remember_default}}\n\n</div>\n",
            "t1_global_nav": "<div class=\"push-loader\" id=\"pushStateSpinner\"></div>\n\n<div class=\"topbar js-topbar\">\n  <div id=\"banners\" class=\"js-banners\">\n    {{#noscript_banner}}<noscript>{{>noscript_banner}}</noscript>{{/noscript_banner}}\n    {{#logged_in}}{{>slow_load_banner}}{{/logged_in}}\n    {{#became_user}}{{>became_user_banner}}{{/became_user}}\n  </div>\n  <div class=\"global-nav\" data-section-term=\"top_nav\">\n    <div class=\"global-nav-inner\">\n      <div class=\"container\">\n      {{^current_user}}\n        \n      {{/current_user}}\n      {{#current_user}}\n        <ul class=\"nav js-global-actions\" id=\"global-actions\">\n          <li id=\"global-nav-home\" class=\"home{{#content_view}}{{#home_page}}{{#rendering_on_server}} active{{/rendering_on_server}}{{/home_page}}{{/content_view}}\" data-global-action=\"home\">\n            <a class=\"js-hover js-nav\" href=\"{{home_path}}\" data-component-term=\"home_nav\" data-nav=\"home\">\n              <span class=\"new-wrapper\"><i class=\"nav-home\"></i><i class=\"nav-new\"></i></span> Home\n            </a>\n          </li>\n          <li class=\"people{{#content_view}}{{#connect_page}}{{#rendering_on_server}} active{{/rendering_on_server}}{{/connect_page}}{{/content_view}}\" data-global-action=\"connect\">\n            <a class=\"js-hover js-nav\" href=\"{{#enable_activity}}{{interactions_path}}{{/enable_activity}}{{^enable_activity}}{{mentions_path}}{{/enable_activity}}\" data-component-term=\"connect_nav\" data-nav=\"connect\">\n              <span class=\"new-wrapper\"><i class=\"nav-people\"></i><i class=\"nav-new\"></i></span> Connect\n            </a>\n          </li>\n          <li class=\"topics{{#content_view}}{{#discover_page}}{{#rendering_on_server}} active{{/rendering_on_server}}{{/discover_page}}{{/content_view}}\" data-global-action=\"discover\">\n            <a class=\"js-hover js-nav\" href=\"{{discover_path}}\" data-component-term=\"discover_nav\" data-nav=\"discover\">\n              <span class=\"new-wrapper\"><i class=\"nav-topics\"></i><i class=\"nav-new\"></i></span> Discover\n            </a>\n          </li>\n          {{#site_header_with_profile_tab}}\n            <li class=\"profile{{#content_view}}{{#profile_page}}{{#rendering_on_server}} active{{/rendering_on_server}}{{/profile_page}}{{/content_view}}\" data-global-action=\"profile\">\n              <a class=\"js-hover js-nav\" href=\"{{profile_path}}\" data-component-term=\"profile_nav\" data-nav=\"profile\">\n                <span class=\"new-wrapper\"><i class=\"nav-me\"></i><i class=\"nav-new\"></i></span> Me\n              </a>\n            </li>\n          {{/site_header_with_profile_tab}}\n        </ul>\n        <i class=\"bird-topbar-etched\"></i>\n\n        <div class=\"pull-right\">\n          {{^tweet_button_disabled}}\n          <div class=\"well topbar-tweet-btn\">\n            <button id=\"global-new-tweet-button\" type=\"button\" class=\"btn btn-tweet js-global-new-tweet js-hover js-tooltip\" data-placement=\"bottom\" data-component-term=\"new_tweet_button\" title=\"Compose new Tweet\">\n              <i class=\"nav-tweet\"><span class=\"hidden-elements\">Compose new Tweet</span></i>\n            </button>\n          </div>\n          <i class=\"topbar-divider\"></i>\n          {{/tweet_button_disabled}}\n\n          <ul class=\"nav\">\n            <li class=\"me dropdown session js-session\" data-global-action=\"t1me\" id=\"user-dropdown\">\n            <a class=\"dropdown-toggle js-dropdown-toggle js-hover\" href=\"#\" id=\"user-dropdown-toggle\">\n              {{#site_header_with_profile_tab}}\n                <span class=\"new-wrapper\"><i class=\"nav-session\"><span class=\"hidden-elements\">Settings and help</span></i><i class=\"nav-new\"></i></span> <span class=\"caret\"></span>\n              {{/site_header_with_profile_tab}}\n              {{^site_header_with_profile_tab}}\n                <span class=\"new-wrapper\"><i class=\"nav-me\"><span class=\"hidden-elements\">Settings and help</span></i><i class=\"nav-new\"></i></span> <span class=\"caret\"></span>\n              {{/site_header_with_profile_tab}}\n            </a>\n            {{>t1_user_dropdown}}\n            </li>\n          </ul>\n\n          <i class=\"topbar-divider\"></i>\n          {{>t1_global_nav_search}}\n\n        </div>\n        {{#is_vit_layout}}\n          {{#is_mobile}}\n          <div class=\"vit-onboarding-title\">\n            <a class=\"nav-logo-link\" href=\"/\" data-nav=\"front\">\n              <i class=\"bird-topbar-blue\"></i>\n            </a>\n            <span><i class=\"nav-home-vit\"></i></span>\n            Verification\n          </div>\n          <div class=\"vit-onboarding-nav\">\n            <button class=\"btn cancel skip hidden\" type=\"cancel\">Skip</button>\n            <button class=\"btn next primary-btn hidden\" type=\"submit\">Next</button>\n          </div>\n          {{/is_mobile}}\n        {{/is_vit_layout}}\n      {{/current_user}}\n\n      {{^current_user}}\n        <ul class=\"nav js-global-actions\">\n          <li class=\"home\" data-global-action=\"t1home\">\n            {{^custom_nav_title}}\n              <a class=\"nav-logo-link\" href=\"/\" data-nav=\"front\">\n                <i class=\"bird-topbar-blue\"></i>\n              </a>\n            {{/custom_nav_title}}\n            {{#custom_nav_title}}\n              <a href=\"/\" class=\"event-nav-link\" data-nav=\"front\">\n                <span><i class=\"bird-topbar-blue\"></i></span>\n                <span class=\"event-nav-title\">Twitter.com/</span><span class=\"event-nav-hashtag\">{{custom_nav_title}}</span>\n              </a>\n            {{/custom_nav_title}}\n          </li>\n        </ul>\n        <ul class=\"nav secondary-nav session-dropdown\" id=\"session\">\n          <li class=\"dropdown js-session\">\n            <a class=\"dropdown-toggle dropdown-signin\" id=\"signin-link\" href=\"#\" data-nav=\"login\">\n              <small>Have an account?</small> Sign in <span class=\"caret\"></span>\n            </a>\n            <a class=\"dropdown-signup\" id=\"signup-link\" href=\"{{signup_path}}?context=login\" data-nav=\"signup\">\n              <small>New to Twitter?</small><span class=\"emphasize\"> Join Today »</span>\n            </a>\n            <ul class=\"dropdown-menu dropdown-form\" id=\"signin-dropdown\">\n              <li class=\"dropdown-caret right\">\n                <span class=\"caret-outer\"></span>\n                <span class=\"caret-inner\"></span>\n              </li>\n              <li>\n                {{>t1_signin_form}}\n              </li>\n            </ul>\n          </li>\n        </ul>\n\n        \n        {{#front_page_full_signup_256_inline_signin}}\n          <div class=\"js-front-signin nav-signin\">\n            <form action=\"{{sessions_path}}\" method=\"post\">\n              <ul class=\"nav secondary-nav\">\n                <li>\n                  <div class=\"placeholding-input\">\n                    <input type=\"text\" class=\"text-input email-input js-username-field\" name=\"session[username_or_email]\" autocomplete=\"on\">\n                    <span class=\"placeholder\">Username or email</span>\n                  </div>\n                </li>\n                <li>\n                  <div class=\"placeholding-input\">\n                    <input type=\"password\" class=\"text-input js-password-field\" name=\"session[password]\">\n                    <span class=\"placeholder\">Password</span>\n                  </div>\n                </li>\n                <li><button type=\"submit\" class=\"btn primary-btn submit\">Sign in</button></li>\n                <input type=\"hidden\" name=\"scribe_log\">\n                <input type=\"hidden\" name=\"redirect_after_login\" value=\"{{redirect_after_login}}\">\n                <input type=\"hidden\" name=\"remember_me\" value=\"0\">\n              </ul>\n            </form>\n            <i class=\"topbar-divider\"></i>\n          </div>\n        {{/front_page_full_signup_256_inline_signin}}\n\n        <ul class=\"nav secondary-nav language-dropdown\">\n          <li class=\"dropdown js-language-dropdown\">\n            <a class=\"dropdown-toggle\" href=\"javascript:;\">\n              <small>Language:</small>\n              <span class=\"js-current-language\">{{current_language_name}}</span>\n              <b class=\"caret\"></b>\n            </a>\n            <ul class=\"dropdown-menu\">\n              <li class=\"dropdown-caret right\">\n                <span class=\"caret-outer\"></span>\n                <span class=\"caret-inner\"></span>\n              </li>\n              {{#dropdown_languages}}\n                <li><a href=\"?lang={{code}}\" data-lang-code=\"{{code}}\" title=\"{{localized_name}}\" class=\"js-language-link\">{{name}}</a></li>\n              {{/dropdown_languages}}\n            </ul>\n            <div class=\"js-front-language\">\n              <form action=\"{{change_locale_path}}\" class=\"language\" method=\"POST\">\n                <input type=\"hidden\" name=\"lang\">\n                <input type=\"hidden\" name=\"redirect\">\n                <input type=\"hidden\" name=\"authenticity_token\" value=\"{{form_authenticity_token}}\">\n              </form>\n            </div>\n          </li>\n        </ul>\n        \n        {{#do_not_render_pctd_logged_out}}\n        {{#phoenix_pctd}}\n          <ul class=\"nav secondary-nav country-dropdown\">\n            <li class=\"dropdown js-country-dropdown\">\n              <a class=\"dropdown-toggle\" href=\"javascript:;\">\n                <small>Country:</small>\n                <span class=\"js-current-country\">{{current_country_name}}</span>\n                <span class=\"caret\"></span>\n              </a>\n              <ul class=\"dropdown-menu\">\n                <li class=\"dropdown-caret right\">\n                  <span class=\"caret-outer\"></span>\n                  <span class=\"caret-inner\"></span>\n                </li>\n                {{#dropdown_countries}}\n                  <li><a href=\"javascript:;\" data-country-code=\"{{code}}\" title=\"{{name}}\" class=\"js-country-link\">{{name}}</a></li>\n                {{/dropdown_countries}}\n              </ul>\n            </li>\n          </ul>\n        {{/phoenix_pctd}}\n        {{/do_not_render_pctd_logged_out}}\n        <div class=\"pull-right\">\n          {{>t1_global_nav_search}}\n        </div>\n      {{/current_user}}\n\n        \n        <a id=\"close-all-button\" class=\"close-all-tweets js-close-all-tweets\" href=\"#\" title=\"Close all open Tweets\">\n          <i class=\"nav-breaker\"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n  {{^swift}} \n    {{>message_drawer_outer}}\n  {{/swift}}\n</div>\n",
            "t1_global_nav_search": "<form class=\"form-search js-search-form {{search_page_global_search_box_255_class}}\" action=\"{{search_path}}\" id=\"global-nav-search\">\n  <span class=\"search-icon js-search-action\">\n    <i class=\"nav-search\" tabindex=\"0\"></i>\n  </span>\n  <label class=\"hidden-elements\" for=\"search-query\">Search</label>\n  <input class=\"search-input\" type=\"text\" id=\"search-query\" {{#swift}}value=\"{{#content_view}}{{search_query}}{{/content_view}}\"{{/swift}} placeholder=\"{{#content_view}}{{search_text}}{{/content_view}}{{^content_view}}Search{{/content_view}}\" name=\"q\" autocomplete=\"off\" spellcheck=\"false\" tabindex=\"-1\">\n  <input disabled=\"disabled\" class=\"search-input search-hinting-input\" type=\"text\" id=\"search-query-hint\" autocomplete=\"off\" spellcheck=\"false\">\n  {{#swift_typeahead}}\n    {{>swift_typeahead_dropdown}}\n  {{/swift_typeahead}}\n</form>\n",
            "t1_mock_js": "<script>\n\n$(document).ready(function() {\n\n  // Global nav\n  $('.global-nav .home a').attr('href', '/mockview?html=home.ss');\n  $('.global-nav .topics a').attr('href', '/mockview?html=discover.ss');\n  $('.global-nav .people a').attr('href', '/mockview?html=connect.ss');\n\n  // Make the global nav search bar do it's thing\n  $('.global-nav input').focus(function() {\n    $(this).addClass('focus'); // For IE7\n    $(this).parent().addClass('focus'); // For targeting the search icon on focus of input field\n  });\n  $('.global-nav input').blur(function() {\n    $(this).removeClass('focus'); // For IE7\n    $(this).parent().removeClass('focus'); // For targeting the search icon on focus of input field\n  });\n\n  var expandedTweet,\n  prevExpandedTweet,\n  nextExpandedTweet\n\n  // Hacky display of inline expansion\n  $('.stream-item .tweet').click(function(e) {\n    e.preventDefault();\n    expandedTweet = $(this).closest('.stream-item');\n    expandedTweet.toggleClass('open');\n    expandedTweet.find('.replies').slideToggle(300);\n    expandedTweet.find('.in-reply-to').slideToggle(300);\n    var expando = expandedTweet.find('.expanded-content');\n\n    if(!expandedTweet.hasClass('open')) {\n      expando.animate({ height: 0 })\n    } else {\n      expando.animate({ height: expando.children().height()+20 })\n    }\n\n    if(expandedTweet.hasClass('open')) {\n      expandedTweet.animate({\n        \"margin-top\" : \"10px\",\n        \"margin-bottom\" : \"10px\"\n      }, 150)\n    } else {\n      expandedTweet.animate({\n        \"margin-top\" : \"0px\",\n        \"margin-bottom\" : \"0px\"\n      }, 150)\n    }\n    prevExpandedTweet = expandedTweet\n      .prev()\n    nextExpandedTweet = expandedTweet\n      .next()\n    if(prevExpandedTweet.not('open') || prevExpandedTweet.not('before-expanded')) {\n      prevExpandedTweet.toggleClass('before-expanded')\n    }\n    if(nextExpandedTweet.not('open') || nextExpandedTweet.not('after-expanded')) {\n      nextExpandedTweet.toggleClass('after-expanded')\n    }\n  });\n\n  // Dropdowns\n  $('body').bind('click', function (e) {\n    $('.js-dropdown-toggle').parent().removeClass('open');\n    $('.combo-btn-toggle').parent().removeClass('open');\n  });\n  $('.dropdown-toggle').click(function (e) {\n    $(this).parent().toggleClass('open');\n    return false;\n  });\n\n  // Throwaway Extensible modal\n  $('[data-modal]').live('click', function(e) {\n    e.preventDefault();\n    var modalClass = $(this).attr('data-modal');\n    $('.'+modalClass).show();\n  });\n\n  // Use the js- class for this one\n  $('.js-new-tweet').live('click', function(e) {\n    e.preventDefault();\n    $('.new-tweet').show();\n  });\n\n  // Close modal\n  $('.modal .js-dismiss').click(function(e) {\n    e.preventDefault();\n    $(this).parents('.modal-overlay').hide();\n  });\n  // Ghetto esc key close for modals\n  document.onkeydown = function(evt) {\n    evt = evt || window.event;\n    if (evt.keyCode == 27) {\n      $('.modal-overlay').hide();\n    }\n  };\n\n  // Modal: adding/removing prople from lists\n  $('.membership label').click(function(e) {\n    e.preventDefault();\n    if ($(this).children('input').attr('checked')) {\n      $(this).children('input').attr('checked',false);\n      $(this).removeClass('checked');\n    } else {\n      $(this).children('input').attr('checked',true);\n      $(this).addClass('checked');\n    }\n  });\n\n  // Follow button dropdown\n  $('.follow-btn').live(\"click\", function(e) {\n    e.preventDefault();\n    $(this).toggleClass('following');\n    $(this).toggleClass('not-following');\n  });\n\n  // Follow button dropdown\n  $('.btn-user-actions').live(\"click\", function(e) {\n    e.preventDefault();\n    $(this).find('.btn-group-dropdown').toggleClass('open')\n  });\n\n  // Search button dropdown\n  $('.btn-search-actions').live(\"click\", function(e) {\n    e.preventDefault();\n    $(this).find('.btn-group-dropdown').toggleClass('open')\n  });\n\n  // Save button 'saved' state\n  $('.save-btn').click(function(e) {\n    e.preventDefault();\n    $(this).toggleClass('saved');\n    $(this).toggleClass('not-saved');\n  });\n\n});\n</script>",
            "t1_mockview": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\"/>\n  <title>Mustache Template Viewer</title>\n\n  <link rel=\"stylesheet\" href=\"{{t1_core_css_bundle}}\" type=\"text/css\" media=\"screen\" />\n\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner.js\"></script>\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner_plugin_signal.js\"></script>\n  <script type=\"text/javascript\" src=\"/phoenix/external_resources/loadrunner_plugin_json.js\"></script>\n\n  <script>\n    using.path = '/phoenix/js';\n\n    var twttr = {};\n\n    twttr.proto = window.location.protocol.match(/s\\:$/) ? 'https' : 'http';\n\n    twttr.domains = {\n      local: 'localhost.twitter.com:3000',\n      remote: 'api.localhost.twitter.com:3000'\n    };\n\n    twttr.hosts = {\n      local: twttr.proto + \"://\" + twttr.domains.local,\n      remote: twttr.proto + \"://\" + twttr.domains.remote\n    };\n\n    twttr.isSSL = function () {\n      return twttr.proto === 'https';\n    };\n\n    twttr.API = {\n      _requestCache: {\n        get: function(path) {\n          return {};\n        }\n      }\n    };\n\n    twttr.templates = {};\n\n    // Prevent overloading templates from bundles (they have #mockview stripped out of them)\n    twttr.isMockview = true;\n\n    twttr.development = true;\n\n    twttr.isT1 = true;\n\n    {{{fake_console_js}}}\n\n    using('>decider', function() {\n      twttr.decider._updateFeatures({\n      });\n      signal('>deciderFeaturesFromBootstrap');\n    });\n\n    using('bundle/t1-core', function() {\n      // Overwrite the templates with all of them (even those excluded from the bundles)\n      // This has to be done after core has been loaded and 'run/defaultViews' has\n      // built the views for the core templates.  'multiGlobals/more_views' will build\n      // any remaining missing default views at the very end.\n      twttr.templates = {{{json_all_server_side_templates}}};\n      using([\n        '/account/templates_t1_more.js',\n        'multiGlobals/more_views',\n        'multiGlobals/more_views_t1'],\n      function() {\n        var mockHtmls = {{{json_all_mockview_htmls}}};\n        var mockFixtures = {{{json_all_mockview_fixtures}}};\n        var mockJsons = {{{json_all_mockview_jsons}}};\n        var $body = $(\"body\");\n\n        //sub in fixture data in mock JSONs\n        for (var name in mockJsons) {\n          var matches = mockJsons[name].match(/\\{\\{>.*?\\}\\}/g);\n          if (matches && matches.length) {\n            for (var i = 0; i < matches.length; i++) {\n              var fixtureName = matches[i].substr(3, matches[i].length - 5);\n              mockJsons[name] = mockJsons[name].split(matches[i]).join(mockFixtures[fixtureName]);\n            }\n          }\n        }\n\n        renderMustache(twttr.util.params().mustache) || renderHtml(twttr.util.params().html) || renderIndex();\n\n        twttr.themes.loadCurrentUserStyle();\n\n        function renderIndex() {\n          var $node = $(\"<div style='background-color: rgba(255,255,255,.9); width: 30%; padding: 30px; text-shadow: 0 1px 0 rgba(255,255,255,.5);' />\").appendTo($body);\n          appendList($node, \"HTML Simulations\", mockHtmls, 'html');\n          appendList($node, \"T1 Templates\", twttr.templates, 'mustache');\n        }\n\n        function appendList($node, title, items, paramName) {\n          var $list = $(\"<ul style='list-style-type:none; margin: 0 10px;'/>\");\n          var keys = [];\n          $.each(items, function(key, value) { keys.push(key); });\n          $.each(keys.sort(), function(i, key) {\n            var params = {};\n            params[paramName] = key;\n            var $a = $(\"<a />\").text(key).attr('href', '?' + $.param(params)).attr('target', '_blank');\n            $list.append($(\"<li />\").html($a));\n          });\n          $node.append($(\"<h2 style='margin: 10px 10px 0 10px;'/>\").text(title));\n          $node.append($list);\n        }\n\n        function renderMustache(mockViewMustache) {\n          var html = mustacheToHtmlOrNull(mockViewMustache);\n          if (html === null) {\n            return false;\n          } else {\n            replaceBody($(\"<div/>\").html(html));\n            return true;\n          }\n        }\n\n        function mustacheToHtmlOrNull(mustacheName, contextJson) {\n          if (mustacheName) {\n            var context = $.parseJSON(contextJson || mockJsons[mustacheName] || mockFixtures[mustacheName] || '{}');\n            // TODO: Remove this when nobody is making json wrapped in obj wrapped in an enigma\n            if (context.obj) {\n              context = context.obj;\n            }\n            // twttr.views.BaseAPI.attach will use either the attributes sub-object or\n            // the outer object as the context\n            if (context.attributes) {\n              context.attributes.is_mockview = true;\n            } else {\n              context.is_mockview = true;\n            }\n            var ViewClass = twttr.views[twttr.util.capitalize(twttr.util.camelize(mustacheName))];\n            if (ViewClass) {\n              return (new ViewClass(context)).html();\n            } else if (twttr.templates[mustacheName]) {\n              return Mustache.to_html(twttr.templates[mustacheName], context, twttr.templates);\n            }\n          }\n          return null;\n        }\n\n        function renderHtml(mockViewHtml) {\n          var html = mockHtmls[mockViewHtml];\n          if (!html) {\n            return false;\n          }\n          var $container = $(\"<div/>\").html(html);\n          $container.find(\"mustache\").each(function() {\n            var $mustache = $(this);\n            var src = $mustache.attr('src');\n            var json = $mustache.attr('json');\n            var context = $mustache.html() || mockJsons[json] || mockFixtures[json];\n\n            var content = mustacheToHtmlOrNull(src, context);\n            if (content === null) {\n              content = \"<div>Invalid <mustache> src attribute</div>\";\n            }\n            $mustache.replaceWith(content);\n          });\n          replaceBody($container);\n          return true;\n        }\n\n        function replaceBody($container) {\n          var $mockviewBody = $container.find(\"body\");\n          if ($mockviewBody.length === 1) {\n            $body.replaceWith($mockviewBody);\n          } else {\n            $body.empty().append($container.contents());\n          }\n        }\n      });\n    });\n  </script>\n\n</head>\n<body>\n</body>\n</html>\n",
            "t1_signin_form": "<form action=\"{{sessions_path}}\" class=\"js-signin signin\" method=\"post\">\n  {{>t1_signin_form_textbox}}\n  {{>t1_signin_form_subchck}}\n  <div class=\"divider\"></div>\n  <p>\n    <a class=\"forgot\" href=\"{{resend_password_path}}\">Forgot password?</a><br />\n    <a class=\"mobile has-sms\" href=\"{{mobile_complete_path}}\">Already using Twitter via text message?</a>\n  </p>\n</form>\n",
            "t1_signin_form_subchck": "<fieldset class=\"subchck\">\n  <label class=\"remember\">\n    <input type=\"checkbox\" value=\"1\" name=\"remember_me\" {{#remember_checked}}checked=\"checked\"{{/remember_checked}}>\n    <span>Remember me</span>\n  </label>\n  <button type=\"submit\" class=\"btn submit\">Sign in</button>\n</fieldset>\n\n<input type=\"hidden\" name=\"scribe_log\">\n<input type=\"hidden\" name=\"redirect_after_login\" value=\"{{redirect_after_login}}\">\n<input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n",
            "t1_signin_form_textbox": "<fieldset class=\"textbox\">\n  <label class=\"username js-username\">\n    <span>Username or email</span>\n    <input class=\"js-username-field email-input\" type=\"text\" name=\"session[username_or_email]\" autocomplete=\"on\">\n  </label>\n  <label class=\"password js-password\">\n    <span>Password</span>\n    <input class=\"js-password-field\" type=\"password\" value=\"\" name=\"session[password]\">\n  </label>\n</fieldset>\n",
            "t1_signup": "<body class=\"t1 {{locale_css}} logged-out {{ms_windows_class}}\"\n{{#locale_is_rtl}}\n  dir=\"rtl\"\n{{/locale_is_rtl}}\n>\n  <div id=\"doc\" class=\"phx-signup\">\n    {{>t1_global_nav}}\n    <div id=\"page-outer\">\n      <div id=\"page-container\" class=\"wrapper\">\n        <div class=\"page-canvas\">\n          <div class=\"signup-wrapper\">\n            {{#event}}\n              <h1>Join Twitter today.</h1>\n              <p>Complete signup now to follow top accounts for <strong>{{event_hashtag}}</strong>.</p>\n              <div class=\"ambassador event-signup clearfix\">\n                {{#top_people}}<img src=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\" class=\"avatar size48\" alt=\"{{name}}\" title=\"{{name}}\">\n{{/top_people}}\n              </div>\n\n            {{/event}}\n            {{^event}}\n              {{#ambassadors_exist}}\n                {{#follow_many}}\n                  <h1>It's your turn. Join Twitter.</h1>\n                {{/follow_many}}\n                {{^follow_many}}\n                  <h1>Join Twitter today.</h1>\n                {{/follow_many}}\n\n                <div class=\"ambassador clearfix\">\n                  {{#ambassadors}}\n                    <img src=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\" class=\"avatar size48\" alt=\"{{name}}\" title=\"{{name}}\">\n                  {{/ambassadors}}\n                  {{#follow_many}}\n                    <p>Complete signup now to receive updates from <strong>{{first_ambassador_name}}</strong> and others. </p>\n                  {{/follow_many}}\n                  {{^follow_many}}\n                    <p>Complete signup now to receive updates from <strong>{{first_ambassador_name}}</strong>.</p>\n                  {{/follow_many}}\n                </div>\n              {{/ambassadors_exist}}\n              {{^ambassadors_exist}}\n                <h1>\n                  {{#user_found_by_device}}\n                  Complete your account.\n                  {{/user_found_by_device}}\n                  {{^user_found_by_device}}\n                  Join Twitter today.\n                  {{/user_found_by_device}}\n                </h1>\n              {{/ambassadors_exist}}\n            {{/event}}\n\n            {{>signup_form}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  {{>banned_passwords}}\n\n  <script type=\"text/javascript\">\n  twttr.loggedIn = false;\n  {{>mini_scribe}}\n  {{{loadrunner_script}}}\n  {{{loadrunner_plugin_json}}}\n  {{{loadrunner_plugin_css}}}\n  {{{loadrunner_plugin_signal}}}\n\n  using.path = '{{{loadrunner_modpath}}}';\n  using.autoLoad = {{{loadrunner_autoload}}};\n  {{#assets_from_cdn}}\n  using.bundles.push({{{loadrunner_versions}}});\n  {{/assets_from_cdn}}\n  using('bundle/signup').load();\n  twttr.insertGAScriptElement();\n  </script>\n\n  <!--[if lte IE 6]>\n  <script>using('bundle/ie6').load();</script>\n  <![endif]-->\n\n</body>\n",
            "test_template": "",
            "t1_user_dropdown": "<ul class=\"dropdown-menu\">\n  <li class=\"dropdown-caret\">\n    <span class=\"caret-outer\"></span>\n    <span class=\"caret-inner\"></span>\n  </li>\n  \n  <li class=\"current-user\" data-name=\"profile\">\n    {{>mini_current_user}}\n  </li>\n\n  <li class=\"dropdown-divider\"></li>\n  \n  {{^site_header_with_profile_tab}}\n  {{#contributor_account_info}}\n    {{#include_direct_message_dialog}}\n    <li class=\"messages\" data-name=\"messages\">\n      <a class=\"js-dm-dialog\" href=\"/#!/\" data-nav=\"messages\">\n        <span class=\"js-direct-message-count count\"></span>\n        Direct messages\n      </a>\n    </li>\n    {{/include_direct_message_dialog}}\n    {{^include_direct_message_dialog}}\n    <li class=\"messages\" data-name=\"messages\">\n      <a href=\"/#!/inbox\" data-nav=\"messages\">Direct messages</a>\n    </li>\n    {{/include_direct_message_dialog}}\n    <li data-name=\"lists\"><a href=\"{{user_lists_path}}\" data-nav=\"all_lists\">Lists</a></li>\n    <li class=\"dropdown-divider\"></li>\n  {{/contributor_account_info}}\n  {{/site_header_with_profile_tab}}\n\n  \n  <li><a href=\"{{support_path}}\" data-nav=\"help_center\">Help</a></li>\n\n  {{^hide_keyboard_shortcuts_link}}\n    \n    <li>\n      <a href=\"#\" class=\"js-keyboard-shortcut-trigger\" data-nav=\"shortcuts\">\n        Keyboard shortcuts\n      </a>\n    </li>\n  {{/hide_keyboard_shortcuts_link}}\n\n  \n  {{#twitter_ads_link_url}}\n    <li><a href=\"{{twitter_ads_link_url}}\" target=\"{{twitter_ads_link_target}}\" data-nav=\"ads\">{{twitter_ads_link_title}}</a></li>\n  {{/twitter_ads_link_url}}\n\n  \n  {{#is_translator}}\n    <li><a href=\"{{translation_tool_path}}\" data-nav=\"translate\">Translate</a></li>\n  {{/is_translator}}\n\n  \n  {{#contributor_account_info}}\n    {{#is_admin}}\n      <li class=\"admin-panel-link\"><a href=\"{{admin_home_path}}\" title=\"Admin panel\">Admin panel</a></li>\n    {{/is_admin}}\n  {{/contributor_account_info}}\n\n  {{#content_view}}\n    {{#profile_user}}\n      {{#is_admin}}\n        {{#can_investigate}}\n          <li class=\"user-admin-tools\"><a href=\"{{admin_investigate_path}}\" title=\"Investigate!\" target=\"_blank\">Investigate @{{screen_name}}</a></li>\n        {{/can_investigate}}\n      {{/is_admin}}\n    {{/profile_user}}\n  {{/content_view}}\n\n  \n  {{#contributor_account_info}}\n    {{#can_contribute}}\n      <li class=\"dropdown-divider\"></li>\n      <li class=\"label\">Switch accounts</li>\n      \n      <li class=\"contributors\">\n        <div class=\"contributors-inner\">\n          {{#is_contributing}}\n            {{#real_identity}}\n              <span class=\"contributor-account-link\">\n                <a class=\"dropdown-link contributor-link\" href=\"/account_switch/destroy\">\n                  <img class=\"avatar size20\" src=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\" alt=\"{{screen_name}}\">\n                  {{screen_name}}\n                </a>\n              </span>\n            {{/real_identity}}\n          {{/is_contributing}}\n          {{#contributable_accounts}}\n            <span class=\"contributor-account-link\">\n              <a class=\"dropdown-link contributor-link\" class=\"contributor-link\" href=\"/account_switch/create/{{id}}\">\n                <img class=\"avatar size20\" src=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\" alt=\"{{screen_name}}\">\n                {{screen_name}}\n              </a>\n            </span>\n          {{/contributable_accounts}}\n        </div>\n      </li>\n    {{/can_contribute}}\n  {{/contributor_account_info}}\n  <li class=\"dropdown-divider\"></li>\n\n  {{#can_access_oldtwitter}}\n  {{^is_contributing}}\n    <li>\n      <form method=\"post\" action=\"{{turn_phx_off_path}}\" class=\"turn-phx-off-form\">\n        <input type=\"hidden\" name=\"setting\" value=\"false\">\n        <input type=\"hidden\" name=\"format\" value=\"html\">\n        <input type=\"hidden\" value=\"\" name=\"authenticity_token\" class=\"authenticity_token\">\n        <button type=\"submit\" class=\"dropdown-link disable-phx\">Switch to Old Twitter</button>\n      </form>\n    </li>\n  {{/is_contributing}}\n  {{/can_access_oldtwitter}}\n\n  \n  {{#contributor_account_info}}\n    {{^is_contributing}}\n      <li><a href=\"{{settings_path}}\" data-nav=\"settings\" class=\"{{#content_view}}js-nav{{/content_view}}\">Settings</a></li>\n    {{/is_contributing}}\n    {{#is_contributing}}\n      <li class=\"label\">\n        <span class=\"settings-disabled\" title=\"Settings disabled while contributing.\">Settings</span>\n      </li>\n    {{/is_contributing}}\n  {{/contributor_account_info}}\n\n\n  \n  <li>\n    <a class=\"js-signout-button\" id=\"signout-button\" href=\"#\" data-nav=\"logout\">Sign out</a>\n    <form class=\"dropdown-link-form signout-form\" id=\"signout-form\" action=\"{{logout_action_path}}\" method=\"POST\">\n      <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\" class=\"authenticity_token\">\n      <input type=\"hidden\" name=\"reliability_event\" class=\"js-reliability-event\">\n      <input type=\"hidden\" name=\"scribe_log\">\n    </form>\n  </li>\n\n</ul>\n",
            "the_grid": "<div class=\"the-grid\">\n<div class=\"grid-bottom\"></div>\n</div>",
            "thumbnail": "<a href=\"{{url}}\" data-url=\"{{url}}\" class=\"media-thumbnail\" style=\"width:{{width}}px; height:{{height}}px; line-height:{{lineHeight}}px;\">\n  <div class='thumbnail-wrapper' data-url=\"{{url}}\">\n  </div>\n</a>",
            "thumbnail_facet": "<a href=\"{{url}}\" data-url=\"{{url}}\" class=\"media-thumbnail\" style=\"width:{{width}}px; height:{{height}}px; line-height:{{lineHeight}}px;\">\n  <div class='thumbnail-wrapper' data-url=\"{{url}}\">\n  </div>\n  <i class=\"play\"></i>\n</a>",
            "thumbnail_viewer": "<div class=\"thumbnail-viewer\">\n  <a href=\"#\">\n    <div class=\"thumbnail-viewer-nav thumbnail-viewer-prev\"><span class=\"thumbnail-viewer-button thumbnail-viewer-back-button\"></span></div>\n  </a>\n  <div class=\"thumbnail-viewer-container js-thumbnail-viewer-container\">\n    <div class=\"thumbnail-viewer-images js-thumbnail-viewer-images\"></div>\n  </div>\n  <a href=\"#\">\n    <div class=\"thumbnail-viewer-nav thumbnail-viewer-next\"><span class=\"thumbnail-viewer-button thumbnail-viewer-next-button\"></span></div>\n  </a>\n</div>",
            "thumbnail_viewer_facet": "<div class=\"js-thumbnail-viewer-container media-row media-videos\">\n  <div class=\"js-thumbnail-viewer-images\"></div>\n</div>",
            "timeline": "{{#timeline}}\n  <div class=\"stream-container\"\n    {{#tweet_pagination}}data-max-id=\"{{max_id}}\" data-since-id=\"{{since_id}}\"{{/tweet_pagination}}\n    {{#cursor_pagination}}data-cursor=\"{{cursor}}\"{{/cursor_pagination}}>\n    <div class=\"stream {{#page_name_underscore}}{{page_name_underscore}}-stream{{/page_name_underscore}}\">\n      <div class=\"stream-items\" id=\"stream-items-id\">{{>swift_stream_items/all_stream_items}}</div>\n      <div class=\"stream-footer\">{{>timeline_end}}</div>\n      <div class=\"stream-fail-container\">\n        {{>stream_whale_end}}\n      </div>\n      <div class=\"stream-autoplay-marker\">\n        <i class=\"arrow\"></i>\n        <span class=\"text\"></span>\n      </div>\n    </div>\n  </div>\n  {{#tweet_spam_experiment_enabled}}\n    {{>stream_tweet_hidden}}\n  {{/tweet_spam_experiment_enabled}}\n  {{#include_flag_confirmation_dialog}}\n    {{>dialogs/sensitive_flag_confirmation}}\n  {{/include_flag_confirmation_dialog}}\n{{/timeline}}",
            "timeline_account_list": "<h2><span class=\"dashboard-component-title\">Follow the people in @{{screen_name}}’s timeline</span></h2>\n<ul></ul>\n\n",
            "timeline_end": "<div class='timeline-end {{#has_items}}has-items{{/has_items}} {{#has_more_items}}has-more-items{{/has_more_items}}'>\n  {{>stream_end}}\n  {{>stream_loading}}\n</div>",
            "tipsy": "<div class=\"tooltip\">\n  <b>\n    {{title}}\n  </b>\n</div>",
            "too_long_error_message": "{{#is_dm}}\n  Your message was over 140 characters. You'll have to be more clever.\n{{/is_dm}}\n{{^is_dm}}\n  Your Tweet was over 140 characters. You'll have to be more clever.\n{{/is_dm}}\n",
            "too_long_list_description_error_message": "Oops! List descriptions cannot exceed 100 characters.\n",
            "too_long_list_name_error_message": "Oops! List names cannot exceed 25 characters.\n<a href=\"{{list_name_error_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>",
            "too_many_lists_for_user_error_message": "Oops! You cannot have more than {{max_lists}} lists.",
            "top_content": "<div class=\"js-content-top\"></div>",
            "top_people_stream_end": "<div class=\"stream-end\">\n  <a class=\"js-full-results-link full-results-link\" href=\"#\" data-query=\"{{query}}\">Show all results</a>\n</div>\n",
            "tos_scroller": "<div class=\"scroller\">\n  <p class=\"header\">By clicking the button, you agree to the terms below:</p>\n  <div class=\"import\"> {{{tos_html}}} </div>\n</div>\n",
            "trend_item": "<li class=\"js-trend-item {{#is_event}}event-trend{{/is_event}} {{#promoted_content}}promoted-trend{{/promoted_content}}\" data-trend-name=\"{{name}}\" {{#promoted_content}}data-promoted-trend-id=\"{{promoted_trend_id}}\"{{/promoted_content}}>\n  {{#is_sponsored}}\n    <a class=\"promoted pretty-link\" href=\"{{trend_search_path}}\" data-query-source=\"{{search_query_source}}\"><b>{{name}}</b> <span class=\"with-icn js-disclosure js-tooltip\" title=\"{{#promoted_content}}{{disclosure_text}}{{/promoted_content}}\"><i class=\"{{promoted_badge_class}}\"></i><b class=\"promoted-text\">Promoted</b></span></a>\n  {{/is_sponsored}}\n  {{#is_event}}\n    <a class=\"pretty-link\" href=\"{{trend_search_path}}\" data-query-source=\"{{search_query_source}}\"><b>{{name}}</b> <span class=\"with-icn js-disclosure js-tooltip\"><i class=\"{{event_class}}\"></i><b class=\"promoted-text\">{{event_title}}</b></span></a>\n  {{/is_event}}\n  {{^is_sponsored}}\n    {{^is_event}}\n      <a href=\"{{trend_search_path}}\" data-query-source=\"{{search_query_source}}\">{{name}}</a>\n    {{/is_event}}\n  {{/is_sponsored}}\n</li>",
            "trends_dialog_breadcrumbs": "{{#decider_personalized_trends}}\n  {{#is_personalized}}\n    If you want to stop seeing tailored Trends, choose a new location now.\n  {{/is_personalized}}\n  {{^is_personalized}}\n    Trends set to:\n  {{/is_personalized}}\n{{/decider_personalized_trends}}\n{{#breadcrumbs}}\n  {{#decider_personalized_trends}}\n    {{#is_last}}\n      <strong class=\"trend-breadcrumb-location selected\">{{name}} <i class=\"checkmark\"></i></strong>\n    {{/is_last}}\n    {{^is_last}}\n      <a href=\"#\" class=\"trend-breadcrumb-location js-trend-link\" data-woeid=\"{{woeid}}\">{{name}}</a>\n      <span class=\"separator\">/</span>\n    {{/is_last}}\n  {{/decider_personalized_trends}}\n  {{^decider_personalized_trends}}\n    <a href=\"#\" class=\"trend-breadcrumb-location js-trend-link\" data-woeid=\"{{woeid}}\">{{name}}</a>\n    {{^is_last}}\n      <span class=\"separator\">/</span>\n    {{/is_last}}\n  {{/decider_personalized_trends}}\n{{/breadcrumbs}}",
            "trends_dialog_footer": "<button type=\"button\" class=\"btn select-personalized\">Get tailored Trends</button>\n<button type=\"button\" class=\"btn primary-btn done\">Done</button>",
            "trends_inner": "<div class=\"flex-module-header\">\n  \n  <h3>\n    <span class=\"js-trend-location\">\n      {{#location}}\n        {{location}}\n      {{/location}}\n      {{^location}}\n        Worldwide trends\n      {{/location}}\n    </span>\n  </h3>\n  <small>· <a href=\"#\" data-modal=\"change-trends\" class=\"change-trends js-trend-toggle\">Change</a></small>\n</div>\n<div class=\"flex-module-inner{{#rendering_on_server}} pre-rendered-stub{{/rendering_on_server}}\">\n  <ul class=\"trend-items js-trends\">\n    {{#trends}}\n      {{>trend_item}}\n    {{/trends}}\n  </ul>\n</div>\n</div>",
            "trends_page": "<div class=\"trends-page{{#decider_local_trends}} trends-page-loading{{/decider_local_trends}}\">\n  {{^decider_local_trends}}\n    <div class=\"trends-disabled\">\n      Sorry, local trends are temporarily unavailable.\n    </div>\n  {{/decider_local_trends}}\n  <div class=\"logged-out\">\n    <div class=\"bottompart\" />\n  </div>\n</div>\n",
            "trends_personalized_dialog": "<div class=\"trends-personalized content-placeholder\">\n  <h2 class=\"title\">Trends tailored just for you.</h2>\n  <p>Trends offer a unique way to get closer to what you care about. They are tailored for you based on your location and who you follow.</p>\n  <p class=\"placeholder-actions\">\n    <button type=\"button\" class=\"btn customize-by-location\">Change</button>\n    <button type=\"button\" class=\"btn primary-btn done\">Keep tailored Trends</button>\n  </p>\n</div>",
            "tweet_activity": "{{^is_activity_empty}}\n<div class='tweet-activity-lists clearfix'>\n\n  {{^is_favorites_empty}}\n  <div class='activity-list-container favorites'>\n    <b class=\"type\" title=\"Who favorited this Tweet\"><i></i></b>\n    {{{favorites_list}}}\n    {{#show_favorites_count}}{{{favorites_count}}}{{/show_favorites_count}}\n  </div>\n  {{/is_favorites_empty}}\n\n  {{^is_retweets_empty}}\n  <div class='activity-list-container retweets'>\n    <b class=\"type\" title=\"Who retweeted this Tweet\"><i></i></b>\n    {{{retweets_list}}}\n    {{#show_retweets_count}}{{{retweets_count}}}{{/show_retweets_count}}\n  </div>\n  {{/is_retweets_empty}}\n\n  {{^is_replies_empty}}\n  <div class='activity-list-container replies'>\n    <b class=\"type\" title=\"Who replied to this Tweet\"><i></i></b>\n    {{{replies_list}}}\n    {{#show_replies_count}}{{{replies_count}}}{{/show_replies_count}}\n  </div>\n  {{/is_replies_empty}}\n\n</div>\n{{/is_activity_empty}}",
            "tweet_activity_count": "<div class='tweet-activity-count-container'>\n  <span class='tweet-activity-count'>\n    {{#is_retweets}}{{length}} retweets{{/is_retweets}}\n    {{#is_favorites}}{{length}} favorites{{/is_favorites}}\n  </span> · <a href='#' class='tweet-activity-view-all'>View more »</a>\n</div>",
            "tweet_box": "<div class=\"tweet-box condensed\">\n  {{#show_title}}\n    <div class=\"tweet-box-title\">\n      {{#name}}<h2>Tweet to {{name}}</h2>{{/name}}\n      {{^name}}<h2>{{title}}</h2>{{/name}}\n    </div>\n  {{/show_title}}\n  <div class=\"text-area\">\n    <div class=\"text-area-editor\"></div>\n  </div>\n  <div class=\"tweet-button-container\">\n    {{#show_geo}}\n      {{>geo_control}}\n    {{/show_geo}}\n    <div class=\"tweet-button-sub-container\">\n      <img src=\"/images/spinner.gif\" class=\"tweet-spinner\" style=\"display: none;\" />\n      <input class=\"tweet-counter\" value=\"140\" disabled=\"disabled\"/>\n      {{>tweet_button}}\n    </div>\n  </div>\n</div>\n",
            "tweet_button": "<a href=\"#\" class=\"tweet-button btn\">{{button_text}}</a>",
            "tweet_command": "{{#dm_recipient}}\n  Your message to @{{dm_recipient}} has been sent!\n{{/dm_recipient}}\n{{^dm_recipient}}\n  {{message_for_flash}}<br>\n  \"{{tweet_command}}\" is a command, not a Tweet.\n  <a href=\"{{sms_commands_learn_more_path}}\" target=\"_blank\" class=\"learn-more\">Learn more</a>\n{{/dm_recipient}}\n",
            "tweet_details": "<div class=\"js-tweet-details-fixer tweet-details-fixer\">\n  {{^rendering_on_server}}\n    <div class=\"js-tweet-media-container\"></div>\n  {{/rendering_on_server}}\n  {{#rendering_on_server}}\n    {{#possibly_sensitive}}\n      {{>media_not_displayed}}\n    {{/possibly_sensitive}}\n    {{#cards}}\n      <div class=\"cards-media-container {{#possibly_sensitive}} hidden{{/possibly_sensitive}}\">{{>cards_base}}</div>\n    {{/cards}}\n    <div class=\"js-tweet-media-container {{#possibly_sensitive}} hidden{{/possibly_sensitive}}\"></div>\n    {{^cards}}\n      <div class=\"entities-media-container {{#possibly_sensitive}} hidden{{/possibly_sensitive}}\" style=\"min-height:{{embedded_photos_min_height}}px\">\n      {{#embedded_photos}}\n        {{>embedded_pic_twitter}}\n      {{/embedded_photos}}\n    </div>\n    {{/cards}}\n  {{/rendering_on_server}}\n  <div class=\"js-machine-translated-tweet-container\"></div>\n  <div class=\"js-tweet-stats-container tweet-stats-container {{#has_retweet_count}}{{^preexpanded}}already-open{{/preexpanded}}{{/has_retweet_count}}\">\n    {{#tweet_stats}}\n      {{>tweet_stats}}\n    {{/tweet_stats}}\n  </div>\n  <div class=\"client-and-actions\">\n    <span class=\"metadata\">\n      <span title=\"{{explicit_timestamp}}\">{{explicit_timestamp}}</span>\n\n      {{>tweet_contributor}}\n\n      {{>tweet_geo_text}}\n\n      {{#include_embed_link}}\n        · <a class=\"embed-link\" href=\"{{embed_dialog_permalink_path}}\">Embed this Tweet</a>\n      {{/include_embed_link}}\n\n      {{^include_embed_link}}\n        {{^is_permalink}} \n          · <a class=\"permalink-link js-permalink js-nav\" href=\"{{permalink_path}}\" {{#impression_cookie}}data-impression-cookie=\"{{impression_cookie}}\" data-send-impression-cookie=\"true\"{{/impression_cookie}}>Details</a>\n        {{/is_permalink}}\n      {{/include_embed_link}}\n\n      {{#media_cards_enabled}}\n        {{#cards}}\n          {{#photos}}{{>cards_flag_media}}{{/photos}}\n          {{#summaries}}{{>cards_flag_media}}{{/summaries}}\n          {{#players}}{{>cards_flag_media}}{{/players}}\n        {{/cards}}\n        {{^cards}}{{^rendering_on_server}} \n          {{#coerce_native_media_to_cards}}\n            {{#entities}}{{#media}}\n              {{>cards_flag_media}}\n            {{/media}}{{/entities}}\n          {{/coerce_native_media_to_cards}}\n        {{/rendering_on_server}}{{/cards}}\n      {{/media_cards_enabled}}\n\n    </span>\n  </div>\n</div>\n",
            "tweet_geo": "",
            "tweet_not_found_error_message": "Tweet does not exist.\n",
            "tweet_posted": "{{#in_reply_to_screen_name}}\n  Your Tweet to @{{in_reply_to_screen_name}} has been sent!\n{{/in_reply_to_screen_name}}\n{{^in_reply_to_screen_name}}\n  Your Tweet was posted!\n{{/in_reply_to_screen_name}}",
            "tweet_related_results_forbidden_error_message": "You are not authorized to look up related results for that Tweet.\n",
            "tweet_search_stream_header": "<div class=\"header-inner\">\n  {{#is_new_search_header_available}}\n    <div class=\"search-header ddg-192-new-header js-search-header\">\n      <div class=\"btn-group pull-right js-search-dropdown\">\n        <button type=\"button\" class=\"dropdown btn btn-search-actions js-search-dropdown-button\">\n          <i class=\"search-toggle\"></i>\n        </button>\n        <ul class=\"dropdown-menu btn-group-dropdown js-combo-btn-dropdown-options\">\n          <li><a class=\"js-toggle-saved-search-link\" href=\"#\">Save search</a></li>\n          <li><a href=\"{{search_advanced_path}}\">Advanced search</a></li>\n        </ul>\n      </div>\n      <h2 class=\"search-title js-search-title\">Results for <strong class=\"search-query\">{{pretty_query}}</strong></h2>\n    </div>\n  {{/is_new_search_header_available}}\n\n  {{>onebox}}\n\n  <h2>\n    <span class=\"content-header-buttons js-header-button-container\"></span>\n    \n    \n    <span class=\"js-stream-title\"></span> <small class=\"view-toggler js-view-toggler\"></small>\n  </h2>\n</div>\n",
            "tweet_spam_menu": "{{^is_my_tweet}}\n  {{#user}}\n    \n    \n    <div class=\"tweet-spam-experiment {{tweet_experiment_spam_threat_class}}\">\n      <div class=\"tweet-user-actions\">\n        {{>user_actions}}\n      </div>\n    </div>\n  {{/user}}\n{{/is_my_tweet}}",
            "tweet_stats": "{{%TRANSLATION-HINT mode=user_stats}}\n\n<ul class=\"stats{{^include_activity_popup}} no-activity-popup{{/include_activity_popup}}\">\n  {{#has_retweets}}\n    <li class=\"js-stat-count js-stat-retweets stat-count\">\n      <a\n        {{#include_activity_popup}}\n          class=\"request-retweeted-popup\"\n          data-activity-popup-title=\"{{>dialogs/retweeted_popup_title}}\"\n        {{/include_activity_popup}}\n      >\n        \n          {{#retweeters_length_one}}<strong>{{retweets_count}}</strong> Retweet{{/retweeters_length_one}}\n          {{#retweeters_length_other}}<strong>{{retweets_count}}</strong> Retweets{{/retweeters_length_other}}\n        \n      </a>\n    </li>\n  {{/has_retweets}}\n\n  {{#has_favorites}}\n    <li class=\"js-stat-count js-stat-favorites stat-count\">\n      <a\n        {{#include_activity_popup}}\n          class=\"request-favorited-popup\"\n          data-activity-popup-title=\"{{>dialogs/favorited_popup_title}}\"\n        {{/include_activity_popup}}\n      >\n        \n          {{#favoriters_length_one}}<strong>{{favorites_count}}</strong> Favorite{{/favoriters_length_one}}\n          {{#favoriters_length_other}}<strong>{{favorites_count}}</strong> Favorites{{/favoriters_length_other}}\n        \n      </a>\n    </li>\n  {{/has_favorites}}\n\n  <li class=\"avatar-row js-face-pile-container\">\n    {{#face_pile}}\n      {{>user_avatar_link_24}}\n    {{/face_pile}}\n  </li>\n</ul>\n",
            "tweet_text_large": "<div class='tweet-text tweet-text-large'>{{{linkified_text}}}</div>",
            "typeahead": "<div class=\"dropdown-menu typeahead\">\n  <div class=\"dropdown-caret\">\n    <div class=\"caret-outer\"></div>\n    <div class=\"caret-inner\"></div>\n  </div>\n  <div class=\"dropdown-inner js-typeahead-results\">\n  </div>\n</div>",
            "typeahead_account_item": "<li data-user-id=\"{{id}}\" data-user-screenname=\"{{screen_name}}\" data-remote=\"true\" data-score=\"{{score}}\" class=\"typeahead-item js-selectable\">\n  <a href=\"#\"{{{debug_info}}}>\n    <img src=\"{{avatar}}\" width=\"24\" height=\"24\" class=\"avatar size24\">\n    <span class=\"fullname\">{{name}}</span>\n    {{{verified}}}\n    <span class=\"username\"><s>@</s><b>{{screen_name}}</b></span>\n  </a>\n</li>\n",
            "typeahead_accounts": "<div class=\"typeahead-accounts js-typeahead-accounts\">\n  <ul class=\"typeahead-items\">\n  </ul>\n</div>",
            "typeahead_accounts_shortcut": "<li class=\"js-selectable js-shortcut\"><a href=\"{{user_search_path}}\" data-search-query=\"{{query}}\" data-query-source=\"{{search_query_source}}\" data-shortcut=\"true\">Search all people for <strong>{{query}}</strong></a></li>",
            "typeahead_saved_searches": "<div class=\"js-typeahead-saved-searches\">\n  <ul class=\"typeahead-items typeahead-searches\">\n  {{#searches}}\n    {{>typeahead_saved_search_item}}\n  {{/searches}}\n  </ul>\n</div>",
            "typeahead_search_item": "<li class=\"js-selectable search-item\" data-hint=\"{{name}}\">\n  <a href=\"{{search_results_path}}\" data-search-query=\"{{query}}\" data-query-source=\"{{search_query_source}}\"{{{debug_info}}}><i class=\"generic-search\"></i>{{name}}</a>\n</li>",
            "typeahead_search_shortcut_items": "{{#query}}\n  <li class=\"js-selectable {{^jump_to_profile}}selected{{/jump_to_profile}}\"><a href=\"{{search_results_path}}\" data-search-query=\"{{query}}\" data-query-source=\"{{search_query_source}}\" data-shortcut=\"true\">Search for <strong>{{query}}</strong></a></li>\n{{/query}}",
            "typeahead_search_shortcuts": "<div class=\"typeahead-shortcuts js-typeahead-shortcuts\">\n  <ul class=\"typeahead-items\"></ul>\n</div>",
            "unable_to_send_error_message": "{{#message_for_flash}}\n  {{message_for_flash}}\n{{/message_for_flash}}\n{{^message_for_flash}}\n  Your message could not be sent.\n{{/message_for_flash}}\n",
            "unclickable_tweet": "<div class=\"unfocusable-stream-item stream-item\">\n  <div class=\"tweet js-unclickable-tweet unclickable-tweet {{>common_tweet_classes}}\"\n    {{>tweet_data}}>\n    <i class=\"dogear\"></i>\n    <div class=\"content\">\n      <div class=\"stream-item-header\">\n        {{#user}}\n          <span class=\"account-group\" data-user-id=\"{{id}}\">\n            <img class=\"avatar\" src=\"{{profile_image_url}}\" alt=\"{{name}}\">\n            <strong class=\"fullname\">{{name}}</strong>\n            <span class=\"username\"><s>@</s><b>{{screen_name}}</b></span>\n            {{#protected}}\n              <i class=\"sm-lock\"></i>\n            {{/protected}}\n          </span>\n        {{/user}}\n        <small class=\"time\">\n          {{short_timestamp}}\n        </small>\n      </div>\n      <p>{{>linked_tweet}}</p>\n      <div class=\"stream-item-footer\">\n        {{>tweet_context}}\n      </div>\n    </div>\n  \n  </div>\n</div>\n",
            "unfollow_button": "{{%TRANSLATION-HINT mode=actions}}\n<div class=\"button js-action-unfollow js-button unfollow-button\" data-user-id=\"{{id}}\" {{{account_impression_id}}}>\n  <span class=\"you-follow\" />\n  <em class=\"wrapper\">\n    <b class=\"unfollow\">Unfollow</b>\n    <b>Following</b>\n  </em>\n</div>",
            "unfollow_link": "<a href=\"#\" class=\"user-unfollow-link js-action-unfollow js-link unfollow-action\" data-user-id=\"{{id}}\">Unfollow</a>",
            "user": "<img src='{{profile_image_url}}' alt='{{name}}' class='thumb user-profile-link' data-user-id='{{id}}'/>\n<span class='user-name'>\n  <a class='user-profile-link' data-user-id='{{id}}' href='#' title='{{name}}'><strong>{{screen_name}}</strong></a>\n  <span class='full-name'>{{name}}</span>\n</span>\n",
            "user_actions": "<div class=\"user-actions btn-group {{follow_state}} {{#dismissable}}dismissable{{/dismissable}}\" data-user-id=\"{{id}}\"\n    data-screen-name=\"{{screen_name}}\" data-name=\"{{name}}\" data-protected=\"{{protected_string}}\">\n\n  {{#swapped_user_actions}}\n    {{^follow_button_only}}\n      {{>user_actions_dropdown}}\n    {{/follow_button_only}}\n\n    {{^menu_follow_actions}}\n      {{>user_actions_follow_button}}\n    {{/menu_follow_actions}}\n  {{/swapped_user_actions}}\n\n  {{^swapped_user_actions}}\n    {{^menu_follow_actions}}\n      {{>user_actions_follow_button}}\n    {{/menu_follow_actions}}\n\n    {{^follow_button_only}}\n      {{>user_actions_dropdown}}\n    {{/follow_button_only}}\n  {{/swapped_user_actions}}\n\n</div>\n",
            "user_actions_dropdown": "{{%TRANSLATION-HINT mode=actions}}\n{{#logged_in}}\n  <span class=\"user-dropdown js-link{{^user_dropdown_icon_only}} btn{{/user_dropdown_icon_only}}\">\n    <i class=\"account-arrow\"></i>\n    <i class=\"mark-as-spam-silhouette\"></i>\n    <i class=\"mark-as-spam-flag\"></i>\n    <small class=\"mark-as-spam-text\">Spam?</small>\n    <ul class=\"dropdown-menu\">\n      <li class=\"dropdown-caret\">\n        <span class=\"caret-outer\"></span>\n        <span class=\"caret-inner\"></span>\n      </li>\n      {{#menu_follow_actions}}\n        <li class=\"unfollow-text pretty-link dropdown-link\">Unfollow <s>@</s>{{screen_name}}</li>\n        <li class=\"cancel-text pretty-link dropdown-link\">Cancel Follow Request</li>\n        <li class=\"dropdown-divider pending is-following\">\n      {{/menu_follow_actions}}\n      <li class=\"mention-text pretty-link dropdown-link not-blocked\">Tweet to <s>@</s>{{screen_name}}</li>\n      {{#include_direct_message_dialog}}<li class=\"dm-text dropdown-link\">Send a Direct Message</li>{{/include_direct_message_dialog}}\n      <li class=\"list-text pretty-link dropdown-link not-blocked\">Add or remove from lists…</li>\n      <li class=\"dropdown-divider not-blocked\"></li>\n      <li class=\"block-text pretty-link dropdown-link not-blocked\">Block <s>@</s>{{screen_name}}</li>\n      <li class=\"unblock-text pretty-link dropdown-link\">Unblock <s>@</s>{{screen_name}}</li>\n      <li class=\"report-spam-text pretty-link dropdown-link\">Report <s>@</s>{{screen_name}} for spam</li>\n      <li class=\"hide-suggestion-text dropdown-link\">Hide this suggestion</li>\n      <li class=\"dropdown-divider is-following\"></li>\n      <li class=\"retweet-on-text dropdown-link\">Turn on Retweets</li>\n      <li class=\"retweet-off-text dropdown-link\">Turn off Retweets</li>\n      <li class=\"device-notifications-on-text dropdown-link\">Turn on mobile notifications</li>\n      <li class=\"device-notifications-off-text dropdown-link\">Turn off mobile notifications</li>\n      {{#spam_threat}}\n        <li class=\"dropdown-divider not-spam-divider\"></li>\n        <li class=\"not-spam-text pretty-link dropdown-link\"><s>@</s>{{screen_name}} is not spam</li>\n      {{/spam_threat}}\n      {{#menu_follow_actions}}\n        <li class=\"follow-text pretty-link dropdown-link\">Follow <s>@</s>{{screen_name}}</li>\n      {{/menu_follow_actions}}\n    </ul>\n  </span>\n{{/logged_in}}\n",
            "user_actions_follow_button": "{{%TRANSLATION-HINT mode=actions}}\n<button class=\"js-follow-btn follow-button btn\" type=\"button\">\n  <span class=\"button-text follow-text\"><i class=\"follow\"></i> Follow</span>\n  <span class=\"button-text following-text\">Following</span>\n  <span class=\"button-text unfollow-text\">Unfollow</span>\n  <span class=\"button-text blocked-text\">Blocked</span>\n  <span class=\"button-text unblock-text\">Unblock</span>\n  <span class=\"button-text pending-text\">Pending</span>\n  <span class=\"button-text cancel-text\">Cancel</span>\n</button>",
            "user_admin_tools": "\n{{#become_users}}\n  <li class=\"user-admin-tools\"><form class=\"dropdown-link-form become-user-form\" action=\"{{become_user_path}}\" method=\"POST\"><a class=\"become-user-button\" href=\"#\">Become @{{screen_name}}</a></form></li>\n{{/become_users}}\n\n{{#can_investigate}}\n  <li class=\"user-admin-tools\"><a href=\"{{admin_find_path}}\" title=\"Investigate!\" target=\"_blank\">Investigate @{{screen_name}}</a></li>\n{{/can_investigate}}",
            "user_avatar_link_24": "<a class=\"js-profile-popup-actionable js-user-tipsy\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\" original-title=\"{{name}}\" title=\"{{name}}\">\n  <img class=\"avatar size24 js-user-profile-link js-tooltip\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" title=\"{{name}}\">\n</a>",
            "user_detailed_list": "{{#items}}\n  {{>user_detailed_list_item}}\n{{/items}}",
            "user_detailed_list_item": "<li class=\"user-detailed-list-item js-actionable-user\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  <a href=\"{{profile_path}}\" data-user-id=\"{{id}}\" class=\"user-profile-link user-thumb\"><img src='{{profile_image_url}}' alt=\"{{screen_name}}\" /></a>\n  <div class=\"user-details {{lang}}\">\n    <div class=\"user-name-info\">\n      <a class=\"js-recommend-link user-profile-link user-screen-name\" data-user-id=\"{{id}}\" href='{{profile_path}}'>{{screen_name}}</a>\n      <span class=\"user-full-name-and-action\">\n        <span class=\"user-full-name\">{{name}}</span>\n        {{#verified}}\n          <span class=\"verified-icon-small\" title=\"Verified Account\"></span>\n        {{/verified}}\n        {{#protected}}\n          <img src=\"/phoenix/img/protected_small.gif\" />\n        {{/protected}}\n        {{>user_item_action}}\n      </span>\n    </div>\n    {{#location}}\n      <div class=\"location\">\n        Location: <span class=\"location\">{{location}}</span>\n      </div>\n    {{/location}}\n    {{#linkified_description}}\n      <div class=\"bio\">\n        <span class=\"bio\">{{{linkified_description}}}</span>\n      </div>\n    {{/linkified_description}}\n  </div>\n</li>\n",
            "user_dropdown": "<ul class=\"user-dropdown\">\n  {{#twitter_ads_link_url}}\n    <li><a href=\"{{twitter_ads_link_url}}\" target=\"{{twitter_ads_link_target}}\">{{twitter_ads_link_title}}</a></li>\n  {{/twitter_ads_link_url}}\n\n  {{#is_translator}}\n     <li><a href=\"{{translation_tool_path}}\">Translate</a></li>\n  {{/is_translator}}\n\n  {{#contributor_account_info}}\n    {{^is_contributing}}\n      <li><a href=\"{{settings_path}}\">Settings</a></li>\n    {{/is_contributing}}\n\n    {{#is_contributing}}\n      <li><span class=\"settings-disabled\" title=\"Settings disabled while contributing.\">Settings</span></li>\n    {{/is_contributing}}\n\n    <li><a href=\"{{support_path}}\">Help</a></li>\n\n    {{#can_access_oldtwitter}}\n    {{^is_contributing}}\n      <li>\n        <form method=\"post\" action=\"{{turn_phx_off_path}}\" class=\"turn-phx-off-form\">\n          <input type=\"hidden\" name=\"setting\" value=\"false\">\n          <input type=\"hidden\" name=\"format\" value=\"html\">\n          <input type='hidden' value='' name='authenticity_token' class='authenticity_token'>\n          <button type=\"submit\" class=\"turn-phx-off-button\">Switch to Old Twitter</button>\n        </form>\n      </li>\n    {{/is_contributing}}\n    {{/can_access_oldtwitter}}\n\n    <li>\n      <form id=\"signout-form\" action=\"{{logout_action_path}}\" method=\"POST\">\n        <a class=\"signout-button js-signout-button\" href=\"#\">Sign out</a>\n        <input type='hidden' value='' name='authenticity_token' class='authenticity_token' />\n        <input type='hidden' name='reliability_event' class='js-reliability-event'>\n        <input type='hidden' name='scribe_log' />\n      </form>\n    </li>\n\n    {{#is_admin}}\n      <li><span>Admin Tools</span></li>\n      <li class=\"admin-panel-link\"><a href=\"{{admin_home_path}}\" title=\"Admin panel\">Admin panel</a></li>\n    {{/is_admin}}\n\n    {{#can_contribute}}\n      <li><span>Switch Account</span></li>\n      {{#is_contributing}}\n        {{#real_identity}}\n          <li class=\"contributor-account-link\" data-profile-image-url=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\">\n            <a href=\"/account_switch/destroy\">\n              <img width=\"20\" height=\"20\" />{{screen_name}}\n            </a>\n          </li>\n        {{/real_identity}}\n      {{/is_contributing}}\n      {{#contributable_accounts}}\n        <li class=\"contributor-account-link\" data-profile-image-url=\"{{#is_ssl}}{{profile_image_url_https}}{{/is_ssl}}{{^is_ssl}}{{profile_image_url}}{{/is_ssl}}\">\n          <a href=\"/account_switch/create/{{id}}\">\n            <img width=\"20\" height=\"20\" />{{screen_name}}\n          </a>\n        </li>\n      {{/contributable_accounts}}\n    {{/can_contribute}}\n  {{/contributor_account_info}}\n</ul>\n",
            "user_dropdown_item": "<li class=\"{{className}} profactions\">\n  {{#checkbox}}\n    <input id=\"{{id}}\" type=\"checkbox\" style=\"float:left\" {{#isChecked}}checked{{/isChecked}}/>\n  {{/checkbox}}\n  {{#icon}}\n    <span class=\"list {{icon}}\"></span>\n  {{/icon}}\n  <b class=\"item-name\">{{{label}}}</b>\n</li>\n",
            "user_full_name": "<span class=\"user\" data-user-id='{{id}}'>{{name}}</span>",
            "user_image_128": "\n<img height=\"128\" width=\"128\" src=\"{{reasonably_small_profile_image_url}}\" alt=\"{{name}}\" class=\"avatar size128 js-action-profile-avatar\" data-user-id=\"{{id}}\">\n",
            "user_image_16": "<img height=\"16\" width=\"16\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" title=\"{{screen_name}}\" class=\"avatar size16 user-profile-link\" data-user-id=\"{{id}}\">",
            "user_image_24": "<img height=\"24\" width=\"24\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" title=\"{{screen_name}}\" class=\"avatar size24\" data-user-id=\"{{id}}\">\n",
            "user_image_32": "<img height=\"32\" width=\"32\" src=\"{{profile_image_url}}\" alt=\"{{name}}\" title=\"{{screen_name}}\" class=\"avatar size32\" data-user-id=\"{{id}}\">\n",
            "user_item_action": "{{#swift}}\n  <span class=\"user-actions {{follow_state}}\" data-user-id=\"{{id}}\" {{#protected}}data-protected=\"true\"{{/protected}}>\n    <a href=\"#\" class=\"follow-link\">\n      <span class=\"link-text follow-text\">Follow</span>\n      <span class=\"link-text unfollow-text\">Unfollow</span>\n      <span class=\"link-text cancel-text\">Cancel</span>\n    </a>\n  </span>\n{{/swift}}\n{{^swift}}\n  <span class=\"js-follow-state follow-state\">\n    {{^following}}\n      {{^is_current_user}}\n        <a href=\"#\" class=\"js-action-follow js-link\" data-user-id=\"{{id}}\">Follow</a>\n      {{/is_current_user}}\n      {{#is_current_user}}\n        <a href=\"{{settings_profile_path}}\" class=\"js-thats-you js-link\" data-user-id=\"{{id}}\">Edit profile</a>\n      {{/is_current_user}}\n    {{/following}}\n    {{#following}}<span>Following</span>{{/following}}\n  </span>\n{{/swift}}\n",
            "user_large_list": "{{#items}}\n  {{>big_avatar_list_item}}\n{{/items}}\n",
            "user_media_not_displayed": "<li class=\"user-media-not-displayed facets-media-not-displayed list-link\">\n <div>\n   <a class=\"header\">Recent images</a>\n   <p class=\"not-displayed-text metadata\">{{{reason}}}</p>\n   <a class=\"btn small display-this-media\">\n     Display media\n   </a> ·\n   {{#logged_in}}\n   <a href=\"#\" class=\"always-display-media\">Always display media</a>\n   {{/logged_in}}\n </div>\n</li>\n",
            "user_not_found_error_message": "{{#dm_recipient}}\n  The user @{{dm_recipient}} does not exist.\n{{/dm_recipient}}\n{{^dm_recipient}}\n  This user does not exist.\n{{/dm_recipient}}\n",
            "user_recommendations_dropdown": "<div class=\"js-user-dropdown user-rec-dropdown profile-actions\">\n  <a href=\"#\" class=\"js-user-dropdown-dismiss dismiss\">×</a>\n  <h2>\n    You might also want to follow:\n  </h2>\n  <ul class=\"recommended-followers user-rec-component\">\n    {{#recommended_followers}}\n      {{>user_small_list}}\n    {{/recommended_followers}}\n  </ul>\n</div>",
            "user_similarities_dashboard_list": "\n<div class=\"stream\">\n  <div class=\"js-users-list stream-items \">\n    {{#rendering_on_server}}\n      {{#items}}\n        <div class=\"stream-item\">\n          {{>stream_user}}\n        </div>\n      {{/items}}\n    {{/rendering_on_server}}\n  </div>\n</div>\n",
            "user_similarities_list": "\n<div class=\"content-main user-similarities-list breakable\">\n  <div class=\"content-header\">\n    <div class=\"header-inner\">\n      <small class=\"pull-right\"><a href=\"#\" class=\"js-close\">Close</a></small>\n      <h2>\n        You might also want to follow:\n      </h2>\n    </div>\n  </div>\n\n  <div class=\"stream\">\n    <div class=\"js-users-list stream-items\">\n      {{#rendering_on_server}}\n        {{#items}}\n          <div class=\"stream-item{{#last_item}} stream-end-item{{/last_item}}\">\n            {{>stream_user}}\n          </div>\n        {{/items}}\n      {{/rendering_on_server}}\n    </div>\n  </div>\n</div>\n",
            "user_small_list": "{{#items}}\n  {{>user_small_list_item}}\n{{/items}}\n",
            "user_small_list_item": "{{#is_withheld}}\n  {{>user_small_list_item_withheld}}\n{{/is_withheld}}\n{{^is_withheld}}\n<div class=\"js-account-summary account-summary js-actionable-user{{#promoted_content}} promoted-account js-profile-popup-actionable{{/promoted_content}}{{#small_avatar}} account-summary-small{{/small_avatar}}{{#protected}} js-protected{{/protected}}\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}} {{#impression_cookie}}data-impression-cookie=\"{{impression_cookie}}\"{{/impression_cookie}}>\n  {{#dismissable}}\n  <div class=\"dismiss js-action-dismiss\"><i class=\"close\"></i></div>\n  {{/dismissable}}\n  <div class=\"content\">\n    <a class=\"account-group js-recommend-link js-user-profile-link user-thumb\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n      \n      <img class=\"avatar js-action-profile-avatar {{#small_avatar}}size32{{/small_avatar}}\" src=\"{{profile_image_url}}\" alt=\"{{name}}\">\n      <span class=\"account-group-inner js-action-profile-name\" data-user-id=\"{{id}}\">\n        <b class=\"fullname\">{{name}}</b>\n        <span>‏</span>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        <span class=\"username\"><s>@</s><span class=\"js-username\">{{screen_name}}</span></span>\n      </span>\n    </a>\n\n    <small class=\"metadata social-context\">\n      {{#rendering_on_server}}\n        {{#first_connection}}\n          \n            {{#connections_count_one}}\n              Followed by <a class='pretty-link user-profile-link js-user-profile-link' data-user-id='{{id}}' href='{{profile_path}}' title='{{name}}'>{{name}}</a>\n            {{/connections_count_one}}\n            {{#connections_count_other}}\n              Followed by <a class='pretty-link user-profile-link js-user-profile-link' data-user-id='{{id}}' href='{{profile_path}}' title='{{name}}'>{{name}}</a> and <a href=\"{{followers_you_follow_path}}\" class=\"pretty-link\"><b>others</b></a>\n            {{/connections_count_other}}\n          \n        {{/first_connection}}\n      {{/rendering_on_server}}\n      {{^rendering_on_server}}\n        {{{socialcontext}}}\n      {{/rendering_on_server}}\n    </small>\n\n    {{#is_sponsored}}\n      <small class=\"metadata with-icn js-disclosure js-tooltip\" title=\"{{#promoted_content}}{{disclosure_text}}{{/promoted_content}}\">\n        <a href=\"{{profile_path}}\" class=\"js-promoted-badge js-user-profile-link\">\n          <i class=\"{{promoted_badge_class}}\"></i>Promoted\n        </a>\n      </small> ·\n    {{/is_sponsored}}\n    {{>user_item_action}}\n  </div>\n</div>\n\n{{/is_withheld}}\n",
            "user_small_list_item_sponsored": "  <a class=\"icon-link tweet-context promoted-arrow js-promoted-badge js-user-profile-link {{#socialcontext}}socialcontext{{/socialcontext}}\" href=\"{{profile_path}}\" title=\"{{#promoted_content}}{{disclosure_text}}{{/promoted_content}}\">\n    {{>promoted_icon}}\n  </a>\n  {{#socialcontext}}\n     ·\n    {{{socialcontext}}}\n  {{/socialcontext}}\n",
            "user_small_list_item_withheld": "<div class=\"js-account-summary account-summary js-actionable-user{{#promoted_content}} promoted-account js-profile-popup-actionable{{/promoted_content}}{{#small_avatar}} account-summary-small{{/small_avatar}}{{#protected}} js-protected{{/protected}}\" data-user-id=\"{{id}}\" {{{feedback_token}}} {{{account_impression_id}}}>\n  {{#dismissable}}\n  <div class=\"dismiss js-action-dismiss\"><i class=\"close\"></i></div>\n  {{/dismissable}}\n  <div class=\"content\">\n    <a class=\"account-group js-recommend-link js-user-profile-link user-thumb\" href=\"{{profile_path}}\" data-user-id=\"{{id}}\">\n      \n      <span class=\"account-group-inner js-action-profile-name\" data-user-id=\"{{id}}\">\n        <b class=\"fullname\">{{name}}</b>\n        {{#verified}}<i class=\"verified\"></i>{{/verified}}\n        <s>@</s>{{screen_name}}\n      </span>\n    </a>\n\n    <small class=\"metadata social-context\">{{{socialcontext}}}</small>\n\n    {{#is_sponsored}}\n      <small class=\"metadata with-icn js-disclosure js-tooltip\" title=\"{{#promoted_content}}{{disclosure_text}}{{/promoted_content}}\">\n        <a href=\"{{profile_path}}\" class=\"js-promoted-badge js-user-profile-link\">\n          <i class=\"{{promoted_badge_class}}\"></i>Promoted\n        </a>\n      </small> ·\n    {{/is_sponsored}}\n    {{>user_item_action}}\n  </div>\n</div>\n",
            "user_static_list": "{{#items}}\n  {{>user_static_list_item}}\n{{/items}}",
            "user_static_list_item": "<a class=\"user-static-list-item\" href=\"#\" data-user-id=\"{{id}}\">\n  <span class=\"user-thumb\">\n    <img class=\"avatar size64 js-user-tipsy\" src=\"{{bigger_profile_image_url}}\" alt=\"{{name}}\" original-title=\"{{name}}\">\n  </span>\n</a>\n",
            "user_stats": "<ul class='user-stats clearfix'>\n    {{#can_view}}\n      <li><a class='user-stats-count user-stats-tweets' href=\"{{profile_path}}\">{{statuses_count_commaized}}<span class='user-stats-stat'>Tweets</span></a></li>\n    {{/can_view}}\n    <li><a class='user-stats-count user-stats-following' href=\"{{user_following_path}}\">{{friends_count_commaized}}<span class='user-stats-stat'>Following</span></a></li>\n    <li><a class='user-stats-count user-stats-followers' href=\"{{user_followers_path}}\">{{followers_count_commaized}}<span class='user-stats-stat'>Followers</span></a></li>\n    <li><a class='user-stats-count user-stats-listed' href=\"{{user_memberships_path}}\">{{listed_count_commaized}}<span class='user-stats-stat'>Listed</span></a></li>\n</ul>\n",
            "user_thumb_list": "<ul class='inline-list'>\n  {{#items}}\n    {{>user_thumb_list_item}}\n  {{/items}}\n</ul>\n",
            "user_thumb_list_item": "<li class=\"user-thumb-list-member {{#is_hidden}}hidden{{/is_hidden}}\">\n  <a href=\"{{profile_path}}\" class=\"user-profile-link\" data-user-id=\"{{id}}\"><img src=\"{{mini_profile_image_url}}\" height=\"24\" width=\"24\" title=\"{{screen_name}}\" /></a>\n</li>\n",
            "verify_email_banner": "<div class=\"module module-banner\">\n  <div class=\"flex-module\">\n    {{#pending_new}}\n      <div class=\"first-banner-row\">\n        <span class=\"title\">Confirm your email address to access all of Twitter's features.</span>\n        <span>A confirmation message was sent to <strong>{{pending_email}}</strong>.</span>\n      </div>\n      <div class=\"second-banner-row\">\n        <a class=\"btn resend-confirmation-email-link\" href=\"#\">Resend confirmation</a>\n        <a href=\"{{change_email_path}}\">Update email address</a> ·\n        <a href=\"{{email_help_path}}\">Learn more</a>\n      </div>\n    {{/pending_new}}\n    {{#pending_changed}}\n      <div class=\"first-banner-row\">\n        <span class=\"title\">You still need to confirm your email change.</span>\n        <span>A confirmation email was sent to <strong>{{pending_email}}</strong>. Your email will not be changed until you complete this step!</span>\n      </div>\n      <div class=\"second-banner-row\">\n        <a class=\"btn resend-confirmation-email-link\" href=\"#\">Resend confirmation</a>\n        <a href=\"{{change_email_path}}\">Cancel or update this email address</a>\n      </div>\n    {{/pending_changed}}\n    {{#pending_bouncing}}\n      <div class=\"first-banner-row\">\n        <span class=\"title\">Whoops, we haven't been able to send email to your new address!</span>\n        <span>We've tried sending confirmation emails to <strong>{{pending_email}}</strong> but they are not getting delivered.</span>\n      </div>\n      <div class=\"second-banner-row\">\n        You can <a href=\"{{change_email_path}}\">change to a different address</a> or we can <a href=\"#\" class=\"resend-confirmation-email-link\">try again</a>.\n      </div>\n    {{/pending_bouncing}}\n  </div>\n</div>\n",
            "verify_email_dialog": "<div {{#container_id}}id=\"{{container_id}}\" {{/container_id}}class=\"twttr-dialog-container\" style=\"visibility: hidden;\">\n  <div class=\"twttr-dialog\" style=\"top: 142px\">\n    <div class=\"twttr-dialog-inside\">\n      <div class=\"twttr-dialog-body clearfix\">\n        <div class=\"twttr-dialog-content twttr-dialog-verify-email\">\n          {{#abtest_email_verification_18_modal_dialog}}\n            <h2 class=\"verify-email\">Please verify your email address</h2>\n          {{/abtest_email_verification_18_modal_dialog}}\n          {{#abtest_email_verification_18_overlay}}\n            <h2 class=\"verify-email\">Almost there!</h2>\n          {{/abtest_email_verification_18_overlay}}\n          <p class=\"verify-email-text\">\n            Twitter has sent an email to <strong>{{email}}</strong> to verify your email address. You must <strong>click the link in the email</strong> in order to verify your address and finish signing up on Twitter.\n          </p>\n          <p>\n            If you do not receive this message in the next hour, you can <a href=\"#\" class=\"send-verify-email\">request another verification email</a> or <a href=\"{{change_email_path}}\" class=\"change-email\">change your email address</a>.\n          </p>\n          <div class=\"button ok-thanks\"><strong>OK, thanks!</strong></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
            "answer1": "Live-tweeting a relevant event can increase your daily follower rate by 260%.\n",
            "answer2": "Your audience loves to interact with you. Invite questions for a Twitter Q&A to increase your followers and engagement!\n",
            "answer3": "Your followers will love your photos. Take pictures and share them via Twitter to help boost your engagement.\n",
            "blackberry": "<ul class=\"page-canvas verification-list {{#is_mobile}}mobile{{/is_mobile}}\">\n  <li class=\"verification-item active\" data-step=\"0\">\n  <div class=\"callout\">\n    <div class=\"vit-onboarding-section-header\">\n      <h2 class=\"step-title\">\n        <span class=\"welcome\">\n          Sorry, this page is not yet supported on your device.  Please open the link on a different mobile device or desktop web browser.\n        </span>\n      </h2>\n    </div>\n  </div>\n  </li>\n</ul>\n",
            "callout": "<div class=\"callout\">\n  <div class=\"vit-onboarding-section-header\">\n    <h2 class=\"step-title\">\n      <span class=\"{{^is_badged}}vit-step-not-verified{{/is_badged}}{{#is_badged}}vit-step-verified{{/is_badged}}\">0</span>\n      {{#user_view}}\n        {{^is_badged}}\n          Hi {{name}}! You are three quick steps away from earning your verified badge.\n        {{/is_badged}}\n        {{#is_badged}}\n          Hi {{name}}. Now that your account is verified, check out these tips:\n        {{/is_badged}}\n      {{/user_view}}\n      <span class=\"help\">\n        Let us know if you need <a href=\"{{{vit_help_link}}}\">help</a>.\n      </span>\n    </h2>\n  </div>\n  <span class=\"{{^is_badged}}vit-step-not-verified{{/is_badged}}{{#is_badged}}vit-step-verified{{/is_badged}}\">0</span>\n  <div class=\"vit-onboarding-section-content movable\">\n    <p>Twitter's verified badge is our way of making sure that this is you.\n    <span class=\"verification-reason\">\n      Verified badges appear on your profile and here is why you may want one:\n    </span>\n    </p>\n    <ul class=\"vit-onboarding-benefits-list clearfix\">\n      <li>\n      <h2 class=\"benefits-heading\">Verified accounts appear on top of search results</h2>\n      <p>Make sure when people search for you, they find you.</p>\n      </li>\n      <li>\n      <h2 class=\"benefits-heading\">Verified accounts are exclusive</h2>\n      <p>Only a select few people get the badge.</p>\n      </li>\n      <li>\n      <h2 class=\"benefits-heading\">Your followers know to follow the right you</h2>\n      <p>Don't let fake accounts take away from your message.</p>\n      </li>\n    </ul>\n  </div>\n</div>\n<div class=\"vit-onboarding-section-footer movable\">\n  <button class=\"btn primary-btn next start next-step\" type=\"submit\">Get started</button>\n</div>\n",
            "learn_step": "<div class=\"vit-onboarding-section-header\">\n  <h2 class=\"step-title\">\n    <span class=\"vit-step-number\" id=\"step-1\">1</span>\n    Learn how to tweet effectively\n  </h2>\n</div>\n<div id=\"learn-step\" class=\"vit-onboarding-section-content movable\">\n  <ul class=\"questions {{#is_badged}}step1-landing{{/is_badged}}\">\n    <li class=\"question current\" id=\"1\">\n      <p class=\"question-text\">Which Tweet will help double your rate of new followers for the day?</p>\n      <form name=\"question-1\" class=\"vit-onboarding-answer-options\">\n        <label class=\"vit-onboarding-sample-tweet option1\" for=\"ques1-opt1\">\n          <input type=\"radio\" name=\"answers\" value=\"option-1\" id=\"ques1-opt1\">\n          {{>vit/vit_example_1}}\n          <p class=\"tweet-text\">Watching the <a href=\"\" onclick=\"return false;\">#Oscars</a> right now and I’m loving the fashion on the red carpet.</p>\n        </label>\n        <div class=\"vit-onboarding-answer\" id=\"answer-1\">\n          <p class=\"answer-text\">{{>vit/answer1}}</p>\n        </div>\n        <label class=\"vit-onboarding-sample-tweet option2\" for=\"ques1-opt2\">\n          <input type=\"radio\" name=\"answers\" value=\"option-2\" id=\"ques1-opt2\">\n          {{>vit/vit_example_2}}\n          <p class=\"tweet-text\">I watched the <a href=\"\" onclick=\"return false;\">#Oscars</a> last night.</p>\n        </label>\n      </form>\n      <div class=\"vit-onboarding-answer\" id=\"answer-1\">\n        <p class=\"answer-text\">{{>vit/answer1}}</p>\n      </div>\n    </li>\n\n    <li class=\"question\" id=\"2\">\n      <p class=\"question-text\">Which Tweet will more of your followers engage with?</p>\n      <form name=\"question-2\" class=\"vit-onboarding-answer-options\">\n        <label class=\"vit-onboarding-sample-tweet option1\" for=\"ques2-opt1\">\n          <input type=\"radio\" name=\"answers\" value=\"option-1\" id=\"ques2-opt1\">\n          {{>vit/vit_example_1}}\n          <p class=\"tweet-text\">Hi everybody, I have a few spare minutes to answer some questions. Who has one? <a href=\"\" onclick=\"return false;\">{{vit_example_hashtag}}</a></p>\n        </label>\n        <div class=\"vit-onboarding-answer\" id=\"answer-2\">\n          <p class=\"answer-text\">{{>vit/answer2}}</p>\n        </div>\n        <label class=\"vit-onboarding-sample-tweet option2\" for=\"ques2-opt2\">\n          <input type=\"radio\" name=\"answers\" value=\"option-2\" id=\"ques2-opt2\">\n          {{>vit/vit_example_2}}\n          <p class=\"tweet-text\">I want to hear from you. What do you have to say?</p>\n        </label>\n      </form>\n      <div class=\"vit-onboarding-answer\" id=\"answer-2\">\n        <p class=\"answer-text\">{{>vit/answer2}}</p>\n      </div>\n    </li>\n\n    <li class=\"question last\" id=\"3\">\n      <p class=\"question-text\">Which Tweet will get more clicks, favorites and retweets from your followers?</p>\n      <form name=\"question-1\" class=\"vit-onboarding-answer-options\">\n        <label class=\"vit-onboarding-sample-tweet option1\" for=\"ques3-opt1\">\n          <input type=\"radio\" name=\"answers\" value=\"option-1\" id=\"ques3-opt1\">\n          {{>vit/vit_example_1}}\n          <p class=\"tweet-text\">I’m backstage at the Grammys. See? It’s <a href=\"\" onclick=\"return false;\">@taylorswift13</a>: <a href=\"\" onclick=\"return false;\">pic.twitter.com/...</a></p>\n        </label>\n        <div class=\"vit-onboarding-answer\" id=\"answer-3\">\n          <p class=\"answer-text\">{{>vit/answer3}}</p>\n        </div>\n        <label class=\"vit-onboarding-sample-tweet option2\" for=\"ques3-opt2\">\n          <input type=\"radio\" name=\"answers\" value=\"option-2\" id=\"ques3-opt2\">\n          {{>vit/vit_example_2}}\n          <p class=\"tweet-text\">Backstage at the Grammys, standing next to Taylor Swift.</p>\n        </label>\n      </form>\n      <div class=\"vit-onboarding-answer\" id=\"answer-3\">\n        <p class=\"answer-text\">{{>vit/answer3}}</p>\n      </div>\n    </li>\n  </ul>\n</div>\n<div class=\"vit-onboarding-section-footer movable\">\n  <button class=\"btn answer\" type=\"submit\">See answer</button>\n  <button class=\"btn cancel skip\" type=\"cancel\">Skip</button>\n  <button class=\"btn next hidden next-step\" type=\"submit\">\n    <span class=\"next-step\">Next step</span>\n    <span class=\"continue\">Continue</span>\n  </button>\n</div>\n",
            "onboarding": "<div id=\"vit-onboarding\">\n  {{#is_blackberry}}\n    {{>vit/blackberry}}\n  {{/is_blackberry}}\n  {{^is_blackberry}}\n  <ul class=\"page-canvas verification-list {{#is_mobile}}mobile{{/is_mobile}}\">\n\n    <li class=\"verification-item {{^is_badged}}active{{/is_badged}}{{#is_badged}}visited{{/is_badged}}\" data-step=\"0\">\n    {{>vit/callout}}\n    </li>\n\n    <li class=\"verification-item {{#is_badged}}active visited{{/is_badged}}\" data-step=\"1\">\n    {{>vit/learn_step}}\n    </li>\n\n    <li class=\"verification-item {{#is_badged}}visited{{/is_badged}}\" data-step=\"2\">\n    {{>vit/vits_to_follow}}\n    </li>\n\n    <li class=\"verification-item last-verification-item {{#is_badged}}visited{{/is_badged}}\" data-step=\"3\">\n    {{>vit/phone_verification_step}}\n    </li>\n\n  </ul>\n  {{/is_blackberry}}\n</div>\n",
            "phone_verification_step": "<div class=\"vit-onboarding-section-header\">\n  <h2 class=\"step-title\">\n    <span class=\"vit-step-number\" id=\"step-3\">3</span>\n    Protect your account\n  </h2>\n</div>\n<div class=\"vit-onboarding-section-content movable\">\n  <p class=\"phone-merit\">Phone numbers allow us to contact you in case there is security issue with your account:</p>\n  <form id=\"phone-verify-form\" method=\"post\" action=\"/vit_onboard/verification_done\">\n    <input type=\"hidden\" value=\"{{form_authenticity_token}}\" name=\"authenticity_token\"/>\n    <div class=\"vit-onboarding-control-group\">\n      {{#phone_device}}\n      <input type=\"hidden\" name=\"device[id]\" value=\"{{id}}\">\n      {{/phone_device}}\n      <div class=\"phone-number-field\">\n      <label class=\"phone-label\"><strong>Phone</strong></label>\n      <input class=\"input-large vit-onboarding-tel-input\" type=\"tel\" value=\"{{#phone_device}}{{address}}{{/phone_device}}\" name=\"device[address]\" id=\"device_address\" placeholder=\"Phone number\">\n      <label class=\"control-label muted\">Including country code</label>\n      </div>\n      <p class=\"muted privacy-terms\">We will never distribute your personal information, nor use it for any other reason than to contact you in case of a security breach.</p>\n    </div>\n  </form>\n</div>\n<div class=\"vit-onboarding-section-footer movable\">\n  <button id=\"save-phone-number\" class=\"btn primary-btn\" type=\"submit\">Save phone number to profile</button>\n</div>\n",
            "verification_done": "<div id=\"vit-onboarding\" class=\"verification-done\">\n  <ul class=\"page-canvas verification-list\">\n    <li class=\"verification-item active last-verification-item\">\n    {{#user_view}}\n      <div class=\"vit-onboarding-section-header\">\n        <h2 class=\"step-title\">\n          <span class=\"vit-step-verified\">✓</span>\n          Congratulations, {{name}}! Your Twitter account is now verified.\n        </h2>\n      </div>\n      <div class=\"vit-onboarding-section-content\">\n        {{>profiles/swift_profile_header}}\n        <div class=\"email-disclaimer\">\n        With your newly verified account, you will receive weekly activity reports with information about the number of people following you, and simple tips about how to increase that number. Stop getting the report by choosing \"unsubscribe\" in the email footer, or uncheck the box in your email notification settings in your profile settings.\n        </div>\n      </div>\n      <div class=\"vit-onboarding-section-footer\">\n        {{^is_mobile}}\n          <a class=\"btn next primary-btn\" href=\"{{profile_path}}\">\n            View your Twitter profile page\n          </a>\n        {{/is_mobile}}\n        {{#is_mobile}}\n          <h2 class=\"mobile-app-download-description muted\">Simplify your mobile experience.</h2>\n          <a class=\"btn next primary-btn\" href=\"/download\">\n            Download the Twitter app\n          </a>\n        {{/is_mobile}}\n      </div>\n    {{/user_view}}\n    </li>\n  </ul>\n</div>\n",
            "vit_example_1": "<div class=\"tweet-header\">\n  <div class=\"avatar\"></div>\n  {{#vit_example_1}}\n    <strong class=\"fullname\">{{fullname}}</strong>\n    <span class=\"username\"><s>@</s><b>{{username}}</b></span>\n  {{/vit_example_1}}\n</div>\n",
            "vit_example_2": "<div class=\"tweet-header\">\n  <div class=\"avatar\"></div>\n  {{#vit_example_2}}\n    <strong class=\"fullname\">{{fullname}}</strong>\n    <span class=\"username\"><s>@</s><b>{{username}}</b></span>\n  {{/vit_example_2}}\n</div>\n",
            "vits_to_follow": "<div class=\"vit-onboarding-section-header\">\n  <h2 class=\"step-title\">\n    <span class=\"vit-step-number\" id=\"step-2\">2</span>\n    Connect with other interesting Twitter users\n  </h2>\n</div>\n<div class=\"vit-onboarding-section-content movable\">\n  <p class=\"follow-merit\">Increase your trustworthiness by following other verified users:<p>\n  <ul class=\"vit-onboarding-stream-item-list stream-items\">\n    {{#vits_to_follow}}\n    <li class=\"vit-onboarding-stream-item stream-item\">\n    {{>stream_user}}\n    </li>\n    {{/vits_to_follow}}\n  </ul>\n</div>\n<div class=\"vit-onboarding-section-footer movable\">\n  <button class=\"btn primary-btn next\" type=\"submit\">Next step</button>\n</div>\n",
            "web_personalization_preview": "",
            "web_personalization_results": "{{#has_recs}}\n  <div class=\"flex-module web-personalization-inner js-results\">\n    <p>Here are some tailored suggestions. {{#logged_in}}In this preview, you may see some people you already follow.{{/logged_in}}</p>\n    <ul class=\"clearfix big-avatar-list\">\n      {{#items}}\n        {{>big_avatar_list_item}}\n      {{/items}}\n    </ul>\n  </div>\n{{/has_recs}}\n\n{{^has_recs}}\n  <div class=\"flex-module web-personalization-inner web-personalization-empty js-results\">\n    <p>If you don’t see any suggestions here yet, that’s okay. It may take a little time. Check back in a few days.</p>\n    <a href=\"{{home_path}}\" class=\"btn primary-btn\">\n      {{^abtest_timeline_copy_317_any_bucket}}\n        {{#logged_in}}Back to timeline{{/logged_in}}\n      {{/abtest_timeline_copy_317_any_bucket}}\n      {{#abtest_timeline_copy_317_stream}}\n        {{#logged_in}}Back to stream{{/logged_in}}\n      {{/abtest_timeline_copy_317_stream}}\n      {{^logged_in}}Twitter home{{/logged_in}}\n    </a>\n  </div>\n{{/has_recs}}",
            "web_personalization_settings": "<div class=\"module\">\n  <div class=\"flex-module web-personalization-header\">\n    {{^do_not_track}}\n\n      {{#logged_in}}\n        <h1>Tailor Twitter to your interests</h1>\n      {{/logged_in}}\n\n      {{^logged_in}}\n        <h1>Welcome to Twitter</h1>\n      {{/logged_in}}\n\n    {{/do_not_track}}\n\n    {{#do_not_track}}\n      <h1>Twitter cannot provide tailored suggestions</h1>\n    {{/do_not_track}}\n  </div>\n\n  {{^loading}}\n    {{^show_results}}\n      {{^do_not_track}}\n        <div class=\"flex-module web-personalization-inner\">\n\n          {{#logged_in}}\n            <p>People on Twitter are talking about things you care about. Now we’ve made it easier for you to find them. We’ve tailored our suggestions based on websites you’ve recently visited that have Twitter buttons or widgets.</p>\n          {{/logged_in}}\n\n          {{^logged_in}}\n            <p>Twitter connects people with the things they care about, and now we’ve made them even easier to find. Check out our suggestions for you based on websites you’ve recently visited that have Twitter buttons or widgets.</p>\n          {{/logged_in}}\n\n          <p>For example, if you visit sports websites, we might suggest teams and players that are popular and widely followed by other Twitter users that visit those sports websites.</p>\n          <p><a href=\"{{cookie_personalization_learn_more_path}}\">Learn more</a> about how this works and your additional privacy controls.</p>\n\n        </div>\n      {{/do_not_track}}\n\n      {{#do_not_track}}\n        <div class=\"flex-module web-personalization-inner\">\n          <p>\n            {{#in_eu}}Tailored suggestions are not currently available to you, and your visits to websites that have Twitter buttons or widgets are not collected to tailor your experience.{{/in_eu}}\n            {{^in_eu}}Your browser has Do Not Track turned on. While Do Not Track is on, Twitter cannot provide tailored suggestions.{{/in_eu}}\n          </p>\n          <p><a href=\"{{cookie_personalization_learn_more_path}}\">Learn more</a> about how this works and your additional privacy controls.</p>\n          <p>\n            <a href=\"{{home_path}}\" class=\"btn primary-btn\">\n              {{^abtest_timeline_copy_317_any_bucket}}\n                {{#logged_in}}Back to timeline{{/logged_in}}\n              {{/abtest_timeline_copy_317_any_bucket}}\n              {{#abtest_timeline_copy_317_stream}}\n                {{#logged_in}}Back to stream{{/logged_in}}\n              {{/abtest_timeline_copy_317_stream}}\n              {{^logged_in}}Twitter home{{/logged_in}}\n            </a>\n          </p>\n        </div>\n      {{/do_not_track}}\n\n      {{^do_not_track}}\n        <div class=\"flex-module web-personalization-footer\">\n          <p>\n            <button class=\"js-web-personalization-allow btn primary-btn\">OK</button>\n            <button class=\"js-web-personalization-disallow btn\">Turn off</button>\n          </p>\n          <p>If you don’t want tailored suggestions, you can turn off this feature. Then your visits to websites that have Twitter buttons or widgets will no longer be collected to tailor your experience.</p>\n        </div>\n      {{/do_not_track}}\n    {{/show_results}}\n\n    {{#show_results}}\n      {{^results_loading}}\n        {{#results}}\n          {{>web_personalization_results}}\n        {{/results}}\n      {{/results_loading}}\n      {{#results_loading}}\n        <div class=\"flex-module web-personalization-inner js-results\">\n          <p><span class=\"spinner\" title=\"Loading...\"></span></p>\n        </div>\n      {{/results_loading}}\n\n      <div class=\"flex-module web-personalization-footer\">\n        <p>\n          <button class=\"js-web-personalization-turnoff btn\">Turn off</button>\n        </p>\n        <p>If you don’t want tailored suggestions, you can turn off this feature. Then your visits to websites that have Twitter buttons or widgets will no longer be collected to tailor your experience. <a href=\"{{cookie_personalization_learn_more_path}}\">Learn more</a>.</p>\n      </div>\n    {{/show_results}}\n  {{/loading}}\n\n  {{#loading}}\n    <div class=\"flex-module web-personalization-inner\">\n      <p><span class=\"spinner\" title=\"Loading...\"></span></p>\n    </div>\n  {{/loading}}\n</div>\n\n{{^loading}}\n  {{#show_results}}\n    {{^logged_in}}\n      <div class=\"module\">\n        <div class=\"flex-module web-personalization-signup js-web-personalization-signup\">\n          <h2>Join Twitter today</h2>\n          {{>partial_signup_form}}\n        </div>\n      </div>\n    {{/logged_in}}\n  {{/show_results}}\n{{/loading}}\n",
            "welcome_ambassador": "<div class=\"user-details clearfix {{lang}}\">\n  <img src=\"{{reasonably_small_profile_image_url}}\" alt=\"{{name}}\" data-user-id=\"{{id}}\"/>\n  <h4>\n    You are now following <strong>{{name}}</strong>\n    {{#verified}}\n      <span class=\"verified-icon\"></span>\n    {{/verified}}\n  </h4>\n  <div>\n    <span class=\"user-screen-name\">@{{screen_name}}</span>\n    <span class=\"location\">{{location}}</span>\n  </div>\n</div>\n",
            "welcome_device_follow": "<div class=\"twttr-dialog-device-follow\">\n  <div>Follow these instructions to receive device notifications when your local lifeline account posts Tweets. It takes less than 2 minutes.</div>\n  <div>See <a href=\"https://support.twitter.com/articles/20169887\" target=\"_blank\">this</a> for Smartphones.</div>\n  <div>\n    <ol class=\"instructions\">\n      <li>From your device, email <strong>verify@twtr.jp</strong> or scan the QR code.<img class=\"qr-code\" src=\"/images/verify_at_twtrjp.png\" alt=\"twtrjp QR code\"></li>\n      <li>We’ll send you an email with a link to confirm your device.</li>\n      <li>Click on the link in the email and login.</li>\n    </ol>\n  </div>\n\n  <div>That’s it! You’ll begin to receive notifications on your phone when the lifeline accounts sends Tweets.</div>\n  <button type=\"button\" class=\"btn button device-follow-done-button\">Done</button>\n</div>\n",
            "welcome_learn_flow": "<div class=\"dashboard js-dashboard\">\n  <div class=\"module welcome-header-module js-flow-step\"></div>\n\n  <div class=\"module welcome-dashboard js-welcome-dashboard\">\n    <div class=\"js-welcome-stream-header\">\n      <div class=\"js-welcome-zipcode-search content-searchbar\" style=\"display: none;\">\n        <form class=\"js-zipcode-search\" action=\"/#!/welcome/lifeline/search\" method=\"GET\">\n        <input type=\"text\" value=\"\" name=\"q\" placeholder=\"Enter Your ZIP Code\">\n        <i class=\"input-search js-submit\" style=\"display:block\"></i>\n        <p class=\"search-note\">Your ZIP Code is used only for this search.</p>\n        </form>\n        <a class=\"follow-btn btn small js not-following follow-all-btn\">\n          <div class=\"js-action-follow-all-listed follow-text\">\n            <i class=\"follow\"></i>Follow all\n          </div>\n        </a>\n      </div>\n      <div class=\"js-welcome-search content-searchbar\" style=\"display: none;\">\n        <form class=\"js-who-to-follow-search\" action=\"{{welcome_search_form_path}}\" method=\"GET\">\n          <span class=\"input-search js-submit\"><i class=\"nav-search\"></i></span>\n          <input type=\"text\" value=\"\" name=\"q\" placeholder=\"Search for...\">\n        </form>\n      </div>\n      <div class=\"js-back-to-stream back-to-stream\">\n        <span class=\"js-button btn\">Back </span>\n\n        <h3 class=\"js-dashboard-stream-title dashboard-stream-title\"></h3>\n      </div>\n      <div class=\"js-stream-header dashboard-stream-header\"></div>\n    </div>\n    <div class=\"stream js-stream-manager-container stream-manager-container\"></div>\n    <div class=\"js-content-container\"></div>\n    <div class=\"js-back-to-import back-to-import\"><a href=\"{{welcome_import_path}}\">Try another service</a></div>\n    <div class=\"js-welcome-dashboard-footer welcome-dashboard-footer\">\n      <a class=\"js-skip-link skip-link\" href=\"{{welcome_recommendations_path}}\">Skip this step »</a>\n    </div>\n  </div>\n\n</div>\n<div class=\"content-main js-content-main breakable\">\n\n  <div class=\"content-header js-content-header\">\n    <div class=\"header-inner\">\n      <h2>\n        Preview\n      </h2>\n      <div class=\"example-tweet-info subheader\">\n        Examples of Tweets from people you choose to follow appear here. You’ll see your full timeline once you’re all set up.\n      </div>\n    </div>\n  </div>\n\n  <div class=\"js-tweet-preview-container\"></div>\n\n  <div class=\"welcome-faux-tweet-stream js-welcome-faux-tweet-stream\">\n    <div class=\"unfocusable-stream-item stream-item js-intro-tweet\">\n      <div class=\"tweet js-unclickable-tweet unclickable-tweet\">\n        <div class=\"content\">\n          <div class=\"stream-item-header\">\n            <span class=\"account-group js-account-group js-action-profile\">\n              <span class=\"avatar-group\" >\n                <span class=\"avatar {{^abtest_localized_image_welcome_flow_235_any_bucket}}welcome-teacher{{/abtest_localized_image_welcome_flow_235_any_bucket}}{{#abtest_localized_image_welcome_flow_235_japan_photo}}welcome-teacher-ab-photo{{/abtest_localized_image_welcome_flow_235_japan_photo}}{{#abtest_localized_image_welcome_flow_235_japan_drawing}}welcome-teacher-ab-drawing{{/abtest_localized_image_welcome_flow_235_japan_drawing}}\"/>\n                <span class=\"avatar-well size48\"></span>\n              </span>\n              <strong class=\"fullname\">The Twitter Teacher</strong>\n            </span>\n            <small class=\"time\">\n              1 min\n            </small>\n          </div>\n          <p>This is a Tweet. Tweets are short messages that have up to 140 characters and can contain links like <a>http://twitter.com</a>.</p>\n        </div>\n        \n      </div>\n    </div>\n    \n\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n  </div>\n  <div class=\"component js-stream-end\">\n    <div class=\"stream-end\">\n      <div class=\"stream-end-inner\">\n        <i class=\"bird-etched\"></i>\n      </div>\n    </div>\n  </div>\n\n</div>\n",
            "welcome_learn_flow_background": "\n<div class=\"dashboard\">\n  <div class=\"module welcome-header-module js-flow-step\">\n    <div class=\"flex-module header-half\">\n      <h2>Build your Twitter.</h2>\n      <div class=\"subheading\">Get started in less than 60 seconds.</div>\n    </div>\n\n    <div class=\"flex-module progress-half\">\n      <table class=\"flex-table\">\n        <tbody>\n          <tr>\n            <td class=\"flex-table-primary\"></td>\n            <td class=\"flex-table-secondary\">\n              <a href=\"#\" class=\"btn js-next-btn\">Next</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"left-arrow\"></div>\n  </div>\n</div>\n\n<div class=\"content-main js-content-main breakable\">\n\n  <div class=\"content-header js-content-header\">\n    <div class=\"header-inner\">\n      <h2>Tweets</h2>\n    </div>\n  </div>\n\n  <div class=\"js-tweet-preview-container\"></div>\n\n  <div class=\"welcome-faux-tweet-stream js-welcome-faux-tweet-stream\">\n    <div class=\"unfocusable-stream-item stream-item js-intro-tweet\">\n      <div class=\"tweet js-unclickable-tweet unclickable-tweet\">\n        <div class=\"content\">\n          <div class=\"stream-item-header\">\n            <span class=\"account-group js-account-group js-action-profile\">\n              <span class=\"avatar-group\">\n                <span class=\"avatar {{^abtest_localized_image_welcome_flow_235_any_bucket}}welcome-teacher{{/abtest_localized_image_welcome_flow_235_any_bucket}}{{#abtest_localized_image_welcome_flow_235_japan_photo}}welcome-teacher-ab-photo{{/abtest_localized_image_welcome_flow_235_japan_photo}}{{#abtest_localized_image_welcome_flow_235_japan_drawing}}welcome-teacher-ab-drawing{{/abtest_localized_image_welcome_flow_235_japan_drawing}}\"/>\n              </span>\n              <strong class=\"fullname\">The Twitter Teacher</strong>\n            </span>\n            <small class=\"time\">\n              1 min\n            </small>\n          </div>\n          <p>This is a Tweet. Tweets are short messages that have up to 140 characters and can contain links like <a>http://twitter.com</a>.</p>\n        </div>\n        \n      </div>\n    </div>\n    \n\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n    <div class=\"unfocusable-stream-item\">\n      <div class=\"faux-tweet\">\n        <div class=\"content\"></div>\n      </div>\n    </div>\n  </div>\n  <div class=\"component\">\n    <div class=\"stream-end\">\n      <div class=\"stream-end-inner\">\n        <i class=\"bird-etched\"></i>\n      </div>\n    </div>\n  </div>\n\n</div>\n",
            "welcome_learn_game": "<div class=\"js-tweet-game welcome-game module\">\n  <div class=\"flex-module clearfix\">\n    <h1>Which Tweet do you like more?</h1>\n\n    <h3>Hi, {{name}}. Let’s kickstart your Twitter<br> experience by building you a great timeline.</h3>\n\n    <div class=\"js-tweets-container welcome-game-tweets-container\">\n      <div class=\"js-tweet-1 welcome-game-tweet-container\"></div>\n      <div class=\"js-tweet-separator welcome-game-tweet-separator\">or</div>\n      <div class=\"js-tweet-2 welcome-game-tweet-container\"></div>\n    </div>\n\n    <div class=\"welcome-game-skip\">\n      <a href=\"#\" class=\"js-skip-tweets\">Skip this pair</a>\n    </div>\n  </div>\n\n  <div class=\"contrast-flex-module\">\n    <div class=\"progressbar-well\">\n      <div class=\"ui-progressbar js-progressbar\"></div>\n      <div class=\"progress-label js-progress-label\">\n        <span class=\"js-current-round current-round\">{{current_round}}</span> / {{total_rounds}}\n      </div>\n    </div>\n  </div>\n</div>",
            "welcome_learn_game_tweet": "<div class=\"js-game-tweet js-unclickable-tweet welcome-game-tweet unclickable-tweet\" href=\"#\" data-tweet-id=\"{{id}}\">\n  {{#user}}\n    <div class=\"mini-profile\">\n      <div class=\"account-summary account-summary-small\">\n        <div class=\"content\">\n          <div class=\"account-group\">\n            <img class=\"avatar size32\" alt=\"{{name}}\" src=\"{{profile_image_url}}\">\n            <b class=\"fullname\">{{name}}</b>\n            <span class=\"username\">@{{screen_name}}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  {{/user}}\n\n  <p>{{{linkified_text}}}</p>\n</div>",
            "welcome_learn_header": "<div class=\"flex-module header-half {{#no_nav}} header-whole {{/no_nav}}\">\n  <h2>{{title}}</h2>\n  <div class=\"subheading\">{{{subtitle}}}</div>\n  {{#ad_referal}}\n    {{#ad_parlor}}\n      <img src='https://fbads.adparlor.com/conversion.php?adid=1193' alt='AP_pixel' height='1' width='1' />\n    {{/ad_parlor}}\n  {{/ad_referal}}\n</div>\n\n{{^no_nav}}\n<div class=\"flex-module progress-half\">\n  \n  <table cellspacing=\"0\" cellpadding=\"0\" border=\"0\" width=\"100%\">\n    <tr>\n      <td width=\"99%\">\n        {{#show_progress}}\n          <div class=\"progressbar-well\">\n            <div class=\"ui-progressbar js-progressbar\"></div>\n            <div class=\"progress-label js-progress-label\"></div>\n          </div>\n        {{/show_progress}}\n      </td>\n\n      {{#edit_enabled}}\n        <td width=\"1%\" style=\"padding-right: 8px;\">\n          <a href=\"{{welcome_edit_path}}\" class=\"btn js-edit-btn\">Edit</a>\n        </td>\n      {{/edit_enabled}}\n\n      <td width=\"1%\">\n        {{#next_enabled}}\n          <a href=\"{{continue_route}}\" class=\"btn js-next-btn {{#last_step}} last-step {{/last_step}} {{#next_highlighted}} primary-btn {{/next_highlighted}}\">{{button_text}}</a>\n        {{/next_enabled}}\n        {{^next_enabled}}\n          <a class=\"btn disabled js-next-btn\">{{button_text}}</a>\n        {{/next_enabled}}\n      </td>\n    </tr>\n  </table>\n</div>\n{{/no_nav}}\n\n{{#stream_arrow}}\n  <div class=\"down-arrow\"></div>\n{{/stream_arrow}}\n\n{{^stream_arrow}}\n  <div class=\"left-arrow\"></div>\n{{/stream_arrow}}\n",
            "welcome_learn_profile": "<div class=\"form-vertical js-profile-form\">\n  <div class=\"image-error clearfix js-image-error\">\n    <a class=\"dismiss js-dismiss\" href=\"#\"><i class=\"close\"></i></a>\n    <span class=\"js-image-error-text\"></span>\n  </div>\n\n  <div class=\"control-group\">\n\n    <div class=\"js-current-profile-picture-wrapper profile-form-image-wrapper avatar size96\">\n      <img class=\"js-current-profile-picture profile-form-image avatar size96\" src=\"{{reasonably_small_profile_image_url}}\" alt=\"Profile photo thumbnail\">\n      <div class=\"spinner\"></div>\n    </div>\n\n    <form method=\"post\" action=\"{{api_url}}/1/account/update_profile_image.iframe\" enctype=\"multipart/form-data\" class=\"js-upload-form profile-image-upload-form\" target=\"welcomeProfilePhotoUpload\">\n      <div class=\"file-input-wrapper\">\n        <button class=\"js-upload-btn btn\" href=\"#\">\n          Upload image\n        </button>\n        <input class=\"js-profile-image-input\" type=\"file\" name=\"image\">\n      </div>\n\n      <p>Maximum size of 700K. JPG, GIF, PNG.</p>\n\n      <input type=\"hidden\" name=\"iframe_callback\" value=\"window.top.twttr.components.pages.WelcomeLearnFlow.profileImageUploadCallback\">\n      <input type=\"hidden\" name=\"post_authenticity_token\" value=\"{{post_authenticity_token}}\">\n    </form>\n    <iframe class=\"turkey-post-target\" name=\"welcomeProfilePhotoUpload\"></iframe>\n  </div>\n\n  <div class=\"control-group\">\n    <label class=\"control-label\" for=\"welcomeProfileBio\">Bio</label>\n    <div class=\"bio-count\"><span class=\"js-bio-count\">0</span> / 160</div>\n    <div class=\"controls\">\n      <textarea id=\"welcomeProfileBio\" class=\"welcome-profile-bio\" name=\"description\" placeholder=\"Rocket ship builder, pizza expert, loves the Giants, parent.\">{{description}}</textarea>\n    </div>\n  </div\n</div>\n\n",
            "welcome_to_phoenix_banner": "<div class=\"welcome-banner-outer banner-outer\">\n  <div class=\"welcome-banner banner\">\n    <div class=\"welcome-banner-inside banner-inside\">\n      <a class='pane-close' href='#'>Close <span>×</span></a>\n      <span>\n        Welcome to <a href=\"{{welcome_search_results_path}}\">#NewTwitter</a>! Read up on <a target=\"_blank\" href=\"{{whats_new_path}}\">what’s new</a>.\n      </span>\n    </div>\n  </div>\n</div>",
            "who_to_follow": "<div class=\"main-content\">\n  {{#render_page_content}}\n    <div class=\"page-header who-to-follow-header\">\n\n      <form class=\"who-to-follow-search\" action=\"{{who_to_follow_search_form_path}}\" method=\"GET\">\n        <input type=\"text\" value=\"\" name=\"q\" placeholder=\"Search by name or topic\" />\n        <div class=\"submit button\">Search</div>\n      </form>\n\n      <h1>Who to follow</h1>\n\n      <ul class=\"stream-tabs\">\n  {{#logged_in}}\n        <li class=\"stream-tab stream-tab-suggestions {{#active_tab_suggestions}}active{{/active_tab_suggestions}}\">\n          <a class=\"tab-text\" title='View Suggestions' href=\"{{who_to_follow_suggestions_path}}\">View Suggestions</a>\n        </li>\n  {{/logged_in}}\n        <li class=\"stream-tab stream-tab-interests {{#active_tab_interests}}active{{/active_tab_interests}}\">\n          <a class=\"tab-text\" title='Browse Interests' href=\"{{who_to_follow_interests_path}}\">Browse Interests</a>\n        </li>\n  {{#decider_contact_import}}\n  {{#logged_in}}\n        <li class=\"stream-tab stream-tab-import {{#active_tab_import}}active{{/active_tab_import}}\">\n          <a class=\"tab-text\" title='Find Friends' href=\"{{who_to_follow_import_path}}\">Find Friends</a>\n        </li>\n  {{/logged_in}}\n  {{/decider_contact_import}}\n      </ul>\n    </div>\n\n    <div class=\"who-to-follow-stream\">\n      {{>stream_manager}}\n    </div>\n\n  {{/render_page_content}}\n</div>\n\n<div class=\"dashboard\">\n</div>\n\n{{>details_pane_container}}\n",
            "who_to_follow_links": "<p class=\"wtf-links\">\n  <span>Find accounts to follow:</span>\n  <a href=\"{{who_to_follow_interests_path}}\">Browse interests</a>\n  {{#decider_contact_import}}\n  <span class=\"dot\">·</span>\n  <a href=\"{{who_to_follow_import_path}}\">Find friends</a>\n  {{/decider_contact_import}}\n</p>\n",
            "activity_modal": "<div id='activity-modal' style='display: none'>\n  <div class='left-pointer'></div>\n  <a class='dismiss' title=\"Hide\">×</a>\n  <p class='header'><span class='new'>New!</span> Activity and @{{current_user_screen_name}}</p>\n  <p class='desc'>\n      View favorites, follows, retweets and more by people you follow in <strong>Activity</strong>.\n  </p>\n  <p class='extra-blurb desc'>\n    View your mentions, tweets that were retweeted and more in <strong>@{{current_user_screen_name}}</strong>.\n  </p>\n</div>",
            "details_pane": "<div class=\"inner-pane\">\n  <div class='pane-toolbar pane-built-in'>\n    {{#popable}}\n      <a class='pane-back toolbar-control' href='#'><span>←</span> {{back_label}}</a>\n    {{/popable}}\n    {{#closable}}\n      <a class='pane-close toolbar-control' href='#'>close <span>×</span></a>\n    {{/closable}}\n    <br style='clear: both' />\n  </div>\n  <div class=\"pane-components\">\n    <div class=\"pane-components-inner\">\n    </div>\n  </div>\n</div>\n",
            "details_pane_container": "<div id=\"details-pane-outer\">\n  <div class=\"details-pane-shell\">\n    <div class=\"details-pane\">\n      {{{pane}}}\n    </div>\n  </div>\n</div>",
            "home_page": "<div class=\"main-content\">\n  {{#render_page_content}}\n    <div class=\"page-header home-header\">\n      <div id=\"main-tweet-box\">\n        {{>posting_tweet_box}}\n      </div>\n      <ul class=\"stream-tabs\">\n        <li class=\"stream-tab stream-tab-home {{#active_tab_home}}active{{/active_tab_home}}\">\n          <a class=\"tab-text\" title='All you follow' href=\"{{index_path}}\">Timeline</a>\n        </li>\n\n        {{#enable_activity}}\n          <li class=\"stream-tab stream-tab-your_activity {{#active_tab_your_activity}}active{{/active_tab_your_activity}}\">\n            <a class=\"tab-text\" title='@{{current_user_screen_name}}' href=\"{{your_activity_path}}\">@{{current_user_screen_name}}</a>\n          </li>\n          <li class=\"stream-tab stream-tab-activity {{#active_tab_activity}}active{{/active_tab_activity}}\">\n            <a class=\"tab-text\" title='Activity' href=\"{{activity_path}}\">Activity</a>\n          </li>\n        {{/enable_activity}}\n\n        {{^enable_activity}}\n          <li class=\"stream-tab stream-tab-mentions {{#active_tab_mentions}}active{{/active_tab_mentions}}\">\n            <a class=\"tab-text\" title='Mentions' href=\"{{mentions_path}}\">@Mentions</a>\n          </li>\n          <li class=\"stream-tab stream-tab-retweets dropdown-link {{#active_tab_retweets}}active{{/active_tab_retweets}}\">\n            <a class=\"tab-text\" href=\"#\">Retweets<i></i></a>\n          </li>\n        {{/enable_activity}}\n\n        <li class=\"stream-tab stream-tab-searches dropdown-link {{#active_tab_searches}}active{{/active_tab_searches}}\">\n          <a class=\"tab-text\" href=\"#\">Searches<i></i></a>\n        </li>\n\n        <li class=\"stream-tab stream-tab-lists dropdown-link {{#active_tab_lists}}active{{/active_tab_lists}}\">\n          <a class=\"tab-text\" href=\"#\">Lists<i></i></a>\n        </li>\n        {{#decider_network_discovery}}\n          <li class=\"stream-tab stream-tab-discovery activity-subtabs {{#active_tab_network_discovery}}active{{/active_tab_network_discovery}}\">\n            <a class=\"tab-text\" title='Discover' href=\"{{discovery_path}}\">Discover</a>\n          </li>\n        {{/decider_network_discovery}}\n      </ul>\n    </div>\n    {{#enable_activity}}\n      {{#activity_subtabs}}\n        <ul class=\"stream-subtabs stream-subtabs-activity {{#active_tab_activity}}active{{/active_tab_activity}}\">\n          <li class=\"stream-tab stream-subtab-your_activity {{#active_subtab_your_activity}}active{{/active_subtab_your_activity}}\">\n            <a class=\"tab-text\" href=\"{{your_activity_path}}\">about you</a>\n          </li>\n          <li class=\"stream-tab stream-tab-separator\">·</li>\n          <li class=\"stream-tab stream-subtab-activity {{#active_subtab_activity}}active{{/active_subtab_activity}}\">\n            <a class=\"tab-text\" href=\"{{activity_path}}\">by people you follow</a>\n          </li>\n        </ul>\n      {{/activity_subtabs}}\n    {{/enable_activity}}\n    {{>stream_manager}}\n    {{#rendering_on_server}}<script>twttr.tweetsVisibleTime = new Date();if (window.ttft) window.ttft.serverRendered('home');twttr.keynoteTTFTPing();</script>{{/rendering_on_server}}\n  {{/render_page_content}}\n</div>\n<div class=\"dashboard\">\n  {{#render_page_content}}\n    {{#current_user}}\n      {{>home_dashboard}}\n    {{/current_user}}\n  {{/render_page_content}}\n</div>\n\n{{>details_pane_container}}\n",
            "message_drawer": "<div class=\"message {{^rendering_on_server}}{{type}}{{/rendering_on_server}}\">\n  <div class=\"message-inside\">\n    <span class=\"message-text\">{{{text}}}</span\n    >{{#close_button}}<a class=\"dismiss\" href=\"#\">×</a>{{/close_button}}\n  </div>\n</div>",
            "message_notification": "{{#message}}\n<div data-sender-id='{{sender_screen_name}}' data-message-id=\"{{id}}\" class='notification'>\n  <a class='dismiss' href='#'>×</a>\n  <h1>New Message from {{{sender_screen_name}}}</h1>\n  <div class='message-text'>{{{text}}}</div>\n  <div class=\"message-notification-reply-box\">\n    <div class=\"message-notification-reply-editor\"></div>\n    <div class=\"message-notification-reply-button button\">Send</div>\n  </div>\n</div>\n{{/message}}",
            "pill_css": "\n.profile-style-{{screen_name}} a {\n  {{#profile_link_color}}\n    color: #{{profile_link_color}} !important;\n  {{/profile_link_color}}\n}\n\na:hover .geo-pin, body.user-style-{{screen_name}} .stream-item:hover .geo-pin {\n  background-color: #{{profile_link_color}};\n}",
            "posting_tweet_box": "<form method=\"post\" action=\"/status/update\">\n  <div class=\"tweet-box condensed\">\n    <div class=\"tweet-box-title\">\n      <h2>What’s happening?</h2>\n    </div>\n    <div class=\"text-area\">\n      <div class=\"text-area-editor twttr-editor\">\n        <textarea class=\"twitter-anywhere-tweet-box-editor\" name=\"status\" style=\"width: 482px; height: 36px;\"></textarea>\n      </div>\n    </div>\n  </div>\n</form>\n",
            "stream_activity": "<span class='stream-activity-line'><i></i>{{{sentence}}}</span>",
            "tweet_contributor": "{{#contributor}}\n  <span class=\"tweet-contributors\">by <a href=\"{{profile_path}}\" class=\"user-profile-link\" data-screen-name=\"{{screen_name}}\">{{screen_name}}</a></span>\n{{/contributor}}",
            "tweet_dogear": "<div class=\"tweet-dogear\"></div>",
            "tweet_labels": "{{#is_top_tweet}}\n    <span class=\"tweet-context icon-link\"><i class=\"badge-tweet badge-tweet-top\"></i>{{#retweet_count}}Retweeted {{retweet_count}} times{{/retweet_count}}{{^retweet_count}}Top Tweet{{/retweet_count}}</span>\n{{/is_top_tweet}}\n\n{{#is_sponsored}}\n  <a href=\"{{#retweeting_status}}{{#user}}{{profile_path}}{{/user}}{{/retweeting_status}}{{^retweeting_status}}{{#user}}{{profile_path}}{{/user}}{{/retweeting_status}}\" class=\"icon-link promoted-arrow tweet-context user-profile-link js-action-profile-promoted\" data-user-id=\"{{#user}}{{id}}{{/user}}\" title=\"{{disclosure_text}}\"><span><i class=\"badge-tweet badge-tweet-{{disclosure_type}}\"></i><b>Promoted by {{advertiser_name}}</b></span></a>\n\n  {{#in_home_page}}\n    {{^rendering_on_server}}\n      <a class=\"icon-link tweet-feedback dismiss-action js-action-dismiss\"><i></i><b>Dismiss</b></a>\n    {{/rendering_on_server}}\n    {{{social_context}}}\n  {{/in_home_page}}\n{{/is_sponsored}}",
            "tweet_meta": "<div class='tweet-meta'>\n  <span class='icons'>\n    {{#is_sponsored}}\n      {{#retweet_count}}\n        <span class='retweet-icon'></span> <em>{{retweet_count_text}}</em>\n      {{/retweet_count}}\n    {{/is_sponsored}}\n\n    {{^enable_activity}}\n      {{^is_sponsored}}\n        {{#was_retweeted}}\n          {{#retweeting_status}}\n            <span class='retweet-icon'></span> {{#user}}<em>by {{screen_name}}</em>{{/user}}\n          {{/retweeting_status}}\n        {{/was_retweeted}}\n      {{/is_sponsored}}\n    {{/enable_activity}}\n\n    <div class=\"extra-icons\">\n      {{^can_expand}}\n        {{#is_reply}}\n          <span class='reply-icon icon js-reply-notice'>@</span>\n        {{/is_reply}}\n        <span class=\"inlinemedia-icons js-icon-container\"></span>\n        {{#show_geo_icon}}<span class=\"geo-pin\"></span>{{/show_geo_icon}}\n      {{/can_expand}}\n      {{#can_expand}}\n        {{>tweet_timestamp}}\n      {{/can_expand}}\n    </div>\n  </span>\n</div>\n\n{{#can_expand}}\n  {{>tweet_actions}}\n{{/can_expand}}",
            "tweet_text": "<div class=\"tweet-text js-tweet-text\">\n  {{>linked_tweet}}\n</div>",
            "tweet_user_image_48": "{{#user}}\n<img height=\"48\" width=\"48\" src='{{profile_image_url}}' alt='{{name}}' class='user-profile-link js-action-profile-avatar' data-user-id='{{id}}'/>\n{{/user}}\n",
            "tweet_user_name": "{{#user}}\n<span class='tweet-user-name'>\n  <a class='tweet-screen-name user-profile-link js-action-profile-name' data-user-id='{{id}}' href='{{profile_path}}' title='{{name}}'>{{screen_name}}</a>\n  <span class='tweet-full-name'>{{name}}</span>\n  {{#show_follow_action}}\n    {{^is_current_user}}\n    <span class=\"tweet-user-follow\">\n    </span>\n    {{/is_current_user}}\n  {{/show_follow_action}}\n</span>\n{{/user}}",
            "user_css_p1": "\n<style id=\"user-style-{{screen_name}}\">\n  body.user-style-{{screen_name}} {\n    {{#profile_use_background_image}}\n      background-position: left 40px;\n      background-attachment: fixed;\n      {{^profile_background_tile}}\n        background-repeat: no-repeat;\n      {{/profile_background_tile}}\n    {{/profile_use_background_image}}\n    {{#profile_background_color}}\n      background-color: #{{profile_background_color}};\n    {{/profile_background_color}}\n    {{#profile_text_color}}\n      color: #{{profile_text_color}};\n    {{/profile_text_color}}\n  }\n\n  body.user-style-{{screen_name}} a,\n  body.user-style-{{screen_name}} ul.stream-tabs li,\n  body.user-style-{{screen_name}} .component .promo strong,\n  body.user-style-{{screen_name}} .message-thread-preview:hover .message-count,\n  body.user-style-{{screen_name}} .list-membership-container li.create-a-list {\n    {{#profile_link_color}}\n      color: #{{profile_link_color}};\n    {{/profile_link_color}}\n  }\n\n  body.user-style-{{screen_name}} .stream-item:hover .tweet-screen-name,\n  body.user-style-{{screen_name}} .stream-item:hover .tweet-timestamp,\n  body.user-style-{{screen_name}} .stream-item:hover .tweet-geo-text,\n  body.user-style-{{screen_name}} .stream-item:hover .user-profile-link,\n  body.user-style-{{screen_name}} span.user-stat-link,\n  body.user-style-{{screen_name}} a.title-link:hover,\n  body.user-style-{{screen_name}} a.user-stats-count:hover span.user-stats-stat,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item:hover a.user-screen-name,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item:hover .user-meta a,\n  body.user-style-{{screen_name}} .user-detailed-list-item:hover a.user-screen-name,\n  body.user-style-{{screen_name}} .tweet-activity:hover a.latest-tweet-timestamp,\n  body.user-style-{{screen_name}} .stream-item:hover a.icon-link,\n  body.user-style-{{screen_name}} .stream-item:hover a.icon-link b,\n  body.user-style-{{screen_name}} .stream-item:hover .tweet-feedback,\n  body.user-style-{{screen_name}} .promoted-tweet:hover .social-context a,\n  body.user-style-{{screen_name}} .dashboard ul.trends li a:hover span.icon-link,\n  body.user-style-{{screen_name}} .dashboard-activity-item-sentence .dashboard-activity-item-entity,\n  body.user-style-{{screen_name}} .dashboard-activity-item-sentence .dashboard-activity-item-entity .user,\n  body.user-style-{{screen_name}} .dashboard-activity-item-sentence .dashboard-activity-item-count,\n  body.user-style-{{screen_name}} .dashboard-activity-item-link:hover .dashboard-activity-item-sentence,\n  body.user-style-{{screen_name}} .dashboard-activity-item-link:hover .dashboard-activity-item-sentence span.user,\n  body.user-style-{{screen_name}} .onebox-user-screen-name:hover {\n    {{#profile_link_color}}\n      color: #{{profile_link_color}} !important;\n    {{/profile_link_color}}\n  }\n\n  body.user-style-{{screen_name}} .expanding-stream-item:hover .tweet-screen-name {\n    color: #333 !important;\n  }\n  body.user-style-{{screen_name}} .expanding-stream-item:hover .tweet-timestamp {\n    color: #999 !important;\n  }\n\n  body.user-style-{{screen_name}} .hovered-stream-item,\n  body.user-style-{{screen_name}} .stream-item:hover,\n  body.user-style-{{screen_name}} #new-tweets-bar,\n  body.user-style-{{screen_name}} #new-tweets-bar:active {\n    {{#rgba_tweet_background_color}}\n      background-color: {{rgba_tweet_background_color}};\n    {{/rgba_tweet_background_color}}\n    {{#rgba_tweet_border_color}}\n      border-color: {{rgba_tweet_border_color}};\n    {{/rgba_tweet_border_color}}\n  }\n\n  body.user-style-{{screen_name}} .expanding-stream-item:hover {\n    border-top-color: transparent;\n    border-bottom-color: #EBEBEB;\n  }\n\n  body.user-style-{{screen_name}} #new-tweets-bar:hover {\n    {{#rgba_newtweets_background_color}}\n      background-color: {{rgba_newtweets_background_color}};\n    {{/rgba_newtweets_background_color}}\n    {{#rgba_newtweets_border_color}}\n      border-color: {{rgba_newtweets_border_color}};\n    {{/rgba_newtweets_border_color}}\n  }\n\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .user-screen-name,\n  body.user-style-{{screen_name}} .profile-screenname,\n  body.user-style-{{screen_name}} .title-link,\n  body.user-style-{{screen_name}} div.latest-tweet .latest-tweet-timestamp,\n  body.user-style-{{screen_name}} div.truncated-tweet .latest-tweet-timestamp,\n  body.user-style-{{screen_name}} a.user-stats-count span.user-stats-stat,\n  body.user-style-{{screen_name}} .welcome-steps li .active a strong,\n  body.user-style-{{screen_name}} .dashboard-activity-item-sentence span.user {\n    {{#profile_text_color}}\n      color: #{{profile_text_color}};\n    {{/profile_text_color}}\n  }\n\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .user-full-name,\n  body.user-style-{{screen_name}} span.trend-location,\n  body.user-style-{{screen_name}} .your-activity h3,\n  body.user-style-{{screen_name}} .trends-inner h3,\n  body.user-style-{{screen_name}} .dashboard .user-rec-inner h3,\n  body.user-style-{{screen_name}} .latest-tweet,\n  body.user-style-{{screen_name}} .truncated-tweet,\n  body.user-style-{{screen_name}} .latest-tweet a.latest-tweet-timestamp,\n  body.user-style-{{screen_name}} .truncated-tweet a.latest-tweet-timestamp,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .user-meta,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .user-meta a,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .user-meta a s,\n  body.user-style-{{screen_name}} .social-context div,\n  body.user-style-{{screen_name}} .dashboard .dot,\n  body.user-style-{{screen_name}} .component .promo,\n  body.user-style-{{screen_name}} .component .promo a.definition,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .dismiss,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item .ellip,\n  body.user-style-{{screen_name}} .facets-media-not-displayed .not-displayed-text,\n  body.user-style-{{screen_name}} .dashboard .copyright,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item a.icon-link,\n  body.user-style-{{screen_name}} .dashboard ul.trends li a span.icon-link,\n  body.user-style-{{screen_name}} .dashboard-activity-item-link,\n  body.user-style-{{screen_name}} .dashboard-activity-item-sentence {\n    {{#rgba_text_color}}\n      color: {{rgba_text_color}};\n    {{/rgba_text_color}}\n  }\n\n  body.user-style-{{screen_name}} #page-container,\n  body.user-style-{{screen_name}} .user-sidebar-color,\n  body.user-style-{{screen_name}} .expando-container .dashboard {\n    {{#profile_sidebar_fill_color}}\n      \n      background: #{{profile_sidebar_fill_color}};\n    {{/profile_sidebar_fill_color}}\n    {{#rgba_sidebar_color}}\n      \n      background: {{rgba_sidebar_color}};\n    {{/rgba_sidebar_color}}\n  }\n\n  body.user-style-{{screen_name}} .activity:hover .stream-item-activity-network .activity-supplement .activity-item-tweet .activity-item-tweet-content,\n  body.user-style-{{screen_name}} .hovered-stream-item .stream-item-activity-network .activity-supplement .activity-item-tweet .activity-item-tweet-content,\n  body.user-style-{{screen_name}} .dashboard .stream-item-activity-network .activity-supplement .activity-item-tweet .activity-item-tweet-content  {\n    {{#rgba_tweet_border_color}}\n      border-color: {{rgba_tweet_border_color}} !important;\n    {{/rgba_tweet_border_color}}\n  }\n\n  body.user-style-{{screen_name}} .expanding-stream-item:hover a.twitter-atreply:hover,\n  body.user-style-{{screen_name}} .expanding-stream-item.open a.twitter-atreply,\n  body.user-style-{{screen_name}} .expanding-stream-item.colorful-links a.twitter-atreply,\n  body.user-style-{{screen_name}} .expanding-stream-item:hover a.twitter-hashtag:hover,\n  body.user-style-{{screen_name}} .expanding-stream-item.open a.twitter-hashtag,\n  body.user-style-{{screen_name}} .expanding-stream-item.colorful-links a.twitter-hashtag,\n  body.user-style-{{screen_name}} .expanding-stream-item:hover a.twitter-timeline-link:hover,\n  body.user-style-{{screen_name}} .expanding-stream-item.open a.twitter-timeline-link,\n  body.user-style-{{screen_name}} .expanding-stream-item.colorful-links a.twitter-timeline-link {\n    {{#profile_link_color}}\n      color: #{{profile_link_color}} !important;\n    {{/profile_link_color}}\n  }\n\n  body.user-style-{{screen_name}} s,\n  body.user-style-{{screen_name}} .pretty-link s {\n    {{#profile_pretty_link_color}}\n      color: #{{profile_pretty_link_color}};\n    {{/profile_pretty_link_color}}\n  }\n\n  body.user-style-{{screen_name}} .dashboard s,\n  body.user-style-{{screen_name}} .dashboard .pretty-link s,\n  body.user-style-{{screen_name}} .dashboard .user-small-list-item:hover .user-meta a s {\n    {{#profile_pretty_link_sidebar_color}}\n      color: #{{profile_pretty_link_sidebar_color}};\n    {{/profile_pretty_link_sidebar_color}}\n  }\n\n  {{>pill_css}}\n</style>"
        })
    }
    exports();
});
provide("mixins/ActivityViewHelpers", function(a) {
    using("_").as(function(b, _) {
        twttr.klass.mixin("twttr.mixins.ActivityViewHelpers", function() {
            var a = 3,
                b = "sources",
                c = "targets",
                d = "target_objects",
                e = "StreamTweet",
                f = "ActivityItemTweet",
                g = "StreamUser",
                i = "StreamList",
                j = "ActivityItemUser",
                k = "ActivityItemTruncatedTweet",
                l = "User",
                m = "List",
                n = "Status",
                o = {
                    User: {
                        Status: ["user"],
                        List: ["user"],
                        User: []
                    },
                    Status: {
                        Status: [],
                        User: ["status"],
                        List: []
                    },
                    List: {
                        Status: [],
                        User: ["user"],
                        List: []
                    }
                },
                p = {
                    User: twttr.isT1 ? "ActivityUserLink" : "UserLink",
                    List: "ListLink"
                },
                q = {
                    your_activity: p,
                    profile_activity: p,
                    activity: p,
                    dashboard: {
                        User: "UserFullName",
                        List: "ListLink"
                    }
                },
                r = {
                    User: "screen_name",
                    List: "list_title"
                };
            twttr.isT1 && (f = "StreamTweet", j = "UserAvatarLink24", k = "LatestTweet");
            var s = {
                your_activity: {
                    favorite: {
                        sources: {
                            view: j,
                            objectType: l,
                            object: b,
                            max: 15,
                            useTruncated: !0
                        },
                        targets: {
                            view: k,
                            objectType: n,
                            object: c,
                            max: 1,
                            useTruncated: !1
                        }
                    },
                    mention: {
                        view: e,
                        objectType: n,
                        object: d,
                        max: 1
                    },
                    reply: {
                        view: e,
                        objectType: n,
                        object: c,
                        max: 1
                    },
                    retweet: {
                        sources: {
                            view: j,
                            objectType: l,
                            object: b,
                            max: 15,
                            useTruncated: !0
                        },
                        targets: {
                            view: k,
                            objectType: n,
                            object: d,
                            max: 1,
                            useTruncated: !1
                        }
                    },
                    follow: {
                        view: j,
                        objectType: l,
                        object: b,
                        max: 15
                    },
                    list_member_added: {
                        view: j,
                        objectType: l,
                        object: c,
                        max: 15
                    },
                    list_created: {
                        view: i,
                        objectType: m,
                        object: c,
                        max: 1
                    }
                },
                profile_activity: {
                    favorite: {
                        view: f,
                        objectType: n,
                        object: c,
                        max: 1
                    },
                    mention: {
                        view: f,
                        objectType: n,
                        object: d,
                        max: 1
                    },
                    reply: {
                        view: f,
                        objectType: n,
                        object: c,
                        max: 1
                    },
                    retweet: {
                        view: f,
                        objectType: n,
                        object: d,
                        max: 1
                    },
                    follow: {
                        view: g,
                        objectType: l,
                        object: c,
                        max: 12
                    },
                    list_member_added: {
                        view: g,
                        objectType: l,
                        object: c,
                        max: 12
                    },
                    list_created: {
                        view: i,
                        objectType: m,
                        object: c,
                        max: 1
                    }
                },
                activity: {
                    favorite: {
                        primary: {
                            view: f,
                            objectType: n,
                            object: c,
                            max: 1
                        },
                        secondary: {
                            view: "UserAvatarLink24",
                            objectType: l,
                            object: b,
                            max: 15
                        }
                    },
                    mention: {
                        view: f,
                        objectType: n,
                        object: d,
                        max: 1
                    },
                    reply: {
                        view: f,
                        objectType: n,
                        object: c,
                        max: 1
                    },
                    retweet: {
                        primary: {
                            view: f,
                            objectType: n,
                            object: d,
                            max: 1
                        },
                        secondary: {
                            view: "UserAvatarLink24",
                            objectType: l,
                            object: b,
                            max: 15
                        }
                    },
                    follow: {
                        primary: {
                            view: twttr.isT1 ? "StreamUser" : "ActivityItemUser",
                            objectType: l,
                            object: c,
                            max: twttr.isT1 ? 10 : 12
                        },
                        secondary: {
                            view: "UserAvatarLink24",
                            objectType: l,
                            object: b,
                            max: 15
                        }
                    },
                    list_member_added: {
                        view: twttr.isT1 ? "StreamUser" : "ActivityItemUser",
                        objectType: l,
                        object: c,
                        max: 10
                    },
                    list_created: {
                        view: i,
                        objectType: m,
                        object: c,
                        max: 1
                    }
                },
                dashboard: {
                    favorite: {
                        max: 0
                    },
                    mention: {
                        max: 0
                    },
                    reply: {
                        max: 0
                    },
                    retweet: {
                        max: 0
                    },
                    follow: {
                        max: 0
                    },
                    list_member_added: {
                        max: 12
                    },
                    list_created: {
                        max: 1
                    }
                }
            },
                t = {
                    sources: b,
                    targets: c,
                    target_objects: d
                },
                u = {
                    favorite: t,
                    mention: t,
                    reply: t,
                    retweet: t,
                    follow: t,
                    list_member_added: t,
                    list_created: t
                },
                v = [
                    [
                        [_("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                    ],
                    [
                        [_("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                    ],
                    [
                        [_("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                    ],
                    [
                        [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{{targets_screen_name_1}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}}, {{{targets_screen_name_1}}} and {{{targets_screen_name_2}}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")],
                        [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added {{{targets_screen_name_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others</span>{{#link_targets_count}}</a>{{/link_targets_count}} to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                    ]
                ],
                w = [
                    [_("{{{sources_screen_name_0}}} created list {{{targets_list_title_0}}}"), _("{{{sources_screen_name_0}}} created lists {{{targets_list_title_0}}} and {{{targets_list_title_1}}}"), _("{{{sources_screen_name_0}}} created lists {{{targets_list_title_0}}}, {{{targets_list_title_1}}} and {{{targets_list_title_2}}}"), _("{{{sources_screen_name_0}}} created lists {{{targets_list_title_0}}} and {{#link_targets_count}}<a class='activity-count' href='#'>{{/link_targets_count}}<span class='count-wrap'>{{targets_count}} others.</span>{{#link_targets_count}}</a>{{/link_targets_count}}")]
                ],
                x = {
                    favorite: {
                        your_activity: [
                            [_("{{{sources_screen_name_0}}} favorited your Tweet"), _("{{{sources_screen_name_0}}} favorited your Tweets")],
                            [_("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} favorited your Tweet"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} favorited your Tweets")],
                            [_("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} favorited your Tweet"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} favorited your Tweets")],
                            [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} favorited your Tweet"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} favorited your Tweets")]
                        ],
                        profile_activity: [_("{{{sources_screen_name_0}}} favorited <span class='activity-target-screen-name'>{{{targets_screen_name_0}}}</span>:")],
                        activity: [_("{{{sources_screen_name_0}}} favorited <span class='activity-target-screen-name'>{{{targets_screen_name_0}}}</span>:"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} favorited <span class='activity-target-screen-name'>{{{targets_screen_name_0}}}</span>:"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} favorited <span class='activity-target-screen-name'>{{{targets_screen_name_0}}}</span>:"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} favorited <span class='activity-target-screen-name'>{{{targets_screen_name_0}}}</span>:")],
                        dashboard: [
                            [_("{{{sources_screen_name_0}}} <span class='activity-action'>favorited</span> a <span class='dashboard-activity-item-entity'>Tweet</span>"), _("{{{sources_screen_name_0}}} <span class='activity-action'>favorited</span> <span class='dashboard-activity-item-entity'>{{full_targets_count}} Tweets</span>")], _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} <span class='activity-action'>favorited</span> a <span class='dashboard-activity-item-entity'>Tweet</span>"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</span>{{/link_sources_count}} <span class='activity-action'>favorited</span> a <span class='dashboard-activity-item-entity'>Tweet</span>")]
                    },
                    mention: {
                        your_activity: [_("{{{sources_screen_name_0}}} mentioned you"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} mentioned you"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} mentioned you"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} mentioned you")],
                        profile_activity: null,
                        activity: null
                    },
                    reply: {
                        your_activity: [_("{{{sources_screen_name_0}}} replied to you"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} replied to you"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} replied to you"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} replied to you")],
                        profile_activity: null,
                        activity: null
                    },
                    retweet: {
                        your_activity: [_("{{{sources_screen_name_0}}} retweeted you"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} retweeted you"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} retweeted you"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} retweeted you")],
                        profile_activity: [_("{{{sources_screen_name_0}}} retweeted <span class='activity-target-screen-name'>{{{target_objects_screen_name_0}}}</span>:")],
                        activity: [_("{{{sources_screen_name_0}}} retweeted <span class='activity-target-screen-name'>{{{target_objects_screen_name_0}}}</span>:"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} retweeted <span class='activity-target-screen-name'>{{{target_objects_screen_name_0}}}</span>:"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} retweeted <span class='activity-target-screen-name'>{{{target_objects_screen_name_0}}}</span>:"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} retweeted <span class='activity-target-screen-name'>{{{target_objects_screen_name_0}}}</span>:")],
                        dashboard: [
                            [_("{{{sources_screen_name_0}}} <span class='activity-action'>retweeted</span> <span class='dashboard-activity-item-entity'>{{{target_objects_screen_name_0}}}</span>"), _("{{{sources_screen_name_0}}} <span class='activity-action'>retweeted</span> <span class='dashboard-activity-item-entity'>{{full_target_objects_count}} people</span>")], _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} <span class='activity-action'>retweeted</span> <span class='dashboard-activity-item-entity'>{{{target_objects_screen_name_0}}}</span>"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</span>{{/link_sources_count}} <span class='activity-action'>retweeted</span> <span class='dashboard-activity-item-entity'>{{{full_target_objects_count}}} people</span>")]
                    },
                    follow: {
                        your_activity: [_("{{{sources_screen_name_0}}} followed you"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} followed you"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} followed you"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} followed you")],
                        profile_activity: [_("{{{sources_screen_name_0}}} followed:")],
                        activity: [_("{{{sources_screen_name_0}}} followed:"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} followed:"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} followed:"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} followed:")],
                        dashboard: [
                            [_("{{{sources_screen_name_0}}} <span class='activity-action'>followed</span> <span class='dashboard-activity-item-entity'>{{{targets_screen_name_0}}}</span>"), _("{{{sources_screen_name_0}}} <span class='activity-action'>followed</span> <span class='dashboard-activity-item-entity'>{{full_targets_count}} people</span>")],
                            [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} other</span>{{#link_sources_count}}</span>{{/link_sources_count}} <span class='activity-action'>followed</span> <span class='dashboard-activity-item-entity'>{{{targets_screen_name_0}}}</span>"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} other</span>{{#link_sources_count}}</span>{{/link_sources_count}} <span class='activity-action'>followed</span> <span class='dashboard-activity-item-entity'>{{targets_count}} people</span>")],
                            [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</span>{{/link_sources_count}} <span class='activity-action'>followed</span> <span class='dashboard-activity-item-entity'>{{{targets_screen_name_0}}}</span>"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</span>{{/link_sources_count}} <span class='activity-action'>followed</span> <span class='dashboard-activity-item-entity'>{{targets_count}} people</span>")]
                        ]
                    },
                    list_member_added: {
                        your_activity: [
                            [
                                [_("{{{sources_screen_name_0}}} added you to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} added you to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} added you to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} added you to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                            ],
                            [
                                [_("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added you to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added you to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added you to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{{sources_screen_name_1}}} added you to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                            ],
                            [
                                [_("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added you to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added you to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added you to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}}, {{{sources_screen_name_1}}} and {{{sources_screen_name_2}}} added you to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                            ],
                            [
                                [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added you to list {{{target_objects_list_title_0}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added you to lists {{{target_objects_list_title_0}}} and {{{target_objects_list_title_1}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added you to lists {{{target_objects_list_title_0}}}, {{{target_objects_list_title_1}}} and {{{target_objects_list_title_2}}}"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<a class='activity-count' href='#'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</a>{{/link_sources_count}} added you to lists {{{target_objects_list_title_0}}} and {{#link_target_objects_count}}<a class='activity-count' href='#'>{{/link_target_objects_count}}<span class='count-wrap'>{{target_objects_count}} others.</span>{{#link_target_objects_count}}</a>{{/link_target_objects_count}}")]
                            ]
                        ],
                        profile_activity: v,
                        activity: v,
                        dashboard: [
                            [
                                [_("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} to a list"), _("{{{sources_screen_name_0}}} added {{{targets_screen_name_0}}} to {{#link_target_objects_count}}<span class='dashboard-activity-item-count'>{{/link_target_objects_count}}<span class='count-wrap'>{{full_target_objects_count}}</span>{{#link_target_objects_count}}</span>{{/link_target_objects_count}} lists")],
                                [_("{{{sources_screen_name_0}}} added {{#link_targets_count}}<span class='dashboard-activity-item-count'>{{/link_targets_count}}<span class='count-wrap'>{{full_targets_count}}</span>{{#link_targets_count}}</span>{{/link_targets_count}} to a list"), _("{{{sources_screen_name_0}}} added {{#link_targets_count}}<span class='dashboard-activity-item-count'>{{/link_targets_count}}<span class='count-wrap'>{{full_targets_count}}</span>{{#link_targets_count}}</span>{{/link_targets_count}} to {{#link_target_objects_count}}<span class='dashboard-activity-item-count'>{{/link_target_objects_count}}<span class='count-wrap'>{{full_target_objects_count}}</span>{{#link_target_objects_count}}</span>{{/link_target_objects_count}} lists")]
                            ],
                            [
                                [_("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</span>{{/link_sources_count}} added {{{targets_screen_name_0}}} to a list"), _("{{{sources_screen_name_0}}} and {{#link_sources_count}}<span class='dashboard-activity-item-count'>{{/link_sources_count}}<span class='count-wrap'>{{sources_count}} others</span>{{#link_sources_count}}</span>{{/link_sources_count}} added {{{targets_screen_name_0}}} to lists")]
                            ]
                        ]
                    },
                    list_created: {
                        your_activity: null,
                        profile_activity: w,
                        activity: w,
                        dashboard: [_("{{{sources_screen_name_0}}} made a list"), _("{{{sources_screen_name_0}}} made {{#link_targets_count}}<span class='dashboard-activity-item-count'>{{/link_targets_count}}<span class='count-wrap'>{{full_targets_count}}</span>{{#link_targets_count}}</span>{{/link_targets_count}} lists")]
                    }
                },
                y = {
                    your_activity: {
                        sourceClass: l,
                        targetClass: null,
                        targetObjectClass: null
                    },
                    profile_activity: {
                        sourceClass: l,
                        targetClass: l,
                        targetObjectClass: null
                    },
                    activity: {
                        sourceClass: l,
                        targetClass: l,
                        targetObjectClass: null
                    },
                    dashboard: {
                        sourceClass: l,
                        targetClass: l,
                        targetObjectClass: null
                    }
                },
                z = {
                    favorite: {
                        your_activity: {
                            sourceClass: l,
                            targetClass: null,
                            targetObjectClass: null
                        },
                        profile_activity: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: null
                        },
                        activity: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: null
                        },
                        dashboard: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: null
                        }
                    },
                    mention: y,
                    reply: y,
                    retweet: {
                        your_activity: {
                            sourceClass: l,
                            targetClass: null,
                            targetObjectClass: null
                        },
                        profile_activity: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: l
                        },
                        activity: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: l
                        },
                        dashboard: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: l
                        }
                    },
                    follow: y,
                    list_member_added: {
                        your_activity: {
                            sourceClass: l,
                            targetClass: null,
                            targetObjectClass: m
                        },
                        profile_activity: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: m
                        },
                        activity: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: m
                        },
                        dashboard: {
                            sourceClass: l,
                            targetClass: l,
                            targetObjectClass: m
                        }
                    },
                    list_created: {
                        your_activity: null,
                        profile_activity: {
                            sourceClass: l,
                            targetClass: m,
                            targetObjectClass: null
                        },
                        activity: {
                            sourceClass: l,
                            targetClass: m,
                            targetObjectClass: null
                        },
                        dashboard: {
                            sourceClass: l,
                            targetClass: m,
                            targetObjectClass: null
                        }
                    }
                },
                A = {
                    favorite: "activity-fav",
                    mention: "activity-reply",
                    reply: "activity-reply",
                    retweet: "activity-rt",
                    follow: "activity-follow",
                    list_member_added: "activity-list",
                    list_created: "activity-list"
                },
                B;
            twttr.isT1 ? B = {
                favorite: [_("<span class='show-text'>{{hidden_count}} other favorite</span><span class='hide-text'>Hide other favorite</span>"), _("<span class='show-text'>{{hidden_count}} other favorites</span><span class='hide-text'>Hide other favorites</span>")],
                mention: null,
                reply: [_("<span class='show-text'>{{hidden_count}} other reply</span><span class='hide-text'>Hide other reply</span>"), _("<span class='show-text'>{{hidden_count}} other replies</span><span class='hide-text'>Hide other reply</span>")],
                retweet: [_("<span class='show-text'>{{hidden_count}} other retweet</span><span class='hide-text'>Hide other retweet</span>"), _("<span class='show-text'>{{hidden_count}} other retweets</span><span class='hide-text'>Hide other retweets</span>")],
                follow: null,
                list_member_added: null,
                list_created: null
            } : B = {
                favorite: _("<span class='show-text'>View other favorited Tweets by {{screen_name}}</span><span class='hide-text'>Hide other favorited Tweets by {{screen_name}}</span>"),
                mention: null,
                reply: _("<span class='show-text'>View other replies by {{screen_name}}</span><span class='hide-text'>Hide other replies by {{screen_name}}</span>"),
                retweet: _("<span class='show-text'>View other retweets by {{screen_name}}</span><span class='hide-text'>Hide other retweets by {{screen_name}}</span>"),
                follow: null,
                list_member_added: null,
                list_created: null
            }, this.statics({
                objectClasses: z,
                objectStrings: x,
                supplements: s,
                iconClasses: A,
                supplementViewAllSentences: B,
                lineItemObjects: u,
                maxQualifiedEntities: a,
                viewForObjectType: q,
                substitutionKeyForObjectType: r,
                translateToObjectType: o
            })
        }), a(twttr.mixins.ActivityViewHelpers)
    })
});
provide("multiGlobals/more_views", function(a) {
    using("_", "util", "constants").as(function(b, _) {
        twttr.view("twttr.views.BaseAPIList", function() {
            var a = this;
            twttr.views.Base.apply(this, arguments), this.items = [];
            if (!this.obj) return;
            this.obj.each(function(b) {
                a.items.push(new a.ItemView(b))
            })
        }).methods({
            ItemView: twttr.views.BaseAPI
        }), twttr.view("twttr.views.UserImage24").template(twttr.templates.user_image_24), twttr.view("twttr.views.UserAvatarLink24").template(twttr.templates.user_avatar_link_24), twttr.view("twttr.views.LinkSimpleList", function(a) {
            this.links = a
        }), twttr.view("twttr.views.LinkList", function(a, b) {
            var a = a.array || a,
                c = a.length - 1;
            this.links = twttr.map(a, function(a, d) {
                return twttr.merge({
                    separator: d == c ? !1 : b
                }, a)
            })
        }), twttr.view("twttr.views.SlideshowTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.SimpleTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.SimpleTweetLarge", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.SingleTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet).methods({
            linkified_text: function() {
                var a = twttr.views.BaseTweet.prototype.linkified_text.apply(this, arguments),
                    b = $("<div>" + a + "</div>").find("a[data-twitter-media-url='true']").attr("target", "").end();
                return b.html()
            },
            include_embed_link: function() {
                return twttr.decider.isAvailable("embed_code_dialog") && twttr.app.isOnPage("permalink") && !this.user["protected"]
            },
            is_permalink: function() {
                return twttr.app.isOnPage("permalink")
            }
        }), twttr.view("twttr.views.FollowingTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet).methods({
            show_follow_action: !0
        }), twttr.view("twttr.views.DiscoveryStreamTweet", function() {
            twttr.views.StreamTweet.apply(this, arguments)
        }).subclassOf(twttr.views.StreamTweet).template(twttr.templates.stream_tweet_discovery).statics({
            has: function(a, b) {
                var c = b.hasOwnProperty(a) && !twttr.is.falsy(b[a]);
                if (c && twttr.is.array(b[a])) {
                    if (b[a].length == 0) return !1;
                    b[a][b[a].length - 1].is_last = !0
                }
                return c
            }
        }).methods({
            show_follow_action: !0,
            has_retweeters: function() {
                return twttr.views.DiscoveryStreamTweet.has("retweeters", this.network_activity)
            },
            has_retweet_count: function() {
                return twttr.views.DiscoveryStreamTweet.has("retweet_count", this)
            }
        }), twttr.view("twttr.views.ActivityItemTweet", function() {
            twttr.views.StreamTweet.apply(this, arguments)
        }).subclassOf(twttr.views.StreamTweet).methods({
            should_callout_tweet_actions: function() {
                return !0
            }
        }), twttr.view("twttr.views.UnclickableTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet).methods({
            linkified_text: function() {
                var a = twttr.views.BaseTweet.prototype.linkified_text.apply(this, arguments),
                    b = $("<div>" + a + "</div>");
                return b.find("a").replaceWith(function() {
                    return "<a>" + $(this).contents().text() + "</a>"
                }), b.html()
            }
        }), twttr.view("twttr.views.WelcomeLearnGameTweet", function() {
            twttr.views.UnclickableTweet.apply(this, arguments)
        }).subclassOf(twttr.views.UnclickableTweet), twttr.view("twttr.views.SemiClickableTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet).template(twttr.templates.unclickable_tweet).methods({
            linkified_text: function() {
                var a = twttr.views.BaseTweet.prototype.linkified_text.apply(this, arguments),
                    b = $("<div>" + a + "</div>");
                return b.find("a.pretty-link").each(function() {
                    $(this).addClass("non-link").removeAttr("href")
                }), b.html()
            }
        }), twttr.view("twttr.views.LatestTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet).methods({
            full_timestamp: function() {
                return twttr.helpers.timeAgo(this.actual_timestamp(), !0, !1, !0)
            }
        }), twttr.view("twttr.views.ActivityItemTruncatedTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.EmbeddedTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.DetailsPaneTweet", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.InReplyTo", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.ProfilePane", function() {
            twttr.views.BaseStats.apply(this, arguments)
        }).subclassOf(twttr.views.BaseStats).methods({
            impression_cookie: function() {
                if (!this.promoted_content) return;
                var a = [];
                return JSON.stringify([this.id, this.promoted_content.impression_id, this.promoted_content.disclosure_type, this.promoted_content.disclosure_text, a])
            }
        }), twttr.view("twttr.views.MessageThread", function(a) {
            twttr.views.Base.apply(this, arguments), this.items = [];
            for (var b = 0; b < a.length; b++) this.items.push(new twttr.views.Message(a[b]))
        }).subclassOf(twttr.views.Base), twttr.view("twttr.views.ConversationThread", function(a) {
            twttr.views.Base.apply(this, arguments), this.items = [];
            var b = null;
            for (var c = 0; c < a.messages.length; c++) {
                var d = new twttr.views.Message(a.messages[c]);
                b && b.time_ago() !== d.time_ago() && (d.delimiter_text = d.time_ago()), this.items.push(d), b = d
            }
        }).subclassOf(twttr.views.Base).methods({
            screen_name: function() {
                return this.threadId
            }
        }), twttr.view("twttr.views.SmsFollow").methods({
            show_sms_prompt: function() {
                return $.inArray(twttr.pageLocale, ["ja", "ko"]) == -1
            },
            sms_follow_text: function() {
                var a = "<strong>follow " + this.screen_name + "</strong>";
                switch (twttr.requestFullCity.substr(0, 2).toLowerCase()) {
                case "us":
                    var b = "40404",
                        c = _("the United States");
                    break;
                case "ca":
                    var b = "21212",
                        c = _("Canada");
                    break;
                default:
                    return _('Text {{{command}}} to <a href="#" class="sms-codes-link">your carrier\'s shortcode</a>', {
                        command: a
                    })
                }
                return _("Text {{{command}}} to {{{number}}} in {{{country}}}", {
                    command: a,
                    number: "<strong>" + b + "</strong>",
                    country: '<a href="#" class="sms-codes-link">' + c + "</a>"
                })
            }
        }), twttr.view("twttr.views.PermalinkSignupCallOut").subclassOf(twttr.views.SmsFollow), twttr.view("twttr.views.ProfileActions").subclassOf(twttr.views.SmsFollow).methods({
            is_current_user: function() {
                return twttr.helpers.isCurrentUser(this.user)
            },
            can_view: function() {
                return twttr.helpers.canViewUser(this.user)
            },
            show_device_notifications: function() {
                return !this.is_current_user() && this.following && (twttr.currentUser.lang != "ja" || twttr.decider.isAvailable("email_device_settings"))
            },
            notifications_on_for_user: function() {
                return twttr.currentUser.deviceSetup && this.notifications
            },
            is_admin: function() {
                return twttr.is.def(twttr.isAdmin)
            }
        }), twttr.view("twttr.views.MessageThreadPreview").methods({
            last_was_yours: function() {
                return twttr.helpers.isCurrentUser(this.last_message().sender)
            },
            message_count: function() {
                return this.messages.length
            },
            last_message: function() {
                return this._last_message ? this._last_message : this._last_message = new twttr.views.Message(this.messages[0])
            },
            other_person: function() {
                return new twttr.views.User(this.last_was_yours() ? this.last_message().recipient : this.last_message().sender)
            },
            has_new_message: function() {
                return this.obj.hasNewMessages()
            }
        }), twttr.view("twttr.views.ConversationThreadUser", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.ConversationThreadPreview", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            message_count: function() {
                return this.count
            },
            last_message_date: function() {
                return this.lastMessageDate
            },
            timestamp: function() {
                return twttr.helpers.timeAgo(this.lastMessageDate, !0, !0)
            },
            other_person: function() {
                return new twttr.views.ConversationThreadUser(this.user)
            }
        }), twttr.view("twttr.views.Message", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            linkified_text: function() {
                var a = b.util.linkify(this.text, {
                    nofollow: !0
                });
                return a = b.util.linkifyEntities(a, this), a
            },
            timestamp: function() {
                return twttr.helpers.timeAgo(this.actual_timestamp(), !0, !0)
            },
            time_ago: function() {
                return twttr.helpers.timeAgoRounded(this.actual_timestamp())
            },
            actual_timestamp: function() {
                return twttr.helpers.parseDateString(this.created_at)
            }
        }), twttr.view("twttr.views.ProfileSignupCallOut", function() {
            twttr.views.BaseStats.apply(this, arguments)
        }).subclassOf(twttr.views.BaseStats), twttr.view("twttr.views.DashboardProfileStats", function(a, b) {
            twttr.views.BaseStats.apply(this, [a]), this.profileStatsTitle = b
        }).subclassOf(twttr.views.BaseStats).methods({
            profile_stats_title: function() {
                return this.profileStatsTitle || _("About @{{screen_name}}", {
                    screen_name: this.obj.screenName
                })
            }
        }), twttr.view("twttr.views.UserStats", function() {
            twttr.views.BaseStats.apply(this, arguments)
        }).subclassOf(twttr.views.BaseStats), twttr.view("twttr.views.TrendItem", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            is_sponsored: function() {
                return !!this.promoted_content
            },
            is_event: function() {
                return !!this.event_id
            },
            event_class: function() {
                return "badge-top"
            },
            event_title: function() {
                return _("Trending event")
            },
            promoted_badge_class: function() {
                return "badge-" + (this.promoted_content.disclosure_type || "promoted")
            },
            trend_search_path: function() {
                return twttr.router.searchResultsPath({
                    query: decodeURIComponent(this.query)
                })
            },
            search_query_source: function() {
                return twttr.search.searchQuerySource.TREND
            }
        }), twttr.view("twttr.views.LocalTrendLocation", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.LocalTrendLocationNew", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.FollowList").methods({
            follow_list: function() {
                return (new twttr.views.UserThumbList(this.users)).html()
            }
        }), twttr.view("twttr.views.LocalTrends", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            _sortPlaces: function(a) {
                return a.sort(function(a, b) {
                    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0
                })
            },
            country_locations: function() {
                var a = [],
                    c;
                for (var d = 0; d < this.items.length; d++) {
                    var e = this.items[d];
                    if (e.placeType.code !== b.constants.placeTypes.city) {
                        if (e.placeType.code == 19) {
                            c = e;
                            continue
                        }
                        a.push(e)
                    }
                }
                return a = this._sortPlaces(a), c && a.unshift(c), a
            },
            city_locations: function() {
                var a = [];
                for (var c = 0; c < this.items.length; c++) {
                    var d = this.items[c];
                    d.placeType.code === b.constants.placeTypes.city && a.push(d)
                }
                return a = this._sortPlaces(a), a
            }
        }), twttr.view("twttr.views.LocalTrendsNew", function(a, b) {
            twttr.views.BaseAPIList.call(this, a), this.forceShowLocations = b
        }).subclassOf(twttr.views.BaseAPIList).methods({
            _sortPlaces: function(a) {
                return a.sort(function(a, b) {
                    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0
                })
            },
            breadcrumbs: function() {
                if (this.is_personalized()) return null;
                var a = twttr.trendLocations.withFilterAncestors().reverse();
                if (twttr.decider.isAvailable("personalized_trends")) {
                    var b = twttr.trendLocations.current;
                    a[a.length - 1].woeid != b.woeid && a.push(b)
                }
                return a[a.length - 1] = $.extend({
                    is_last: !0
                }, a[a.length - 1]), a
            },
            is_personalized: function() {
                return twttr.decider.isAvailable("personalized_trends") && twttr.trendLocations.current.isPersonalized
            },
            show_personalized: function() {
                return this.is_personalized() && !this.forceShowLocations
            },
            locations: function() {
                var a = this._sortPlaces(twttr.trendLocations.currentChildren());
                return twttr.trendLocations.current.isPersonalized && a.unshift(twttr.trendLocations.worldwide()), a
            },
            locationsFor: function(a) {
                var b = this.locations(),
                    c = Math.ceil(b.length / 3);
                return b.slice(a * c, (a + 1) * c)
            },
            locations0: function() {
                return this.locationsFor(0)
            },
            locations1: function() {
                return this.locationsFor(1)
            },
            locations2: function() {
                return this.locationsFor(2)
            }
        }), twttr.view("twttr.views.Dialog", function(a) {
            this.options = a;
            var b = this.options.template || this.options;
            twttr.views.Base.call(this, b)
        }), twttr.view("twttr.views.TweetDialog", function(a) {
            this.options = a, this.options.fixed = !0, twttr.views.Dialog.call(this, a)
        }).subclassOf(twttr.views.Dialog).template(twttr.templates.dialog).methods(twttr.EventProvider).methods({
            afterRender: function(a) {
                var b = {
                    container_id: "tweetbox",
                    condensed: !1,
                    closeAfterSuccess: !1,
                    template: {
                        button_text: this.options.tweetButton || _("Tweet"),
                        show_geo: this.options.template.show_geo,
                        show_turkey: this.options.template.show_turkey
                    },
                    statusAction: this.options.statusAction || "update",
                    data: this.options.data,
                    defaultContent: this.options.defaultContent || "",
                    height: 56,
                    width: 452,
                    origin: this.options.origin,
                    enableDraft: this.options.enableDraft,
                    enableAutoGrow: !0
                };
                this.tweetBox = new twttr.TweetBox(a.find(".twttr-dialog-content"), b), this.tweetBox.bind("ready", twttr.bind(this, function() {
                    this.trigger("ready")
                }))
            }
        }), twttr.view("twttr.views.Footer", function() {
            twttr.views.Base.apply(this, arguments)
        }).methods({
            year: function() {
                return (new Date).getFullYear()
            }
        }), twttr.view("twttr.views.ReplyDialog", function(a) {
            this.options = a, this.options.statusAction = "reply", twttr.views.TweetDialog.call(this, this.options)
        }).subclassOf(twttr.views.TweetDialog).mixin(twttr.mixins.i18nTweet).template(twttr.templates.dialog).methods({
            afterRender: function(a) {
                twttr.views.TweetDialog.prototype.afterRender.call(this, a);
                var c = this;
                twttr.API.Status.find(this.options.data.tweetId, twttr.bind(this, function(d) {
                    var e = new twttr.views.ReplyDialogFooter({
                        screen_name: d.user.screenName,
                        text: b.util.linkifyEntities(b.util.linkify(d.text, {
                            nofollow: !0
                        }), d),
                        profile_image_url: d.user.profileImageUrl
                    });
                    e.render(a.find(".twttr-dialog-footer"), "append"), a.find("div.tweet").each(function() {
                        c.updateRtlDisplay($(this))
                    })
                }))
            }
        }), twttr.view("twttr.views.KeyboardShortcuts").methods({
            current_user_screen_name: function() {
                return twttr.currentUser.screenName
            }
        }), twttr.view("twttr.views.UserThumbList", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.BaseUser
        }), twttr.view("twttr.views.TweetActivityThumbList", function() {
            twttr.views.UserThumbList.apply(this, arguments), twttr.each(this.items.slice(this.constructor.max_items_to_show), function(a) {
                a.is_hidden = !0
            })
        }).template(twttr.templates.user_thumb_list).subclassOf(twttr.views.UserThumbList).statics({
            max_items_to_show: 5
        }), twttr.view("twttr.views.UserSmallListItem", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.UserThumbListItem", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.UserSmallList", function(a) {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.UserSmallListItem
        }), twttr.view("twttr.views.UserDetailedListItem", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.UserDetailedList", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.UserDetailedListItem
        }), twttr.view("twttr.views.UserStaticListItem", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.UserStaticList", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.UserStaticListItem
        }), twttr.view("twttr.views.UserItemAction", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.RecentlyViewed", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.BaseUser
        }), twttr.view("twttr.views.ContactImportMatchesStats", function() {
            twttr.views.Base.apply(this, arguments)
        }).subclassOf(twttr.views.Base).methods({
            follow_all_text: function() {
                return this.count <= 1 ? _("Follow all") : _("Follow all {{count}}", {
                    count: this.count - this.following_count
                })
            }
        }), twttr.view("twttr.views.DashboardContactImportMatchesStats", function() {
            twttr.views.ContactImportMatchesStats.apply(this, arguments)
        }).subclassOf(twttr.views.ContactImportMatchesStats), twttr.view("twttr.views.MatchedContactUser", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.InviteContacts", function() {
            twttr.views.Base.apply(this, arguments)
        }).subclassOf(twttr.views.Base).methods({
            select_all_text: function() {
                return this.contacts.length == 1 ? _("Select all") : _("Select all {{count}}", {
                    count: this.contacts.length
                })
            },
            preview_link_url: twttr.router.invitationEmailPreviewPath,
            truncate: function() {
                return function(a, b) {
                    var c = 28,
                        d = b(a);
                    return twttr.helpers.truncate(d, c)
                }
            }
        }), twttr.view("twttr.views.FollowingPage").methods({
            following_header_string: function() {
                var a = this.friends_count;
                if (a == 1) return this.is_current_user() ? _("You follow 1 person") : _("{{user}} follows 1 person", {
                    user: this.name
                });
                var c = b.util.formatNumber(a, twttr.pageLocale);
                return this.is_current_user() ? _("You follow {{num}} people", {
                    num: c
                }) : _("{{user}} follows {{num}} people", {
                    user: this.name,
                    num: c
                })
            },
            following_count_commaized: function() {
                return b.util.formatNumber(this.friends_count, twttr.pageLocale)
            }
        }), twttr.view("twttr.views.FollowingSubtabs", function() {
            twttr.views.Base.apply(this, arguments), this["active_subtab_" + this.subtab] = 1, this.screen_name = this.screenName
        }).subclassOf(twttr.views.Base), twttr.view("twttr.views.FollowersPage").methods({
            followers_header_string: function() {
                var a = this.followers_count;
                if (a == 1) return this.is_current_user() ? _("You have 1 follower") : _("{{user}} has 1 follower", {
                    user: this.name
                });
                var c = b.util.formatNumber(a, twttr.pageLocale);
                return this.is_current_user() ? _("You have {{num}} followers", {
                    num: c
                }) : _("{{user}} has {{num}} followers", {
                    user: this.name,
                    num: c
                })
            },
            followers_count_commaized: function() {
                return b.util.formatNumber(this.followers_count, twttr.pageLocale)
            }
        }), twttr.view("twttr.views.FollowersSubtabs", function() {
            twttr.views.Base.apply(this, arguments), this["active_subtab_" + this.subtab] = 1, this.screen_name = this.screenName
        }).subclassOf(twttr.views.Base), twttr.view("twttr.views.WelcomeAmbassador", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.WelcomeLearnFlow", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser).methods({
            name: function() {
                return twttr.currentUser.name
            }
        }), twttr.view("twttr.views.RecentTweets", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.SimpleTweet,
            screen_name: function() {
                return this.items[0].user.screen_name
            }
        }), twttr.view("twttr.views.Replies", function(a, b, c) {
            twttr.views.BaseAPI.apply(this, arguments), this.descendants = b || [], this.forks = c || []
        }).subclassOf(twttr.views.BaseAPI).methods({
            _viewFor: function(a) {
                return new twttr.views.StreamTweet(a)
            },
            _viewsFor: function(a) {
                var b = this;
                return twttr.map(a, function(a) {
                    return b._viewFor(a)
                })
            },
            has_replies: function() {
                return !0
            },
            has_tweets: function() {
                return this.descendants.length > 0 || this.forks.length > 0
            },
            descendant_tweet_views: function() {
                return this._viewsFor(this.descendants)
            },
            fork_tweet_views: function() {
                return this._viewsFor(this.forks)
            },
            on_permalink: function() {
                return twttr.app.isOnPage("permalink")
            }
        }), twttr.view("twttr.views.TweetActivity").methods({
            _list_for: function(a) {
                return userList = new twttr.API.util.BaseCollection(a), (new twttr.views.TweetActivityThumbList(userList)).html()
            },
            _count_for: function(a, b) {
                return (new twttr.views.TweetActivityCount({
                    length: a,
                    is_retweets: b === "retweeters",
                    is_favorites: b === "favoriters",
                    is_replies: b === "repliers"
                })).html()
            },
            _show_count: function(a) {
                return a.length > twttr.views.TweetActivityThumbList.max_items_to_show
            },
            show_retweets_count: function() {
                return this._show_count(this.activities.retweeters)
            },
            show_replies_count: function() {
                return this._show_count(this.activities.repliers)
            },
            show_favorites_count: function() {
                return this._show_count(this.activities.favoriters)
            },
            favorites_list: function() {
                return this._list_for(this.activities.favoriters)
            },
            retweets_list: function() {
                return this._list_for(this.activities.retweeters)
            },
            replies_list: function() {
                return this._list_for(this.activities.repliers)
            },
            retweets_count: function() {
                return this._count_for(this.counts.retweeters_count, "retweeters")
            },
            favorites_count: function() {
                return this._count_for(this.counts.favoriters_count, "favoriters")
            },
            replies_count: function() {
                return this._count_for(this.counts.repliers_count, "repliers")
            },
            is_retweets_empty: function() {
                return this.activities.retweeters.length === 0
            },
            is_favorites_empty: function() {
                return this.activities.favoriters.length === 0
            },
            is_replies_empty: function() {
                return this.activities.repliers.length === 0
            },
            is_activity_empty: function() {
                var a = this.is_favorites_empty() && this.is_retweets_empty(),
                    b = !this.in_permalink_page && a,
                    c = this.in_permalink_page && this.is_replies_empty() && a;
                return b || c
            }
        }), twttr.view("twttr.views.ActivityOfMeStreamTitle").methods({
            should_see_activity_filters: function() {
                return twttr.currentUser && twttr.currentUser.followersCount >= 2e3
            }
        }), twttr.view("twttr.views.ActivityItemUser", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.ActivityItem", function() {
            twttr.views.BaseAPI.apply(this, arguments), this.is_your_activity = this.for_stream === "your_activity", this.is_network_activity = this.for_stream === "activity"
        }).subclassOf(twttr.views.BaseAPI).template(twttr.templates.activity_item).mixin(twttr.mixins.ActivityViewHelpers).methods({
            _getSupplement: function(a) {
                var b = this.constructor.supplements[this.for_stream][this.event];
                b.primary && (b = a ? b.secondary : b.primary);
                if (b.sources && b.targets) {
                    var c = (this.is_retweet || this.is_favorite) && this.sources.length === 1 && this.targets.length > 1;
                    b = c ? b.targets : b.sources
                }
                return b
            },
            _traverse: function(a, b, c) {
                twttr.is.def(c) || (c = 0);
                if (!b || c >= b.length) return a;
                var d = b[c];
                if (twttr.is.def(a[d]) && !twttr.is.nil(a[d])) return this._traverse(a[d], b, c + 1)
            },
            _populateSubsWithObjects: function(a, b, c, d) {
                if (!d) return;
                var e = this;
                return twttr.inject(a, b, function(a, b, f) {
                    var g = e.constructor.substitutionKeyForObjectType[d],
                        i = twttr.API.Activity.classMap[e.event][c],
                        j = e._traverse(f, e.constructor.translateToObjectType[d][i]);
                    return a[c + "_" + g + "_" + b] = (new twttr.views[e.constructor.viewForObjectType[e.for_stream][d]](j)).html(), a
                })
            },
            _populateSubsWithCounts: function(a, b, c) {
                var d = c + "_count",
                    e = this[c + "_size"];
                return b["full_" + d] = e, b[d] = e - 1, b
            },
            _activity_supplement: function(a) {
                var b = this,
                    c = this._getSupplement(a || !1),
                    d = 4,
                    e = twttr.views[c.view],
                    f = this[c.object],
                    g = Math.min(c.max, f.length) - 1,
                    i = twttr.views.StreamUser === e;
                return twttr.map(f, function(c, f) {
                    var j;
                    return a && f == 0 ? "" : (c.embedded_by_activity = !0, c.is_your_activity = b.is_your_activity, c.is_network_activity = b.is_network_activity, c.for_activity = c.is_your_activity || c.is_network_activity, f > g && (twttr.isT1 ? (c.hidden_by_activity = !0, c.hidden_stack_class_name = f < d ? "stack-item-" + f : "stack-item-hidden") : c.hidden = !0), j = new e(c), i && (b.is_your_activity ? (j.avatar_size_class = "size24", j.profile_image_url = j.mini_profile_image_url()) : (j.avatar_size_class = "size73", j.profile_image_url = j.bigger_profile_image_url())), twttr.isT1 ? Mustache.to_html("<div class='supplement{{#is_hidden_supplement}} hidden-supplement {{hidden_stack_class_name}}{{/is_hidden_supplement}}{{^is_hidden_supplement}} visible-supplement{{/is_hidden_supplement}}'>{{{supplement}}}</div>", {
                        supplement: j.html(),
                        is_hidden_supplement: c.hidden_by_activity,
                        hidden_stack_class_name: c.hidden_stack_class_name
                    }) : j.html())
                }).join("")
            },
            icon_class: function() {
                return this.constructor.iconClasses[this.event]
            },
            should_show_first_actor: function() {
                return !this.is_your_activity || this.is_list_member_added
            },
            first_actor: function() {
                return new twttr.views.BaseUser(this.sources[0])
            },
            view_all_supplements_sentence: function() {
                var a = this.constructor.supplementViewAllSentences[this.event];
                if (!a) return "";
                var b;
                if (twttr.isT1) {
                    var c = this.hidden_supplements_count();
                    a = a[Math.min(a.length, c) - 1], b = {
                        hidden_count: c
                    }
                } else b = this.sources[0];
                return Mustache.to_html(a, b)
            },
            has_secondary_supplement: function() {
                var a = this.sources.length > this.constructor.maxQualifiedEntities;
                return !this.is_your_activity && a && (this.is_follow || this.is_retweet && this.target_objects.length === 1 || this.is_favorite && this.targets.length === 1)
            },
            has_hidden_supplements: function() {
                var a = this._getSupplement(),
                    b = this[a.object];
                return b.length > a.max && a.objectType === "Status"
            },
            hidden_supplements_count: function() {
                if (!this.has_hidden_supplements()) return 0;
                var a = this._getSupplement(),
                    b = this[a.object];
                return b.length - a.max
            },
            supplement_count: function() {
                var a = this._getSupplement(),
                    b = this[a.object];
                return b.length
            },
            user_supplement_and_count_greater_than_two: function() {
                return (this.is_follow || this.is_list_member_added) && this.supplement_count() > 2
            },
            user_supplement_and_count_exactly_two: function() {
                return (this.is_follow || this.is_list_member_added) && this.supplement_count() === 2
            },
            should_show_truncated_tweet: function() {
                return this.is_your_activity && (this.is_retweet || this.is_favorite) && this._getSupplement().useTruncated
            },
            truncated_tweet: function() {
                var a;
                if (this.is_retweet) a = this.target_objects[0];
                else {
                    if (!this.is_favorite) throw new Error("You shouldn't be using truncated_tweet() if not a retweet or favorite!");
                    a = this.targets[0]
                }
                return (new twttr.views.LatestTweet(a)).html()
            },
            activity_supplement: function() {
                return this._activity_supplement()
            },
            activity_secondary_supplement: function() {
                return this._activity_supplement(!0)
            },
            activity_line: function() {
                var a = this,
                    b = {},
                    c = this.constructor.objectClasses[this.event][this.for_stream],
                    d = this.constructor.objectStrings[this.event][this.for_stream];
                (!d || !c) && console.error("Should not have an activity item with this verb in this stream!", this);
                var e = this.constructor.lineItemObjects;
                b.position = this.min_position, this._populateSubsWithObjects(this[e[this.event].sources], b, "sources", c.sourceClass), this._populateSubsWithObjects(this[e[this.event].targets], b, "targets", c.targetClass), this._populateSubsWithObjects(this[e[this.event].target_objects], b, "target_objects", c.targetObjectClass), this._populateSubsWithCounts(this.sources, b, "sources"), this._populateSubsWithCounts(this.targets, b, "targets"), this._populateSubsWithCounts(this.target_objects, b, "target_objects");
                var f = this._getSupplement();
                if (this.is_your_activity && this.sources.length > f.max || this.has_secondary_supplement()) b.link_sources_count = !0;
                var g = d[Math.min(this.sources.length, d.length) - 1];
                return twttr.is.array(g) && (g = g[Math.min(this.targets.length, g.length) - 1], twttr.is.array(g) && (g = g[Math.min(this.target_objects.length, g.length) - 1])), Mustache.to_html(g, b)
            },
            full_timestamp: function() {
                return twttr.helpers.timeAgo(this.actual_timestamp(), !0)
            },
            actual_timestamp: function() {
                return twttr.helpers.parseDateString(this.created_at)
            },
            afterRender: function(a) {
                twttr.isT1 || this.is_your_activity && setTimeout(function() {
                    twttr.helpers.ellipsify(a.find(".stream-item-activity-line .tweet-row"))
                }, 0)
            }
        }), twttr.view("twttr.views.DashboardActivityItem", function() {
            twttr.views.ActivityItem.apply(this, arguments)
        }).subclassOf(twttr.views.ActivityItem), twttr.view("twttr.views.StreamUser", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.DashboardStreamUser", function() {
            this.constructor.uber.constructor.apply(this, arguments)
        }).subclassOf(twttr.views.StreamUser), twttr.view("twttr.views.StreamFollowerRequest", function() {
            this.constructor.uber.constructor.apply(this, arguments)
        }).subclassOf(twttr.views.StreamUser), twttr.view("twttr.views.ProfileUser", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.ProfileFollowCard", function() {
            twttr.views.BaseStats.apply(this, arguments)
        }).subclassOf(twttr.views.BaseStats), twttr.view("twttr.views.MiniProfileStats", function() {
            twttr.views.BaseStats.apply(this, arguments)
        }).subclassOf(twttr.views.BaseStats), twttr.view("twttr.views.List", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            is_public: function() {
                return this.mode === "public" || this.mode === undefined
            },
            is_own_list: function() {
                return twttr.helpers.isCurrentUser(this.user)
            },
            user_list_path: function() {
                return twttr.router.userListPath({
                    screen_name: this.user.screen_name,
                    list_slug: this.slug
                })
            },
            list_subscribers_path: function() {
                return twttr.router.listSubscribersPath({
                    screen_name: this.user.screen_name,
                    list_slug: this.slug
                })
            },
            list_members_path: function() {
                return twttr.router.listMembersPath({
                    screen_name: this.user.screen_name,
                    list_slug: this.slug
                })
            },
            full_name_sans_at: function() {
                return this.full_name.replace(/^[@＠]/, "")
            }
        }), twttr.view("twttr.views.ListLink", function() {
            twttr.views.List.apply(this, arguments)
        }).subclassOf(twttr.views.List), twttr.view("twttr.views.NewestListMembers").subclassOf(twttr.views.List), twttr.view("twttr.views.StreamList").subclassOf(twttr.views.List), twttr.view("twttr.views.ListStreamTitle").subclassOf(twttr.views.List), twttr.view("twttr.views.ListHeader").subclassOf(twttr.views.List), twttr.view("twttr.views.ListActions").subclassOf(twttr.views.List), twttr.view("twttr.views.ListStreamTabs").subclassOf(twttr.views.List), twttr.view("twttr.views.ListFollowCard").subclassOf(twttr.views.List), twttr.view("twttr.views.ListOfLists", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.List
        }), twttr.view("twttr.views.ListDialog").subclassOf(twttr.views.List), twttr.view("twttr.views.Retweeters", function(a) {
            twttr.views.Base.apply(this, arguments), this.count = a.count, this.retweeters = a.retweeters.map(function(a) {
                return new twttr.views.BaseUser(a)
            }).array
        }).methods({
            retweeted_by_count: function() {
                var a = this.tweet.retweetingStatus ? new twttr.views.BaseUser(this.tweet.retweetingStatus.user) : this.retweeters[0],
                    b = Mustache.to_html('<a class="user-profile-link" data-user-id="{{id}}" href="{{path}}" >{{screen_name}}</a>', {
                        id: a.id,
                        path: twttr.router.profilePath({
                            screen_name: a.screen_name
                        }),
                        screen_name: a.screen_name
                    });
                return this.count === 1 ? _("Retweeted by {{{user_link}}}", {
                    user_link: b
                }) : this.count === 2 ? _("Retweeted by {{{user_link}}} and 1 other", {
                    user_link: b
                }) : this.count ? _("Retweeted by {{{user_link}}} and {{count}} others", {
                    user_link: b,
                    count: this.count
                }) : _("Retweeted by {{{user_link}}} and others", {
                    user_link: b
                })
            }
        }), twttr.view("twttr.views.ProfilePage").methods({
            has_pending_requests: function() {
                return twttr.helpers.isProfileUser() && twttr.currentUser["protected"]
            },
            is_withheld: function() {
                return twttr.decider.isAvailable("phoenix_pctd") && !! twttr.profileUser.withheldScope && twttr.profileUser.withheldScope == "user"
            },
            is_withheld_copyright: function() {
                return twttr.decider.isAvailable("phoenix_pctd") && !! twttr.profileUser.withheldScope && twttr.profileUser.withheldScope == "user" && !! twttr.profileUser.withheldCopyright
            },
            is_current_user: function() {
                return twttr.helpers.isCurrentUser(twttr.profileUser.id)
            },
            render_withheld: function() {
                return this.is_withheld() && !this.is_current_user()
            }
        }), twttr.view("twttr.views.StreamSuggestionCategory", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            user_sample: function() {
                return this.obj.sample && this.obj.sample.length ? new twttr.views.UserStaticList(this.obj.sample.slice(0, 2)) : !1
            },
            category_name: function() {
                return this.obj.name
            }
        }), twttr.view("twttr.views.CardNewsOnebox").subclassOf(twttr.views.BaseAPI).methods({
            article_image: function() {
                return this.obj.getImage(twttr.isSSL())
            },
            article_url: function() {
                return this.obj.getExpandedUrl()
            },
            article_display_url: function() {
                return this.obj.getDisplayUrl()
            }
        }), twttr.view("twttr.views.CardEventOnebox").subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.CardAccountsOneboxItem").subclassOf(twttr.views.BaseUser).methods({
            is_onebox: !0
        }), twttr.view("twttr.views.CardAccountsOnebox", function(a, b) {
            twttr.views.BaseAPIList.call(this, a), this.view_all_path = b
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.CardAccountsOneboxItem
        }), using(twttr.isT1 ? "multiGlobals/more_views_t1" : "multiGlobals/more_views_p1", function() {
            twttr.views.makeDefaultViews(twttr.templates), a()
        })
    })
});
provide("multiGlobals/more_views_t1", function(a) {
    using("util", "constants", "mixins/t1/discoveryStoryHelpers").as(function(b) {
        twttr.view("twttr.views.MiniProfileUser", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.MiniCurrentUser", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.Nav").subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.AvatarRow", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.BaseUser
        }), twttr.view("twttr.views.TypeaheadSearchItem", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            search_query_source: function() {
                return twttr.is.def(this.id) ? twttr.search.searchQuerySource.SAVED_SEARCH : twttr.search.searchQuerySource.TYPEAHEAD
            }
        }), twttr.view("twttr.views.TypeaheadAccountsShortcut", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            search_query_source: function() {
                return twttr.search.searchQuerySource.TYPEAHEAD
            }
        }), twttr.view("twttr.views.ProtectedAncestorTweet").subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.CardNews", function(a) {
            twttr.views.BaseAPI.call(this, a.content.articles.get(0)), this.position = a.position, this.social_proof = a.attributes.social_proof, this.scribeComponent = "card_news"
        }).subclassOf(twttr.views.BaseAPI).mixin(twttr.mixins.discoverySearchHelper).methods({
            article_display_url: function() {
                return this.obj.getDisplayUrl()
            },
            article_image: function() {
                return this.obj.getImage(twttr.isSSL())
            },
            article_url: function() {
                return this.obj.getExpandedUrl()
            }
        }), twttr.view("twttr.views.CardTopic", function(a) {
            twttr.views.BaseAPI.call(this, a.content), this.position = a.position, this.scribeComponent = "card_topic";
            if (a.content.media && a.content.media.length > 0) {
                var b = a.content.media[0];
                this.has_image = b.type === "photo" && twttr.decider.isAvailable("t1d_topic_img"), this.has_video = b.type === "video" && twttr.decider.isAvailable("t1d_topic_vid"), this.has_media = this.has_image || this.has_video, this.tweet = a.content.tweet, this.tweet && this.tweet.user && (this.tweet.user.profile_image_url = twttr.assets.getPathFromAbsoluteURL(this.tweet.user.profile_image_url, {
                    isVersioned: !1
                })), this.has_media && (this.mediaInstance = twttr.media.matchInstance(b.media_url), this.image_url = this.getImageUrl(["large", "medium", "original"]), this.has_media = !! this.image_url)
            }
            this.media_type = this.has_image ? "image" : this.has_video ? "video" : null
        }).subclassOf(twttr.views.BaseAPI).mixin(twttr.mixins.discoverySearchHelper, twttr.mixins.discoveryMediaRenderHelper).methods({
            getImageUrl: function(a) {
                if (!this.media || this.media.length === 0) return null;
                var b = this.media[0];
                for (var c = 0; c < a.length; c++) {
                    var d = a[c];
                    if (b.sizes[d]) {
                        var e = b.sizes[d].url;
                        if (e) {
                            if (twttr.isSSL()) {
                                var f = b.sizes[d].url_https;
                                return f ? f : this.mediaInstance && this.mediaInstance.constructor.ssl ? e.replace(/^http:/, "https:") : e
                            }
                            return e
                        }
                    }
                }
                return null
            },
            tweet_text: function() {
                var a = this.text,
                    b = this,
                    c = this.entities && this.entities.urls;
                c && twttr.each(c, function(b) {
                    b.display_url && (a = a.replace(h(b.url), h(b.display_url)))
                });
                var d = this.entities && this.entities.media;
                return d && twttr.each(d, function(c) {
                    var d = b.text.substring(c.indices[0], c.indices[1]);
                    c.display_url && (a = a.replace(h(d), h(c.display_url)))
                }), a
            },
            card_url: function() {
                return this.tweet ? twttr.router.permalinkPath({
                    screen_name: this.tweet.user.screen_name,
                    id: this.tweet.id_str
                }) : twttr.router.searchFacetsSlideshowPath({
                    query: this.obj.query,
                    mode: this.has_image ? "photos" : "videos"
                }) + "?url=" + encodeURIComponent(this.media[0].media_url)
            },
            attribution_url: function() {
                return this.mediaInstance ? this.mediaInstance.domainUrl() : ""
            },
            attribution_img: function() {
                return this.mediaInstance ? this.mediaInstance.iconUrl() : ""
            },
            attribution_name: function() {
                return this.mediaInstance ? this.mediaInstance.attributionName() : ""
            },
            has_attribution: function() {
                return this.mediaInstance ? this.mediaInstance.hasAttributionInDiscovery() : !0
            }
        }), twttr.view("twttr.views.StreamInterestCategory").subclassOf(twttr.views.BaseAPI).methods({
            user_sample: function() {
                return this.obj.sample && this.obj.sample.length ? new twttr.views.UserStaticList(this.obj.sample.slice(0, 7)) : !1
            },
            interest_name: function() {
                return this.obj.name
            }
        }), twttr.view("twttr.views.DashboardStreamInterestCategory").subclassOf(twttr.views.StreamInterestCategory).template(twttr.templates.stream_interest_category).methods({
            user_sample: function() {
                return this.obj.sample && this.obj.sample.length ? new twttr.views.UserStaticList(this.obj.sample.slice(0, 3)) : !1
            }
        }), twttr.view("twttr.views.WelcomeLearnProfile").subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.StreamViewTogglerBase", function() {
            twttr.views.StreamViewToggler.apply(this, arguments)
        }), twttr.view("twttr.views.MentionsStreamViewToggler", function(a) {
            twttr.views.StreamViewTogglerBase.call(this, {
                title1: _("All"),
                active1: !a,
                route1: twttr.router.connectPath(),
                title2: _("Mentions"),
                active2: a,
                route2: twttr.router.mentionsPath()
            })
        }).subclassOf(twttr.views.StreamViewTogglerBase), twttr.view("twttr.views.ProfileStreamViewToggler", function(a, b) {
            twttr.views.StreamViewTogglerBase.call(this, {
                title1: _("With Replies"),
                active1: a,
                route1: twttr.router.profileWithRepliesPath({
                    screen_name: b.screenName
                }),
                title2: _("Without"),
                active2: !a,
                route2: twttr.router.profilePath({
                    screen_name: b.screenName
                })
            })
        }).subclassOf(twttr.views.StreamViewTogglerBase).template(twttr.templates.stream_view_toggler), twttr.view("twttr.views.SearchStreamViewToggler", function(a, b) {
            twttr.views.StreamViewTogglerBase.call(this, {
                title1: _("Top"),
                active1: b == "relevance",
                route1: twttr.router.searchResultsPath({
                    query: a
                }),
                tip1: "Find the most relevant tweets",
                title2: _("All"),
                active2: b == "tweets",
                tip2: "Find the most recent tweets",
                route2: twttr.router.searchRealtimePath({
                    query: a
                }),
                title3: _("People you follow"),
                active3: b == "timeline",
                route3: twttr.router.searchTimelinePath({
                    query: a
                }),
                tip3: "Find tweets from people you follow"
            })
        }).subclassOf(twttr.views.StreamViewTogglerBase), twttr.view("twttr.views.ListsStreamViewToggler", function(a) {
            twttr.views.StreamViewTogglerBase.call(this, {
                title1: _("Subscribed to"),
                active1: !a,
                route1: twttr.router.listsYouFollowPath(),
                title2: _("Member of"),
                active2: a,
                route2: twttr.router.listsFollowingYouPath()
            })
        }).subclassOf(twttr.views.StreamViewTogglerBase), twttr.view("twttr.views.FollowersStreamViewToggler", function(a, b) {
            twttr.views.StreamViewTogglerBase.call(this, {
                title1: _("All"),
                active1: !b,
                route1: twttr.router.userFollowersPath({
                    screen_name: a
                }),
                title2: _("You know"),
                active2: b,
                route2: twttr.router.followersYouFollowPath({
                    screen_name: a
                })
            })
        }).subclassOf(twttr.views.StreamViewTogglerBase), twttr.view("twttr.views.ProfileListsStreamViewToggler", function(a, b) {
            twttr.views.StreamViewTogglerBase.call(this, {
                title1: _("Subscribed to"),
                active1: a,
                route1: twttr.router.subscriptionsPath(b),
                title2: _("Member of"),
                active2: !a,
                route2: twttr.router.membershipsPath(b)
            })
        }).subclassOf(twttr.views.StreamViewTogglerBase), twttr.view("twttr.views.StreamSavedSearch", function() {
            twttr.views.BaseAPI.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPI).methods({
            saved_search_path: function() {
                return twttr.router.searchResultsPath({
                    query: decodeURIComponent(this.query)
                })
            },
            search_query_source: function() {
                return twttr.search.searchQuerySource.SAVED_SEARCH
            }
        }), twttr.view("twttr.views.DirectMessageDialogConversationList", function() {
            var a = this;
            twttr.views.Base.apply(a, arguments), a.items = [], twttr.each(a.threads, function(b) {
                a.items.push(new twttr.views.DirectMessageDialogConversationListItem(b))
            })
        }).subclassOf(twttr.views.Base), twttr.view("twttr.views.DirectMessageDialogConversationListItem", function() {
            twttr.views.Base.apply(this, arguments), this.last_message = new twttr.views.Message(this.messages[0]), this.is_last_message_mine = twttr.helpers.isCurrentUser(this.last_message.sender)
        }).methods({
            is_unread: function() {
                return this.obj.hasNewMessages()
            },
            last_message_text: function() {
                var a = this.last_message,
                    c = a.text;
                return a.entities && a.entities.urls && twttr.each(a.entities.urls, function(a) {
                    a.display_url && (c = c.replace(new RegExp(b.util.escapeRegExpChars(h(a.url))), h(a.display_url)))
                }), c
            },
            last_message_timestamp: function() {
                return this.last_message.timestamp()
            },
            last_message_actual_timestamp: function() {
                return this.last_message.actual_timestamp()
            },
            is_replied: function() {
                return this.is_last_message_mine && this.messages.length > 1
            },
            other_person: function() {
                return this.last_message[this.is_last_message_mine ? "recipient" : "sender"]
            }
        }), twttr.view("twttr.views.DirectMessageDialogConversation", function() {
            var a = this;
            twttr.views.Base.apply(a, arguments), a.items = [];
            for (var b = a.messages.length - 1; b >= 0; b--) a.items.push(new twttr.views.DirectMessageDialogConversationItem(a.messages[b]))
        }).subclassOf(twttr.views.Base), twttr.view("twttr.views.DirectMessageDialogConversationItem", function() {
            twttr.views.Message.apply(this, arguments)
        }).subclassOf(twttr.views.Message).methods({
            sent_or_received: function() {
                return twttr.helpers.isCurrentUser(this.sender) ? "sent" : "received"
            }
        }), twttr.view("twttr.views.TweetDetails", function() {
            twttr.views.BaseTweet.apply(this, arguments)
        }).subclassOf(twttr.views.BaseTweet), twttr.view("twttr.views.Ancestors", function(a) {
            twttr.views.BaseAPI.apply(this, arguments), this._ancestors = a || []
        }).subclassOf(twttr.views.BaseAPI).methods({
            _viewFor: function(a) {
                return new twttr.views.SimpleTweet(a)
            },
            _viewsFor: function(a) {
                var b = this;
                return twttr.map(a, function(a) {
                    return b._viewFor(a)
                })
            },
            ancestors: function() {
                return this._ancestors.length ? this._viewsFor(this._ancestors) : null
            }
        }), twttr.view("twttr.views.TweetStats", function(a) {
            twttr.views.Base.apply(this, arguments)
        }).subclassOf(twttr.views.Base).methods({
            replies_count: function() {
                return this.repliers && this.repliers.length ? this.repliers_count : !1
            },
            retweets_count: function() {
                return this.retweeters && this.retweeters.length ? this.retweeters_count : !1
            },
            favorites_count: function() {
                return this.favoriters && this.favoriters.length ? this.favoriters_count : !1
            }
        }), twttr.view("twttr.views.BigAvatarListItem", function() {
            twttr.views.BaseUser.apply(this, arguments)
        }).subclassOf(twttr.views.BaseUser), twttr.view("twttr.views.WebPersonalizationResults", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.BigAvatarListItem,
            has_recs: function() {
                return this.items && this.items.length > 0
            }
        }), twttr.view("twttr.views.GlobalNavSavedSearch").subclassOf(twttr.views.BaseAPI).methods({
            saved_search_path: function() {
                return twttr.router.searchResultsPath({
                    query: decodeURIComponent(this.query)
                })
            },
            search_query_source: function() {
                return twttr.search.searchQuerySource.SAVED_SEARCH
            }
        }), twttr.view("twttr.views.GlobalNavSavedSearches", function() {
            twttr.views.BaseAPIList.apply(this, arguments)
        }).subclassOf(twttr.views.BaseAPIList).methods({
            ItemView: twttr.views.GlobalNavSavedSearch
        }), twttr.view("twttr.views.PageProfile").methods({
            is_withheld: function() {
                return twttr.decider.isAvailable("phoenix_pctd") && !! twttr.profileUser.withheldScope && twttr.profileUser.withheldScope == "user"
            },
            is_withheld_copyright: function() {
                return twttr.decider.isAvailable("phoenix_pctd") && !! twttr.profileUser.withheldScope && twttr.profileUser.withheldScope == "user" && !! twttr.profileUser.withheldCopyright
            },
            is_current_user: function() {
                return twttr.helpers.isCurrentUser(twttr.profileUser.id)
            },
            render_withheld: function() {
                return this.is_withheld() && !this.is_current_user()
            }
        }), twttr.view("twttr.views.InlineReplyBox").subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.SoccerMatchedEvent").subclassOf(twttr.views.BaseAPI).methods({
            _currentStatus: function() {
                return this.obj.events.getMatchState().current_status
            },
            _appendTeamPage: function(a) {
                return a.user ? a.team_page = twttr.router.profilePath({
                    screen_name: a.user.screen_name
                }) : a.team_page = a.landing_page_url, a
            },
            getEvents: function() {
                return this.obj.events
            },
            home_team: function() {
                return this._appendTeamPage(this.obj.events.getMatchedTeam(!0))
            },
            score: function() {
                if (this._currentStatus() === "scheduled") return null;
                var a = this.obj.events.getMatchState().score;
                return a.search_path = this.search_path(), a
            },
            away_team: function() {
                return this._appendTeamPage(this.obj.events.getMatchedTeam(!1))
            },
            match_state: function() {
                var a = this.obj.events.getMatchState();
                a.show_time_elapsed_time = !1;
                if (a.current_status === "inprogress") {
                    a.show_time_elapsed_time = !0;
                    var b = 0,
                        c = 0,
                        d = a.current_period_elapsed_time + 1;
                    return a.overtime ? d > 15 ? (b = a.current_period === 2 ? 120 : 105, c = d - 15) : b = (a.current_period === 2 ? 105 : 90) + d : d > 45 ? (b = a.current_period === 2 ? 90 : 45, c = d - 45) : b = (a.current_period === 2 ? 45 : 0) + d, a.penalty_shootout ? (a.current_period_string = _("PK"), a.current_period_elapsed_time_string = null) : (a.current_period_elapsed_time_string = Mustache.to_html(_("{{minutes}} min{{#extra_time}} (+{{extra_time}}){{/extra_time}}", {
                        minutes: b,
                        extra_time: c
                    })), a.overtime ? a.current_period_string = _("ET") : a.current_period === 1 ? a.current_period_string = _("1st half") : a.current_period_string = _("2nd half")), a
                }
                return a.current_status === "halftime" ? (a.overtime ? a.current_period_string = _("ET") : a.penalty_shootout ? a.current_period_string = _("PK") : a.current_period_string = _("Halftime"), a) : null
            },
            preview: function() {
                return this._currentStatus() === "scheduled" ? {
                    time: twttr.helpers.prettyTime(this.obj.events.getMatchedEventData().scheduled_start_time_utc, !0),
                    url: this.obj.events.getMatchedEvent().preview_url,
                    search_path: this.search_path()
                } : null
            },
            recap: function() {
                var a = this.obj.events.getMatchState();
                return a.current_status === "final" ? {
                    url: this.obj.events.getMatchedEvent().recap_url
                } : null
            },
            hashtag: function() {
                return this.obj.events.getMatchedEvent().event_data.match_hashtag
            },
            search_path: function() {
                return twttr.router.searchResultsPath({
                    query: decodeURIComponent(this.obj.events.getMatchedEvent().event_data.match_hashtag)
                })
            },
            show_follow: function() {
                return !twttr.loggedIn
            }
        }), twttr.view("twttr.views.CardSoccerOnebox").subclassOf(twttr.views.BaseAPI), twttr.view("twttr.views.SoccerTicker").subclassOf(twttr.views.BaseAPI).methods({
            ticker_list: function() {
                return this.obj.events.getOtherMatchState()
            },
            preview: function() {
                return this.obj.events.getOtherMatchState().length === 0 ? this.obj.events.data().follow_news : null
            }
        }), a()
    })
});
provide("$lib/easyXDM.js", function(a) {
    /*!
     * easyXDM
     * http://easyxdm.net/
     * Copyright(c) 2009-2011, Øyvind Sean Kinsey, oyvind@kinsey.no.
     *
     * Permission is hereby granted, free of charge, to any person obtaining a copy
     * of this software and associated documentation files (the "Software"), to deal
     * in the Software without restriction, including without limitation the rights
     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
     * copies of the Software, and to permit persons to whom the Software is
     * furnished to do so, subject to the following conditions:
     *
     * The above copyright notice and this permission notice shall be included in
     * all copies or substantial portions of the Software.
     *
     * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
     * THE SOFTWARE.
     */
    (function(a, b, c, d, e, f) {
        function g(a, b) {
            var c = typeof a[b];
            return c == "function" || c == "object" && !! a[b] || c == "unknown"
        }
        function i(a, b) {
            return typeof a[b] == "object" && !! a[b]
        }
        function j(a) {
            return Object.prototype.toString.call(a) === "[object Array]"
        }
        function k(a) {
            try {
                var b = new ActiveXObject(a);
                return b = null, !0
            } catch (c) {
                return !1
            }
        }
        function l() {
            l = E, Q = !0;
            for (var a = 0; a < R.length; a++) R[a]();
            R.length = 0
        }
        function m(a, b) {
            if (Q) {
                a.call(b);
                return
            }
            R.push(function() {
                a.call(b)
            })
        }
        function n() {
            var a = parent;
            if (I !== "") for (var b = 0, c = I.split("."); b < c.length; b++) a = a[c[b]];
            return a.easyXDM
        }
        function o(b) {
            return a.easyXDM = K, I = b, I && (L = "easyXDM_" + I.replace(".", "_") + "_"), J
        }
        function p(a) {
            return a.match(F)[3]
        }
        function q(a) {
            var b = a.match(F),
                c = b[2],
                d = b[3],
                e = b[4] || "";
            if (c == "http:" && e == ":80" || c == "https:" && e == ":443") e = "";
            return c + "//" + d + e
        }
        function r(a) {
            a = a.replace(H, "$1/");
            if (!a.match(/^(http||https):\/\//)) {
                var b = a.substring(0, 1) === "/" ? "" : c.pathname;
                b.substring(b.length - 1) !== "/" && (b = b.substring(0, b.lastIndexOf("/") + 1)), a = c.protocol + "//" + c.host + b + a
            }
            while (G.test(a)) a = a.replace(G, "");
            return a
        }
        function s(a, b) {
            var c = "",
                d = a.indexOf("#");
            d !== -1 && (c = a.substring(d), a = a.substring(0, d));
            var e = [];
            for (var g in b) b.hasOwnProperty(g) && e.push(g + "=" + f(b[g]));
            return a + (N ? "#" : a.indexOf("?") == -1 ? "?" : "&") + e.join("&") + c
        }
        function t(a) {
            return typeof a == "undefined"
        }
        function u() {
            var a = {},
                b = {
                    a: [1, 2, 3]
                },
                c = '{"a":[1,2,3]}';
            return typeof JSON != "undefined" && typeof JSON.stringify == "function" && JSON.stringify(b).replace(/\s/g, "") === c ? JSON : (Object.toJSON && Object.toJSON(b).replace(/\s/g, "") === c && (a.stringify = Object.toJSON), typeof String.prototype.evalJSON == "function" && (b = c.evalJSON(), b.a && b.a.length === 3 && b.a[2] === 3 && (a.parse = function(a) {
                return a.evalJSON()
            })), a.stringify && a.parse ? (u = function() {
                return a
            }, a) : null)
        }
        function v(a, b, c) {
            var d;
            for (var e in b) b.hasOwnProperty(e) && (e in a ? (d = b[e], typeof d == "object" ? v(a[e], d, c) : c || (a[e] = b[e])) : a[e] = b[e]);
            return a
        }
        function w() {
            var c = b.createElement("iframe");
            c.name = L + "TEST", v(c.style, {
                position: "absolute",
                left: "-2000px",
                top: "0px"
            }), b.body.appendChild(c), M = c.contentWindow !== a.frames[c.name], b.body.removeChild(c)
        }
        function x(a) {
            t(M) && w();
            var c;
            M ? c = b.createElement("<iframe name='" + a.props.name + "' frameborder='0' allowtransparency='false' tabindex='-1', role='presentation' scrolling='no' />") : (c = b.createElement("IFRAME"), c.name = a.props.name, c.setAttribute("frameborder", "0"), c.setAttribute("allowtransparency", "false"), c.setAttribute("tabindex", "-1"), c.setAttribute("role", "presentation"), c.setAttribute("scrolling", "no")), c.id = c.name = a.props.name, delete a.props.name, a.onLoad && O(c, "load", a.onLoad), typeof a.container == "string" && (a.container = b.getElementById(a.container)), a.container || (c.style.position = "absolute", c.style.top = "-2000px", a.container = b.body);
            var d = a.props.src;
            return delete a.props.src, v(c, a.props), c.border = c.frameBorder = 0, a.container.appendChild(c), c.src = d, a.props.src = d, c
        }
        function y(a, b) {
            typeof a == "string" && (a = [a]);
            var c, d = a.length;
            while (d--) {
                c = a[d], c = new RegExp(c.substr(0, 1) == "^" ? c : "^" + c.replace(/(\*)/g, ".$1").replace(/\?/g, ".") + "$");
                if (c.test(b)) return !0
            }
            return !1
        }
        function z(d) {
            var e = d.protocol,
                f;
            d.isHost = d.isHost || t(U.xdm_p), N = d.hash || !1, d.props || (d.props = {});
            if (!d.isHost) {
                d.channel = U.xdm_c, d.secret = U.xdm_s, d.remote = U.xdm_e, e = U.xdm_p;
                if (d.acl && !y(d.acl, d.remote)) throw new Error("Access denied for " + d.remote)
            } else d.remote = r(d.remote), d.channel = d.channel || "default" + D++, d.secret = Math.random().toString(16).substring(2), t(e) && (q(c.href) == q(d.remote) ? e = "4" : g(a, "postMessage") || g(b, "postMessage") ? e = "1" : g(a, "ActiveXObject") && k("ShockwaveFlash.ShockwaveFlash") ? e = "6" : navigator.product === "Gecko" && "frameElement" in a && navigator.userAgent.indexOf("WebKit") == -1 ? e = "5" : d.remoteHelper ? (d.remoteHelper = r(d.remoteHelper), e = "2") : e = "0");
            switch (e) {
            case "0":
                v(d, {
                    interval: 100,
                    delay: 2e3,
                    useResize: !0,
                    useParent: !1,
                    usePolling: !1
                }, !0);
                if (d.isHost) {
                    if (!d.local) {
                        var i = c.protocol + "//" + c.host,
                            j = b.body.getElementsByTagName("img"),
                            l, m = j.length;
                        while (m--) {
                            l = j[m];
                            if (l.src.substring(0, i.length) === i) {
                                d.local = l.src;
                                break
                            }
                        }
                        d.local || (d.local = a)
                    }
                    var n = {
                        xdm_c: d.channel,
                        xdm_p: 0
                    };
                    d.local === a ? (d.usePolling = !0, d.useParent = !0, d.local = c.protocol + "//" + c.host + c.pathname + c.search, n.xdm_e = d.local, n.xdm_pa = 1) : n.xdm_e = r(d.local), d.container && (d.useResize = !1, n.xdm_po = 1), d.remote = s(d.remote, n)
                } else v(d, {
                    channel: U.xdm_c,
                    remote: U.xdm_e,
                    useParent: !t(U.xdm_pa),
                    usePolling: !t(U.xdm_po),
                    useResize: d.useParent ? !1 : d.useResize
                });
                f = [new J.stack.HashTransport(d), new J.stack.ReliableBehavior({}), new J.stack.QueueBehavior({
                    encode: !0,
                    maxLength: 4e3 - d.remote.length
                }), new J.stack.VerifyBehavior({
                    initiate: d.isHost
                })];
                break;
            case "1":
                f = [new J.stack.PostMessageTransport(d)];
                break;
            case "2":
                f = [new J.stack.NameTransport(d), new J.stack.QueueBehavior, new J.stack.VerifyBehavior({
                    initiate: d.isHost
                })];
                break;
            case "3":
                f = [new J.stack.NixTransport(d)];
                break;
            case "4":
                f = [new J.stack.SameOriginTransport(d)];
                break;
            case "5":
                f = [new J.stack.FrameElementTransport(d)];
                break;
            case "6":
                d.swf || (d.swf = "../../tools/easyxdm.swf"), f = [new J.stack.FlashTransport(d)]
            }
            return f.push(new J.stack.QueueBehavior({
                lazy: d.lazy,
                remove: !0
            })), f
        }
        function A(a) {
            var b, c = {
                incoming: function(a, b) {
                    this.up.incoming(a, b)
                },
                outgoing: function(a, b) {
                    this.down.outgoing(a, b)
                },
                callback: function(a) {
                    this.up.callback(a)
                },
                init: function() {
                    this.down.init()
                },
                destroy: function() {
                    this.down.destroy()
                }
            };
            for (var d = 0, e = a.length; d < e; d++) b = a[d], v(b, c, !0), d !== 0 && (b.down = a[d - 1]), d !== e - 1 && (b.up = a[d + 1]);
            return b
        }
        function B(a) {
            a.up.down = a.down, a.down.up = a.up, a.up = a.down = null
        }
        var C = this,
            D = Math.floor(Math.random() * 1e4),
            E = Function.prototype,
            F = /^((http.?:)\/\/([^:\/\s]+)(:\d+)*)/,
            G = /[\-\w]+\/\.\.\//,
            H = /([^:])\/\//g,
            I = "",
            J = {},
            K = a.easyXDM,
            L = "easyXDM_",
            M, N = !1,
            O, P;
        if (g(a, "addEventListener")) O = function(a, b, c) {
            a.addEventListener(b, c, !1)
        }, P = function(a, b, c) {
            a.removeEventListener(b, c, !1)
        };
        else {
            if (!g(a, "attachEvent")) throw new Error("Browser not supported");
            O = function(a, b, c) {
                a.attachEvent("on" + b, c)
            }, P = function(a, b, c) {
                a.detachEvent("on" + b, c)
            }
        }
        var Q = !1,
            R = [],
            S;
        "readyState" in b ? (S = b.readyState, Q = S == "complete" || ~navigator.userAgent.indexOf("AppleWebKit/") && (S == "loaded" || S == "interactive")) : Q = !! b.body;
        if (!Q) {
            if (g(a, "addEventListener")) O(b, "DOMContentLoaded", l);
            else {
                O(b, "readystatechange", function() {
                    b.readyState == "complete" && l()
                });
                if (b.documentElement.doScroll && a === top) {
                    var T = function() {
                            if (Q) return;
                            try {
                                b.documentElement.doScroll("left")
                            } catch (a) {
                                d(T, 1);
                                return
                            }
                            l()
                        };
                    T()
                }
            }
            O(a, "load", l)
        }
        var U = function(a) {
                a = a.substring(1).split("&");
                var b = {},
                    c, d = a.length;
                while (d--) c = a[d].split("="), b[c[0]] = e(c[1]);
                return b
            }(/xdm_e=/.test(c.search) ? c.search : c.hash);
        v(J, {
            version: "2.4.12.108",
            query: U,
            stack: {},
            apply: v,
            getJSONObject: u,
            whenReady: m,
            noConflict: o
        }), J.DomHelper = {
            on: O,
            un: P,
            requiresJSON: function(c) {
                i(a, "JSON") || b.write('<script type="text/javascript" src="' + c + '"><' + "/script>")
            }
        }, function() {
            var a = {};
            J.Fn = {
                set: function(b, c) {
                    a[b] = c
                },
                get: function(b, c) {
                    var d = a[b];
                    return c && delete a[b], d
                }
            }
        }(), J.Socket = function(a) {
            var b = A(z(a).concat([{
                incoming: function(b, c) {
                    a.onMessage(b, c)
                },
                callback: function(b) {
                    a.onReady && a.onReady(b)
                }
            }])),
                c = q(a.remote);
            this.origin = q(a.remote), this.destroy = function() {
                b.destroy()
            }, this.postMessage = function(a) {
                b.outgoing(a, c)
            }, b.init()
        }, J.Rpc = function(a, b) {
            if (b.local) for (var c in b.local) if (b.local.hasOwnProperty(c)) {
                var d = b.local[c];
                typeof d == "function" && (b.local[c] = {
                    method: d
                })
            }
            var e = A(z(a).concat([new J.stack.RpcBehavior(this, b),
            {
                callback: function(b) {
                    a.onReady && a.onReady(b)
                }
            }]));
            this.origin = q(a.remote), this.destroy = function() {
                e.destroy()
            }, e.init()
        }, J.stack.SameOriginTransport = function(a) {
            var b, e, f, g;
            return b = {
                outgoing: function(a, b, c) {
                    f(a), c && c()
                },
                destroy: function() {
                    e && (e.parentNode.removeChild(e), e = null)
                },
                onDOMReady: function() {
                    g = q(a.remote), a.isHost ? (v(a.props, {
                        src: s(a.remote, {
                            xdm_e: c.protocol + "//" + c.host + c.pathname,
                            xdm_c: a.channel,
                            xdm_p: 4
                        }),
                        name: L + a.channel + "_provider"
                    }), e = x(a), J.Fn.set(a.channel, function(a) {
                        return f = a, d(function() {
                            b.up.callback(!0)
                        }, 0), function(a) {
                            b.up.incoming(a, g)
                        }
                    })) : (f = n().Fn.get(a.channel, !0)(function(a) {
                        b.up.incoming(a, g)
                    }), d(function() {
                        b.up.callback(!0)
                    }, 0))
                },
                init: function() {
                    m(b.onDOMReady, b)
                }
            }
        }, J.stack.FlashTransport = function(a) {
            function e(a) {
                d(function() {
                    g.up.incoming(a, k)
                }, 0)
            }
            function f(d) {
                var e = a.swf,
                    f = "easyXDM_swf_" + Math.floor(Math.random() * 1e4),
                    g = o + 'easyXDM.Fn.get("flash_' + f + '_init")';
                J.Fn.set("flash_" + f + "_init", function() {
                    J.stack.FlashTransport.__swf = l = n.firstChild, d()
                }), n = b.createElement("div"), v(n.style, {
                    height: "1px",
                    width: "1px",
                    postition: "abosolute",
                    left: 0,
                    top: 0
                }), b.body.appendChild(n);
                var i = "proto=" + c.protocol + "&domain=" + p(c.href) + "&init=" + g;
                n.innerHTML = "<object height='1' width='1' type='application/x-shockwave-flash' id='" + f + "' data='" + e + "'>" + "<param name='allowScriptAccess' value='always'></param>" + "<param name='wmode' value='transparent'>" + "<param name='movie' value='" + e + "'></param>" + "<param name='flashvars' value='" + i + "'></param>" + "<embed type='application/x-shockwave-flash' FlashVars='" + i + "' allowScriptAccess='always' wmode='transparent' src='" + e + "' height='1' width='1'></embed>" + "</object>"
            }
            var g, i, j, k, l, n, o = I ? I + "." : "";
            return g = {
                outgoing: function(b, c, d) {
                    l.postMessage(a.channel, b), d && d()
                },
                destroy: function() {
                    try {
                        l.destroyChannel(a.channel)
                    } catch (b) {}
                    l = null, i && (i.parentNode.removeChild(i), i = null)
                },
                onDOMReady: function() {
                    k = q(a.remote), l = J.stack.FlashTransport.__swf;
                    var b = function() {
                            a.isHost ? J.Fn.set("flash_" + a.channel + "_onMessage", function(b) {
                                b == a.channel + "-ready" && (J.Fn.set("flash_" + a.channel + "_onMessage", e), d(function() {
                                    g.up.callback(!0)
                                }, 0))
                            }) : J.Fn.set("flash_" + a.channel + "_onMessage", e), l.createChannel(a.channel, a.remote, a.isHost, o + 'easyXDM.Fn.get("flash_' + a.channel + '_onMessage")', a.secret), a.isHost ? (v(a.props, {
                                src: s(a.remote, {
                                    xdm_e: q(c.href),
                                    xdm_c: a.channel,
                                    xdm_s: a.secret,
                                    xdm_p: 6
                                }),
                                name: L + a.channel + "_provider"
                            }), i = x(a)) : (l.postMessage(a.channel, a.channel + "-ready"), d(function() {
                                g.up.callback(!0)
                            }, 0))
                        };
                    l ? b() : f(b)
                },
                init: function() {
                    m(g.onDOMReady, g)
                }
            }
        }, J.stack.PostMessageTransport = function(b) {
            function e(a) {
                if (a.origin) return q(a.origin);
                if (a.uri) return q(a.uri);
                if (a.domain) return c.protocol + "//" + a.domain;
                throw "Unable to retrieve the origin of the event"
            }
            function f(a) {
                var c = e(a);
                c == k && a.data.substring(0, b.channel.length + 1) == b.channel + " " && g.up.incoming(a.data.substring(b.channel.length + 1), c)
            }
            var g, i, j, k;
            return g = {
                outgoing: function(a, c, d) {
                    j.postMessage(b.channel + " " + a, c || k), d && d()
                },
                destroy: function() {
                    P(a, "message", f), i && (j = null, i.parentNode.removeChild(i), i = null)
                },
                onDOMReady: function() {
                    k = q(b.remote), b.isHost ? (O(a, "message", function e(c) {
                        c.data == b.channel + "-ready" && (j = "postMessage" in i.contentWindow ? i.contentWindow : i.contentWindow.document, P(a, "message", e), O(a, "message", f), d(function() {
                            g.up.callback(!0)
                        }, 0))
                    }), v(b.props, {
                        src: s(b.remote, {
                            xdm_e: q(c.href),
                            xdm_c: b.channel,
                            xdm_p: 1
                        }),
                        name: L + b.channel + "_provider"
                    }), i = x(b)) : (O(a, "message", f), j = "postMessage" in a.parent ? a.parent : a.parent.document, j.postMessage(b.channel + "-ready", k), d(function() {
                        g.up.callback(!0)
                    }, 0))
                },
                init: function() {
                    m(g.onDOMReady, g)
                }
            }
        }, J.stack.FrameElementTransport = function(e) {
            var f, g, i, j;
            return f = {
                outgoing: function(a, b, c) {
                    i.call(this, a), c && c()
                },
                destroy: function() {
                    g && (g.parentNode.removeChild(g), g = null)
                },
                onDOMReady: function() {
                    j = q(e.remote), e.isHost ? (v(e.props, {
                        src: s(e.remote, {
                            xdm_e: q(c.href),
                            xdm_c: e.channel,
                            xdm_p: 5
                        }),
                        name: L + e.channel + "_provider"
                    }), g = x(e), g.fn = function(a) {
                        return delete g.fn, i = a, d(function() {
                            f.up.callback(!0)
                        }, 0), function(a) {
                            f.up.incoming(a, j)
                        }
                    }) : (b.referrer && q(b.referrer) != U.xdm_e && (a.top.location = U.xdm_e), i = a.frameElement.fn(function(a) {
                        f.up.incoming(a, j)
                    }), f.up.callback(!0))
                },
                init: function() {
                    m(f.onDOMReady, f)
                }
            }
        }, J.stack.NixTransport = function(e) {
            var f, i, j, k, l;
            return f = {
                outgoing: function(a, b, c) {
                    j(a), c && c()
                },
                destroy: function() {
                    l = null, i && (i.parentNode.removeChild(i), i = null)
                },
                onDOMReady: function() {
                    k = q(e.remote);
                    if (e.isHost) {
                        try {
                            g(a, "getNixProxy") || a.execScript("Class NixProxy\n    Private m_parent, m_child, m_Auth\n\n    Public Sub SetParent(obj, auth)\n        If isEmpty(m_Auth) Then m_Auth = auth\n        SET m_parent = obj\n    End Sub\n    Public Sub SetChild(obj)\n        SET m_child = obj\n        m_parent.ready()\n    End Sub\n\n    Public Sub SendToParent(data, auth)\n        If m_Auth = auth Then m_parent.send(CStr(data))\n    End Sub\n    Public Sub SendToChild(data, auth)\n        If m_Auth = auth Then m_child.send(CStr(data))\n    End Sub\nEnd Class\nFunction getNixProxy()\n    Set GetNixProxy = New NixProxy\nEnd Function\n", "vbscript"), l = getNixProxy(), l.SetParent({
                                send: function(a) {
                                    f.up.incoming(a, k)
                                },
                                ready: function() {
                                    d(function() {
                                        f.up.callback(!0)
                                    }, 0)
                                }
                            }, e.secret), j = function(a) {
                                l.SendToChild(a, e.secret)
                            }
                        } catch (m) {
                            throw new Error("Could not set up VBScript NixProxy:" + m.message)
                        }
                        v(e.props, {
                            src: s(e.remote, {
                                xdm_e: q(c.href),
                                xdm_c: e.channel,
                                xdm_s: e.secret,
                                xdm_p: 3
                            }),
                            name: L + e.channel + "_provider"
                        }), i = x(e), i.contentWindow.opener = l
                    } else {
                        b.referrer && q(b.referrer) != U.xdm_e && (a.top.location = U.xdm_e);
                        try {
                            l = a.opener
                        } catch (n) {
                            throw new Error("Cannot access window.opener")
                        }
                        l.SetChild({
                            send: function(a) {
                                C.setTimeout(function() {
                                    f.up.incoming(a, k)
                                }, 0)
                            }
                        }), j = function(a) {
                            l.SendToParent(a, e.secret)
                        }, d(function() {
                            f.up.callback(!0)
                        }, 0)
                    }
                },
                init: function() {
                    m(f.onDOMReady, f)
                }
            }
        }, J.stack.NameTransport = function(a) {
            function b(b) {
                var c = a.remoteHelper + (i ? "#_3" : "#_2") + a.channel;
                j.contentWindow.sendMessage(b, c)
            }
            function c() {
                i ? (++l === 2 || !i) && g.up.callback(!0) : (b("ready"), g.up.callback(!0))
            }
            function e(a) {
                g.up.incoming(a, o)
            }
            function f() {
                n && d(function() {
                    n(!0)
                }, 0)
            }
            var g, i, j, k, l, n, o, p;
            return g = {
                outgoing: function(a, c, d) {
                    n = d, b(a)
                },
                destroy: function() {
                    j.parentNode.removeChild(j), j = null, i && (k.parentNode.removeChild(k), k = null)
                },
                onDOMReady: function() {
                    i = a.isHost, l = 0, o = q(a.remote), a.local = r(a.local), i ? (J.Fn.set(a.channel, function(b) {
                        i && b === "ready" && (J.Fn.set(a.channel, e), c())
                    }), p = s(a.remote, {
                        xdm_e: a.local,
                        xdm_c: a.channel,
                        xdm_p: 2
                    }), v(a.props, {
                        src: p + "#" + a.channel,
                        name: L + a.channel + "_provider"
                    }), k = x(a)) : (a.remoteHelper = a.remote, J.Fn.set(a.channel, e)), j = x({
                        props: {
                            src: a.local + "#_4" + a.channel
                        },
                        onLoad: function b() {
                            var e = j || this;
                            P(e, "load", b), J.Fn.set(a.channel + "_load", f), function g() {
                                typeof e.contentWindow.sendMessage == "function" ? c() : d(g, 50)
                            }()
                        }
                    })
                },
                init: function() {
                    m(g.onDOMReady, g)
                }
            }
        }, J.stack.HashTransport = function(b) {
            function c(a) {
                if (!s) return;
                var c = b.remote + "#" + p+++"_" + a;
                (k || !t ? s.contentWindow : s).location = c
            }
            function e(a) {
                o = a, i.up.incoming(o.substring(o.indexOf("_") + 1), u)
            }
            function f() {
                if (!r) return;
                var a = r.location.href,
                    b = "",
                    c = a.indexOf("#");
                c != -1 && (b = a.substring(c)), b && b != o && e(b)
            }
            function g() {
                l = setInterval(f, n)
            }
            var i, j = this,
                k, l, n, o, p, r, s, t, u;
            return i = {
                outgoing: function(a, b) {
                    c(a)
                },
                destroy: function() {
                    a.clearInterval(l), (k || !t) && s.parentNode.removeChild(s), s = null
                },
                onDOMReady: function() {
                    k = b.isHost, n = b.interval, o = "#" + b.channel, p = 0, t = b.useParent, u = q(b.remote);
                    if (k) {
                        b.props = {
                            src: b.remote,
                            name: L + b.channel + "_provider"
                        };
                        if (t) b.onLoad = function() {
                            r = a, g(), i.up.callback(!0)
                        };
                        else {
                            var c = 0,
                                e = b.delay / 50;
                            (function f() {
                                if (++c > e) throw new Error("Unable to reference listenerwindow");
                                try {
                                    r = s.contentWindow.frames[L + b.channel + "_consumer"]
                                } catch (a) {}
                                r ? (g(), i.up.callback(!0)) : d(f, 50)
                            })()
                        }
                        s = x(b)
                    } else r = a, g(), t ? (s = parent, i.up.callback(!0)) : (v(b, {
                        props: {
                            src: b.remote + "#" + b.channel + new Date,
                            name: L + b.channel + "_consumer"
                        },
                        onLoad: function() {
                            i.up.callback(!0)
                        }
                    }), s = x(b))
                },
                init: function() {
                    m(i.onDOMReady, i)
                }
            }
        }, J.stack.ReliableBehavior = function(a) {
            var b, c, d = 0,
                e = 0,
                f = "";
            return b = {
                incoming: function(a, g) {
                    var i = a.indexOf("_"),
                        j = a.substring(0, i).split(",");
                    a = a.substring(i + 1), j[0] == d && (f = "", c && c(!0)), a.length > 0 && (b.down.outgoing(j[1] + "," + d + "_" + f, g), e != j[1] && (e = j[1], b.up.incoming(a, g)))
                },
                outgoing: function(a, g, i) {
                    f = a, c = i, b.down.outgoing(e + "," + ++d + "_" + a, g)
                }
            }
        }, J.stack.QueueBehavior = function(a) {
            function b() {
                if (a.remove && g.length === 0) {
                    B(c);
                    return
                }
                if (i || g.length === 0 || k) return;
                i = !0;
                var e = g.shift();
                c.down.outgoing(e.data, e.origin, function(a) {
                    i = !1, e.callback && d(function() {
                        e.callback(a)
                    }, 0), b()
                })
            }
            var c, g = [],
                i = !0,
                j = "",
                k, l = 0,
                m = !1,
                n = !1;
            return c = {
                init: function() {
                    t(a) && (a = {}), a.maxLength && (l = a.maxLength, n = !0), a.lazy ? m = !0 : c.down.init()
                },
                callback: function(a) {
                    i = !1;
                    var d = c.up;
                    b(), d.callback(a)
                },
                incoming: function(b, d) {
                    if (n) {
                        var f = b.indexOf("_"),
                            g = parseInt(b.substring(0, f), 10);
                        j += b.substring(f + 1), g === 0 && (a.encode && (j = e(j)), c.up.incoming(j, d), j = "")
                    } else c.up.incoming(b, d)
                },
                outgoing: function(d, e, i) {
                    a.encode && (d = f(d));
                    var j = [],
                        k;
                    if (n) {
                        while (d.length !== 0) k = d.substring(0, l), d = d.substring(k.length), j.push(k);
                        while (k = j.shift()) g.push({
                            data: j.length + "_" + k,
                            origin: e,
                            callback: j.length === 0 ? i : null
                        })
                    } else g.push({
                        data: d,
                        origin: e,
                        callback: i
                    });
                    m ? c.down.init() : b()
                },
                destroy: function() {
                    k = !0, c.down.destroy()
                }
            }
        }, J.stack.VerifyBehavior = function(a) {
            function b() {
                d = Math.random().toString(16).substring(2), c.down.outgoing(d)
            }
            var c, d, e, f = !1;
            return c = {
                incoming: function(f, g) {
                    var i = f.indexOf("_");
                    i === -1 ? f === d ? c.up.callback(!0) : e || (e = f, a.initiate || b(), c.down.outgoing(f)) : f.substring(0, i) === e && c.up.incoming(f.substring(i + 1), g)
                },
                outgoing: function(a, b, e) {
                    c.down.outgoing(d + "_" + a, b, e)
                },
                callback: function(c) {
                    a.initiate && b()
                }
            }
        }, J.stack.RpcBehavior = function(a, b) {
            function c(a) {
                a.jsonrpc = "2.0", f.down.outgoing(g.stringify(a))
            }
            function d(a, b) {
                var d = Array.prototype.slice;
                return function() {
                    var e = arguments.length,
                        f, g = {
                            method: b
                        };
                    e > 0 && typeof arguments[e - 1] == "function" ? (e > 1 && typeof arguments[e - 2] == "function" ? (f = {
                        success: arguments[e - 2],
                        error: arguments[e - 1]
                    }, g.params = d.call(arguments, 0, e - 2)) : (f = {
                        success: arguments[e - 1]
                    }, g.params = d.call(arguments, 0, e - 1)), k["" + ++i] = f, g.id = i) : g.params = d.call(arguments, 0), a.namedParams && g.params.length === 1 && (g.params = g.params[0]), c(g)
                }
            }
            function e(a, b, d, e) {
                if (!d) {
                    b && c({
                        id: b,
                        error: {
                            code: -32601,
                            message: "Procedure not found."
                        }
                    });
                    return
                }
                var f, g;
                b ? (f = function(a) {
                    f = E, c({
                        id: b,
                        result: a
                    })
                }, g = function(a, d) {
                    g = E;
                    var e = {
                        id: b,
                        error: {
                            code: -32099,
                            message: a
                        }
                    };
                    d && (e.error.data = d), c(e)
                }) : f = g = E, j(e) || (e = [e]);
                try {
                    var i = d.method.apply(d.scope, e.concat([f, g]));
                    t(i) || f(i)
                } catch (k) {
                    g(k.message)
                }
            }
            var f, g = b.serializer || u(),
                i = 0,
                k = {};
            return f = {
                incoming: function(a, d) {
                    var f = g.parse(a);
                    if (f.method) b.handle ? b.handle(f, c) : e(f.method, f.id, b.local[f.method], f.params);
                    else {
                        var i = k[f.id];
                        f.error ? i.error && i.error(f.error) : i.success && i.success(f.result), delete k[f.id]
                    }
                },
                init: function() {
                    if (b.remote) for (var c in b.remote) b.remote.hasOwnProperty(c) && (a[c] = d(b.remote[c], c));
                    f.down.init()
                },
                destroy: function() {
                    for (var c in b.remote) b.remote.hasOwnProperty(c) && a.hasOwnProperty(c) && delete a[c];
                    f.down.destroy()
                }
            }
        }, C.easyXDM = J
    })(window, document, location, window.setTimeout, decodeURIComponent, encodeURIComponent), a()
});
provide("libwrap/easyxdm", function(a) {
    using("$lib/easyXDM.js", function() {
        a(easyXDM)
    })
});
provide("lib/lazyload", function(a) {
    a(function(a) {
        function b(b, c) {
            var d = a.createElement(b),
                e;
            for (e in c) c.hasOwnProperty(e) && d.setAttribute(e, c[e]);
            return d
        }
        function c(a) {
            var b = k[a],
                c, d;
            b && (c = b.callback, d = b.urls, d.shift(), l = 0, d.length || (c && c.call(b.context, b.obj), k[a] = null, m[a].length && e(a)))
        }
        function d() {
            var b = navigator.userAgent;
            i = {
                async: a.createElement("script").async === !0
            }, (i.webkit = /AppleWebKit\//.test(b)) || (i.ie = /MSIE/.test(b)) || (i.opera = /Opera/.test(b)) || (i.gecko = /Gecko\//.test(b)) || (i.unknown = !0)
        }
        function e(e, l, n, o, p) {
            var q = function() {
                    c(e)
                },
                r = e === "css",
                s = [],
                t, u, v, w, x, y;
            i || d();
            if (l) {
                l = typeof l == "string" ? [l] : l.concat();
                if (r || i.async || i.gecko || i.opera) m[e].push({
                    urls: l,
                    callback: n,
                    obj: o,
                    context: p
                });
                else for (t = 0, u = l.length; t < u; ++t) m[e].push({
                    urls: [l[t]],
                    callback: t === u - 1 ? n : null,
                    obj: o,
                    context: p
                })
            }
            if (k[e] || !(w = k[e] = m[e].shift())) return;
            j || (j = a.head || a.getElementsByTagName("head")[0]), x = w.urls;
            for (t = 0, u = x.length; t < u; ++t) y = x[t], r ? v = i.gecko ? b("style") : b("link", {
                href: y,
                rel: "stylesheet"
            }) : (v = b("script", {
                src: y
            }), v.async = !1), v.className = "lazyload", v.setAttribute("charset", "utf-8"), i.ie && !r ? v.onreadystatechange = function() {
                /loaded|complete/.test(v.readyState) && (v.onreadystatechange = null, q())
            } : r && (i.gecko || i.webkit) ? i.webkit ? (w.urls[t] = v.href, g()) : (v.innerHTML = '@import "' + y + '";', f(v)) : v.onload = v.onerror = q, s.push(v);
            for (t = 0, u = s.length; t < u; ++t) j.appendChild(s[t])
        }
        function f(a) {
            var b;
            try {
                b = !! a.sheet.cssRules
            } catch (d) {
                l += 1, l < 200 ? setTimeout(function() {
                    f(a)
                }, 50) : b && c("css");
                return
            }
            c("css")
        }
        function g() {
            var a = k.css,
                b;
            if (a) {
                b = n.length;
                while (--b >= 0) if (n[b].href === a.urls[0]) {
                    c("css");
                    break
                }
                l += 1, a && (l < 200 ? setTimeout(g, 50) : c("css"))
            }
        }
        var i, j, k = {},
            l = 0,
            m = {
                css: [],
                js: []
            },
            n = a.styleSheets;
        return {
            css: function(a, b, c, d) {
                e("css", a, b, c, d)
            },
            js: function(a, b, c, d) {
                e("js", a, b, c, d)
            }
        }
    }(window.document))
});
provide("phoenix-more-css-wrapper", function(a) {
    var b = [];
    if (!twttr.isTestEnv) if (twttr.isT1) {
        var c = twttr.isRTL ? ".rtl" : "";
        b.push(twttr.hasHoversInCss ? "css!/t1/css/t1_more.bundle" + c + ".css" : "css!/t1/css/t1_more_no_hovers.bundle" + c + ".css")
    } else b.push("css!/phoenix/css/phoenix_more.bundle.css");
    using(b, function() {
        a()
    })
});
provide("$lib/jquery.ui.core.js", function(a) {
    /*!
     * jQuery UI 1.8.16
     *
     * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
     * Dual licensed under the MIT or GPL Version 2 licenses.
     * http://jquery.org/license
     *
     * http://docs.jquery.com/UI
     */
    (function($, a) {
        function b(a, b) {
            var d = a.nodeName.toLowerCase();
            if ("area" === d) {
                var e = a.parentNode,
                    f = e.name,
                    g;
                return !a.href || !f || e.nodeName.toLowerCase() !== "map" ? !1 : (g = $("img[usemap=#" + f + "]")[0], !! g && c(g))
            }
            return (/input|select|textarea|button|object/.test(d) ? !a.disabled : "a" == d ? a.href || b : b) && c(a)
        }
        function c(a) {
            return !$(a).parents().andSelf().filter(function() {
                return $.curCSS(this, "visibility") === "hidden" || $.expr.filters.hidden(this)
            }).length
        }
        $.ui = $.ui || {};
        if ($.ui.version) return;
        $.extend($.ui, {
            version: "1.8.16",
            keyCode: {
                ALT: 18,
                BACKSPACE: 8,
                CAPS_LOCK: 20,
                COMMA: 188,
                COMMAND: 91,
                COMMAND_LEFT: 91,
                COMMAND_RIGHT: 93,
                CONTROL: 17,
                DELETE: 46,
                DOWN: 40,
                END: 35,
                ENTER: 13,
                ESCAPE: 27,
                HOME: 36,
                INSERT: 45,
                LEFT: 37,
                MENU: 93,
                NUMPAD_ADD: 107,
                NUMPAD_DECIMAL: 110,
                NUMPAD_DIVIDE: 111,
                NUMPAD_ENTER: 108,
                NUMPAD_MULTIPLY: 106,
                NUMPAD_SUBTRACT: 109,
                PAGE_DOWN: 34,
                PAGE_UP: 33,
                PERIOD: 190,
                RIGHT: 39,
                SHIFT: 16,
                SPACE: 32,
                TAB: 9,
                UP: 38,
                WINDOWS: 91
            }
        }), $.fn.extend({
            propAttr: $.fn.prop || $.fn.attr,
            _focus: $.fn.focus,
            focus: function(a, b) {
                return typeof a == "number" ? this.each(function() {
                    var c = this;
                    setTimeout(function() {
                        $(c).focus(), b && b.call(c)
                    }, a)
                }) : this._focus.apply(this, arguments)
            },
            scrollParent: function() {
                var a;
                return $.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? a = this.parents().filter(function() {
                    return /(relative|absolute|fixed)/.test($.curCSS(this, "position", 1)) && /(auto|scroll)/.test($.curCSS(this, "overflow", 1) + $.curCSS(this, "overflow-y", 1) + $.curCSS(this, "overflow-x", 1))
                }).eq(0) : a = this.parents().filter(function() {
                    return /(auto|scroll)/.test($.curCSS(this, "overflow", 1) + $.curCSS(this, "overflow-y", 1) + $.curCSS(this, "overflow-x", 1))
                }).eq(0), /fixed/.test(this.css("position")) || !a.length ? $(document) : a
            },
            zIndex: function(b) {
                if (b !== a) return this.css("zIndex", b);
                if (this.length) {
                    var c = $(this[0]),
                        d, e;
                    while (c.length && c[0] !== document) {
                        d = c.css("position");
                        if (d === "absolute" || d === "relative" || d === "fixed") {
                            e = parseInt(c.css("zIndex"), 10);
                            if (!isNaN(e) && e !== 0) return e
                        }
                        c = c.parent()
                    }
                }
                return 0
            },
            disableSelection: function() {
                return this.bind(($.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(a) {
                    a.preventDefault()
                })
            },
            enableSelection: function() {
                return this.unbind(".ui-disableSelection")
            }
        }), $.each(["Width", "Height"], function(b, c) {
            function d(a, b, c, d) {
                return $.each(e, function() {
                    b -= parseFloat($.curCSS(a, "padding" + this, !0)) || 0, c && (b -= parseFloat($.curCSS(a, "border" + this + "Width", !0)) || 0), d && (b -= parseFloat($.curCSS(a, "margin" + this, !0)) || 0)
                }), b
            }
            var e = c === "Width" ? ["Left", "Right"] : ["Top", "Bottom"],
                f = c.toLowerCase(),
                g = {
                    innerWidth: $.fn.innerWidth,
                    innerHeight: $.fn.innerHeight,
                    outerWidth: $.fn.outerWidth,
                    outerHeight: $.fn.outerHeight
                };
            $.fn["inner" + c] = function(b) {
                return b === a ? g["inner" + c].call(this) : this.each(function() {
                    $(this).css(f, d(this, b) + "px")
                })
            }, $.fn["outer" + c] = function(a, b) {
                return typeof a != "number" ? g["outer" + c].call(this, a) : this.each(function() {
                    $(this).css(f, d(this, a, !0, b) + "px")
                })
            }
        }), $.extend($.expr[":"], {
            data: function(a, b, c) {
                return !!$.data(a, c[3])
            },
            focusable: function(a) {
                return b(a, !isNaN($.attr(a, "tabindex")))
            },
            tabbable: function(a) {
                var c = $.attr(a, "tabindex"),
                    d = isNaN(c);
                return (d || c >= 0) && b(a, !d)
            }
        }), $(function() {
            var a = document.body,
                b = a.appendChild(b = document.createElement("div"));
            $.extend(b.style, {
                minHeight: "100px",
                height: "auto",
                padding: 0,
                borderWidth: 0
            }), $.support.minHeight = b.offsetHeight === 100, $.support.selectstart = "onselectstart" in b, a.removeChild(b).style.display = "none"
        }), $.extend($.ui, {
            plugin: {
                add: function(a, b, c) {
                    var d = $.ui[a].prototype;
                    for (var e in c) d.plugins[e] = d.plugins[e] || [], d.plugins[e].push([b, c[e]])
                },
                call: function(a, b, c) {
                    var d = a.plugins[b];
                    if (!d || !a.element[0].parentNode) return;
                    for (var e = 0; e < d.length; e++) a.options[d[e][0]] && d[e][1].apply(a.element, c)
                }
            },
            contains: function(a, b) {
                return document.compareDocumentPosition ? a.compareDocumentPosition(b) & 16 : a !== b && a.contains(b)
            },
            hasScroll: function(a, b) {
                if ($(a).css("overflow") === "hidden") return !1;
                var c = b && b === "left" ? "scrollLeft" : "scrollTop",
                    d = !1;
                return a[c] > 0 ? !0 : (a[c] = 1, d = a[c] > 0, a[c] = 0, d)
            },
            isOverAxis: function(a, b, c) {
                return a > b && a < b + c
            },
            isOver: function(a, b, c, d, e, f) {
                return $.ui.isOverAxis(a, c, e) && $.ui.isOverAxis(b, d, f)
            }
        })
    })(jQuery), a()
});
provide("$lib/jquery.ui.widget.js", function(a) {
    /*!
     * jQuery UI Widget 1.8.16
     *
     * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
     * Dual licensed under the MIT or GPL Version 2 licenses.
     * http://jquery.org/license
     *
     * http://docs.jquery.com/UI/Widget
     */
    (function($, a) {
        if ($.cleanData) {
            var b = $.cleanData;
            $.cleanData = function(a) {
                for (var c = 0, d;
                (d = a[c]) != null; c++) try {
                    $(d).triggerHandler("remove")
                } catch (e) {}
                b(a)
            }
        } else {
            var c = $.fn.remove;
            $.fn.remove = function(a, b) {
                return this.each(function() {
                    return b || (!a || $.filter(a, [this]).length) && $("*", this).add([this]).each(function() {
                        try {
                            $(this).triggerHandler("remove")
                        } catch (a) {}
                    }), c.call($(this), a, b)
                })
            }
        }
        $.widget = function(a, b, c) {
            var d = a.split(".")[0],
                e;
            a = a.split(".")[1], e = d + "-" + a, c || (c = b, b = $.Widget), $.expr[":"][e] = function(b) {
                return !!$.data(b, a)
            }, $[d] = $[d] || {}, $[d][a] = function(a, b) {
                arguments.length && this._createWidget(a, b)
            };
            var f = new b;
            f.options = $.extend(!0, {}, f.options), $[d][a].prototype = $.extend(!0, f, {
                namespace: d,
                widgetName: a,
                widgetEventPrefix: $[d][a].prototype.widgetEventPrefix || a,
                widgetBaseClass: e
            }, c), $.widget.bridge(a, $[d][a])
        }, $.widget.bridge = function(b, c) {
            $.fn[b] = function(d) {
                var e = typeof d == "string",
                    f = Array.prototype.slice.call(arguments, 1),
                    g = this;
                return d = !e && f.length ? $.extend.apply(null, [!0, d].concat(f)) : d, e && d.charAt(0) === "_" ? g : (e ? this.each(function() {
                    var c = $.data(this, b),
                        e = c && $.isFunction(c[d]) ? c[d].apply(c, f) : c;
                    if (e !== c && e !== a) return g = e, !1
                }) : this.each(function() {
                    var a = $.data(this, b);
                    a ? a.option(d || {})._init() : $.data(this, b, new c(d, this))
                }), g)
            }
        }, $.Widget = function(a, b) {
            arguments.length && this._createWidget(a, b)
        }, $.Widget.prototype = {
            widgetName: "widget",
            widgetEventPrefix: "",
            options: {
                disabled: !1
            },
            _createWidget: function(a, b) {
                $.data(b, this.widgetName, this), this.element = $(b), this.options = $.extend(!0, {}, this.options, this._getCreateOptions(), a);
                var c = this;
                this.element.bind("remove." + this.widgetName, function() {
                    c.destroy()
                }), this._create(), this._trigger("create"), this._init()
            },
            _getCreateOptions: function() {
                return $.metadata && $.metadata.get(this.element[0])[this.widgetName]
            },
            _create: function() {},
            _init: function() {},
            destroy: function() {
                this.element.unbind("." + this.widgetName).removeData(this.widgetName), this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled " + "ui-state-disabled")
            },
            widget: function() {
                return this.element
            },
            option: function(b, c) {
                var d = b;
                if (arguments.length === 0) return $.extend({}, this.options);
                if (typeof b == "string") {
                    if (c === a) return this.options[b];
                    d = {}, d[b] = c
                }
                return this._setOptions(d), this
            },
            _setOptions: function(a) {
                var b = this;
                return $.each(a, function(a, c) {
                    b._setOption(a, c)
                }), this
            },
            _setOption: function(a, b) {
                return this.options[a] = b, a === "disabled" && this.widget()[b ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled" + " " + "ui-state-disabled").attr("aria-disabled", b), this
            },
            enable: function() {
                return this._setOption("disabled", !1)
            },
            disable: function() {
                return this._setOption("disabled", !0)
            },
            _trigger: function(a, b, c) {
                var d = this.options[a];
                b = $.Event(b), b.type = (a === this.widgetEventPrefix ? a : this.widgetEventPrefix + a).toLowerCase(), c = c || {};
                if (b.originalEvent) for (var e = $.event.props.length, f; e;) f = $.event.props[--e], b[f] = b.originalEvent[f];
                return this.element.trigger(b, c), !($.isFunction(d) && d.call(this.element[0], b, c) === !1 || b.isDefaultPrevented())
            }
        }
    })(jQuery), a()
});
provide("$lib/jquery.ui.mouse.js", function(a) {
    /*!
     * jQuery UI Mouse 1.8.16
     *
     * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)
     * Dual licensed under the MIT or GPL Version 2 licenses.
     * http://jquery.org/license
     *
     * http://docs.jquery.com/UI/Mouse
     *
     * Depends:
     *	jquery.ui.widget.js
     */
    (function($, a) {
        var b = !1;
        $(document).mouseup(function(a) {
            b = !1
        }), $.widget("ui.mouse", {
            options: {
                cancel: ":input,option",
                distance: 1,
                delay: 0
            },
            _mouseInit: function() {
                var a = this;
                this.element.bind("mousedown." + this.widgetName, function(b) {
                    return a._mouseDown(b)
                }).bind("click." + this.widgetName, function(b) {
                    if (!0 === $.data(b.target, a.widgetName + ".preventClickEvent")) return $.removeData(b.target, a.widgetName + ".preventClickEvent"), b.stopImmediatePropagation(), !1
                }), this.started = !1
            },
            _mouseDestroy: function() {
                this.element.unbind("." + this.widgetName)
            },
            _mouseDown: function(a) {
                if (b) return;
                this._mouseStarted && this._mouseUp(a), this._mouseDownEvent = a;
                var c = this,
                    d = a.which == 1,
                    e = typeof this.options.cancel == "string" && a.target.nodeName ? $(a.target).closest(this.options.cancel).length : !1;
                if (!d || e || !this._mouseCapture(a)) return !0;
                this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                    c.mouseDelayMet = !0
                }, this.options.delay));
                if (this._mouseDistanceMet(a) && this._mouseDelayMet(a)) {
                    this._mouseStarted = this._mouseStart(a) !== !1;
                    if (!this._mouseStarted) return a.preventDefault(), !0
                }
                return !0 === $.data(a.target, this.widgetName + ".preventClickEvent") && $.removeData(a.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(a) {
                    return c._mouseMove(a)
                }, this._mouseUpDelegate = function(a) {
                    return c._mouseUp(a)
                }, $(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), a.preventDefault(), b = !0, !0
            },
            _mouseMove: function(a) {
                return !$.browser.msie || document.documentMode >= 9 || !! a.button ? this._mouseStarted ? (this._mouseDrag(a), a.preventDefault()) : (this._mouseDistanceMet(a) && this._mouseDelayMet(a) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, a) !== !1, this._mouseStarted ? this._mouseDrag(a) : this._mouseUp(a)), !this._mouseStarted) : this._mouseUp(a)
            },
            _mouseUp: function(a) {
                return $(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, a.target == this._mouseDownEvent.target && $.data(a.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(a)), !1
            },
            _mouseDistanceMet: function(a) {
                return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance
            },
            _mouseDelayMet: function(a) {
                return this.mouseDelayMet
            },
            _mouseStart: function(a) {},
            _mouseDrag: function(a) {},
            _mouseStop: function(a) {},
            _mouseCapture: function(a) {
                return !0
            }
        })
    })(jQuery), a()
});
provide("$lib/jquery.ui.draggable.js", function(a) {
    (function($, a) {
        $.widget("ui.draggable", $.ui.mouse, {
            widgetEventPrefix: "drag",
            options: {
                addClasses: !0,
                appendTo: "parent",
                axis: !1,
                connectToSortable: !1,
                containment: !1,
                cursor: "auto",
                cursorAt: !1,
                grid: !1,
                handle: !1,
                helper: "original",
                iframeFix: !1,
                opacity: !1,
                refreshPositions: !1,
                revert: !1,
                revertDuration: 500,
                scope: "default",
                scroll: !0,
                scrollSensitivity: 20,
                scrollSpeed: 20,
                snap: !1,
                snapMode: "both",
                snapTolerance: 20,
                stack: !1,
                zIndex: !1
            },
            _create: function() {
                this.options.helper == "original" && !/^(?:r|a|f)/.test(this.element.css("position")) && (this.element[0].style.position = "relative"), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._mouseInit()
            },
            destroy: function() {
                if (!this.element.data("draggable")) return;
                return this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._mouseDestroy(), this
            },
            _mouseCapture: function(a) {
                var b = this.options;
                return this.helper || b.disabled || $(a.target).is(".ui-resizable-handle") ? !1 : (this.handle = this._getHandle(a), this.handle ? (b.iframeFix && $(b.iframeFix === !0 ? "iframe" : b.iframeFix).each(function() {
                    $('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                        width: this.offsetWidth + "px",
                        height: this.offsetHeight + "px",
                        position: "absolute",
                        opacity: "0.001",
                        zIndex: 1e3
                    }).css($(this).offset()).appendTo("body")
                }), !0) : !1)
            },
            _mouseStart: function(a) {
                var b = this.options;
                return this.helper = this._createHelper(a), this._cacheHelperProportions(), $.ui.ddmanager && ($.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(), this.offset = this.positionAbs = this.element.offset(), this.offset = {
                    top: this.offset.top - this.margins.top,
                    left: this.offset.left - this.margins.left
                }, $.extend(this.offset, {
                    click: {
                        left: a.pageX - this.offset.left,
                        top: a.pageY - this.offset.top
                    },
                    parent: this._getParentOffset(),
                    relative: this._getRelativeOffset()
                }), this.originalPosition = this.position = this._generatePosition(a), this.originalPageX = a.pageX, this.originalPageY = a.pageY, b.cursorAt && this._adjustOffsetFromHelper(b.cursorAt), b.containment && this._setContainment(), this._trigger("start", a) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), $.ui.ddmanager && !b.dropBehaviour && $.ui.ddmanager.prepareOffsets(this, a), this.helper.addClass("ui-draggable-dragging"), this._mouseDrag(a, !0), $.ui.ddmanager && $.ui.ddmanager.dragStart(this, a), !0)
            },
            _mouseDrag: function(a, b) {
                this.position = this._generatePosition(a), this.positionAbs = this._convertPositionTo("absolute");
                if (!b) {
                    var c = this._uiHash();
                    if (this._trigger("drag", a, c) === !1) return this._mouseUp({}), !1;
                    this.position = c.position
                }
                if (!this.options.axis || this.options.axis != "y") this.helper[0].style.left = this.position.left + "px";
                if (!this.options.axis || this.options.axis != "x") this.helper[0].style.top = this.position.top + "px";
                return $.ui.ddmanager && $.ui.ddmanager.drag(this, a), !1
            },
            _mouseStop: function(a) {
                var b = !1;
                $.ui.ddmanager && !this.options.dropBehaviour && (b = $.ui.ddmanager.drop(this, a)), this.dropped && (b = this.dropped, this.dropped = !1);
                if ((!this.element[0] || !this.element[0].parentNode) && this.options.helper == "original") return !1;
                if (this.options.revert == "invalid" && !b || this.options.revert == "valid" && b || this.options.revert === !0 || $.isFunction(this.options.revert) && this.options.revert.call(this.element, b)) {
                    var c = this;
                    $(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                        c._trigger("stop", a) !== !1 && c._clear()
                    })
                } else this._trigger("stop", a) !== !1 && this._clear();
                return !1
            },
            _mouseUp: function(a) {
                return this.options.iframeFix === !0 && $("div.ui-draggable-iframeFix").each(function() {
                    this.parentNode.removeChild(this)
                }), $.ui.ddmanager && $.ui.ddmanager.dragStop(this, a), $.ui.mouse.prototype._mouseUp.call(this, a)
            },
            cancel: function() {
                return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
            },
            _getHandle: function(a) {
                var b = !this.options.handle || !$(this.options.handle, this.element).length ? !0 : !1;
                return $(this.options.handle, this.element).find("*").andSelf().each(function() {
                    this == a.target && (b = !0)
                }), b
            },
            _createHelper: function(a) {
                var b = this.options,
                    c = $.isFunction(b.helper) ? $(b.helper.apply(this.element[0], [a])) : b.helper == "clone" ? this.element.clone().removeAttr("id") : this.element;
                return c.parents("body").length || c.appendTo(b.appendTo == "parent" ? this.element[0].parentNode : b.appendTo), c[0] != this.element[0] && !/(fixed|absolute)/.test(c.css("position")) && c.css("position", "absolute"), c
            },
            _adjustOffsetFromHelper: function(a) {
                typeof a == "string" && (a = a.split(" ")), $.isArray(a) && (a = {
                    left: +a[0],
                    top: +a[1] || 0
                }), "left" in a && (this.offset.click.left = a.left + this.margins.left), "right" in a && (this.offset.click.left = this.helperProportions.width - a.right + this.margins.left), "top" in a && (this.offset.click.top = a.top + this.margins.top), "bottom" in a && (this.offset.click.top = this.helperProportions.height - a.bottom + this.margins.top)
            },
            _getParentOffset: function() {
                this.offsetParent = this.helper.offsetParent();
                var a = this.offsetParent.offset();
                this.cssPosition == "absolute" && this.scrollParent[0] != document && $.ui.contains(this.scrollParent[0], this.offsetParent[0]) && (a.left += this.scrollParent.scrollLeft(), a.top += this.scrollParent.scrollTop());
                if (this.offsetParent[0] == document.body || this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && $.browser.msie) a = {
                    top: 0,
                    left: 0
                };
                return {
                    top: a.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                    left: a.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
                }
            },
            _getRelativeOffset: function() {
                if (this.cssPosition == "relative") {
                    var a = this.element.position();
                    return {
                        top: a.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                        left: a.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                    }
                }
                return {
                    top: 0,
                    left: 0
                }
            },
            _cacheMargins: function() {
                this.margins = {
                    left: parseInt(this.element.css("marginLeft"), 10) || 0,
                    top: parseInt(this.element.css("marginTop"), 10) || 0,
                    right: parseInt(this.element.css("marginRight"), 10) || 0,
                    bottom: parseInt(this.element.css("marginBottom"), 10) || 0
                }
            },
            _cacheHelperProportions: function() {
                this.helperProportions = {
                    width: this.helper.outerWidth(),
                    height: this.helper.outerHeight()
                }
            },
            _setContainment: function() {
                var a = this.options;
                a.containment == "parent" && (a.containment = this.helper[0].parentNode);
                if (a.containment == "document" || a.containment == "window") this.containment = [a.containment == "document" ? 0 : $(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, a.containment == "document" ? 0 : $(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, (a.containment == "document" ? 0 : $(window).scrollLeft()) + $(a.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (a.containment == "document" ? 0 : $(window).scrollTop()) + ($(a.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top];
                if (!/^(document|window|parent)$/.test(a.containment) && a.containment.constructor != Array) {
                    var b = $(a.containment),
                        c = b[0];
                    if (!c) return;
                    var d = b.offset(),
                        e = $(c).css("overflow") != "hidden";
                    this.containment = [(parseInt($(c).css("borderLeftWidth"), 10) || 0) + (parseInt($(c).css("paddingLeft"), 10) || 0), (parseInt($(c).css("borderTopWidth"), 10) || 0) + (parseInt($(c).css("paddingTop"), 10) || 0), (e ? Math.max(c.scrollWidth, c.offsetWidth) : c.offsetWidth) - (parseInt($(c).css("borderLeftWidth"), 10) || 0) - (parseInt($(c).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (e ? Math.max(c.scrollHeight, c.offsetHeight) : c.offsetHeight) - (parseInt($(c).css("borderTopWidth"), 10) || 0) - (parseInt($(c).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relative_container = b
                } else a.containment.constructor == Array && (this.containment = a.containment)
            },
            _convertPositionTo: function(a, b) {
                b || (b = this.position);
                var c = a == "absolute" ? 1 : -1,
                    d = this.options,
                    e = this.cssPosition != "absolute" || this.scrollParent[0] != document && !! $.ui.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                    f = /(html|body)/i.test(e[0].tagName);
                return {
                    top: b.top + this.offset.relative.top * c + this.offset.parent.top * c - ($.browser.safari && $.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : f ? 0 : e.scrollTop()) * c),
                    left: b.left + this.offset.relative.left * c + this.offset.parent.left * c - ($.browser.safari && $.browser.version < 526 && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : f ? 0 : e.scrollLeft()) * c)
                }
            },
            _generatePosition: function(a) {
                var b = this.options,
                    c = this.cssPosition != "absolute" || this.scrollParent[0] != document && !! $.ui.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
                    d = /(html|body)/i.test(c[0].tagName),
                    e = a.pageX,
                    f = a.pageY;
                if (this.originalPosition) {
                    var g;
                    if (this.containment) {
                        if (this.relative_container) {
                            var i = this.relative_container.offset();
                            g = [this.containment[0] + i.left, this.containment[1] + i.top, this.containment[2] + i.left, this.containment[3] + i.top]
                        } else g = this.containment;
                        a.pageX - this.offset.click.left < g[0] && (e = g[0] + this.offset.click.left), a.pageY - this.offset.click.top < g[1] && (f = g[1] + this.offset.click.top), a.pageX - this.offset.click.left > g[2] && (e = g[2] + this.offset.click.left), a.pageY - this.offset.click.top > g[3] && (f = g[3] + this.offset.click.top)
                    }
                    if (b.grid) {
                        var j = b.grid[1] ? this.originalPageY + Math.round((f - this.originalPageY) / b.grid[1]) * b.grid[1] : this.originalPageY;
                        f = g ? j - this.offset.click.top < g[1] || j - this.offset.click.top > g[3] ? j - this.offset.click.top < g[1] ? j + b.grid[1] : j - b.grid[1] : j : j;
                        var k = b.grid[0] ? this.originalPageX + Math.round((e - this.originalPageX) / b.grid[0]) * b.grid[0] : this.originalPageX;
                        e = g ? k - this.offset.click.left < g[0] || k - this.offset.click.left > g[2] ? k - this.offset.click.left < g[0] ? k + b.grid[0] : k - b.grid[0] : k : k
                    }
                }
                return {
                    top: f - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ($.browser.safari && $.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : d ? 0 : c.scrollTop()),
                    left: e - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ($.browser.safari && $.browser.version < 526 && this.cssPosition == "fixed" ? 0 : this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : d ? 0 : c.scrollLeft())
                }
            },
            _clear: function() {
                this.helper.removeClass("ui-draggable-dragging"), this.helper[0] != this.element[0] && !this.cancelHelperRemoval && this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1
            },
            _trigger: function(a, b, c) {
                return c = c || this._uiHash(), $.ui.plugin.call(this, a, [b, c]), a == "drag" && (this.positionAbs = this._convertPositionTo("absolute")), $.Widget.prototype._trigger.call(this, a, b, c)
            },
            plugins: {},
            _uiHash: function(a) {
                return {
                    helper: this.helper,
                    position: this.position,
                    originalPosition: this.originalPosition,
                    offset: this.positionAbs
                }
            }
        }), $.extend($.ui.draggable, {
            version: "1.8.16"
        }), $.ui.plugin.add("draggable", "connectToSortable", {
            start: function(a, b) {
                var c = $(this).data("draggable"),
                    d = c.options,
                    e = $.extend({}, b, {
                        item: c.element
                    });
                c.sortables = [], $(d.connectToSortable).each(function() {
                    var b = $.data(this, "sortable");
                    b && !b.options.disabled && (c.sortables.push({
                        instance: b,
                        shouldRevert: b.options.revert
                    }), b.refreshPositions(), b._trigger("activate", a, e))
                })
            },
            stop: function(a, b) {
                var c = $(this).data("draggable"),
                    d = $.extend({}, b, {
                        item: c.element
                    });
                $.each(c.sortables, function() {
                    this.instance.isOver ? (this.instance.isOver = 0, c.cancelHelperRemoval = !0, this.instance.cancelHelperRemoval = !1, this.shouldRevert && (this.instance.options.revert = !0), this.instance._mouseStop(a), this.instance.options.helper = this.instance.options._helper, c.options.helper == "original" && this.instance.currentItem.css({
                        top: "auto",
                        left: "auto"
                    })) : (this.instance.cancelHelperRemoval = !1, this.instance._trigger("deactivate", a, d))
                })
            },
            drag: function(a, b) {
                var c = $(this).data("draggable"),
                    d = this,
                    e = function(a) {
                        var b = this.offset.click.top,
                            c = this.offset.click.left,
                            d = this.positionAbs.top,
                            e = this.positionAbs.left,
                            f = a.height,
                            g = a.width,
                            i = a.top,
                            j = a.left;
                        return $.ui.isOver(d + b, e + c, i, j, f, g)
                    };
                $.each(c.sortables, function(e) {
                    this.instance.positionAbs = c.positionAbs, this.instance.helperProportions = c.helperProportions, this.instance.offset.click = c.offset.click, this.instance._intersectsWith(this.instance.containerCache) ? (this.instance.isOver || (this.instance.isOver = 1, this.instance.currentItem = $(d).clone().removeAttr("id").appendTo(this.instance.element).data("sortable-item", !0), this.instance.options._helper = this.instance.options.helper, this.instance.options.helper = function() {
                        return b.helper[0]
                    }, a.target = this.instance.currentItem[0], this.instance._mouseCapture(a, !0), this.instance._mouseStart(a, !0, !0), this.instance.offset.click.top = c.offset.click.top, this.instance.offset.click.left = c.offset.click.left, this.instance.offset.parent.left -= c.offset.parent.left - this.instance.offset.parent.left, this.instance.offset.parent.top -= c.offset.parent.top - this.instance.offset.parent.top, c._trigger("toSortable", a), c.dropped = this.instance.element, c.currentItem = c.element, this.instance.fromOutside = c), this.instance.currentItem && this.instance._mouseDrag(a)) : this.instance.isOver && (this.instance.isOver = 0, this.instance.cancelHelperRemoval = !0, this.instance.options.revert = !1, this.instance._trigger("out", a, this.instance._uiHash(this.instance)), this.instance._mouseStop(a, !0), this.instance.options.helper = this.instance.options._helper, this.instance.currentItem.remove(), this.instance.placeholder && this.instance.placeholder.remove(), c._trigger("fromSortable", a), c.dropped = !1)
                })
            }
        }), $.ui.plugin.add("draggable", "cursor", {
            start: function(a, b) {
                var c = $("body"),
                    d = $(this).data("draggable").options;
                c.css("cursor") && (d._cursor = c.css("cursor")), c.css("cursor", d.cursor)
            },
            stop: function(a, b) {
                var c = $(this).data("draggable").options;
                c._cursor && $("body").css("cursor", c._cursor)
            }
        }), $.ui.plugin.add("draggable", "opacity", {
            start: function(a, b) {
                var c = $(b.helper),
                    d = $(this).data("draggable").options;
                c.css("opacity") && (d._opacity = c.css("opacity")), c.css("opacity", d.opacity)
            },
            stop: function(a, b) {
                var c = $(this).data("draggable").options;
                c._opacity && $(b.helper).css("opacity", c._opacity)
            }
        }), $.ui.plugin.add("draggable", "scroll", {
            start: function(a, b) {
                var c = $(this).data("draggable");
                c.scrollParent[0] != document && c.scrollParent[0].tagName != "HTML" && (c.overflowOffset = c.scrollParent.offset())
            },
            drag: function(a, b) {
                var c = $(this).data("draggable"),
                    d = c.options,
                    e = !1;
                if (c.scrollParent[0] != document && c.scrollParent[0].tagName != "HTML") {
                    if (!d.axis || d.axis != "x") c.overflowOffset.top + c.scrollParent[0].offsetHeight - a.pageY < d.scrollSensitivity ? c.scrollParent[0].scrollTop = e = c.scrollParent[0].scrollTop + d.scrollSpeed : a.pageY - c.overflowOffset.top < d.scrollSensitivity && (c.scrollParent[0].scrollTop = e = c.scrollParent[0].scrollTop - d.scrollSpeed);
                    if (!d.axis || d.axis != "y") c.overflowOffset.left + c.scrollParent[0].offsetWidth - a.pageX < d.scrollSensitivity ? c.scrollParent[0].scrollLeft = e = c.scrollParent[0].scrollLeft + d.scrollSpeed : a.pageX - c.overflowOffset.left < d.scrollSensitivity && (c.scrollParent[0].scrollLeft = e = c.scrollParent[0].scrollLeft - d.scrollSpeed)
                } else {
                    if (!d.axis || d.axis != "x") a.pageY - $(document).scrollTop() < d.scrollSensitivity ? e = $(document).scrollTop($(document).scrollTop() - d.scrollSpeed) : $(window).height() - (a.pageY - $(document).scrollTop()) < d.scrollSensitivity && (e = $(document).scrollTop($(document).scrollTop() + d.scrollSpeed));
                    if (!d.axis || d.axis != "y") a.pageX - $(document).scrollLeft() < d.scrollSensitivity ? e = $(document).scrollLeft($(document).scrollLeft() - d.scrollSpeed) : $(window).width() - (a.pageX - $(document).scrollLeft()) < d.scrollSensitivity && (e = $(document).scrollLeft($(document).scrollLeft() + d.scrollSpeed))
                }
                e !== !1 && $.ui.ddmanager && !d.dropBehaviour && $.ui.ddmanager.prepareOffsets(c, a)
            }
        }), $.ui.plugin.add("draggable", "snap", {
            start: function(a, b) {
                var c = $(this).data("draggable"),
                    d = c.options;
                c.snapElements = [], $(d.snap.constructor != String ? d.snap.items || ":data(draggable)" : d.snap).each(function() {
                    var a = $(this),
                        b = a.offset();
                    this != c.element[0] && c.snapElements.push({
                        item: this,
                        width: a.outerWidth(),
                        height: a.outerHeight(),
                        top: b.top,
                        left: b.left
                    })
                })
            },
            drag: function(a, b) {
                var c = $(this).data("draggable"),
                    d = c.options,
                    e = d.snapTolerance,
                    f = b.offset.left,
                    g = f + c.helperProportions.width,
                    i = b.offset.top,
                    j = i + c.helperProportions.height;
                for (var k = c.snapElements.length - 1; k >= 0; k--) {
                    var l = c.snapElements[k].left,
                        m = l + c.snapElements[k].width,
                        n = c.snapElements[k].top,
                        o = n + c.snapElements[k].height;
                    if (!(l - e < f && f < m + e && n - e < i && i < o + e || l - e < f && f < m + e && n - e < j && j < o + e || l - e < g && g < m + e && n - e < i && i < o + e || l - e < g && g < m + e && n - e < j && j < o + e)) {
                        c.snapElements[k].snapping && c.options.snap.release && c.options.snap.release.call(c.element, a, $.extend(c._uiHash(), {
                            snapItem: c.snapElements[k].item
                        })), c.snapElements[k].snapping = !1;
                        continue
                    }
                    if (d.snapMode != "inner") {
                        var p = Math.abs(n - j) <= e,
                            q = Math.abs(o - i) <= e,
                            r = Math.abs(l - g) <= e,
                            s = Math.abs(m - f) <= e;
                        p && (b.position.top = c._convertPositionTo("relative", {
                            top: n - c.helperProportions.height,
                            left: 0
                        }).top - c.margins.top), q && (b.position.top = c._convertPositionTo("relative", {
                            top: o,
                            left: 0
                        }).top - c.margins.top), r && (b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: l - c.helperProportions.width
                        }).left - c.margins.left), s && (b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: m
                        }).left - c.margins.left)
                    }
                    var t = p || q || r || s;
                    if (d.snapMode != "outer") {
                        var p = Math.abs(n - i) <= e,
                            q = Math.abs(o - j) <= e,
                            r = Math.abs(l - f) <= e,
                            s = Math.abs(m - g) <= e;
                        p && (b.position.top = c._convertPositionTo("relative", {
                            top: n,
                            left: 0
                        }).top - c.margins.top), q && (b.position.top = c._convertPositionTo("relative", {
                            top: o - c.helperProportions.height,
                            left: 0
                        }).top - c.margins.top), r && (b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: l
                        }).left - c.margins.left), s && (b.position.left = c._convertPositionTo("relative", {
                            top: 0,
                            left: m - c.helperProportions.width
                        }).left - c.margins.left)
                    }!c.snapElements[k].snapping && (p || q || r || s || t) && c.options.snap.snap && c.options.snap.snap.call(c.element, a, $.extend(c._uiHash(), {
                        snapItem: c.snapElements[k].item
                    })), c.snapElements[k].snapping = p || q || r || s || t
                }
            }
        }), $.ui.plugin.add("draggable", "stack", {
            start: function(a, b) {
                var c = $(this).data("draggable").options,
                    d = $.makeArray($(c.stack)).sort(function(a, b) {
                        return (parseInt($(a).css("zIndex"), 10) || 0) - (parseInt($(b).css("zIndex"), 10) || 0)
                    });
                if (!d.length) return;
                var e = parseInt(d[0].style.zIndex) || 0;
                $(d).each(function(a) {
                    this.style.zIndex = e + a
                }), this[0].style.zIndex = e + d.length
            }
        }), $.ui.plugin.add("draggable", "zIndex", {
            start: function(a, b) {
                var c = $(b.helper),
                    d = $(this).data("draggable").options;
                c.css("zIndex") && (d._zIndex = c.css("zIndex")), c.css("zIndex", d.zIndex)
            },
            stop: function(a, b) {
                var c = $(this).data("draggable").options;
                c._zIndex && $(b.helper).css("zIndex", c._zIndex)
            }
        })
    })(jQuery), a()
});
provide("$lib/jquery.ui.progressbar.js", function(a) {
    (function($, a) {
        $.widget("ui.progressbar", {
            options: {
                value: 0,
                max: 100
            },
            min: 0,
            _create: function() {
                this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                    role: "progressbar",
                    "aria-valuemin": this.min,
                    "aria-valuemax": this.options.max,
                    "aria-valuenow": this._value()
                }), this.valueDiv = $("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this.oldValue = this._value(), this._refreshValue()
            },
            destroy: function() {
                this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove(), $.Widget.prototype.destroy.apply(this, arguments)
            },
            value: function(b) {
                return b === a ? this._value() : (this._setOption("value", b), this)
            },
            _setOption: function(a, b) {
                a === "value" && (this.options.value = b, this._refreshValue(), this._value() === this.options.max && this._trigger("complete")), $.Widget.prototype._setOption.apply(this, arguments)
            },
            _value: function() {
                var a = this.options.value;
                return typeof a != "number" && (a = 0), Math.min(this.options.max, Math.max(this.min, a))
            },
            _percentage: function() {
                return 100 * this._value() / this.options.max
            },
            _refreshValue: function() {
                var a = this.value(),
                    b = this._percentage();
                this.oldValue !== a && (this.oldValue = a, this._trigger("change")), this.valueDiv.toggle(a > this.min).toggleClass("ui-corner-right", a === this.options.max).width(b.toFixed(0) + "%"), this.element.attr("aria-valuenow", a)
            }
        }), $.extend($.ui.progressbar, {
            version: "1.8.16"
        })
    })(jQuery), a()
});
provide("$lib/jquery.swfobject.js", function(a) {
    /*! jQuery SWFObject v1.1.1 MIT/GPL @jon_neal
     * http://jquery.thewikies.com/swfobject
     */
    (function(a, h, b) {
        function c(a, b) {
            var d = (a[0] || 0) - (b[0] || 0);
            return d > 0 || !d && a.length > 0 && c(a.slice(1), b.slice(1))
        }
        function d(a) {
            if (typeof a != g) return a;
            var b = [],
                c = "";
            for (var e in a) c = typeof a[e] == g ? d(a[e]) : [e, i ? encodeURI(a[e]) : a[e]].join("="), b.push(c);
            return b.join("&")
        }
        function e(a) {
            var b = [];
            for (var c in a) a[c] && b.push([c, '="', a[c], '"'].join(""));
            return b.join(" ")
        }
        function f(a) {
            var b = [];
            for (var c in a) b.push(['<param name="', c, '" value="', d(a[c]), '" />'].join(""));
            return b.join("")
        }
        var g = "object",
            i = !0;
        try {
            var j = b.description ||
            function() {
                return (new b("ShockwaveFlash.ShockwaveFlash")).GetVariable("$version")
            }()
        } catch (k) {
            j = "Unavailable"
        }
        var l = j.match(/\d+/g) || [0];
        a[h] = {
            available: l[0] > 0,
            activeX: b && !b.name,
            version: {
                original: j,
                array: l,
                string: l.join("."),
                major: parseInt(l[0], 10) || 0,
                minor: parseInt(l[1], 10) || 0,
                release: parseInt(l[2], 10) || 0
            },
            hasVersion: function(a) {
                return a = /string|number/.test(typeof a) ? a.toString().split(".") : /object/.test(typeof a) ? [a.major, a.minor] : a || [0, 0], c(l, a)
            },
            encodeParams: !0,
            expressInstall: "expressInstall.swf",
            expressInstallIsActive: !1,
            create: function(a) {
                if (!a.swf || this.expressInstallIsActive || !this.available && !a.hasVersionFail) return !1;
                if (!this.hasVersion(a.hasVersion || 1)) {
                    this.expressInstallIsActive = !0;
                    if (typeof a.hasVersionFail == "function" && !a.hasVersionFail.apply(a)) return !1;
                    a = {
                        swf: a.expressInstall || this.expressInstall,
                        height: 137,
                        width: 214,
                        flashvars: {
                            MMredirectURL: location.href,
                            MMplayerType: this.activeX ? "ActiveX" : "PlugIn",
                            MMdoctitle: document.title.slice(0, 47) + " - Flash Player Installation"
                        }
                    }
                }
                attrs = {
                    data: a.swf,
                    type: "application/x-shockwave-flash",
                    id: a.id || "flash_" + Math.floor(Math.random() * 999999999),
                    width: a.width || 320,
                    height: a.height || 180,
                    style: a.style || ""
                }, i = typeof a.useEncode != "undefined" ? a.useEncode : this.encodeParams, a.movie = a.swf, a.wmode = a.wmode || "opaque", delete a.fallback, delete a.hasVersion, delete a.hasVersionFail, delete a.height, delete a.id, delete a.swf, delete a.useEncode, delete a.width;
                var b = document.createElement("div");
                return b.innerHTML = ["<object ", e(attrs), ">", f(a), "</object>"].join(""), b.firstChild
            }
        }, a.fn[h] = function(b) {
            var c = this.find(g).andSelf().filter(g);
            return /string|object/.test(typeof b) && this.each(function() {
                var c = a(this),
                    d;
                b = typeof b == g ? b : {
                    swf: b
                }, b.fallback = this;
                if (d = a[h].create(b)) c.children().remove(), c.html(d)
            }), typeof b == "function" && c.each(function() {
                var c = this;
                c.jsInteractionTimeoutMs = c.jsInteractionTimeoutMs || 0, c.jsInteractionTimeoutMs < 660 && (c.clientWidth || c.clientHeight ? b.call(c) : setTimeout(function() {
                    a(c)[h](b)
                }, c.jsInteractionTimeoutMs + 66))
            }), c
        }
    })(jQuery, "flash", navigator.plugins["Shockwave Flash"] || window.ActiveXObject), a()
});
provide("$lib/jquery.hotkeys.js", function(a) {
    (function(a) {
        function b(b) {
            if (typeof b.data != "string" && !a.isArray(b.data)) return;
            var c = b.handler,
                d = a.isArray(b.data),
                e = 0,
                f = b.data.length;
            b.handler = function(g) {
                var i = b.data,
                    j;
                d && (i = i[e]), j = i.toLowerCase().split(" ");
                if (!(this === g.target || !/textarea|select/i.test(g.target.nodeName) && g.target.type !== "text")) return;
                var k = g.type !== "keypress" && a.hotkeys.specialKeys[g.which],
                    l = String.fromCharCode(g.which).toLowerCase(),
                    m, n = "",
                    o = {};
                g.altKey && k !== "alt" && (n += "alt+"), g.ctrlKey && k !== "ctrl" && (n += "ctrl+"), g.metaKey && !g.ctrlKey && k !== "meta" && (n += "meta+"), g.shiftKey && k !== "shift" && (n += "shift+"), k ? o[n + k] = !0 : (o[n + l] = !0, o[n + a.hotkeys.shiftNums[l]] = !0, n === "shift+" && (o[a.hotkeys.shiftNums[l]] = !0));
                for (var p = 0, q = j.length; p < q; p++) if (o[j[p]]) return !d || e === f - 1 ? (e = 0, c.apply(this, arguments)) : (e += 1, !0);
                if (d && e !== 0) {
                    j = b.data[0].toLowerCase().split(" ");
                    for (var p = 0, q = j.length; p < q; p++) if (o[j[p]]) return e = 1, !0;
                    e = 0
                }
            }
        }
        a.hotkeys = {
            version: "0.8",
            specialKeys: {
                8: "backspace",
                9: "tab",
                13: "return",
                16: "shift",
                17: "ctrl",
                18: "alt",
                19: "pause",
                20: "capslock",
                27: "esc",
                32: "space",
                33: "pageup",
                34: "pagedown",
                35: "end",
                36: "home",
                37: "left",
                38: "up",
                39: "right",
                40: "down",
                45: "insert",
                46: "del",
                96: "0",
                97: "1",
                98: "2",
                99: "3",
                100: "4",
                101: "5",
                102: "6",
                103: "7",
                104: "8",
                105: "9",
                106: "*",
                107: "+",
                109: "-",
                110: ".",
                111: "/",
                112: "f1",
                113: "f2",
                114: "f3",
                115: "f4",
                116: "f5",
                117: "f6",
                118: "f7",
                119: "f8",
                120: "f9",
                121: "f10",
                122: "f11",
                123: "f12",
                144: "numlock",
                145: "scroll",
                191: "/",
                224: "meta"
            },
            shiftNums: {
                "`": "~",
                1: "!",
                2: "@",
                3: "#",
                4: "$",
                5: "%",
                6: "^",
                7: "&",
                8: "*",
                9: "(",
                0: ")",
                "-": "_",
                "=": "+",
                ";": ": ",
                "'": '"',
                ",": "<",
                ".": ">",
                "/": "?",
                "\\": "|"
            }
        }, a.each(["keydown", "keyup", "keypress"], function() {
            a.event.special[this] = {
                add: b
            }
        })
    })(jQuery), a()
});
provide("$lib/jquery.autoellipsis.js", function(a) {
/*!

    Copyright (c) 2011 Peter van der Spek

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.

 */
    (function($) {
        function a(a, e) {
            var f = a.data();
            f || (f = {});
            var g = f.wrapperElement;
            g || (g = a.wrapInner("<div/>").find(">div"));
            var i = g.data(),
                j = i.originalContent;
            j ? g = i.originalContent.clone(!0).data({
                originalContent: j
            }).replaceAll(g) : g.data({
                originalContent: g.clone(!0)
            }), a.data({
                wrapperElement: g,
                containerWidth: a.innerWidth(),
                containerHeight: a.innerHeight()
            });
            var k = !1,
                l = g;
            e.selector && (l = $(g.find(e.selector).get().reverse())), l.each(function() {
                var f = $(this),
                    i = f.text(),
                    j = !1;
                if (g.innerHeight() - f.innerHeight() > a.innerHeight()) f.remove();
                else {
                    d(f);
                    if (f.contents().length) {
                        k && (c(f).get(0).nodeValue += e.ellipsis, k = !1);
                        while (g.innerHeight() > a.innerHeight()) {
                            j = b(f);
                            if (!j) {
                                k = !0, f.remove();
                                break
                            }
                            d(f);
                            if (!f.contents().length) {
                                k = !0, f.remove();
                                break
                            }
                            c(f).get(0).nodeValue += e.ellipsis
                        }
                        e.setTitle == "onEllipsis" && j || e.setTitle == "always" ? f.attr("title", i) : e.setTitle != "never" && f.removeAttr("title")
                    }
                }
            })
        }
        function b(a) {
            var b = c(a);
            if (b.length) {
                var d = b.get(0).nodeValue,
                    e = d.lastIndexOf(" ");
                return e > -1 ? (d = $.trim(d.substring(0, e)), b.get(0).nodeValue = d) : b.get(0).nodeValue = "", !0
            }
            return !1
        }
        function c(a) {
            if (a.contents().length) {
                var b = a.contents().last();
                return b.filter(e).length ? b : c(b)
            }
            return a.append(""), a.contents().last()
        }
        function d(a) {
            if (a.contents().length) {
                var b = a.contents().last();
                if (b.filter(e).length) {
                    var c = b.get(0).nodeValue;
                    return c = $.trim(c), c == "" ? (b.remove(), !0) : !1
                }
                while (d(b));
                return b.contents().length ? !1 : (b.remove(), !0)
            }
            return !1
        }
        function e() {
            return this.nodeType === 3
        }
        function f(a, b) {
            j[a] = b, k || (k = window.setInterval(function() {
                i()
            }, 200))
        }
        function g(a) {
            j[a] && (delete j[a], j.length || k && (window.clearInterval(k), k = undefined))
        }
        function i() {
            if (!l) {
                l = !0;
                for (var b in j) $(b).each(function() {
                    var c, d;
                    c = $(this), d = c.data(), (d.containerWidth != c.innerWidth() || d.containerHeight != c.innerHeight()) && a(c, j[b])
                });
                l = !1
            }
        }
        var j = {},
            k, l = !1,
            m = {
                ellipsis: "...",
                setTitle: "never",
                live: !1
            };
        $.fn.ellipsis = function(b, c) {
            var d, e;
            return d = $(this), typeof b != "string" && (c = b, b = undefined), e = $.extend({}, m, c), e.selector = b, d.each(function() {
                var b = $(this);
                a(b, e)
            }), e.live ? f(d.selector, e) : g(d.selector), this
        }
    })(jQuery), a()
});
provide("mixins/tweetFlagging", function(a) {
    using("_").as(function(b, _) {
        twttr.klass.mixin("twttr.mixins.tweetFlagging", function(a) {
            a.methods({
                flagLinkClicked: function(a, b) {
                    var c = $(a.target),
                        d = this,
                        e = twttr.decider.isAvailable("flag_yourself_nsfw") && twttr.helpers.isCurrentUser(b.user),
                        f = b.possiblySensitive,
                        g = {
                            isOurTweet: e,
                            before: function() {
                                if (e) {
                                    var a = c.attr("alternateText");
                                    c.attr("alternateText", c.html()), c.html(a)
                                } else {
                                    var b = ' <a target="_blank" href="' + twttr.router.flagTurkeySupportPath() + '">' + _("(learn more)") + "</a>";
                                    c.replaceWith("<span>" + _("Flagged") + b + "</span>")
                                }
                            }
                        };
                    f && !e ? twttr.dialogs.sensitiveFlagConfirmation(function() {
                        b.flag(g)
                    }).open() : (e && (b.sync("possiblySensitive", !b.possiblySensitive), g.possibly_sensitive = b.possiblySensitive), b.flag(g))
                },
                tweetFlaggable: function(a) {
                    return twttr.loggedIn && twttr.decider.isAvailable("media_flagging") && (!a || a.possiblySensitiveEditable !== !1)
                }
            })
        }), a(twttr.mixins.tweetFlagging)
    })
});
provide("promptbird", function(a) {
    using("util", "components/Promptbird").as(function(b) {
        twttr.promptbird = twttr.promptbird || {}, twttr.promptbird.renderComponentFromPrompt = function(a) {
            var c = b.util.camelize("Prompt_" + a.prompt.template_name);
            if (!twttr.components[c]) {
                var d = new Error('Promptbird component "' + c + '" is undefined');
                twttr.isLocalhost && console.log(d, d.stack || "error.stack is unavailable :(");
                return
            }
            var e = new twttr.components[c](a);
            return e.bind("destroyed", twttr.promptbird.destroyCallback), e
        }, twttr.promptbird.destroyCallback = function() {
            delete twttr.promptbird.cache
        }, twttr.promptbird.getPrompt = function() {
            var a = (new b.util.Location(location.href)).search;
            if (!twttr.decider.isAvailable("promptbird_phoenix") && !/force_prompt_id/.test(a)) return;
            if (!twttr.promptbird.cache) return;
            if (!twttr.promptbird.cache.prompt.template_name) return;
            return twttr.promptbird.cache
        }, twttr.promptbird.getPromptByFormat = function(a) {
            var b = twttr.promptbird.getPrompt();
            if (!b) return;
            for (var c = 0; c < a.length; c++) if (b.prompt.format === a[c]) return b
        }, a(twttr.promptbird)
    })
});
provide("MessageManager", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.MessageThread", function(a, b) {
            this.threadId = a, this.messages = b
        }).methods({
            hasNewMessages: function() {
                return twttr.app.caches.dmThreads.get(this.threadId) !== this.messages[0].id && !twttr.helpers.isCurrentUser(this.messages[0].sender)
            }
        }), twttr.klass("twttr.MessageManager", function() {
            var a = this;
            if (!twttr.loggedIn) return;
            twttr.isT1 || this.setupContinuousPoll(), twttr.isT1 && twttr.decider.isAvailable("t1_dm_poll") && ($(document).on("active", function() {
                a.poll(twttr.MessageManager.activePollInterval)
            }), $(document).on("inactive", function() {
                a.poll(twttr.MessageManager.inactivePollInterval)
            }))
        }).statics({
            activePollInterval: 9e4,
            inactivePollInterval: 3e5
        }).methods(twttr.EventProvider).methods({
            setupContinuousPoll: function() {
                var a = this;
                this._pollingState ? this._pollingState == "running" && this._fetchMessages() : (this._pollingState = "starting", this._fetchMessages(function() {
                    a._sort(), a.bind("messagesArrived", function(b, c) {
                        if (twttr.isT1) for (var d = c.length() - 1; d >= 0; d--) a.addMessage(c.get(d));
                        else c.each(function(b) {
                            a.addMessage(b)
                        })
                    }), !twttr.isT1 || twttr.decider.isAvailable("t1_dm_poll") ? a.poll(twttr.MessageManager.activePollInterval) : a.stopContinuousPoll(), a._intializeThreadState(), a.trigger("firstMessagesReceived"), a.trigger("pendingThreads")
                }))
            },
            isContinuouslyPolling: function() {
                return !!this._pollingState && this._pollingState !== "starting"
            },
            stopContinuousPoll: function() {
                this.isContinuouslyPolling() && (clearInterval(this._pollId), delete this._pollId, this._pollingState = null)
            },
            poll: function(a) {
                var b = this;
                b.stopContinuousPoll(), b.currentPollInterval = a, b._pollId = setInterval(function() {
                    b._fetchMessages()
                }, a), b._pollingState = "running"
            },
            reset: function() {
                this.threads = [], this.sentMessages = null, this.receivedMessage = null, twttr.app.caches.dmThreads.clear()
            },
            getAllThreads: function(a) {
                var b = this;
                this.threads ? a(this.threads) : this.one("firstMessagesReceived", function() {
                    a(b.threads)
                })
            },
            getThread: function(a, b) {
                var c = this;
                if (this.threads) {
                    for (var d = 0; d < this.threads.length; d++) if (this.threads[d].threadId === a) return b(this.threads[d]);
                    return b()
                }
                this.getAllThreads(function(d) {
                    c.getThread(a, b)
                })
            },
            addMessage: function(a, b) {
                var c = this;
                this.getThread(a.threadId, function(d) {
                    if (d) {
                        if (twttr.helpers.isCurrentUser(a.sender)) for (var e = 0, f = d.messages, g = f.length; e < g; e++) {
                            var i = f[e].id;
                            if (i < a.id) break;
                            if (i === a.id) return
                        }
                        d.messages.unshift(a);
                        for (var e = 0, j = c.threads.length; e < j; e++) if (c.threads[e].threadId === d.threadId) {
                            c.threads.splice(e, 1);
                            break
                        }
                    } else d = new twttr.MessageThread(a.threadId, [a]);
                    c.threads || (c.threads = []), c.threads.unshift(d), b && c._markMessageAsRead(a), c.trigger("updatedThread", [d, "new",
                    {
                        message: a
                    }]), c.trigger("newMessage." + a.threadId, [a]), c.trigger("pendingThreads")
                })
            },
            deleteMessage: function(a, b) {
                var c = this;
                this.getThread(b, function(d) {
                    if (d) {
                        for (var e = 0, f = d.messages, g = f.length; e < g; e++) if (f[e].id === a) {
                            var i = f.splice(e, 1)[0];
                            i.destroy({
                                error: function() {
                                    c.addMessage(i)
                                },
                                success: function(a) {
                                    var b = {};
                                    b[a.id + ""] = {
                                        item_type: twttr.constants.clientEvent.itemType.message,
                                        target_id: a.id
                                    }, trackClient({
                                        component: "stream",
                                        action: "delete"
                                    }, {
                                        item_ids: [a.id],
                                        item_details: b
                                    })
                                }
                            });
                            break
                        }
                        if (d.messages.length === 0) {
                            for (var j = 0; j < c.threads.length; j++) if (c.threads[j].threadId === b) {
                                c.threads.splice(j, 1);
                                break
                            }
                            c.trigger("deletedThread", [b])
                        } else c.trigger("updatedThread", [d, "delete",
                        {
                            messageId: a
                        }])
                    }
                    c.trigger("deletedMessage." + b, [a]), c.trigger("pendingThreads")
                })
            },
            hasPendingThreads: function() {
                var a = 0,
                    b = this.threads;
                if (b) for (var c = 0, d = b.length; c < d; c++) b[c].hasNewMessages() && a++;
                return a
            },
            markThreadAsRead: function(a) {
                var b = this;
                this.getThread(a, function(c) {
                    if (!c) return;
                    b._markMessageAsRead(c.messages[0]), b.trigger("readThread", [a]), b.trigger("pendingThreads")
                })
            },
            _markMessageAsRead: function(a) {
                twttr.app.caches.dmThreads.set(a.threadId, a.id)
            },
            _intializeThreadState: function() {
                if (!twttr.app.caches.dmThreads.get("##initialized")) {
                    twttr.app.caches.dmThreads.set("##initialized", !0);
                    var a = this.threads;
                    for (var b = 0, c = a.length; b < c; b++) twttr.app.caches.dmThreads.set(a[b].threadId, a[b].messages[0].id);
                    return !0
                }
                return !1
            },
            _fetchMessages: function(a) {
                function b() {
                    d++;
                    if (d === 2 || !e) c.isFetching = !1, a && a()
                }
                var c = this,
                    d = 0;
                if (this.isFetching) return;
                this.isFetching = !0;
                var e = !twttr.isT1 || this._pollingState === "starting",
                    f, g = {
                        count: 50,
                        success: function(a) {
                            a.length() > 0 && (c.receivedMessages ? c.receivedMessages.concat(a) : c.receivedMessages = a, c.trigger("messagesArrived", [a]), c._receivedSinceID = a.first().id), f = a, b()
                        },
                        cancel: function() {},
                        error: function(a, b) {
                            a.status === 502 && b.retry()
                        }
                    };
                c._receivedSinceID && (g.since_id = c._receivedSinceID), twttr.currentUser && twttr.currentUser.receivedMessages(g);
                var i = {
                    count: 50,
                    success: function(a) {
                        a.length() > 0 && (c.sentMessages ? c.sentMessages.concat(a) : c.sentMessages = a, c.trigger("messagesArrived", [a]), c._sentSinceID = a.first().id), b()
                    },
                    cancel: function() {},
                    error: function(a, b) {
                        a.status === 502 && b.retry()
                    }
                };
                c._sentSinceID && (i.since_id = c._sentSinceID), twttr.currentUser && e && twttr.currentUser.sentMessages(i)
            },
            _sort: function() {
                this.allMessages = [], this.sentMessages && (this.allMessages = this.allMessages.concat(this.sentMessages.array)), this.receivedMessages && (this.allMessages = this.allMessages.concat(this.receivedMessages.array)), this.allMessages.sort(function(a, b) {
                    return twttr.natcompare(b.id, a.id)
                });
                var a = {},
                    b = [];
                for (var c = 0; c < this.allMessages.length; c++) {
                    var d = this.allMessages[c],
                        e = d.threadId;
                    a[e] || (a[e] = [], b.push(e)), a[e].push(d)
                }
                this.threads = [];
                for (var c = 0; c < b.length; c++) this.threads.push(new twttr.MessageThread(b[c], a[b[c]]))
            }
        }), a(twttr.MessageManager)
    })
});
provide("ConversationManager", function(a) {
    using("constants").as(function(b) {
        twttr.klass("twttr.ConversationThread", function(a) {
            this.threadId = a.user.screenName, this.user = a.user, this.count = a.count, this.lastMessageDate = a.lastMessageDate, this.lastMessageId = a.lastMessageId, this.messages = []
        }).methods(twttr.EventProvider).methods({
            sort: function() {
                this.messages.sort(function(a, b) {
                    return b.id - a.id
                })
            },
            addMessage: function(a) {
                if ($.inArray(a, this.messages) > -1) return;
                this.messages.push(a), this.sort(), a.id > this.lastMessageId && (this.lastMessageDate = a.createdAt, this.lastMessageId = a.id, this.count++), this.trigger("newMessage", [a])
            },
            deleteMessage: function(a, b) {
                var c = !1;
                this.messages = $.grep(this.messages, function(b, d) {
                    return b.id === a && (b.destroy(), c = !0), b.id !== a
                });
                if (!c) return;
                if (this.messages.length > 0) {
                    var d = this.messages[this.messages.length - 1];
                    d.id > this.lastMessageId && (this.lastMessageDate = d.createdAt, this.lastMessageId = d.id)
                }
                this.count--, this.trigger("deletedMessage", [a]), b()
            },
            getMessages: function(a) {
                var b = this,
                    c = {
                        user_id: this.user.id,
                        since_id: this.since_id || 0,
                        count: 100,
                        success: function(c) {
                            c.each(function(a) {
                                b.addMessage(a)
                            }), a(b)
                        }
                    };
                twttr.currentUser.conversationWith(c)
            }
        }), twttr.klass("twttr.ConversationManager", function() {
            this.threads = {}, this.since_id = 0
        }).methods(twttr.EventProvider).methods({
            _fetchMessages: $.noop,
            _sort: $.noop,
            setupContinuousPoll: function() {
                if (this._pollId) return;
                var a = this;
                this._pollId = setInterval(function() {
                    a.getAllThreads($.noop)
                }, b.constants.directMessagePollInterval)
            },
            isContinuouslyPolling: function() {
                return twttr.is.def(this._pollId)
            },
            stopContinuousPoll: function() {
                this.isContinuouslyPolling() && (clearInterval(this._pollId), delete this._pollId)
            },
            getThread: function(a, b) {
                var c = this.threads[a];
                return c ? c.getMessages(b) : b()
            },
            getAllThreads: function(a) {
                function b(b) {
                    var d;
                    for (var e = b.array.length - 1; e >= 0; e--) {
                        var f = b.array[e];
                        c.threads[f.user.screenName] ? (d = c.threads[f.user.screenName], d.getMessages($.noop)) : (d = new twttr.ConversationThread(f), c.threads[d.threadId] = d), c.since_id = d.lastMessageId, c.trigger("updatedThread", [d, "new"])
                    }
                    a()
                }
                var c = this;
                twttr.currentUser.conversations({
                    success: b,
                    since_id: this.since_id,
                    count: 100
                })
            },
            addMessage: function(a) {
                var b = this.threads[a.threadId];
                b ? (b.addMessage(a), this.trigger("updatedThread", [b, "new"])) : (b = new twttr.ConversationThread({
                    threadId: a.threadId,
                    user: a.user,
                    count: 1,
                    lastMessageDate: a.createdAt,
                    lastMessageId: a.id
                }), this.threads[b.threadId] = b)
            },
            deleteMessage: function(a, b) {
                var c = this,
                    d = this.threads[b];
                d && d.deleteMessage(a, function() {
                    c.trigger("updatedThread", [d, ""]), d.count === 0 && (c.trigger("deletedThread", [b]), delete c.threads[b])
                })
            }
        }), a(twttr.ConversationManager)
    })
});
provide("externalOauthPopup", function(a) {
    using().as(function(b) {
        a(function(a) {
            var b, c = a.url,
                d = c.indexOf("?") == -1 ? "?" : "&";
            c += d + "callback_hash=" + encodeURIComponent(a.callbackUrl);
            var e = $(window),
                f = window.screenY || window.screenTop || 0,
                g = window.screenX || window.screenLeft || 0,
                i = (e.height() - 500) / 2 + f,
                j = (e.width() - 500) / 2 + g,
                a = ["width=" + (a.width ? a.width : 500), "height=" + (a.height ? a.height : 500), "top=" + i, "left=" + j, "toolbar=no", "location=yes"];
            window.open(c, "twitter_oauth", a.join(",")).focus()
        })
    })
});
provide("mixins/photoBox", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.photoBox", function(a) {
            a.methods({
                _initPhotobox: function() {
                    var a = this;
                    if (!twttr.decider.isAvailable("turkey") || this.options.statusAction === "directMessage" || this.options.template.show_turkey === !1) return;
                    this.tweetBoxId = twttr.turkey.getTweetBoxId(), this.options.template.tweet_box_id = this.tweetBoxId, (new twttr.views.PhotoControl(this.options.template)).render(this.$find("div.tweet-button-container"), "prepend");
                    var b = this._getTextLength;
                    this._getTextLength = function() {
                        var a = b.apply(this, arguments);
                        return this.turkey && this.turkey.hasItems() && (a += this.turkey.count() * (twttr.constants.tcoLength + 1)), a
                    };
                    var c = this.makeRequest;
                    this.makeRequest = function(a, b, d) {
                        this.turkey && this.turkey.hasItems() ? (this._sendingStatus = !0, this.turkey.tweet(b, d)) : c.apply(this, [a, b, d])
                    };
                    var d = this.resetTweetContent;
                    this.resetTweetContent = function() {
                        d.apply(this, arguments), this.turkey && this.turkey.reset()
                    };
                    var e = function() {
                            a.createFunc(), a._registerPhotoboxEvents();
                            if (a.options.origin && (a.options.origin == "main_tweet_box" || a.options.origin == "new-tweet-titlebar-button")) {
                                var b = {
                                    context: a.options.origin == "main_tweet_box" ? "timeline" : "popup",
                                    event_info: twttr.turkey.tweetboxMode()
                                };
                                trackClient({
                                    component: "tweetbox",
                                    action: "impression"
                                }, b)
                            }
                        };
                    this.bind("open", e), (!this.options.condensed || !this.options.condensedContent && this.options.defaultContent || this._getDraftTweet()) && e()
                },
                _registerPhotoboxEvents: function() {
                    var a = this;
                    this.turkey.bind("photoChanged", function() {
                        a.editor.trigger("didChangeContent", [a.editor.content()])
                    });
                    var b = function() {
                            a.turkey && a.turkey.destroy()
                        };
                    this.bind("close", b), this.bind("destroy", b), this.bind("titleChanged", function(b, c, d) {
                        if (d == "dm") a.turkey && a.turkey.disable(), a.$find(".turkey-control").hide();
                        else if (d == "reply" || d == "mention" || d == "update") a.turkey && a.turkey.enable(), a.$find(".turkey-control").show()
                    })
                },
                createFunc: function() {
                    this.turkey && this.turkey.remove(), this.turkey = new twttr.turkey.PhotoThumbnails(this.editor, this.$find(".turkey-selected-files"), this.$find(".turkey-add-action"), this.tweetBoxId)
                }
            })
        }), a()
    })
});
provide("mixins/profileStreamMixin", function(a) {
    using().as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.profileStreamMixin", function() {
            this.methods({
                beforeShowNewItems: function() {
                    this.keepPromotedTweetsAtTop = !0, this.constructor.uber.beforeShowNewItems.apply(this, arguments), this.promotedTweetWasExpanded = this.promotedTweetIsExpanded(), this.collapsePromotedTweet(), this.movePromotedTweetToTop()
                },
                onShowNewItems: function(a) {
                    this.constructor.uber.onShowNewItems.apply(this, arguments), this.trigger("onShowNewItems"), this.promotedTweetWasExpanded && this.expandPromotedTweet(), this.logPromotedImpressions(this.items.slice(0, this.newItemsCount))
                },
                onShowOldItems: function(a) {
                    this.constructor.uber.onShowOldItems.apply(this, arguments), this.logPromotedImpressions(this.items.slice(this.items.length - this.oldItemsCount))
                },
                afterFirstSwitchingTo: function() {
                    this.constructor.uber.afterFirstSwitchingTo.apply(this, arguments), $(document).trigger("profileVisit", twttr.profileUser)
                },
                _getPromotedStreamTweet: function() {
                    return this.$find("div.stream-items .promoted-tweet")
                },
                _collapseExpandPromotedTweet: function(a) {
                    var b = this._getPromotedStreamTweet();
                    b.length && twttr.app.currentPageName() === "profile" && twttr.app.currentPage().send("showHide", [b,
                    {
                        autoExpanded: !0,
                        forceClose: !a,
                        noAnimation: !0,
                        containerClass: ".expanding-stream-item"
                    }])
                },
                collapsePromotedTweet: function() {
                    this._collapseExpandPromotedTweet(!1)
                },
                expandPromotedTweet: function() {
                    this._collapseExpandPromotedTweet(!0)
                },
                domNodeSelector: function() {
                    return this.streamManagerDomNodeSelector ? this.streamManagerDomNodeSelector + " .profile-stream" : null
                },
                _getStreamErrorComponent: function(a) {
                    return this._getUserStreamErrorComponent(a)
                },
                _getEmptyStreamHtml: function() {
                    return this.stream_user_is_current_user() ? _("You haven't tweeted yet.") : _("@{{screen_name}} hasn't tweeted yet.", {
                        screen_name: this.screenName
                    })
                },
                _updateSinceId: function(a) {
                    var b = a.length == 1 && a[0].isPromoted(),
                        c = a.length > 1 && a[0].isPromoted() && twttr.natcompare(a[0].id, a[1].id) > 0;
                    b || c ? this._sinceId = a[0].id : this.constructor.uber._updateSinceId.apply(this, arguments)
                },
                wokeUp: function() {
                    signal(">streamWokeUp")
                }
            }), twttr.isT1 && this.methods({
                _setTitle: function(a) {
                    a(_("Tweets"))
                },
                _setViewToggler: function(a) {
                    twttr.streams.Profile.shouldDisplay() && a(new twttr.views.ProfileStreamViewToggler(!0, this.params))
                }
            })
        });
        a(c)
    })
});
provide("streams/Mentions", function(a) {
    using().as(function(b) {
        twttr.tweetStream("twttr.streams.Mentions").statics({
            isLoadingRelationships: !1
        }).setTitle(function(a) {
            twttr.isT1 ? a(_("Mentions")) : a(_("Tweets mentioning {{username}}", {
                username: "@" + twttr.currentUser.screenName
            }))
        }).update(function(a, b, c) {
            var d = this;
            if (twttr.secrets && twttr.secrets.hideMentions) {
                var e = a.success;
                a.success = function(b) {
                    e.apply(a, arguments);
                    if (d.constructor.isLoadingRelationships) return;
                    d.constructor.isLoadingRelationships = !0, setTimeout(function() {
                        var a = {
                            user_a: twttr.currentUser.id,
                            user_ids: b.map(function(a) {
                                return a.user.id
                            }).join(",")
                        };
                        $.ajax({
                            url: "/account/batch_followed_by",
                            data: a,
                            dataType: "jsonp",
                            type: "get",
                            success: function(a) {
                                var b = [];
                                for (var c in a.relationships) a.relationships[c] || b.push(".stream-tweet[data-user-id=" + c + "]");
                                b.length > 0 && $(b.join(",")).hide(), d.constructor.isLoadingRelationships = !1
                            }
                        })
                    }, 10)
                }
            }
            twttr.currentUser.mentions(a)
        }).methods({
            _getEmptyStreamHtml: function() {
                return _("Tweets that mention you, or are in reply to you, appear here.")
            }
        }).deciderKey("tweet_stream_mentions").pollingDeciderKey("tweet_stream_mentions_polling"), a()
    })
});
provide("streams/Favorites", function(a) {
    using().as(function(b) {
        twttr.tweetStream("twttr.streams.Favorites", function() {
            twttr.streams.TweetStream.apply(this, arguments), this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: function() {
                    return twttr.profileUser && twttr.profileUser.id
                }
            }), this._registerEvents()
        }).setTitle(function(a) {
            twttr.isT1 ? a(_("Favorites")) : !this.screenName || this.stream_user_is_current_user() ? a(_("Your Favorites")) : a(_("{{username}}'s Favorites", {
                username: this.screenName
            }))
        }).update(function(a, b, c) {
            this.screenName ? twttr.API.User.find(this.screenName).favorites(a) : twttr.currentUser.favorites(a)
        }).methods({
            _getEmptyStreamHtml: function() {
                return !this.screenName || this.stream_user_is_current_user() ? _("Your favorite tweets get saved here. To favorite a tweet, hover over it and click: <span class='favorite-icon'></span> <strong>Favorite</strong>") : _("<b>@{{screen_name}}</b> hasn't favorited any Tweets yet.", {
                    screen_name: this.screenName
                })
            },
            _registerEvents: function() {
                if (twttr.loggedIn) {
                    var a = function(a, b) {
                            return twttr.helpers.isProfileUser() ? b : null
                        };
                    this._registerAddToStreamEvent(twttr.API.Status, "favorite", a), this._registerRemoveFromStreamEvent(twttr.API.Status, "unfavorite", a)
                }
            }
        }).deciderKey("tweet_stream_favorites").pollingDeciderKey("tweet_stream_favorites_polling"), a()
    })
});
provide("streams/User", function(a) {
    using().as(function(b) {
        var c = twttr.tweetStream("twttr.streams.User", function(a) {
            var b = this;
            twttr.streams.TweetStream.apply(this, arguments), this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: function() {
                    return twttr.profileUser && twttr.profileUser.id
                }
            }), this.one("onShowNewItems", function() {
                b.expandPromotedTweet()
            }), twttr.helpers.isCurrentUser(a.screenName) && twttr.API.Status.bind("unretweet", function(a, c) {
                b.$node.find("[data-item-id=" + c.id + "][data-item-type=tweet]").remove()
            })
        }).mixin(twttr.mixins.profileStreamMixin).statics({
            _supportsPromotedContent: twttr.isT1
        }).update(function(a, b, d) {
            a.cacheOptions = {
                shouldCacheAssociated: !1
            }, a.pc = !! c._supportsPromotedContent, a.include_rts = !this.params.noRetweets, this.params.canViewUser ? twttr.API.User.find(this.params.screenName).timeline(a) : d(this, twttr.streams.PROTECTED)
        }).deciderKey("tweet_stream_user").pollingDeciderKey("tweet_stream_user_polling");
        a(c)
    })
});
provide("streams/Profile", function(a) {
    using().as(function(b) {
        var c = twttr.tweetStream("twttr.streams.Profile", function(a) {
            var b = this;
            twttr.streams.TweetStream.apply(this, arguments), this.one("onShowNewItems", function() {
                b.expandPromotedTweet()
            })
        }).mixin(twttr.mixins.profileStreamMixin).statics({
            _supportsPromotedContent: !0,
            shouldDisplay: function() {
                return twttr.profileUser.verified && twttr.loggedIn && twttr.abdecider.choose("replies_stripped_on_verified_profiles_222") == "stripped_replies_on_verified"
            }
        }).update(function(a, b, d) {
            a.cacheOptions = {
                shouldCacheAssociated: !1
            }, a.pc = !! c._supportsPromotedContent, a.include_rts = !this.params.noRetweets, this.params.canViewUser ? twttr.API.User.find(this.params.screenName).profileTimeline(a) : d(this, twttr.streams.PROTECTED)
        }).methods({
            _setViewToggler: function(a) {
                a(new twttr.views.ProfileStreamViewToggler(!1, this.params))
            }
        }).statics({
            _supportsPromotedContent: !0
        }).deciderKey("tweet_stream_profile").pollingDeciderKey("tweet_stream_profile_polling");
        a(c)
    })
});
provide("streams/FollowingTweets", function(a) {
    using().as(function(b) {
        twttr.tweetStream("twttr.streams.FollowingTweets", function() {
            twttr.streams.TweetStream.apply(this, arguments), this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: function() {
                    return twttr.profileUser && twttr.profileUser.id
                }
            }), this.registerUserActionEvents()
        }).mixin(twttr.mixins.userActionable).update(function(a, b, c) {
            a.cacheOptions = {
                shouldCacheAssociated: !1
            }, this.params.canViewUser ? twttr.API.User.find(this.params.screenName).followingTweets(a) : c(this, twttr.streams.PROTECTED)
        }).methods({
            itemViewClass: "FollowingTweet",
            onUserActionFollowSync: function(a) {
                this._findTweetsAndUpdateFollowState(a, !0)
            },
            onUserActionUnfollowSync: function(a) {
                this._findTweetsAndUpdateFollowState(a, !1)
            },
            onShowNewItems: function(a) {
                this._addFollowButtonsToNewTweets(a), this.constructor.uber.onShowNewItems.apply(this, arguments), this.trigger("showedNewItems")
            },
            onShowOldItems: function(a) {
                this._addFollowButtonsToNewTweets(a), this.constructor.uber.onShowOldItems.apply(this, arguments), this.trigger("showedOldItems")
            },
            selectedItemsByUserId: function(a) {
                var b = ".stream-item:has(.stream-item-content[data-user-id=" + a + "])";
                return this.$streamItems().find(b)
            },
            _reRenderTweetsByUserId: function(a) {
                var b = this;
                this.selectedItemsByUserId(a).each(function(a, c) {
                    var d = $(c),
                        e = d.find(".stream-tweet").attr("data-tweet-id");
                    twttr.API.Status.find(e, function(a) {
                        d.replaceWith(b._renderItemHtml(a))
                    })
                })
            },
            _getStreamErrorComponent: function(a) {
                return this._getUserStreamErrorComponent(a)
            },
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("The people you follow haven't tweeted anything recently.") : _("The people that @{{screen_name}} follows haven't tweeted recently.", {
                    screen_name: this.screenName
                })
            },
            _setTitle: function() {
                $("#following-page-context").html(_("Here’s what they’re tweeting right now."))
            },
            _findUserIds: function(a) {
                var b = [];
                return a.find(".stream-item-content").each(function(a, c) {
                    b.push(parseInt($(c).attr("data-user-id"), 10))
                }), b.slice(0, twttr.constants.users.maxLookupSize)
            },
            _addFollowButtonsToNewTweets: function(a) {
                if (!twttr.loggedIn || a.length === 0) return !1;
                var b = this,
                    c = this._findUserIds(a);
                twttr.API.User.findAll(c, {
                    reload: !0,
                    success: function(a) {
                        a.each(function(a) {
                            (!a.following || twttr.loggedIn && a.id !== twttr.currentUser.id) && b._findTweetsAndUpdateFollowState(a.id, a.following ? null : !1)
                        })
                    }
                })
            },
            _findTweetsAndUpdateFollowState: function(a, b) {
                var c;
                twttr.is.nil(b) ? c = "" : b ? c = Mustache.to_html('<span class="follow-text-quiet">· {{action}}</span>', {
                    action: _("Following")
                }) : c = Mustache.to_html('<span class="follow-text-quiet">·</span> <a href="#" class="js-action-follow tweet-follow-action follow-action" data-user-id="{{id}}">{{action}}</a>', {
                    id: a,
                    action: _("Follow")
                });
                var d = this.selectedItemsByUserId(a);
                d.each(function(a, b) {
                    $(b).find(".tweet-user-follow").html(c)
                })
            }
        }).deciderKey("tweet_stream_following").pollingDeciderKey("tweet_stream_following_polling"), a()
    })
});
provide("streams/List", function(a) {
    using("components/AddPeople", "components/NoListMembers", "streams/TweetStream", function(b, c, d) {
        twttr.tweetStream("twttr.streams.List", function() {
            d.apply(this, arguments), this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: function() {
                    return twttr.profileUser && twttr.profileUser.id
                },
                message: this.params.listSlug
            })
        }).setTitle(function(a) {
            twttr.isT1 ? a((new twttr.views.ListStreamTitle({
                full_name: _("Tweets")
            })).html()) : (twttr.merge(this.params, {
                full_name: _("@{{screenName}}/{{listSlug}}", this.params),
                slug: this.params.listSlug,
                user: {
                    screen_name: this.params.screenName
                }
            }), a((new twttr.views.ListStreamTitle(this.params)).html()))
        }).update(function(a, b, c) {
            this._getList(function(b) {
                b.statuses(a)
            })
        }).methods({
            _getEmptyStreamComponent: function() {
                return twttr.helpers.isCurrentUser(this.screenName) ? new b : new c
            },
            _getList: function(a) {
                var b = this;
                this._fetchingCallbacks = this._fetchingCallbacks || [], this._fetchingCallbacks.push(a);
                if (this._fetching) return;
                this._fetching = !0, twttr.API.User.find(this.screenName, {
                    success: function(a) {
                        a.lists.find(b.params.listSlug, function(a) {
                            if (!a) {
                                b.trigger("notFound");
                                return
                            }
                            b.memberCount = a.memberCount;
                            var c;
                            while (c = b._fetchingCallbacks.pop()) c(a);
                            b._list = a, b._fetching = !1
                        })
                    },
                    error: function() {
                        b.trigger("notFound")
                    }
                })
            }
        }).deciderKey("tweet_stream_list").pollingDeciderKey("tweet_stream_list_polling"), a(twttr.streams.List)
    })
});
provide("streams/Search", function(a) {
    using().as(function(b, c) {
        var d = twttr.tweetStream("twttr.streams.Search", function(a) {
            return twttr.is.def(a.pretty_query) || (a.pretty_query = a.query), twttr.streams.TweetStream.apply(this, arguments), this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                query: a.query
            }), this
        }).setTitle(function(a) {
            var b = this;
            if (this.params.hideTitle) return;
            var c = twttr.merge({
                top_mode: this.params.mode == "relevance",
                all_mode: this.params.mode == "tweets",
                timeline_mode: this.params.mode == "timeline",
                with_links_mode: this.params.mode == "links"
            }, this.params);
            a((new twttr.views.SearchStreamTitle(c)).html());
            var d = $(".js-stream-title .stream-tab-dropdown"),
                e = new twttr.control.Dropdown(d, {
                    items: [{
                        label: _("Top"),
                        handlers: this._getSearchHandlers("relevance")
                    }, {
                        label: _("All"),
                        handlers: this._getSearchHandlers("tweets")
                    }, {
                        label: _("With links"),
                        handlers: this._getSearchHandlers("links")
                    }],
                    direction: "left"
                });
            e.render(d, "append")
        }).update(function(a, b, c) {
            var d = this;
            !twttr.is.def(a.since_id) && this.items.length > 0 && !twttr.is.def(a.max_id) && (a.since_id = "1");
            if (!a.since_id) {
                var e = a.success;
                a.success = function(a, b) {
                    d.logSearchImpressions(a), d._next_page = b.response.next_page;
                    var c = e.apply({}, arguments);
                    return !d._next_page && !b.response.served_by_blender && d.reachedTheEnd(), c
                }
            }
            a.max_id && (a.page = d._next_page), this.params.debug && (a.debug = this.params.debug);
            var f = twttr.util.params().promoted_location;
            f && (a.promoted_location = f), this.params.experimentId && (a.experimentId = this.params.experimentId), this.params.mode === "links" ? a.filter = "links" : this.params.mode === "relevance" ? a.mode = "relevance" : this.params.mode === "timeline" && (a.mode = "timeline"), this.search(this.params.query, a)
        }).methods({
            _shouldCache: !1,
            search: function(a, b) {
                var c = this;
                if (this.inProgress) return;
                var d = function(a, b) {
                        return a = a || $.noop, function() {
                            return c.inProgress = b, a.apply(this, arguments)
                        }
                    };
                b.before = d(b.before, !0), b.success = d(b.success, !1), b.error = d(b.error, !1), b.cancel = d(b.cancel, !1), b.query_source = twttr.search.getLastQuerySource(), twttr.API.Status.search(a, b)
            },
            _getSearchHandlers: function(a) {
                var b = this;
                return {
                    click: function() {
                        b.params.mode = a, twttr.app.currentPage().send("getStreamManager", function(a) {
                            a.switchTo(twttr.streams.Search, b.params)
                        })
                    }
                }
            },
            scribeData: function() {
                return twttr.merge(twttr.streams.Stream.prototype.scribeData.apply(this), {
                    query: this.params.query,
                    type: this.params.mode
                })
            },
            logSearchImpressions: function(a) {
                var b = [],
                    c = [],
                    d = [],
                    e = [];
                a.each(function(a) {
                    a.isPromoted() ? (d.push(a.id), e.push(a.impressionId)) : a.resultCategory === "popular" ? c.push(a.id) : b.push(a.id)
                }), scribble("integrated_search_impression", {
                    mode: this.params.mode,
                    query: this.params.query,
                    pretty_query: this.params.pretty_query,
                    top_tweets: c,
                    promoted_tweets: d,
                    impression_ids: e,
                    tweet_count: a.length()
                })
            },
            _getEmptyStreamHtml: function() {
                if (this.params.mode === "links") return _("No Tweet results with links for <strong>{{pretty_query}}</strong>.", this.params);
                if (this.params.mode === "relevance") {
                    var a = {
                        path: twttr.router.searchRealtimePath({
                            query: this.params.query
                        }),
                        pretty_query: this.params.pretty_query
                    };
                    return twttr.router.routeTo(twttr.router.searchRealtimePath({
                        query: this.params.query
                    }))
                }
                return _("No Tweet results for <strong>{{pretty_query}}</strong>.", this.params)
            },
            _getStreamEndHtml: function() {
                if (this.params.mode === "links") return _("Older Tweet results with links for <strong>{{pretty_query}}</strong> are unavailable.", this.params);
                if (this.params.mode === "relevance") {
                    var a = {
                        path: twttr.router.searchRealtimePath({
                            query: this.params.query
                        }),
                        pretty_query: this.params.pretty_query
                    };
                    return _('You’ve reached the end of the Top Tweets for <strong>{{pretty_query}}</strong>. <div><a href="{{path}}">View all Tweets</a>.</div>', a)
                }
                return _("Older Tweet results for <strong>{{pretty_query}}</strong> are unavailable.", this.params)
            },
            beforeShowNewItems: function() {
                this.constructor.uber.beforeShowNewItems.apply(this, arguments), this.movePromotedTweetToTop()
            },
            onShowNewItems: function(a) {
                this.constructor.uber.onShowNewItems.apply(this, arguments), this.logPromotedImpressions(this.items.slice(0, this.newItemsCount))
            },
            onShowOldItems: function(a) {
                this.constructor.uber.onShowOldItems.apply(this, arguments), this.logPromotedImpressions(this.items.slice(this.items.length - this.oldItemsCount))
            }
        }).deciderKey("tweet_stream_search").pollingDeciderKey("tweet_stream_search_polling");
        twttr.isT1 && d.methods({
            _setHeader: function(a, b) {
                a((new twttr.views.TweetSearchStreamHeader(b)).$html())
            },
            _setTitle: function(a) {
                a(_("Tweets"))
            },
            _setViewToggler: function(a) {
                a(new twttr.views.SearchStreamViewToggler(this.params.query, this.params.mode))
            }
        }), a(d)
    })
});
provide("streams/UserStream", function(a) {
    using().as(function(b) {
        twttr.stream("twttr.streams.UserStream", function(a, b, c) {
            var d = this;
            twttr.streams.Stream.apply(this, arguments), this.scribbler = this.params.scribbler || twttr.Scribbler.clientEvent, this.isCursorPagination() ? this.cursor = -1 : this.page = 0, this.registerUserActionEvents()
        }).subclassOf(twttr.streams.Stream).mixin(twttr.mixins.userActionable).methods({
            itemViewClass: "StreamUser",
            streamItemType: "user",
            IDS_PER_REQUEST: 5e3,
            update: function(a) {},
            _fetchItems: function(a) {
                var b = this;
                if (!twttr.decider.isAvailable("people_streams") || this.constructor._deciderKey && !twttr.decider.isAvailable(this.constructor._deciderKey)) {
                    a(this, twttr.streams.DECIDER);
                    return
                }
                var c = {
                    success: function(c, d) {
                        var e = b.isCursorPagination();
                        b.push(c.array);
                        var f = d && d.fetchedFullPage || c.length() === b.PAGE_SIZE;
                        e ? b.cursor = d.response.next_cursor : f ? b.page = b.page + 1 : b.page = -1, (e && !b.cursor || !e && b.page === -1) && b.reachedTheEnd(), c.each(function(a) {
                            a.promotedContent && twttr.API.util.PromotedContent.logImpression(a.promotedContent.impression_id)
                        }), a(b, twttr.streams.SUCCESS)
                    },
                    error: function(c) {
                        c.status === 502 ? a(b, twttr.streams.WHALE) : a(b, twttr.streams.ERROR), b._scribeResults("error", [], {
                            status_code: c.status
                        })
                    },
                    timeout: function(a) {
                        a.retry()
                    },
                    cancel: function() {
                        a(b, twttr.streams.TIMEOUT), b._scribeResults("error", [], {
                            status_code: 502
                        })
                    }
                };
                c = twttr.merge(c, this.isCursorPagination() ? {
                    cursor: this.cursor
                } : {
                    page: this.page + 1
                }), this.update(c)
            },
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            PAGE_SIZE: 20,
            isCursorPagination: function() {
                return !0
            },
            _getStreamErrorComponent: function(a) {
                return a === twttr.streams.PROTECTED ? new twttr.components.ProtectedUser({
                    screen_name: this.params.screenName
                }) : twttr.streams.Stream.prototype._getStreamErrorComponent.apply(this, arguments)
            },
            _scribeResults: function(a, b, c) {
                twttr.streams.Stream.prototype._scribeResults.apply(this, arguments);
                var b = b || [];
                c = c || {};
                if (a == "error" || a == "initial" && !b.length) this.scribbler.scribe({
                    component: "stream",
                    action: a == "error" ? "error" : "no_results"
                }, twttr.merge(c, {
                    item_count: 0,
                    event_value: 0,
                    cursor_or_page: this._cursorOrPage(),
                    referring_event: a
                }));
                else if (b.length) {
                    var d = this,
                        e = [],
                        f;
                    twttr.each(b, function(a, b) {
                        e.push(a.id);
                        if (d.constructor._namespace.indexOf("UserRecommendations") != -1 || d.constructor._namespace.indexOf("PeopleSearch") != -1) {
                            var c;
                            a.promotedContent && a.promotedContent.impression_id && (c = {
                                item_type: twttr.constants.clientEvent.itemType.promotedUser,
                                item_token: a.promotedContent.impression_id
                            }), c && (f = f || {}, c.item_position = b, f[a.id + ""] = c)
                        }
                    }), f && (c.item_details = f), this.scribbler.scribe({
                        component: "stream",
                        action: "results"
                    }, twttr.merge(c, {
                        item_ids: e,
                        item_count: e.length,
                        event_value: e.length,
                        cursor_or_page: this._cursorOrPage(),
                        referring_event: a
                    }))
                }
            },
            sortUsersByIds: function(a, b) {
                var c = [],
                    d = {};
                return twttr.each(a, function(a) {
                    d[a.id] = a
                }), twttr.each(b, function(a) {
                    d[a] && c.push(d[a])
                }), c
            },
            fetchUsersById: function(a, b) {
                var c = this,
                    d, e, f;
                twttr.API.User.find(this.screenName, function(d) {
                    if (!twttr.helpers.canViewUser(d)) {
                        c._showError(twttr.streams.PROTECTED), c.doneLoadingMore();
                        return
                    }
                    e = c.page * c.PAGE_SIZE, f = c.fetchedIds && e < c.IDS_PER_REQUEST, f ? c.hydrateUsers(a) : (c.page = 0, d[b]({
                        cursor: c.idsCursor,
                        success: function(b, d) {
                            d.response.next_cursor && (c.idsCursor = d.response.next_cursor), c.fetchedIds = b, c.hydrateUsers(a)
                        }
                    }))
                })
            },
            hydrateUsers: function(a) {
                var b = this,
                    c = this.fetchedIds,
                    d = a.success;
                a.success = function(a) {
                    var c = b.sortUsersByIds(a.array, e);
                    a.array = c, d.call(this, a, {
                        fetchedFullPage: e.length == b.PAGE_SIZE
                    })
                };
                var e = c.slice(this.page * this.PAGE_SIZE, (this.page + 1) * this.PAGE_SIZE);
                twttr.decider.isAvailable("people_stream_fresh") ? e.length ? twttr.API.User.findAll(e, {
                    success: a.success,
                    reload: !0
                }) : a.success(new twttr.anywhere.api.util.BaseCollection([])) : twttr.API.User.findAll(e, a.success)
            }
        }), a(twttr.streams.UserStream)
    })
});
provide("streams/Friends", function(a) {
    using("_", "util").as(function(b, _) {
        var c = twttr.stream("twttr.streams.Friends", function(a, b) {
            twttr.streams.UserStream.apply(this, arguments);
            var c = this;
            this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                profile_id: twttr.profileUser && twttr.profileUser.id,
                context: "profile"
            }), this._registerEvents()
        }).subclassOf(twttr.streams.UserStream).methods({
            PAGE_SIZE: 100,
            update: function(a) {
                this.fetchUsersById(a, "friendIds")
            },
            isCursorPagination: function() {
                return !1
            },
            _countString: function(a) {
                return a === 1 ? _("You follow 1 person") : _("You follow {{friendsCount}} people", {
                    friendsCount: b.util.formatNumber(a, twttr.pageLocale)
                })
            },
            _setTitle: function(a) {
                $("#following-page-context").html(_("Here’s more about them."));
                if (this.params.subtab) {
                    var b = new twttr.views.FollowingSubtabs(this.params);
                    a(b.html())
                }
            },
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("You aren't following anyone yet.") : _("@{{screen_name}} isn't following anyone yet.", {
                    screen_name: this.screenName
                })
            },
            _registerEvents: function() {
                if (twttr.loggedIn) {
                    var a = function(a, b) {
                            return twttr.helpers.isProfileUser() ? b : null
                        };
                    this._registerAddToStreamEvent(twttr.API.User, "follow", a), this._registerRemoveFromStreamEvent(twttr.API.User, "unfollow", a)
                }
            }
        }).statics({
            _deciderKey: "people_stream_friends"
        });
        twttr.isT1 && c.methods({
            _setTitle: function(a) {
                a(_("Following"))
            }
        }), a(c)
    })
});
provide("streams/FollowerRequests", function(a) {
    using("_", "mixins/protectedUserActionable").as(function(b, _) {
        twttr.stream("twttr.streams.FollowerRequests", function(a, b) {
            var c = this;
            this.constructor.uber.constructor.apply(this, arguments), this.cursor = 0, this.oldItemsCount = -1, this.pending_users = [], this.getFollowerRequestCount = function(a) {
                var b = this;
                b.oldItemsCount == -1 ? twttr.currentUser.friends.pending(function(c, d) {
                    b.oldItemsCount = c.length, b.pending_users = c, a(b.oldItemsCount)
                }) : (b.oldItemsCount = b.pending_users.length, a(b.oldItemsCount))
            }, this.registerProtectedUserActions()
        }).subclassOf(twttr.streams.UserStream).mixin(b.mixins.protectedUserActionable).methods({
            itemViewClass: "StreamFollowerRequest",
            streamItemType: "user",
            update: function(a) {},
            _fetchItems: function(a) {
                var b = this;
                b.getFollowerRequestCount(function(c) {
                    var d = {
                        success: function(d, e) {
                            b.push(d.array), b.cursor = b.cursor + b.constructor.PAGE_SIZE, b.cursor >= c && b.reachedTheEnd(), a(b, twttr.streams.SUCCESS)
                        },
                        error: function(c) {
                            c.status === 502 ? a(b, twttr.streams.WHALE) : a(b, twttr.streams.ERROR)
                        },
                        timeout: function(a) {
                            a.retry()
                        },
                        cancel: function() {
                            a(b, twttr.streams.TIMEOUT)
                        }
                    };
                    sliced_list = b.pending_users.slice(b.cursor, b.cursor + b.constructor.PAGE_SIZE), twttr.API.User.findAll(sliced_list, d)
                })
            },
            _setTitle: function(a) {
                a(_("Your pending follower requests"))
            }
        }).statics({
            PAGE_SIZE: 20,
            _deciderKey: "people_stream_follower_requests"
        }), a(twttr.streams.FollowerRequests)
    })
});
provide("streams/Followers", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.stream("twttr.streams.Followers", function(a, b) {
            twttr.streams.UserStream.apply(this, arguments), this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                profile_id: twttr.profileUser && twttr.profileUser.id,
                context: "profile"
            }), this._registerEvents(a)
        }).subclassOf(twttr.streams.UserStream).methods({
            PAGE_SIZE: 100,
            update: function(a) {
                this.fetchUsersById(a, "followerIds")
            },
            isCursorPagination: function() {
                return !1
            },
            _setTitle: function(a) {
                if (this.params.subtab) {
                    var b = new twttr.views.FollowersSubtabs(this.params);
                    a(b.html())
                }
            },
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("You don't have any followers yet.") : _("@{{screen_name}} doesn't have any followers yet.", {
                    screen_name: this.screenName
                })
            },
            _registerEvents: function(a) {
                if (twttr.loggedIn) {
                    var b = function(b, c) {
                            return !twttr.helpers.isProfileUser() && c.screenName === a.screenName ? twttr.currentUser : null
                        };
                    this._registerAddToStreamEvent(twttr.API.User, "follow", b), this._registerRemoveFromStreamEvent(twttr.API.User, "unfollow", b)
                }
            }
        }).statics({
            _deciderKey: "people_stream_followers"
        });
        twttr.isT1 && c.methods({
            _setTitle: function(a) {
                a(_("Followers"))
            },
            _setViewToggler: function(a, b) {
                twttr.loggedIn && !twttr.helpers.isProfileUser() && a(new twttr.views.FollowersStreamViewToggler(b.screenName, !1))
            }
        }), a(c)
    })
});
provide("streams/SocialContextStream", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.stream("twttr.streams.SocialContextStream", function(a, b) {
            twttr.streams.UserStream.apply(this, arguments), this.params = a;
            var c = a.socialContextType == "followsInCommonWith" ? "following_social_context" : "followers_social_context";
            this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                profile_id: twttr.profileUser && twttr.profileUser.id,
                context: "profile",
                event_info: c
            })
        }).subclassOf(twttr.streams.UserStream).methods({
            update: function(a) {
                var b = this;
                twttr.API.User.find(this.screenName, function(c) {
                    if (!twttr.helpers.canViewUser(c)) {
                        b._showError(twttr.streams.PROTECTED), b.doneLoadingMore();
                        return
                    }
                    twttr.currentUser[b.params.socialContextType](twttr.profileUser.id, a)
                })
            },
            _getEmptyStreamHtml: function() {
                var a = {
                    user: twttr.profileUser.screenName
                };
                return this.params.socialContextType == "followsInCommonWith" ? _("You and @{{user}} don't follow anyone in common.", a) : _("You don't follow anyone who follows @{{user}}.", a)
            }
        }).statics({
            _deciderKey: "social_context"
        });
        twttr.isT1 ? c.methods({
            _setTitle: function(a) {
                a(_("Followers"))
            },
            _setViewToggler: function(a, b) {
                twttr.loggedIn && !twttr.helpers.isProfileUser() && a(new twttr.views.FollowersStreamViewToggler(b.screenName, !0))
            }
        }) : c.methods({
            _setTitle: function(a) {
                if (this.params.socialContextType == "followsInCommonWith") var b = new twttr.views.FollowingSubtabs(this.params);
                else var b = new twttr.views.FollowersSubtabs(this.params);
                a(b.html())
            }
        }), a(twttr.streams.SocialContextStream)
    })
});
provide("streams/SuggestionCategoriesStream", function(a) {
    using("_", twttr.isT1 ? "mixins/SuggestionCategoriesStreamT1" : "", "mixins/discoveryHelper").as(function(b, _, c) {
        var d = twttr.klass("twttr.streams.SuggestionCategoriesStream", function(a, b) {
            a.pathRoot = a.pathRoot || "whoToFollow", twttr.streams.Stream.apply(this, arguments), this.$node.addClass("suggestion-categories");
            var c = this;
            this.$node.delegate("div[data-item-type=suggestion_category]", "click", function(a) {
                var b = $(this).attr("data-item-id"),
                    d = {};
                return d[b] = {
                    item_position: $("div.js-stream-manager-container div.js-stream-item").index($(a.target).closest(".js-stream-item"))
                }, b && (trackClient({
                    component: "suggestion_category",
                    action: "click"
                }, {
                    step: "interests",
                    query: b,
                    item_details: d
                }), c.routePageTo(c.params.pathRoot, "InterestsCategory", {
                    category: b
                })), !1
            })
        }).subclassOf(twttr.streams.Stream).statics({
            cacheCategories: function(a) {
                this.CATEGORIES = a, this.CATEGORY_MAP = this.buildCategoryMap(a)
            },
            buildCategoryMap: function(a) {
                return a.reduce({}, function(a, b) {
                    return a[b.slug] = b, a
                })
            },
            filterTopTweetsCategories: function(a) {
                var b = this.buildCategoryMap(a);
                return a.filter(function(a) {
                    if (a.slug.match(/^(.+)[_-]top-tweets$/i)) {
                        var c = b[RegExp.$1];
                        return c && (c.topTweetsCategory = a), !1
                    }
                    return !0
                })
            }
        }).methods({
            itemViewClass: "StreamSuggestionCategory",
            streamItemType: "suggestion_category",
            sampleSize: "",
            streamItemId: function(a) {
                return a.slug
            },
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            addTipsies: function() {},
            _fetchItems: function(a) {
                var b = this;
                if (!twttr.decider.isAvailable("suggestion_categories_streams")) {
                    a(this, twttr.streams.DECIDER);
                    return
                }
                var c = {
                    sample_size: this.sampleSize,
                    samples: !0,
                    success: function(c) {
                        c = b.constructor.filterTopTweetsCategories(c), b.constructor.cacheCategories(c);
                        var d = c.map(function(a) {
                            var c, d;
                            return a.topTweetsCategory && a.topTweetsCategory.sample && (d = a.topTweetsCategory.sample.shift()) && (c = d.id), a.clone({
                                category_link: b.pagePathFor(b.params.pathRoot, "InterestsCategory", {
                                    category: a.slug
                                }),
                                category_top_tweets_user_id: c,
                                category_top_tweets_is_current_user: !! twttr.currentUser && twttr.currentUser.id == c,
                                following_category_top_tweets: a.topTweetsCategory ? a.topTweetsCategory.followingTopTweets : null
                            })
                        });
                        b.push(d.array), a(b, twttr.streams.SUCCESS), b.addTipsies(), b.reachedTheEnd();
                        var e = c.map(function(a, b) {
                            return a.name
                        });
                        b.scribbler.scribe({
                            component: "stream",
                            action: "results"
                        }, {
                            item_names: e,
                            item_count: e.length()
                        })
                    },
                    error: function() {
                        a(b, twttr.streams.ERROR)
                    }
                };
                b.defaultOpts && (c = twttr.merge(b.defaultOpts, c)), b.params.lang && (c.lang = b.params.lang), b.params.country && (c.country = b.params.country), b.params.city && (c.city = b.params.city), c.top_tweets = !0, twttr.API.SuggestionCategory.getAll(c)
            },
            _setTitle: function(a) {
                this.params.title !== undefined ? a(this.params.title) : a(_("Select the topics you are interested in. Find a few people you want to hear from, then follow them."))
            },
            _getHeaderComponent: function() {
                return this.params.noHeaderFooter ? null : new twttr.components.SuggestionCategoriesList(this.constructor.CATEGORIES, this.params.pathRoot)
            },
            _getStreamEndComponent: function() {
                return this._getHeaderComponent()
            }
        }).mixin(twttr.mixins.discoveryHelper);
        c && d.mixin(c), a(d)
    })
});
provide("streams/PeopleSearch", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.streams.PeopleSearch", function(a, b) {
            twttr.streams.UserStream.apply(this, arguments), !a.scribbler && a.query && (this.scribbler = twttr.Scribbler.clientEvent.spawnWithTerms({}, {
                query: a.query
            })), this.ignoreScribeItemPosition = !1
        }).subclassOf(twttr.streams.UserStream).methods({
            scribeData: function() {
                return twttr.merge(twttr.streams.Stream.prototype.scribeData.apply(this), {
                    name: "Search",
                    query: this.params.query,
                    type: "people"
                })
            },
            update: function(a) {
                a.display_location = "search-view-all-stream", a.pc = !0, twttr.API.User.search(this.params.query, a)
            },
            isCursorPagination: function() {
                return !1
            },
            _getEmptyStreamHtml: function() {
                return _("No people results for <strong>{{query}}</strong>.", {
                    query: this.params.query
                })
            },
            getStreamEndHtml: function() {
                return _("No more people results for <strong>{{query}}</strong>.", {
                    query: this.params.query
                })
            },
            _setHeader: function(a, b) {
                this.header ? a(this.header.$node) : a((new twttr.views.StreamHeader(b)).$html())
            },
            _setTitle: function(a) {
                twttr.isT1 ? a(_("People")) : a(_("Results for: <strong>{{query}}</strong>", {
                    query: this.params.query
                }))
            }
        }).statics({
            _deciderKey: "people_stream_people_search"
        }), a(twttr.streams.PeopleSearch)
    })
});
provide("streams/t1/HeadlessPeopleSearch", function(a) {
    using("_").as(function(a, _) {
        twttr.klass("twttr.streams.HeadlessPeopleSearch", function(a, b) {
            twttr.streams.PeopleSearch.apply(this, arguments);
            var c = new twttr.streams[a.headerStreamClass](a, b);
            this._setHeader = c._setHeader, this._setTitle = c._setTitle, this._setHeaderButton = c._setHeaderButton, this._updateHeaderFromStream = c._updateHeaderFromStream
        }).subclassOf(twttr.streams.PeopleSearch).methods({
            _setViewToggler: function(a, b) {
                a(new twttr.views.BackLink(b.backLinkOptions))
            }
        })
    }), a(twttr.streams.HeadlessPeopleSearch)
});
provide("streams/DashboardPeopleSearch", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.DashboardPeopleSearch", function(a, b) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", twttr.streams.PeopleSearch.apply(this, arguments)
        }).subclassOf(twttr.streams.PeopleSearch).methods({
            scribeData: function() {
                return twttr.merge(twttr.streams.Stream.prototype.scribeData.apply(this), {
                    name: "Search",
                    query: this.params.query,
                    type: "people"
                })
            },
            update: function(a) {
                a.display_location = "search-view-all-stream", a.pc = !1, twttr.API.User.search(this.params.query, a)
            },
            _setHeader: function(a, b) {
                a("")
            },
            itemViewClass: "DashboardStreamUser"
        }), a()
    })
});
provide("streams/DashboardTopPeopleSearch", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.DashboardTopPeopleSearch", function(a, b) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", twttr.streams.UserStream.apply(this, arguments)
        }).subclassOf(twttr.streams.UserStream).methods({
            update: function(a) {
                var b = {
                    is_t1: twttr.isT1,
                    statuses: !1,
                    stories: !0,
                    related_queries: !1,
                    spelling_corrections: !1,
                    query_source: twttr.search.searchQuerySource.TYPED_QUERY
                };
                twttr.merge(b, a);
                var c = this,
                    d = b.success || $.noop;
                b.success = function(a, b) {
                    var e = new twttr.anywhere.api.util.BaseCollection;
                    a.stories.each(function(a) {
                        a.type == "user" && (e = e.concat(a.content.users))
                    }), d(e, b), c.trigger("results", [e])
                }, twttr.API.Search.search(this.params.query, b)
            },
            _setHeader: function(a, b) {
                a("")
            },
            _getStreamEndComponent: function() {
                return new twttr.components.TopPeopleStreamEnd(this.params.query)
            },
            itemViewClass: "DashboardStreamUser"
        }), twttr.klass("twttr.components.TopPeopleStreamEnd").subclassOf(twttr.components.Base).initializer(function(a) {
            (new twttr.views.TopPeopleStreamEnd({
                query: a
            })).render(this.$node, "append")
        }), a()
    })
});
provide("streams/ListFollowers", function(a) {
    using("_").as(function(b, _) {
        twttr.stream("twttr.streams.ListFollowers", function(a, b) {
            twttr.streams.UserStream.apply(this, arguments), this._registerEvents(a)
        }).subclassOf(twttr.streams.UserStream).methods({
            update: function(a) {
                var b = this;
                twttr.API.User.find(this.screenName).lists(function(c) {
                    c.find(function(a) {
                        return a.slug === b.params.listSlug
                    }).followers(a)
                })
            },
            _setTitle: function(a) {
                twttr.isT1 ? a(_("List subscribers")) : a(_("People following this list"))
            },
            _registerEvents: function(a) {
                if (twttr.loggedIn) {
                    var b = function(b, c) {
                            return c.slug === a.listSlug ? twttr.currentUser : null
                        };
                    this._registerAddToStreamEvent(twttr.API.List, "follow", b), this._registerRemoveFromStreamEvent(twttr.API.List, "unfollow", b)
                }
            }
        }).statics({
            _deciderKey: "people_stream_list_followers"
        }), a(twttr.streams.ListFollowers)
    })
});
provide("streams/ListMembers", function(a) {
    using("_").as(function(b, _) {
        twttr.stream("twttr.streams.ListMembers", function(a, b) {
            twttr.streams.UserStream.apply(this, arguments), this._registerEvents(a)
        }).subclassOf(twttr.streams.UserStream).methods({
            update: function(a) {
                var b = this;
                twttr.API.User.find(this.screenName).lists(function(c) {
                    c.find(function(a) {
                        return a.slug === b.params.listSlug
                    }).members(a)
                })
            },
            _setTitle: function(a) {
                twttr.isT1 ? a(_("List members")) : a(_("People this list follows"))
            },
            _registerEvents: function(a) {
                if (twttr.loggedIn) {
                    var b = function(b, c, d) {
                            return c.slug === a.listSlug ? d : null
                        };
                    this._registerAddToStreamEvent(twttr.widget.ListMembershipDialog, "addListMember", b), this._registerRemoveFromStreamEvent(twttr.widget.ListMembershipDialog, "removeListMember", b)
                }
            }
        }).statics({
            _deciderKey: "people_stream_list_members"
        }), a(twttr.streams.ListMembers)
    })
});
provide("streams/Discover", function(a) {
    using("_", "util", "mixins/t1/cardActionable", "helpers", "constants").as(function(b, _) {
        twttr.klass("twttr.streams.Discover", function(a, b) {
            var c = this;
            twttr.streams.Stream.apply(c, arguments), this.scribbler = twttr.Scribbler.clientEvent, c.registerCardActions(), this.registerTweetActionEvents(), this.initComponentEvents(), c.$find(".js-user-tipsy").tipsy({
                gravity: "s"
            }), twttr.API.CurrentUser.bind("changedLocation.discovery", function() {
                jQuery.contains(document.body, c.$node[0]) ? c._fetchItems($.noop) : c._lastUpdate = null
            })
        }).subclassOf(twttr.streams.Stream).mixin(twttr.mixins.cardActionable, twttr.mixins.componentEvents, twttr.mixins.tweetActionable).statics({
            discoveryRefreshRate: 3e5
        }).methods({
            streamItemType: "story",
            _expandable: !0,
            itemViewClass: function(a) {
                return twttr.views["Card" + b.util.capitalize(a.type)]
            },
            streamItemId: function(a) {
                return a.getId()
            },
            addTipsies: function() {
                this.$find(".js-user-tipsy").tipsy({
                    gravity: "s"
                })
            },
            afterFirstSwitchingTo: function(a) {
                this._fetchItems(a)
            },
            afterSwitchingToAgain: function(a) {
                !this._lastUpdate || this._lastUpdate + twttr.streams.Discover.discoveryRefreshRate <= this.now() ? this._fetchItems(a) : a && a()
            },
            now: function() {
                return (new Date).getTime()
            },
            reset: function() {
                this.$streamItems().empty(), this.items = [], this.itemIds = null, this.$find(".js-discovery-error").remove()
            },
            _setTitle: function(a) {
                a(_("Stories"))
            },
            _fetchItems: function(a) {
                var b = this;
                !this.items.length && this.showLoadingSpinner();
                var c = function() {
                        b.reset(), b._lastUpdate = null, b.hideLoadingSpinner(), (new twttr.views.DiscoveryStreamError).$html().appendTo(b.dom()), a(b, twttr.streams.ERROR)
                    },
                    d = function(d) {
                        if (d.stories.isEmpty()) {
                            c();
                            return
                        }
                        b.reset(), b.hideLoadingSpinner(), b._lastUpdate = b.now(), $.each(d.stories.array, function(a, b) {
                            b.position = a + 1
                        }), b.push(d.stories.array), b.newItemsCount = d.stories.length(), b.render(), b.ellipsify(), b.addTipsies(), a && a(b, twttr.streams.SUCCESS), b.reachedTheEnd()
                    };
                twttr.API.Discovery.discovery({
                    success: d,
                    error: c,
                    include_entities: !0,
                    tweet_count: 0
                })
            },
            ellipsify: function() {
                b.helpers.ellipsify(this.$find("h3.js-story-title,p.js-metadata")), b.helpers.ellipsify(this.$find("p.js-news-snippet, h4.js-news-headline"), !1, !0, null, {
                    ellipsis: "&ellip;"
                })
            },
            _scribeResults: function(a, c, d) {
                this._scribeEmptyResults(a, c, d);
                if (c.length) {
                    var e = [],
                        f = {};
                    twttr.each(c, function(a, c) {
                        var d, g = a.content && a.content.articles && a.content.articles.array[0];
                        g ? d = g.query : a.content && (d = a.content.query), d && (e.push(d), f[d] = {
                            item_type: b.constants.clientEvent.itemType.story,
                            item_position: c,
                            item_description: a.type
                        })
                    }), this.scribbler.scribe({
                        component: "stream",
                        action: "results"
                    }, {
                        item_names: e,
                        item_count: e.length,
                        event_value: e.length,
                        item_details: f,
                        referring_event: a
                    })
                }
            }
        }).click({
            ".story-social-new-tweet": function(a, b) {
                a.stopPropagation(), a.preventDefault();
                var c = b.data("url");
                (new twttr.widget.TweetDialog({
                    draggable: !0,
                    template: {
                        title: _("Tweet this link")
                    },
                    defaultContent: c,
                    origin: "discovery-story-tweet-button"
                })).open().focus()
            }
        }), a(twttr.streams.Discover)
    })
});
provide("streams/SavedSearches", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.streams.SavedSearches", function(a, b) {
            twttr.streams.Stream.apply(this, arguments), this.oldItemsCount = -1, this.scribbler = twttr.Scribbler.clientEvent
        }).subclassOf(twttr.streams.Stream).methods({
            itemViewClass: "StreamSavedSearch",
            streamItemType: "saved_search",
            streamItemId: function(a) {
                return a.id
            }
        }).methods({
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            _setTitle: function(a) {
                a("Saved searches")
            },
            _fetchItems: function(a) {
                var b = this;
                twttr.currentUser.savedSearches(function(c) {
                    b.items = c.array, b.oldItemsCount == -1 && (b.oldItemsCount = b.items.length), a(b, twttr.streams.SUCCESS), b.reachedTheEnd()
                })
            },
            _scribeResults: function(a, b, c) {
                this._scribeEmptyResults(a, b, c);
                if (b.length) {
                    var d = twttr.map(b, function(a) {
                        return a.query
                    });
                    this.scribbler.scribe({
                        component: "stream",
                        action: "results"
                    }, {
                        item_names: d,
                        item_count: d.length,
                        event_value: d.length,
                        referring_event: a
                    })
                }
            }
        }), a(twttr.streams.SavedSearches)
    })
});
provide("mixins/SinceMaxPagination", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.SinceMaxPagination", function() {
            this.statics({
                deciderKey: function(a) {
                    return this._deciderKey = a, this
                }
            }), this.methods({
                _fetchItems: function(a) {
                    this.fetcher(!0, a)
                },
                fetcher: function(a, b, c) {
                    var d = this;
                    twttr.is.fn(a) && (c = b, b = a, a = !1);
                    if (this.constructor._deciderKey && !twttr.decider.isAvailable(this.constructor._deciderKey)) {
                        b(this, twttr.streams.DECIDER);
                        return
                    }
                    var e = a ? this._optionsForOld(b) : this._optionsForNew(b);
                    c = c || {}, e = twttr.merge(c, e), this.excludeEntities || (e.include_entities = 1), this.update(e, this.params, b)
                },
                fetchUntilScreenIsFull: function() {
                    var a = this;
                    !this.noMoreOldItems && this._isInDOM() && this._shorterThanWindow() && this.getMoreOldItems(function(b, c) {
                        c !== twttr.streams.SUCCESS ? a._showError(c) : a.fetchUntilScreenIsFull()
                    })
                },
                _isInDOM: function() {
                    return jQuery.contains(document.body, this.$node[0])
                },
                _shorterThanWindow: function() {
                    return this.$node.height() < $(window).height()
                },
                _optionsForNew: function(a) {
                    var b = this,
                        c = {
                            success: function(c) {
                                c instanceof twttr.API.util.BaseCollection && (c = c.array), c.length && (b._updateIds(c), b.unshift(c)), a && a(b, twttr.streams.SUCCESS)
                            },
                            error: function(c) {
                                c.status === 502 ? a(b, twttr.streams.WHALE) : a(b, twttr.streams.ERROR)
                            }
                        };
                    return this.items.length && (c.since_id = this._sinceId), c
                },
                _optionsForOld: function(a) {
                    var b = this,
                        c = {
                            success: function(d) {
                                c.max_id && (d = d.slice(1)), d instanceof twttr.API.util.BaseCollection && (d = d.array), d.length ? (b._updateIds(d), b.push(d)) : b.reachedTheEnd(), a && a(b, twttr.streams.SUCCESS)
                            },
                            error: function(c) {
                                c.status === 502 ? a(b, twttr.streams.WHALE) : a(b, twttr.streams.ERROR)
                            },
                            timeout: function(a) {
                                a.retry()
                            },
                            cancel: function() {
                                a(b, twttr.streams.TIMEOUT)
                            }
                        };
                    return this.items.length ? (c.max_id = this._maxId, c.count = this.PAGE_SIZE + 1) : c.count = this.PAGE_SIZE, c
                },
                _updateIds: function(a) {
                    twttr.is.array(a) || (a = Array.prototype.slice.call(arguments));
                    var b = a[0],
                        c = a[a.length - 1],
                        d, e;
                    this._idForItem ? (d = this._idForItem(b, "first"), e = this._idForItem(c, "last")) : (d = b.id, e = c.id);
                    if (!this._sinceId || twttr.natcompare(d, this._sinceId) > 0) this._sinceId = d;
                    if (!this._maxId || twttr.natcompare(e, this._maxId) < 0) this._maxId = e
                }
            })
        }), a(twttr.mixins.SinceMaxPagination)
    })
});
provide("mixins/PollingStream", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.PollingStream", function() {
            var a = {
                ACTIVE: 3e4,
                INACTIVE: 9e4
            },
                b = !0,
                c = a.ACTIVE;
            $(window).focus(function() {
                c = a.ACTIVE, b = !0
            }), $(window).blur(function() {
                c = a.INACTIVE, b = !1
            }), this.statics({
                pollingDeciderKey: function(a) {
                    return this._pollingDeciderKey = a, this
                }
            }), this.methods({
                _getInterval: function() {
                    return this.timeouts ? b ? this.timeouts.ACTIVE : this.timeouts.INACTIVE : c
                },
                _pollFetch: function() {
                    var a = {
                        headers: {
                            "X-Twitter-Polling": !0
                        }
                    };
                    this.fetcher(twttr.bind(this, function(a) {
                        var b = a.newItemsCount;
                        b > 0 && (this.showNewItems(b, !0), this.trigger("newItems", [a, b]))
                    }), a)
                },
                startPeriodicFetcher: function() {
                    if (this.periodicUpdater || this.constructor._pollingDeciderKey && !twttr.decider.isAvailable(this.constructor._pollingDeciderKey)) return;
                    this.periodicUpdater = setTimeout(twttr.bind(this, this.fetchNewItemsThenPoll), this._getInterval())
                },
                stopPeriodicFetcher: function() {
                    this.periodicUpdater && (clearTimeout(this.periodicUpdater), this.periodicUpdater = null)
                },
                fetchNewItemsThenPoll: function() {
                    var a = !0;
                    this._pollShouldFetch && (a = this._pollShouldFetch()), a && this._pollFetch(), this.restartFetcher()
                },
                restartFetcher: function() {
                    this.stopPeriodicFetcher(), this.startPeriodicFetcher()
                }
            })
        }), a(twttr.mixins.PollingStream)
    })
});
provide("mixins/activityStreamEvents", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.activityStreamEvents", function() {
            var a;
            twttr.isT1 ? a = "div.stream-item-activity-me div.activity-supplement img.avatar,     div.stream-item-activity-network div.follow-more-than-two img.avatar,     div.stream-item-activity-network.stream-item-list_member_added img.avatar,     div.stream-item-activity-network div.activity-secondary-supplement img.user-profile-link" : a = ".stream-item-activity-me .sub-stream-item img.user-content-image,     .stream-item-activity-network .follow-more-than-two img.user-content-image,     .stream-item-activity-network.stream-item-list_member_added img.user-content-image,     .stream-item-activity-network .activity-secondary-supplement .user-profile-link", $(a).tipsy({
                live: !0,
                gravity: "s"
            })
        }), a(twttr.mixins.activityStreamEvents)
    })
});
provide("mixins/inviteFriends", function(a) {
    using("util", "constants").as(function(b) {
        twttr.klass.mixin("twttr.mixins.inviteFriends", function() {
            this.methods({
                sendInvitesByEmailSuccess: function(a) {
                    var b = a.invited && a.invited.length;
                    b ? (this.scribbler.scribe({
                        section: "dashboard",
                        component: "invite_friends",
                        action: "invited"
                    }, {
                        event_value: b,
                        item_count: b
                    }), twttr.showMessage(b > 1 ? _("OK, we will send invites to your {{count}} friends!", {
                        count: b
                    }) : _("OK, we will send an invite to {{email}}!", {
                        email: a.invited[0]
                    })), this.$textarea.val("")) : twttr.showError(_("Something is wrong, nobody was invited :-(")), this.$textarea.removeAttr("disabled").blur()
                },
                sendInvitesByEmailError: function(a) {
                    var b = twttr.helpers.extractEmailAddresses(this.$textarea.val()),
                        c = b.length === 1 ? b[0].split(",") : b.length,
                        d = twttr.API.util.RemoteRequest.apiErrorCodeFromResponse(a) || a.status;
                    this.scribbler.scribe({
                        component: "invite_friends",
                        action: "error"
                    }, {
                        status_code: d,
                        item_count: c
                    });
                    switch (d) {
                    case 47:
                        twttr.showError(_("We couldn't send invitations to any of those addresses."));
                        break;
                    case 37:
                        twttr.showError(_("There was an error emailing your friends. Please try again later."));
                        break;
                    default:
                        twttr.showMessage(_("OK, we will send invites to your friends!"))
                    }
                    this.$textarea.removeAttr("disabled").focus()
                },
                formSubmitCallback: function() {
                    if (this.$textarea.attr("disabled")) return;
                    var a = twttr.helpers.extractEmailAddresses(this.$textarea.val());
                    if (a.length) {
                        this.$textarea.attr("disabled", "disabled").val(a.join(", "));
                        var b = this;
                        twttr.API.AddressBook.sendInvitesByEmail(a, {
                            source: "invite_friends",
                            success: twttr.bind(this, this.sendInvitesByEmailSuccess),
                            error: twttr.bind(this, this.sendInvitesByEmailError)
                        })
                    } else twttr.showError(_("Please check the address you entered."))
                },
                addFormEvents: function(a) {
                    this.scribbler = a || new twttr.Scribbler, this.$textarea = this.$textarea || this.$find("textarea"), this.$textarea.bind("keyup", function(a) {
                        var c = $(this);
                        (a.which == b.constants.keyCodes.enter || c.val().indexOf(",") > 0) && c.addClass("expanded")
                    }), twttr.helpers.addFormEvents(this.$find("form"), twttr.bind(this, this.formSubmitCallback))
                }
            })
        }), a(twttr.mixins.inviteFriends)
    })
});
provide("mixins/newStreamItemsBar", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.newStreamItemsBar", function() {
            this.methods({
                showNewStreamItemsBar: function(a) {
                    var b = this.$find(".js-new-tweets-bar"),
                        c;
                    this.newStreamItemsBarPhrase ? c = this.newStreamItemsBarPhrase(a) : c = a == 1 ? _("1 new item") : _("{{count}} new items", {
                        count: a
                    }), b.length > 0 ? b.html(c) : (b = $((new twttr.views.NewTweetsBar({
                        tweets_count_phrase: c,
                        is_tweet: !1
                    })).html()), b.hide().prependTo(this.dom()).slideDown())
                }
            })
        }), a(twttr.mixins.newStreamItemsBar)
    })
});
provide("mixins/typeaheadScribing", function(a) {
    using().as(function(b, _) {
        var c = twttr.klass.mixin("twttr.mixins.typeaheadScribing", function() {
            return this.methods({
                startStatsTimer: function() {
                    this._statsTimerStart || (this._statsTimerStart = +(new Date)), this._lastTimerEvent = "start"
                },
                pauseStatsTimer: function() {
                    this._statsTimerStart !== 0 && this._lastTimerEvent == "start" && (this._statsCumulativeTime += +(new Date) - this._statsTimerStart, this._statsTimerStart = 0), this._lastTimerEvent = "pause"
                },
                resetStatsTimer: function() {
                    this._statsCumulativeTime = 0, this._statsTimerStart = 0, this._lastTimerEvent = "pause"
                },
                addLocalLatency: function(a, b) {
                    this._localLatencies.push(b)
                },
                addRemoteLatency: function(a, b) {
                    this._remoteLatencies.push(b)
                },
                medianAndStdDev: function(a) {
                    var b = twttr.reduce(a, 0, function(a, b, c) {
                        return a + c
                    }),
                        c = a.length,
                        d = b / c,
                        e = twttr.reduce(a, 0, function(a, b, c) {
                            return a + (c - d) * (c - d)
                        }),
                        f = Math.sqrt(e / c);
                    return {
                        median: d,
                        stdDev: f
                    }
                },
                scribe: function(a, b) {
                    twttr.is.def(this._scribbler) || (this._scribbler = twttr.Scribbler.global.spawn({
                        context: "typeahead"
                    }), this._scribbler.component = {}), this._scribbler.scribe(a, b)
                },
                browserInfo: function() {
                    var a = "unknown";
                    return $.browser.webkit ? a = "webkit" : $.browser.msie ? a = "msie" : $.browser.mozilla ? a = "mozilla" : $.browser.opera && (a = "opera"), {
                        browser: a,
                        version: $.browser.version
                    }
                },
                scribeLocalStorageLatency: function(a, b, c) {
                    var d = this.browserInfo();
                    this.scribe("typeahead_localstorage_latency", {
                        type: b,
                        latency: c,
                        browser: d.browser,
                        version: d.version
                    })
                },
                scribeSelect: function(a, b, c) {
                    var d = this._statsCumulativeTime,
                        e = a.type === "click" ? "click" : "enter",
                        f = c.length > 0,
                        g = c.data("remote") === !0,
                        i = "unknown";
                    c.data("query") ? i = "saved search" : c.find("a").data("search-query") ? i = "query suggestion" : c.data("user-id") && (i = "users");
                    var j = this.$node.find(".js-selectable").index(c) + 1 || 0,
                        k = this.medianAndStdDev(this._localLatencies),
                        l = this.medianAndStdDev(this._remoteLatencies),
                        m = twttr && twttr.users && twttr.users.typeahead ? twttr.users.typeahead.length : 0,
                        n;
                    try {
                        n = JSON.stringify(localStorage).length
                    } catch (o) {
                        n = 0
                    }
                    this.scribe("typeahead_select", {
                        time_to_completion: d,
                        keystrokes_to_completion: this._keystrokes,
                        item_count: f.toString(),
                        item_details: i,
                        index: j,
                        query: b,
                        was_remote: g.toString(),
                        local_latency_median: k.median,
                        local_latency_std_dev: k.stdDev,
                        remote_latency_median: l.median,
                        remote_latency_std_dev: l.stdDev,
                        click_or_enter: e,
                        local_storage_size: n,
                        users_in_local_storage: m,
                        people_from_api: twttr.caches.User.get("typeahead_people_from_api") || 0,
                        people_followed: twttr.caches.User.get("typeahead_people_followed"),
                        profile_visits: twttr.caches.User.get("typeahead_profile_visits"),
                        people_blocked: twttr.caches.User.get("typeahead_people_blocked"),
                        people_unblocked: twttr.caches.User.get("typeahead_people_unblocked")
                    }), this.resetStatsTimer(), this._keystrokes = 0
                }
            }), this
        });
        a(c)
    })
});
provide("mixins/discoveryHelper", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.discoveryHelper", function(a) {
            return a.methods({
                pagePathFor: function(a, b, c) {
                    return twttr.router[a + (b || "") + "Path"](c)
                },
                routePageTo: function(a, b, c) {
                    twttr.router.routeTo(this.pagePathFor(a, b, c))
                },
                localizeQuery: function(a, b) {
                    return b.lang && (a.lang = b.lang), b.country && (a.country = b.country), b.city && (a.city = b.city), a.top_tweets = !0, a
                }
            }), a
        }), a(twttr.mixins.discoveryHelper)
    })
});
provide("mixins/usesRelatedResults", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.usesRelatedResults", function(a) {
            return a.methods({
                _conversationRoleFor: function(a) {
                    return a.annotations.ConversationRole
                },
                tweetsForConversationRole: function(a, b) {
                    var c = this,
                        d = twttr.filter(a.results.array, function(a) {
                            return c._conversationRoleFor(a) === b
                        });
                    return twttr.map(d, function(a) {
                        return a.value
                    })
                },
                _groupNamed: function(a, b) {
                    return twttr.filter(a.array, function(a) {
                        return a.groupName === b
                    })[0]
                },
                conversationGroupFor: function(a) {
                    return this._groupNamed(a, "TweetsWithConversation")
                },
                withRelatedResults: function(a, b, c) {
                    var d = this;
                    twttr.API.Status.related(a.id, {
                        include_entities: 1,
                        success: function(b) {
                            d._logResultGroups(b, a), c.success(b)
                        },
                        error: c.error ||
                        function() {}
                    })
                },
                _logResultGroups: function(a, b) {
                    var c = this,
                        d = (new Date).getTime() + "-" + (twttr.currentUser ? twttr.currentUser.id : "guest") + "-" + b.id,
                        e = [],
                        f = {
                            related_impression_id: d,
                            groups: e
                        },
                        g;
                    $.each(a.array, function(a, b) {
                        var f = [],
                            i = [];
                        e.push(c._scribeDataFor(b, a)), g || (g = c._abDataFor(b)), b.sync("relatedImpressionId", d)
                    }), scribble("show-related-tweets", f), g && scribble("show-related-tweets", g, "www_ab_testing")
                },
                _scribeDataFor: function(a, b) {
                    var c = {
                        pos: b,
                        groupName: a.groupName,
                        resultType: a.resultType,
                        annotations: this._annotationsFor(a),
                        tweets: this._tweetsFor(a)
                    };
                    return a.sync("relatedGroupName", a.groupName), c
                },
                _abDataFor: function(a) {
                    var b;
                    for (var c in a.annotations) c == "abData" && (b || (b = a.annotations[c]));
                    if (b) for (var d in b) a.sync("ab_data_" + d, b[d]);
                    return b
                },
                _annotationsFor: function(a) {
                    var b = [],
                        c = "";
                    for (var d in a.annotations) if (d != "abData") {
                        var e = {
                            type: d,
                            value: a.annotations[d]
                        };
                        b.push(e), c += a.annotations[d] + " "
                    }
                    return c.length > 0 && (c = c.substring(0, c.length - 1)), a.sync("relatedAnnotations", c), b
                },
                _tweetsFor: function(a) {
                    var b = [];
                    return $.each(a.results.array, function(c, d) {
                        a.resultType == "Tweet" && b.push(d.value.id)
                    }), b
                }
            }), a
        }), a(twttr.mixins.usesRelatedResults)
    })
});
provide("mixins/profileHelper", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.profileHelper", function(a) {
            return a.methods({
                getUserInfo: function(a, b, c, d) {
                    c = c || {}, this._screenName = a ? a.toLowerCase() : a;
                    var e;
                    c.batch === !0 && twttr.decider.isAvailable("profile_combined_api") ? e = twttr.API.User.findForProfile : e = twttr.API.User.find, e.call(twttr.API.User, this._screenName, {
                        success: twttr.bind(this, function(a) {
                            this.profileUser = twttr.profileUser = a, b && b()
                        }),
                        error: twttr.bind(this, function(a) {
                            signal(">wokeUp"), a.status == 403 ? twttr.isT1 ? twttr.app.switchToPage("403").send("suspendedUser") : twttr.Router.performRedirect(twttr.router.suspendedPath()) : this.trigger("notFound"), d && d()
                        })
                    })
                },
                _isSocialContextAvailable: function() {
                    return twttr.decider.isAvailable("social_context") && twttr.loggedIn && twttr.currentUser.id != twttr.profileUser.id
                },
                _defaultedScreenName: function(a) {
                    return !a && twttr.loggedIn ? twttr.currentUser.screenName : a
                },
                _addPromotedData: function() {
                    twttr.promotedAccountStore.hasAccount() && twttr.promotedAccountStore.getAccount().id == this.profileUser.id && (this.profileUser = twttr.API.util.PromotedStore.getPromotedUserInstance(this.profileUser, twttr.promotedAccountStore.getAccount().impressionId), twttr.promotedAccountStore.clear())
                },
                noAutoRender: !0
            }).addViewData(function() {
                return {
                    profile_user: new twttr.views.ProfileUser(twttr.profileUser)
                }
            }), a
        }), a(twttr.mixins.profileHelper)
    })
});
provide("mixins/commonDashboardClickHandlers", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.commonDashboardClickHandlers", function(a) {
            return a.click({
                ".title-link": function(b, c) {
                    var d = {
                        input: "click",
                        component: "dashboard",
                        subcomponent: a._name,
                        target: "dashboard_title",
                        item: c.find(".dashboard-component-title").html()
                    };
                    scribble("dashboard_click", d)
                },
                ".user-profile-link": function(b, c) {
                    var d = c.is("img") || c.find("img")[0],
                        e = c.attr("data-user-id") || c.closest("a").attr("data-user-id"),
                        f = {
                            input: "click",
                            component: "dashboard",
                            subcomponent: a._name,
                            target: "user_profile_link",
                            target_type: d ? "image" : "link",
                            profile_id: e
                        };
                    scribble("dashboard_click", f)
                }
            }), a
        }), a(twttr.mixins.commonDashboardClickHandlers)
    })
});
provide("mixins/t1/cardActionable", function(a) {
    using("constants").as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.cardActionable", function() {
            this.methods({
                registerCardActions: function() {
                    var a = this;
                    a.$node.delegate(".js-action-card-search", "click", function(b) {
                        var c = a._getCardQuery(this);
                        a._scribeCardAction("search", "card_" + a._getElementCardType(this), {
                            query: a._getCardQuery(this),
                            item_names: [c],
                            item_details: a._getCardItemDetails(this, c)
                        })
                    }), a.$node.delegate(".js-action-card-news", "click", function(b) {
                        var c = a._getCardQuery(this);
                        a._scribeCardAction("open_link", "card_news", {
                            url: $(this).attr("href"),
                            query: c,
                            item_names: [c],
                            item_details: a._getCardItemDetails(this, c)
                        }), b.stopPropagation()
                    }), a.$node.delegate(".js-action-card-expandtweets", "simpleExpandoContract", function(b) {
                        var c = a._getCardQuery(this);
                        a._scribeCardAction("deselect", "card_news", {
                            query: c,
                            item_names: [c],
                            item_details: a._getCardItemDetails(this, c)
                        })
                    }), a.$node.delegate(".js-action-card-expandtweets", "simpleExpandoExpand", function(b) {
                        var c = a._getCardQuery(this);
                        a._scribeCardAction("select", "card_news", {
                            query: c,
                            item_names: [c],
                            item_details: a._getCardItemDetails(this, c)
                        })
                    }), a.$node.delegate(".js-action-card-tweetlink", "click", function(b) {
                        var c = a._getCardQuery(this),
                            d = a._getStreamItemId(this);
                        a._scribeCardAction("compose_tweet", "card_news", {
                            url: d,
                            item_names: [c],
                            item_details: a._getCardItemDetails(this, c)
                        })
                    }), a.$node.delegate(".js-action-card-permalink", "click", function(b) {
                        var c = a._getCardTweetId(this);
                        a._scribeCardAction("permalink", "card_tweet", {
                            item_count: 1,
                            item_ids: [c],
                            item_details: a._getCardItemDetails(this, c)
                        })
                    }), a.$node.delegate(".js-action-profile", "click", function(b) {
                        var c = a._getCardTweetId(this);
                        a._scribeCardAction("profile_click", "card_tweet", {
                            item_count: 1,
                            item_ids: [c],
                            item_details: a._getCardItemDetails(this, c, a._getElementUserId(this))
                        })
                    }), a.$node.delegate(".js-action-card-media", "click", function(b) {
                        var c = a._getCardQuery(this);
                        a._scribeCardAction("click", a._getCardMediaType(this) + "_card_topic", {
                            query: c,
                            item_names: [c],
                            item_details: a._getCardItemDetails(this, c)
                        })
                    })
                },
                _scribeCardAction: function(a, b, c) {
                    trackClient({
                        action: a,
                        component: b
                    }, c)
                },
                _getCardAttribute: function(a, b) {
                    var c = $(a).closest(".js-story-item");
                    return c.attr(b)
                },
                _getElementUserId: function(a) {
                    var b = $(a).closest(".js-actionable-tweet");
                    return b.attr("data-user-id")
                },
                _getCardTweetId: function(a) {
                    return this._getCardAttribute(a, "data-tweet-id")
                },
                _getCardQuery: function(a) {
                    return this._getCardAttribute(a, "data-query")
                },
                _getStreamItemId: function(a) {
                    var b = $(a).closest(".js-stream-item");
                    return b.attr("data-item-id")
                },
                _getElementCardType: function(a) {
                    return this._getCardAttribute(a, "data-story-type")
                },
                _getCardMediaType: function(a) {
                    return this._getCardAttribute(a, "data-card-media-type")
                },
                _getCardItemPosition: function(a, b) {
                    var c = $(a).closest("div.js-stream-items"),
                        d;
                    return c.length && c.find("[data-query]").each(function(a) {
                        var c = $(this),
                            e = c.attr("data-query");
                        if (b + "" == e) return d = a, !1
                    }), d
                },
                _getCardItemDetails: function(a, c, d) {
                    var e = {},
                        f = {
                            item_type: b.constants.clientEvent.itemType.story,
                            item_description: this._getElementCardType(a),
                            item_position: this._getCardItemPosition(a, c)
                        };
                    return d && (f.target_id = d), e["" + c] = f, e
                }
            })
        });
        a(c)
    })
});
provide("mixins/t1/discoveryStoryHelpers", function(a) {
    using("_", "constants", "util").as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.discoverySearchHelper", function(a) {
            this.methods({
                formatted_tweet_count_text: function() {
                    return _("{{count}} Tweets", {
                        count: b.util.formatNumber(this.tweet_count, twttr.pageLocale)
                    })
                },
                story_name: function() {
                    return this.name || this.query
                },
                is_hashtag: function() {
                    return this.story_name().substring(0, 1) === "#"
                },
                search_path: function() {
                    return twttr.router.searchResultsPath({
                        query: decodeURIComponent(this.query)
                    })
                },
                search_query_source: function() {
                    return twttr.search.searchQuerySource.TREND
                }
            })
        }),
            d = twttr.klass.mixin("twttr.mixins.discoveryMediaRenderHelper", function(a) {
                this.methods({
                    escaped_query: function() {
                        return escape(this.id || this.query)
                    },
                    afterHtml: function() {
                        if (!this.has_media) return;
                        var a = this;
                        setTimeout(function() {
                            var b = (new Date).getTime(),
                                c = a.escaped_query(),
                                d = $("div.js-story-item[data-query='" + c + "']");
                            d.find("div.js-story-load-status").show();
                            var e = d.find("img.js-story-media").error(function(b) {
                                twttr.decider.isAvailable("t1d_scribe_errors") && a._scribe("error", {
                                    id: c,
                                    url: a.image_url
                                }), d.removeClass("js-loading loading"), d.addClass("js-nomedia nomedia")
                            }).load(function() {
                                twttr.decider.isAvailable("t1d_scribe_times") && a._scribe("complete", {
                                    id: c,
                                    time: (new Date).getTime() - b,
                                    url: a.image_url
                                }), d.removeClass("js-loading loading")
                            });
                            e.attr("src", a.image_url)
                        }, 0)
                    },
                    _scribe: function(a, b) {
                        trackClient({
                            action: a,
                            component: this.scribeComponent
                        }, b)
                    }
                })
            });
        a(c, d)
    })
});
provide("mixins/UserSimilaritiesStreamT1", function(a) {
    using().as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.UserSimilaritiesStreamT1", function() {
            this.methods({
                _setTitle: function(a) {
                    twttr.helpers.isCurrentUser(twttr.profileUser.screenName) ? a(_("Similar to you")) : a(_("Similar to {{full_name}}", {
                        full_name: twttr.profileUser.name
                    }))
                }
            })
        });
        a(c)
    })
});
provide("mixins/SuggestionCategoriesStreamT1", function(a) {
    using().as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.SuggestionCategoriesStreamT1", function() {
            this.methods({
                itemViewClass: "StreamInterestCategory",
                sampleSize: "large",
                addTipsies: function() {
                    this.$find(".js-user-tipsy").tipsy({
                        gravity: "s"
                    })
                },
                _setHeader: function(a, b) {
                    b.header_help = _("Select topics you’re interested in. Follow people you want to hear from."), b.placeholder = _("Search for a topic, full name, or @username");
                    var c = new twttr.components.t1.PeopleSearchStreamHeader(twttr.router.whoToFollowInterestsSearchPath, b);
                    a(c.$node)
                },
                _setTitle: function(a) {
                    a(_("Browse categories"))
                },
                _getStreamEndComponent: function() {
                    return new twttr.components.StreamEnd(this._getStreamEndHtml(), this._getStreamEndShowBird())
                }
            })
        });
        a(c)
    })
});
provide("mixins/SuggestionCategoryMembersStreamT1", function(a) {
    using("helpers", "mixins/hasGovernmentSearchHeader").as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.SuggestionCategoryMembersStreamT1", function() {
            this.mixin(b.mixins.hasGovernmentSearchHeader), this.methods({
                _setTitle: function(a) {
                    a(this.category.name)
                },
                _setViewToggler: function(a) {
                    var b = {
                        route: twttr.router.whoToFollowInterestsPath(),
                        name: _("View all categories")
                    };
                    a(new twttr.views.BackLink(b))
                },
                _getStreamEndComponent: function() {
                    return new twttr.components.StreamEnd(this._getStreamEndHtml(), this._getStreamEndShowBird())
                },
                _showGovernmentSearchHeader: function() {
                    return twttr.abdecider.choose("government_sul_your_reps_195") !== "show_in_government_sul" ? !1 : this.category.slug === (twttr.isLocalhost ? "celebrities" : "government")
                }
            })
        });
        a(c)
    })
});
provide("mixins/UserRecommendationsT1", function(a) {
    using().as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.UserRecommendationsT1", function() {
            this.methods({
                getRecPosition: function(a) {
                    var b;
                    return this.$find(".js-account-summary").each(function(c, d) {
                        if (a.attr("data-user-id") == $(d).attr("data-user-id")) return b = c, !1
                    }), b
                },
                LIST_ITEM_SELECTOR: ".js-recommended-followers > .js-actionable-user",
                _generateUserList: function(a) {
                    return $('<div class="js-recommended-followers flex-module-inner" data-section-id="wtf">' + (new twttr.views.UserSmallList(a)).html() + "</div>")
                },
                _removeRefreshLink: function() {
                    this.$find("a.js-refresh-suggestions").parent("span").remove()
                },
                _getModuleViewName: function() {
                    return this.screenName ? "DashboardUserSimilarities" : "DashboardUserRecommendations"
                },
                _shouldHaveSpacer: function() {
                    return !1
                }
            })
        });
        a(c)
    })
});
provide("mixins/hasGovernmentSearchHeader", function(a) {
    using("helpers").as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.hasGovernmentSearchHeader", function() {
            this.methods({
                _setHeader: function(a) {
                    var c = this;
                    if (this._showGovernmentSearchHeader()) {
                        var d = (new twttr.views.GovernmentAccountSearch({
                            zip_code: this.params && this.params.zipCode || ""
                        })).$html();
                        b.helpers.addFormEvents(d.find(".js-government-account-search"), function(a, b) {
                            c.trigger("governmentSearch", [b.zip])
                        }), a(d)
                    } else a()
                },
                _showGovernmentSearchHeader: function() {
                    return !0
                }
            })
        });
        a(c)
    })
});
provide("mixins/prefollowingStream", function(a) {
    using("_").as(function(b, _) {
        twttr.klass.mixin("twttr.mixins.prefollowingStream", function(a) {
            return a.methods({
                deferredFollows: {},
                preFollows: {},
                userActionPrefollow: function(a) {
                    var b = twttr.helpers.getUserId(a);
                    this.preFollows[b] = !0, this.userActionFollow(a)
                },
                userActionFollow: function(a) {
                    var b = this,
                        c = twttr.helpers.getUserId(a);
                    this.deferFollows ? (this.deferredFollows[c] = !0, twttr.API.User.trigger("prefollow_before"), twttr.API.User.find(c, function(c) {
                        b.updateButtonFollow(a, c["protected"]), twttr.API.User.trigger(c["protected"] ? "prefollow_request_success" : "prefollow_success", c)
                    })) : this.constructor.uber.userActionFollow.apply(this, arguments)
                },
                userActionUnfollow: function(a) {
                    var b = twttr.helpers.getUserId(a);
                    this.deferFollows && this.deferredFollows[b] ? (delete this.deferredFollows[b], twttr.API.User.trigger("unprefollow_before"), twttr.API.User.find(b, function(a) {
                        twttr.API.User.trigger("unprefollow_success", a)
                    }), this.preFollows[b] && (delete this.preFollows[b], this.scribbler.scribe({
                        action: "unprefollow"
                    }, {
                        item_ids: ["" + b],
                        item_count: 1
                    }))) : this.constructor.uber.userActionUnfollow.apply(this, arguments)
                },
                commitPrefollows: function(a) {
                    var b = this,
                        c = [],
                        d = [],
                        e = 0;
                    for (var f in this.deferredFollows) c.push(f);
                    for (var f in this.preFollows) d.push(f);
                    if (c.length == 0) {
                        a();
                        return
                    }
                    this.scribbler.scribe({
                        action: "prefollow"
                    }, {
                        item_ids: d,
                        item_count: d.length
                    }), twttr.currentUser.friends.followAll(c, {
                        stringifiedIds: !0,
                        success: function(_, c) {
                            for (var d = 0; d < c.response.length; ++d) {
                                var e = c.response[d];
                                b.scribbler.scribe({
                                    action: "follow"
                                }, {
                                    item_ids: ["" + e.id],
                                    item_count: 1
                                })
                            }
                            a()
                        },
                        error: function() {
                            twttr.currentUser.friendsCount += c.length, a()
                        }
                    }), this.deferFollows = !1, this.deferredFollows = {}, this.preFollows = {}
                }
            }), a
        }), a(twttr.mixins.prefollowingStream)
    })
});
provide("streams/StarterList", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.streams.StarterList", function(a, b) {
            twttr.streams.ListMembers.apply(this, arguments)
        }).subclassOf(twttr.streams.ListMembers).mixin(twttr.mixins.discoveryHelper).methods({
            update: function(a) {
                this.params.list.members(a)
            },
            _setTitle: function(a) {
                a(_("{{name}} suggests you also follow these accounts:", this.params.list.user.attributes))
            },
            _getEmptyStreamHtml: function() {
                return _("Sorry, {{name}} doesn't recommend anybody in particular.<br />Find users by <a href='{{url}}'>Interests</a>.", {
                    url: this.pagePathFor(this.params.pathRoot, "Interests"),
                    name: this.params.list.user.name
                })
            }
        }), a(twttr.streams.StarterList)
    })
});
provide("streams/StarterFriends", function(a) {
    using("_").as(function(b, _) {
        twttr.stream("twttr.streams.StarterFriends", function() {
            twttr.streams.UserStream.apply(this, arguments)
        }).subclassOf(twttr.streams.UserStream).methods({
            update: function(a) {
                var b = this;
                twttr.API.User.find(this.screenName, function(c) {
                    if (!twttr.helpers.canViewUser(c)) {
                        b._showError(twttr.streams.PROTECTED), b.doneLoadingMore();
                        return
                    }
                    c.friends(a)
                })
            },
            _setTitle: function(a) {
                a(_("@{{screen_name}} follows these accounts:", {
                    screen_name: this.screenName
                }))
            }
        }).statics({
            _deciderKey: "people_stream_friends"
        }), a(twttr.streams.StarterFriends)
    })
});
provide("streams/UserRecommendationsStream", function(a) {
    using("_", "streams/UserStream", "mixins/userRecommendationsHelper", "mixins/userActionable").as(function(b, _) {
        var c = twttr.klass("twttr.streams.UserRecommendationsStream", function(a, c, d) {
            b.streams.UserStream.call(this, a, c), c && (this._processLoadedUsers(c), a.cursor && (this.cursor = a.cursor)), this.whotofollowComponentName = "whotofollow_stream", this.registerUserRecommendationsActions()
        }).subclassOf(b.streams.UserStream).mixin(b.mixins.userRecommendationsHelper, b.mixins.userActionable).methods({
            afterFirstSwitchingTo: function(a) {
                this.items && this.items.length ? (a(this, twttr.streams.SUCCESS), this.render()) : this.getMoreOldItems(a)
            },
            _processLoadedUsers: function(a, b) {
                a && this.doneLoadingMore();
                var c = "whotofollow_view_all_recommended_users",
                    d = this.params.inWelcomeFlow ? "welcome_flow" : "find_users",
                    e = {
                        tracking_context: d
                    };
                return b && (e.error_status = b.status), this.trackImpressions(a, c, e), a
            },
            loadRecommendedUsers: function(a) {
                a.personalized = a.personalized || this.params.personalized || !1, a.force_bq = a.personalized, a.algorithm = a.algorithm || this.params.algorithm || "", a.connections = !0;
                if (this.params.inWelcomeFlow) {
                    var b = twttr.abdecider.choose("wtf_welcome_persistent_100"),
                        c = b && b.match(/bucket(\d+)/),
                        d = c ? c[1] : 0;
                    a.high_timeout = !0, a.display_location = "welcome-flow-recommendations", a.bucket_id = d
                }
                twttr.decider.isAvailable("wtf_visited_users") && (a.related_users = twttr.recentlyViewedUsers.stack.concat(twttr.loggedOutViewedUsers.stack)), a.cursor === undefined && (a.cursor = -1);
                var e = this,
                    f = a.success;
                a.success = function(a, b) {
                    e.hadBqResults = b.response.had_bq_results;
                    var c = e.recsToUsers(a);
                    f(c, b)
                }, twttr.loggedIn ? twttr.currentUser.recommendedUsers2(a) : twttr.API.User.recommendedUsers2(a)
            },
            update: function(a) {
                var b = this,
                    c = a.success,
                    d = a.error,
                    e = function() {
                        var a = {
                            success: function(a, d) {
                                a = b._processLoadedUsers(a), c(a, d)
                            }
                        };
                        b.params.lang && (a.lang = b.params.lang), b.params.country && (a.country = b.params.country), b.params.city && (a.city = b.params.city), a.bypass_cache = !0, twttr.API.SuggestionCategory.randomSample(a), b.sulFallback = !0, b._streamManager && b._streamManager.setTitle(b)
                    };
                a.success = function(a, d) {
                    a = b._processLoadedUsers(a);
                    if (!a.length()) {
                        if (twttr.decider.isAvailable("whotofollow_random_sample") && b.params.useSulFallback !== !1 && (!b.params.inWelcomeFlow || b.params.useSulFallback)) {
                            e();
                            return
                        }
                        b.trigger("noMoreRecommendations")
                    }
                    b.sulFallback = !1, c(a, d), b._streamManager && b._streamManager.setTitle(b)
                }, a.error = function(a) {
                    b._processLoadedUsers(null, a), d && d(a)
                }, a.cursor == -1 && twttr.decider.isAvailable("promoted_accounts_in_whotofollow_viewall") && !b.params.inWelcomeFlow && (a.pc = !b.params.noPromotedContent, a.display_location = "wtf-view-all-stream"), this.params.sulWithNoFollows && twttr.currentUser.friendsCount == 0 ? e() : this.loadRecommendedUsers(a)
            },
            setStreamManager: function(a) {
                this._streamManager = a
            },
            _setTitle: function(a) {
                if (this.params.invisibleWhenEmpty && (!this.items || this.items.length == 0)) {
                    a("");
                    return
                }
                if (twttr.is.def(this.params.title)) {
                    a(this.params.title);
                    return
                }
                if (twttr.isT1) {
                    a(_("Who to follow"));
                    return
                }
                this.params.inWelcomeFlow ? a(_("Follow these people to get started:")) : this.params.inHomePage ? (this.$find(".stream-title").css("border-bottom", "1px solid #EBEBEB"), a(_('<div class="wtf-timeline-title"><div class="wtf-timeline-text">It looks like you aren't following anyone yet.<br /><b>Go ahead and follow some people!</b></div><button class="done-right button selected" type="button">Done following</button></div>'))) : this.sulFallback ? a(_('We're building a list of personalized suggestions for you. In the meantime, here are some other <a href="{{url}}">interesting accounts</a> to follow.', {
                    url: twttr.router.whoToFollowInterestsPath()
                })) : a(_("Twitter accounts suggested for you based on who you follow and more."))
            },
            _getEmptyStreamHtml: function() {
                return this.params.invisibleWhenEmpty && (!this.items || this.items.length == 0) ? "" : this.params.personalizedOnly ? _("We're sorry, Twitter does not have any personalized suggestions to show you at this time. You can browse our regular <a href='{{url}}'>Who to Follow</a> list.", {
                    url: twttr.router.whoToFollowPath()
                }) : _("Sorry, we've temporarily run out of recommendations for you. We're out there looking for more right now. Please check back soon!")
            },
            _getStreamEndHtml: function() {
                return this.params.inHomePage ? _('<button class="done-right button selected" type="button">Done following</button></div>') : _("<a href='#' class='back-to-top'>Back to top ↑</a>")
            },
            _getStreamEndShowBird: function() {
                return this.params.inHomePage ? !1 : !0
            },
            _trackNewImpressions: function() {}
        });
        twttr.isT1 && c.methods({
            _setHeader: function(a, b) {
                b.header_help = _("Twitter accounts suggested for you based on who you follow and more.");
                var c = new twttr.components.t1.PeopleSearchStreamHeader(twttr.router.whoToFollowSuggestionsSearchPath, b);
                a(c.$node)
            }
        }), a(twttr.streams.UserRecommendationsStream)
    })
});
provide("streams/UserRecommendationsDashboardStream", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.UserRecommendationsDashboardStream", function(a, b) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", this.deferFollows = !! a.deferFollows, twttr.streams.UserRecommendationsStream.call(this, a, b)
        }).subclassOf(twttr.streams.UserRecommendationsStream).mixin(twttr.mixins.prefollowingStream).methods({
            _setHeader: function(a, b) {
                a("")
            },
            itemViewClass: "DashboardStreamUser"
        }), a(twttr.streams.UserRecommendationsDashboardStream)
    })
});
provide("streams/UserSimilaritiesStream", function(a) {
    using("_", twttr.isT1 ? "mixins/UserSimilaritiesStreamT1" : "").as(function(b, _, c) {
        var d = twttr.klass("twttr.streams.UserSimilaritiesStream", function(a, b) {
            twttr.streams.UserStream.call(this, a, b), this.registerUserRecommendationsActions(), this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                profile_id: twttr.profileUser && twttr.profileUser.id,
                context: "profile"
            })
        }).subclassOf(twttr.streams.UserStream).mixin(twttr.mixins.userRecommendationsHelper).methods({
            update: function(a) {
                var b = this,
                    c = a.success,
                    d = a.error,
                    e = "whotofollow_view_all_similar_users",
                    f = "similar_to";
                a.success = function(a, d) {
                    var g = b.recsToUsers(a);
                    b.trackImpressions(g, e, {
                        tracking_context: f
                    }), c(g, d)
                }, a.error = function(a) {
                    b.trackImpressions(null, e, {
                        tracking_context: f,
                        error_status: a.status
                    }), d && d(a)
                }, a.connections = !1, a.pc = !0, a.display_location = "st-view-all-stream", twttr.profileUser.similarUsers(a)
            },
            setStreamManager: function(a) {
                this._streamManager = a
            },
            _setTitle: function(a) {
                a(_("Accounts similar to @{{screen_name}}:", {
                    screen_name: this.params.screenName
                }))
            },
            _getEmptyStreamHtml: function() {
                return _("Sorry, we've temporarily run out of users similar to @{{screen_name}}. We're out there looking for more right now. Please check back soon!", {
                    screen_name: this.params.screenName
                })
            },
            _trackNewImpressions: function() {}
        });
        c && d.mixin(c), a(twttr.streams.UserSimilaritiesStream)
    })
});
provide("streams/ContactImportMatches", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.streams.ContactImportMatches", function(a, b, c) {
            a.pathRoot = a.pathRoot || "whoToFollow", twttr.streams.UserStream.apply(this, arguments), this.$node.addClass("contact-import-matches"), a.noBigImages || (this.$node.addClass("contact-import-images"), this.itemViewClass = "MatchedContactUser"), this._loadedMatches = !1, this._loadingCount = 0, this._loadingComponent = new twttr.views.ContactImportLoading, this._followingCount = 0, this._showFollowing = !1, this.forceInvitePopup = !1, this.$headerNode = this.getHeaderContainer();
            var d = this;
            this.$headerNode.delegate(".js-toggle-following", "click", function(a) {
                return d._toggleFollowing(), !1
            })
        }).subclassOf(twttr.streams.UserStream).mixin(twttr.mixins.discoveryHelper).methods({
            streamViewClass: "ContactImportMatches",
            afterSwitchingToAgain: function(a) {
                this.afterFirstSwitchingTo(a)
            },
            afterFirstSwitchingTo: function(a) {
                twttr.API.User.bind("follow.ContactImportMatches", twttr.bind(this, this._incrementFollowingCount)), twttr.API.User.bind("follow_request.ContactImportMatches", twttr.bind(this, this._incrementFollowingCount)), twttr.API.User.bind("unfollow.ContactImportMatches", twttr.bind(this, this._decrementFollowingCount)), this._loadedMatches || this.getMoreOldItems(a)
            },
            beforeSwitchingAway: function() {
                this._timeout && (window.clearTimeout(this._timeout), this._timeout = null), twttr.API.User.unbind(".ContactImportMatches")
            },
            update: function(a) {
                this._loadingError = !1;
                var b = this,
                    c = a.success,
                    d = a.error;
                a.success = function(a, d) {
                    var e = !b._loadedMatches;
                    b._loadedMatches = "users" in d.response;
                    if (b._loadedMatches) {
                        delete b._loadingComponent;
                        var f = d.response.count,
                            g = d.response.others_count;
                        if (f) {
                            b.forceInvitePopup = !! g && b._inWelcomeFlow();
                            var i = twttr.merge(d.response, {
                                retry_service_path: b.pagePathFor(b.params.pathRoot, "Import")
                            });
                            d.response.following_count == f && (i.following_count = 0, b._showFollowing = !0), e && b.scribbler.scribe({
                                component: "stream",
                                action: "matches"
                            }), b._followingCount = d.response.following_count, b._othersCount = g, b._matchesHeaderComponent = new twttr.components.ContactImportMatchesStats(b, i)
                        } else e && b.scribbler.scribe({
                            component: "stream",
                            action: "no_matches"
                        }), g ? b._inviteOthersInline() : window.setTimeout(function() {
                            b.routePageTo(b.params.pathRoot, "Import"), twttr.showMessage(_("There was no one in your address book"))
                        }, 0)
                    }
                    c(a, d), b._loadedMatches && b._followingCount && b.$node.parents(".dashboard").length == 0 && Math.abs(twttr.$doc.scrollTop() + twttr.windowHeight - twttr.$doc.height()) < 500 && b.getMoreOldItems(), b._loadedMatches || (b._loadingCount++ < b.constructor._retryCount ? b._scheduleRetry() : (b.scribbler.scribe({
                        component: "stream",
                        action: "timeout"
                    }), b._loadingCount = 0, b._showError(twttr.streams.TIMEOUT)))
                }, a.error = function(a, c) {
                    if (a.error == "denied") {
                        b.routePageTo(b.params.pathRoot, "Import"), twttr.showMessage(_("Authorization to access your contacts was denied"));
                        return
                    }
                    a.error && (b._loadingError = !0), b.trigger("error"), d(a, c)
                }, twttr.API.AddressBook.contactsMatches(a)
            },
            _scribeResults: function(a, b, c) {
                if (a == "initial" && !this._loadedMatches) return;
                c = c || {}, c.message = "" + this._othersCount, twttr.streams.UserStream.prototype._scribeResults.apply(this, [a, b, c])
            },
            _toggleFollowing: function() {
                this._showFollowing = !this._showFollowing;
                for (var a = 0; a < this.items.length; ++a) {
                    var b = this.items[a];
                    if (b.following || b.followRequestSent) {
                        var c = this.$node.find(this.itemSelector(b.id));
                        this._showFollowing ? c.fadeIn() : c.fadeOut()
                    }
                }
                this._updateFollowingToggle()
            },
            _incrementFollowingCount: function(a, b) {
                this._updateFollowing(b, !0)
            },
            _decrementFollowingCount: function(a, b) {
                this._updateFollowing(b, !1)
            },
            _updateFollowing: function(a, b) {
                for (var c = 0; c < this.items.length; ++c) {
                    var d = this.items[c];
                    if (d.id == a.id) {
                        this.items[c] = a;
                        break
                    }
                }
                this._followingCount = Math.max(0, this._followingCount + (b ? 1 : -1)), this._showFollowing && this._updateFollowingToggle()
            },
            _updateFollowingToggle: function() {
                var a = {
                    following_count: this._followingCount
                },
                    b;
                this._showFollowing ? b = _("Hide {{following_count}} following", a) : b = _("Show {{following_count}} following", a), this.$headerNode.find(".js-toggle-following").text(b)
            },
            _followAll: function(a) {
                var b = this;
                if (a.hasClass("disabled")) return;
                a.addClass("disabled");
                var c = {
                    success: function(c, d) {
                        a.removeClass("disabled");
                        var e = "";
                        switch (c.followed_ids.length) {
                        case 0:
                            e = _("Requests were sent to everybody.");
                            break;
                        case 1:
                            e = _("Congratulations! You are now following 1 more user.");
                            break;
                        default:
                            e = _("Congratulations! You are now following {{count}} more users.", {
                                count: c.followed_ids.length
                            })
                        }
                        twttr.showMessage(e), twttr.API.User.startBulkFollowing();
                        var f = 0;
                        twttr.API.User.findAllCached(c.followed_ids).each(function(a) {
                            a.data("following", !0), a.following = !0;
                            var b = {
                                requestParameters: [{
                                    user_id: a.id
                                }]
                            };
                            twttr.API.User.trigger("follow_before", b), twttr.API.User.trigger("follow_success", a), f++
                        }), twttr.API.User.findAllCached(c.requested_ids).each(function(a) {
                            a.data("follow_request_sent", !0), a.followRequestSent = !0;
                            var b = {
                                requestParameters: [{
                                    user_id: a.id
                                }]
                            };
                            twttr.API.User.trigger("follow_request_before", b), twttr.API.User.trigger("follow_request_success", a), f++
                        }), twttr.API.User.stopBulkFollowing(), b.scribbler.scribe({
                            component: "stream_header",
                            action: "follow"
                        }, {
                            item_count: c.followed_ids.length,
                            item_ids: c.followed_ids,
                            event_value: c.followed_ids.length,
                            event_info: "follow_all",
                            context: "import"
                        }), b.scribbler.scribe({
                            component: "stream_header",
                            action: "follow_all"
                        }, {
                            item_count: c.followed_ids.length,
                            event_value: c.followed_ids.length,
                            context: "import"
                        }), b._followingCount += c.followed_ids.length + c.requested_ids.length - f, this._showFollowing && this._updateFollowingToggle()
                    },
                    error: function(b) {
                        a.removeClass("disabled"), twttr.showError(_("There was an error following your contacts."))
                    }
                };
                twttr.API.AddressBook.followAllContacts(c)
            },
            inviteOthers: function(a) {
                a || this.scribbler.scribe({
                    component: "invite_contacts_link",
                    action: "click"
                }), this.forceInvitePopup = !1;
                var b = this,
                    c = {
                        success: function(c, d) {
                            b.scribbler.scribe({
                                component: "invite_contacts_dialog",
                                action: "open"
                            }), b.inviteDialog = (new twttr.widget.InviteContactsDialog(d.response, {
                                css: {},
                                onSuccess: function() {
                                    this.close()
                                },
                                scribbler: b.scribbler,
                                routeToHome: a
                            })).open()
                        }
                    };
                twttr.API.AddressBook.contactsOthers(c)
            },
            _inviteOthersInline: function() {
                this.forceInvitePopup = !1, this._suppressStreamEnd = !0;
                var a = this,
                    b = {
                        success: function(b, c) {
                            a.doneLoadingMore();
                            var d = new twttr.components.InviteContacts(c.response, {
                                scribbler: a.scribbler
                            });
                            a.scribbler.scribe({
                                component: "invite_contacts",
                                action: "impression"
                            }), a.$node.find("div.stream-items").append(d.$node), a._renderInviteHeader(b.length), a.reachedTheEnd()
                        },
                        error: function(b) {
                            a.doneLoadingMore(), a._loadingError = !0, a._showError(twttr.streams.ERROR)
                        }
                    };
                twttr.API.AddressBook.contactsOthers(b), window.setTimeout(function() {
                    a._loadingComponent = new twttr.views.ContactImportLoading, a.showLoadingSpinner()
                }, 0)
            },
            _scheduleRetry: function() {
                var a = this;
                this._timeout = window.setTimeout(function() {
                    a._timeout = null, a._loadingComponent = new twttr.views.ContactImportLoading, a.getMoreOldItems()
                }, 5e3), this.showLoadingSpinner()
            },
            _renderItemHtml: function(a) {
                var b = twttr.streams.UserStream.prototype._renderItemHtml.call(this, a);
                return !this._showFollowing && (a.following || a.followRequestSent) && !this.selectedItem(a.id).length && (b = b.replace(/^<div /, "<div style='display:none' ")), b
            },
            _getStreamLoadingComponent: function() {
                return this._loadingComponent || twttr.streams.UserStream.prototype._getStreamLoadingComponent.call(this)
            },
            _getStreamErrorComponent: function(a) {
                var b = this._loadingError ? _("There was an error loading your contacts.") : _("Loading seems to be taking a while."),
                    c = new twttr.components.ContactImportErrorEnd(b),
                    d = this;
                return c.bind("tryImportAgain", function(a) {
                    d.routePageTo(d.params.pathRoot, "Import")
                }), c
            },
            _getHeaderComponent: function() {
                return this._matchesHeaderComponent
            },
            _inWelcomeFlow: function() {
                return this.params.pathRoot === "welcome"
            }
        }).statics({
            _deciderKey: "contact_import_stream",
            _retryCount: 13
        });
        twttr.isT1 ? c.methods({
            _setHeader: function(a, b) {
                if (this.header) a(this.header.$node);
                else {
                    var c = new twttr.views.ContactImportMatchesHeader(b);
                    a(c.html())
                }
            },
            _updateHeaderFromStream: function(a) {
                this._matchesHeaderComponent && (this.header = this._matchesHeaderComponent, a.html(this._matchesHeaderComponent.$node))
            },
            _renderInviteHeader: function(a) {
                this.$headerNode.find(".js-contact-import-header-placeholder").html((new twttr.views.InviteContactsHeader({
                    count: a
                })).html())
            },
            getHeaderContainer: function() {
                return this.streamManager ? this.streamManager.$headerContainer() : null
            },
            _setTitle: function(a) {
                a(_("Find friends"))
            },
            _setViewToggler: function(a) {
                a(new twttr.views.BackLink({
                    route: twttr.router.whoToFollowImportPath(),
                    name: _("Try another service")
                }))
            }
        }) : c.methods({
            getHeaderContainer: function() {
                return this.$node
            },
            _setTitle: function(a) {
                a("")
            },
            _renderInviteHeader: function(a) {
                (new twttr.views.InviteContactsHeader({
                    count: a
                })).render(this.$find(".invite-contacts-component"), "prepend"), twttr.helpers.handlePopupLinks(this.$node)
            }
        }), a(twttr.streams.ContactImportMatches)
    })
});
provide("streams/DashboardContactImportMatches", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.DashboardContactImportMatches", function(a, b) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", a.noBigImages = !0, twttr.streams.ContactImportMatches.apply(this, arguments)
        }).subclassOf(twttr.streams.ContactImportMatches).methods({
            _setHeader: function(a, b) {
                this.header ? a(this.header.$node) : a("")
            },
            _updateHeaderFromStream: function(a) {
                twttr.streams.ContactImportMatches.prototype._updateHeaderFromStream.apply(this, arguments), $(window).trigger("resize")
            },
            itemViewClass: "DashboardStreamUser",
            customHeaderView: "DashboardContactImportMatchesStats"
        }), a()
    })
});
provide("streams/ContactImportServices", function(a) {
    using("externalOauthPopup", twttr.isT1 ? "mixins/ContactImportServicesT1" : "").as(function(b, c, d) {
        twttr.klass("twttr.streams.ContactImportServices", function(a, c) {
            a.pathRoot = a.pathRoot || "whoToFollow", twttr.streams.Stream.apply(this, arguments);
            var d = this;
            this.$node.addClass("contact-import-services"), this.$node.delegate(".js-wipe-addressbook", "click", function(a) {
                (new twttr.widget.Prompt({
                    modal: !0,
                    draggable: !0,
                    template: {
                        container_id: "wipe-addressbook",
                        title: _("Are you sure you want to remove your contacts? Who To Follow suggestions may become less relevant.")
                    },
                    callback: function(a) {
                        a && $.ajax({
                            type: "POST",
                            dataType: "json",
                            url: "/users/wipe_addressbook.json",
                            headers: {
                                "X-PHX": !0
                            },
                            data: {
                                authenticity_token: twttr.API.getConfig().postAuthenticityToken
                            },
                            success: function() {
                                twttr.showMessage(_("Your contacts have been removed."))
                            },
                            error: function() {
                                twttr.showMessage(_("Oops, we couldn't remove your contacts at this time."))
                            }
                        })
                    }
                })).open()
            }), this.$node.delegate("div.service-button, .js-service-row", "click", function(c) {
                var e = $(this),
                    f = e.find(".js-service-name").attr("data-service-id"),
                    g = {
                        query: f
                    };
                e.hasClass("selected") && (g.event_info = "selected"), d.scribbler.scribe({
                    component: "stream",
                    action: "launch_service"
                }, g), e.attr("data-popup") === "true" ? b.externalOauthPopup({
                    url: e.attr("data-url"),
                    width: e.attr("data-width"),
                    height: e.attr("data-height"),
                    callbackUrl: d.pagePathFor(a.pathRoot, "ImportMatches")
                }) : window.open(e.attr("data-url"), "_blank").focus(), d._matchesStreamKey ? d._streamManager.clearKeyFromCache(d._matchesStreamKey) : d._streamManager.clearFromCache(twttr.streams.ContactImportMatches, {
                    pathRoot: a.pathRoot
                }), c.preventDefault()
            })
        }).subclassOf(twttr.streams.Stream).mixin(twttr.mixins.discoveryHelper).methods({
            setStreamManager: function(a) {
                this._streamManager = a
            },
            setMatchesStreamKey: function(a) {
                this._matchesStreamKey = a
            },
            update: function(a) {
                this.params.lang && (a.lang = this.params.lang), this.params.country && (a.country = this.params.country), this.params.context && (a.context = this.params.context), twttr.API.AddressBook.contactsServices(a)
            },
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            _fetchItems: function(a) {
                var b = this;
                if (this.constructor._deciderKey && !twttr.decider.isAvailable(this.constructor._deciderKey)) {
                    a(this, twttr.streams.DECIDER);
                    return
                }
                var c = {
                    success: function(c, d) {
                        b.push(c), b.reachedTheEnd();
                        var e, f = twttr.map(c, function(a, b) {
                            return a.matched_email && (e = a.matched_email), a.id
                        }),
                            g = {
                                item_names: f,
                                item_count: f.length
                            };
                        e && (g.message = e), b.scribbler.scribe({
                            component: "stream",
                            action: "results"
                        }, g), a(b, twttr.streams.SUCCESS)
                    },
                    error: function(c) {
                        c.status === 502 ? a(b, twttr.streams.WHALE) : a(b, twttr.streams.ERROR)
                    }
                };
                this.update(c)
            },
            _renderItemsHtml: function(a) {
                var b = null;
                for (var c = 0; c < a.length; ++c) {
                    a[c].matched_email && (b = a[c]);
                    var d = a[c].name_template;
                    d && twttr.views[d] && (a[c].html_name = (new twttr.views[d]).html())
                }
                return this.params.onlyMatched && b && (a = [b]), (new twttr.views.ContactImportServicesVertical({
                    services: a,
                    matched_service: b,
                    matched_service_name: (b || {}).name,
                    in_welcome_flow: this.params.inWelcomeFlow
                })).html()
            },
            _setTitle: function(a) {
                twttr.abdecider.choose("timeline_copy_317") === "stream" ? a(_("Search the services you use to discover which of your friends are already using Twitter. Follow any of the friends you find to add their Tweets to your stream.")) : a(_("Search the services you use to discover which of your friends are already using Twitter. Follow any of the friends you find to add their Tweets to your timeline."))
            },
            _getStreamEndComponent: function() {
                return null
            }
        }).statics({
            _deciderKey: "contact_import_stream"
        }), d && twttr.streams.ContactImportServices.mixin(twttr.mixins.ContactImportServicesT1), a(twttr.streams.ContactImportServices)
    })
});
provide("mixins/ContactImportServicesT1", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.ContactImportServicesT1", function() {
            this.methods({
                _setHeader: function(a, b) {
                    b.header_help = _("Search your contacts for friends already on Twitter, or invite them via email.");
                    var c = new twttr.components.t1.PeopleSearchStreamHeader(twttr.router.whoToFollowImportSearchPath, b);
                    a(c.$node)
                },
                _setTitle: function(a) {
                    a(_("Find friends"))
                },
                _getStreamEndComponent: function() {
                    return new twttr.components.StreamEndInviteFriends(this._getStreamEndHtml(), this._getStreamEndShowBird())
                }
            })
        }), a(twttr.streams.ContactImportServicesT1)
    })
});
provide("streams/DashboardContactImportServices", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.DashboardContactImportServices", function(a, b) {
            a = a || {}, twttr.streams.ContactImportServices.call(this, a, b)
        }).subclassOf(twttr.streams.ContactImportServices).methods({
            _setHeader: function(a, b) {
                a("")
            }
        }), a()
    })
});
provide("streams/TweetGameDashboardStream", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.TweetGameDashboardStream", function(a, b) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", this.deferFollows = !! a.deferFollows, twttr.streams.UserStream.call(this, a, b)
        }).subclassOf(twttr.streams.UserStream).mixin(twttr.mixins.prefollowingStream).methods({
            update: function(a) {
                a.success(new twttr.anywhere.api.util.BaseCollection, {
                    response: {}
                })
            },
            afterFirstSwitchingTo: function(a) {
                this.items && this.items.length && (a(this, twttr.streams.SUCCESS), this.render())
            },
            _setHeader: function(a, b) {
                a("")
            },
            itemViewClass: "DashboardStreamUser"
        }), a(twttr.streams.TweetGameDashboardStream)
    })
});
provide("StoredUserStack", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.StoredUserStack", function(a, b) {
            this.storageKey = a, b || (b = twttr.caches.User);
            var c = b.get(this.storageKey);
            this.cache = c ? c.index : {}, this.stack = c ? c.stack : [], this.timestamps = c && c.timestamps ? c.timestamps : {}
        }).methods(twttr.EventProvider).statics({
            MAX_SIZE: 10
        }).methods({
            push: function(a) {
                if (!twttr.helpers.isCurrentUser(a)) {
                    var b = a.id || a.toString();
                    twttr.is.def(this.cache[b]) && (this.stack = twttr.filter(this.stack, function(a) {
                        return a != b
                    })), this.cache[b] = this.stack.push(b), this.timestamps[b] = (new Date).getTime();
                    if (this.size() > twttr.StoredUserStack.MAX_SIZE) {
                        var c = this.stack.shift();
                        delete this.timestamps[c], delete this.cache[c]
                    }
                    this.trigger("push", b)
                }
                return this.save()
            },
            save: function() {
                return twttr.caches.User.set(this.storageKey, {
                    index: this.cache,
                    stack: this.stack,
                    timestamps: this.timestamps
                }), this.size()
            },
            clear: function() {
                this.cache = {}, this.stack = [], this.timestamps = {}, this.save()
            },
            size: function() {
                return this.stack.length
            },
            getLatestUserId: function() {
                var a = this.size();
                return a ? this.stack[a - 1] : null
            },
            getLastPushTime: function(a) {
                return this.timestamps[a]
            },
            findAll: function(a) {
                twttr.API.User.findAll(this.stack.reverse(), a)
            }
        }), twttr.app.waitForSignal("init", function() {
            twttr.recentlyViewedUsers = new twttr.StoredUserStack("recentlyViewedUsers"), twttr.loggedOutViewedUsers = new twttr.StoredUserStack("recentlyViewedUsers", new twttr.cache.local.User($.cookie("guest_id")))
        }), a(twttr.StoredUserStack)
    })
});
provide("PasswordStrength", function(a) {
    using().as(function(b) {
        twttr.PasswordStrength = function() {
            function a(a) {
                return typeof a == "function"
            }
            function b(a, b) {
                var c = "";
                for (var d = 0; d < b.length; d++) {
                    var e = !0;
                    for (var f = 0; f < a && f + d + a < b.length; f++) e = e && b.charAt(f + d) == b.charAt(f + d + a);
                    f < a && (e = !1), e ? (d += a - 1, e = !1) : c += b.charAt(d)
                }
                return c
            }
            return {
                check: function(c, d) {
                    var e = 0,
                        d = d || {};
                    if (c.length < (d.minlength || 6)) return {
                        score: 0,
                        msgClass: "tooshort"
                    };
                    var f = c.toLowerCase();
                    if (d.username && f == (a(d.username) ? d.username() : d.username).toLowerCase()) return {
                        score: 0,
                        msgClass: "obvious"
                    };
                    if ($.inArray(f, twttr.BANNED_PASSWORDS || []) != -1) return {
                        score: 0,
                        msgClass: "banned"
                    };
                    if (c.match(/^\s*$/)) return {
                        score: 0,
                        msgClass: "whitespace"
                    };
                    if (d.requireStrong) {
                        var g = "# ` ~ ! @ $ % ^ & * ( ) - _ = + [ ] { }  | ; : ' \" , . < > / ?".split(" ");
                        g = $.map(g, function(a) {
                            return "\\" + a
                        }).join("");
                        var i = ["\\d", "[a-z]", "[A-Z]", "[" + g + "]"],
                            j = $.map(i, function(a) {
                                return "(?=.*" + a + ")"
                            }).join("");
                        if (!c.match(new RegExp("(" + j + "){10,}"))) return {
                            score: 0,
                            msgClass: "tooweak"
                        }
                    }
                    e += c.length * 4, e += (b(1, c).length - c.length) * 1, e += (b(2, c).length - c.length) * 1, e += (b(3, c).length - c.length) * 1, e += (b(4, c).length - c.length) * 1, c.match(/(.*[0-9].*[0-9].*[0-9])/) && (e += 5), c.match(/(.*[!@#$%^&*?_~].*[!@#$%^&*?_~])/) && (e += 5), c.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && (e += 10), c.match(/([a-zA-Z])/) && c.match(/([0-9])/) && (e += 15), c.match(/([!@#$%^&*?_~])/) && c.match(/([0-9])/) && (e += 15), c.match(/([!@#$%^&*?_~])/) && c.match(/([a-zA-Z])/) && (e += 15);
                    if (c.match(/^\w+$/) || c.match(/^\d+$/)) e -= 10;
                    return e < 0 && (e = 0), e > 100 && (e = 100), e < 34 ? {
                        score: e,
                        msgClass: "weak"
                    } : e < 50 ? {
                        score: e,
                        msgClass: "good"
                    } : e < 75 ? {
                        score: e,
                        msgClass: "strong"
                    } : {
                        score: e,
                        msgClass: "verystrong"
                    }
                }
            }
        }(), a(twttr.PasswordStrength)
    })
});
provide("mixins/urlShortener", function(a) {
    using("_", "util", "constants").as(function(b, _) {
        twttr.klass.mixin("twttr.mixins.urlShortener", function(a) {
            a.mixin(twttr.mixins.caretHelper).statics({
                matchers: {
                    tco: /^https?:\/\/t.co\/\w+$/
                }
            }).methods({
                _registerUrlShortenerEvents: function() {
                    this._explainLinkShortening && this.editor.bind("didChangeContent", twttr.bind(this, this._showCounterTipsy)), this.$counterText = $('<span class="tweetbox-counter-tipsy"></span>'), this.$counter.before(this.$counterText), this.$counterText.css("opacity", 0), this.$links = [], this._a = !1, this._isTipShowing = !1, this._oldLinkLen = 0;
                    var a = this._getTextLength;
                    this._getTextLength = function(c) {
                        var d = a.apply(this, arguments),
                            e = twttr.txt.extractUrls(c);
                        return d -= e.join("").length, twttr.each(e, function(a) {
                            d += b.constants.tcoLength, a.match(/https:/) && (d += 1)
                        }), d
                    }
                },
                _getLinkCounterText: function(a) {
                    var b = _("Links will appear shortened"),
                        c = _("Link will appear shortened");
                    return a > 1 ? b : c
                },
                _showCounterTipsy: function() {
                    var a = this,
                        b, c, d = 15;
                    a._linkLen = a._extractUrls().length, a._linkLen && a._linkLen !== a._oldLinkLen ? (a.$counterText.html(a._getLinkCounterText(a._linkLen)), c = a.$container.find("div.tweet-button-container"), b = c.width(), c.children().each(function() {
                        b -= $(this).outerWidth(!0)
                    }), twttr.helpers.ellipsify(a.$container.find(".geo-text").width(function(a, c) {
                        return b < 0 || !c ? c + b - d : c
                    }), !0), a.$counterText.animate({
                        opacity: 1
                    }, 100), a._isTipShowing = !0) : a._isTipShowing && !a._linkLen && (a.$counterText.animate({
                        opacity: 0
                    }, 100, function() {
                        a.$counterText.html(""), twttr.helpers.ellipsify(a.$container.find(".geo-text").width(""), !0)
                    }), a._isTipShowing = !1), a._oldLinkLen = a._linkLen
                },
                _showCounterFade: function() {
                    if (twttr.txt.extractUrls(this.getCurrentWord(this.getCaret())).length) {
                        this.$counter.css({
                            color: "green"
                        });
                        if (!this._a) {
                            var a = this.$counter.clone(),
                                b = this.$counter.position();
                            a.css({
                                left: b.left,
                                top: b.top
                            }), a.addClass("tweet-counter-proxy"), this.$counter.after(a);

                            function c() {
                                a.remove()
                            }
                            a.animate({
                                fontSize: "40px",
                                opacity: 0,
                                marginTop: -20,
                                marginLeft: -Math.round(a.width() / 2)
                            }, 200, c), this._a = !0
                        }
                    } else this.$counter.css({
                        color: ""
                    }), this._a && (this._a = !1)
                },
                _tweetReady: function() {
                    this.lock(), this.callTalon(this._extractUrls(), twttr.bind(this, function(a) {
                        this.setTweetContent(this.replaceWithTalonUrls(a)), this.unlock(), this.tweet()
                    }))
                },
                _extractUrls: function() {
                    return this.filterInvalidLinks(twttr.txt.extractUrls(this.editor.content()))
                },
                replaceWithTalonUrls: function(a) {
                    var b = this.editor.content();
                    return twttr.each(a, function(a) {
                        b = this.replaceContent(b, a)
                    }, this), b
                },
                callTalon: function(a, b) {
                    a.length ? twttr.API.Urls.shortenMultiple(a, b) : b([])
                },
                replaceContent: function(a, b) {
                    return a.replace(b.expanded_url, b.url)
                },
                filterInvalidLinks: function(b) {
                    return twttr.filter(b, function(b) {
                        return !b.match(a.matchers.tco)
                    })
                },
                _mousemove: function(a) {
                    var b = a.pageX,
                        c = a.pageY;
                    twttr.each(this.$links, function(a) {
                        var d = $(a),
                            e = d.offset(),
                            f = d.attr("data-mouse-entered");
                        if (b >= e.left && b <= e.left + d.width() && c >= e.top && c <= e.top + d.height()) {
                            if (!f || f === "false") d.attr("data-mouse-entered", "true"), d.trigger("mouseenter");
                            return !1
                        }
                        f === "true" && (d.attr("data-mouse-entered", "false"), d.trigger("mouseleave"))
                    })
                },
                _matchUrls: function() {
                    setTimeout(twttr.bind(this, function() {
                        this.$links = this.$find("a.twitter-timeline-link"), this.$links.tipsy({
                            html: !0,
                            gravity: "n",
                            offset: 3,
                            "class": "tweetbox-tipsy",
                            title: function() {
                                return '<span class="tweetbox-tipsy-text">' + _("Link will be displayed as {{url}}", {
                                    url: twttr.helpers.displayUrl(this.href)
                                }) + "</span>"
                            }
                        })
                    }), 0)
                }
            })
        }), a(twttr.mixins.urlShortener)
    })
});
provide("mixins/caretHelper", function(a) {
    using().as(function(b) {
        twttr.klass.mixin("twttr.mixins.caretHelper", function() {
            return this.statics({
                spaceBoundary: /\s|$/,
                wordEnd: /\S+$/
            }).methods({
                init: function() {
                    this.$input.bind("blur", twttr.bind(this, function(a) {
                        setTimeout(twttr.bind(this, function() {
                            this.hide()
                        }), 1e3)
                    })).bind("mouseup", twttr.bind(this, function(a) {
                        setTimeout(twttr.bind(this, function() {
                            this.getCaret()
                        }), 0)
                    })).bind("focus", twttr.bind(this, function(a) {
                        this.getCaret()
                    }))
                },
                getCurrentText: function() {
                    return this.$input.val()
                },
                setCaretPosition: function(a) {
                    var b = this.$input[0];
                    if (b.setSelectionRange) b.focus(), b.setSelectionRange(a, a);
                    else if (b.createTextRange) {
                        var c = b.createTextRange();
                        c.collapse(!0), c.moveEnd("character", a), c.moveStart("character", a), c.select()
                    }
                    this.lastCaret = a
                },
                getCaret: function() {
                    var a = this.$input[0],
                        b = 0;
                    if (document.selection) {
                        try {
                            a.focus()
                        } catch (c) {}
                        var d = document.selection.createRange();
                        if (d == null) return this.lastCaret = 0, 0;
                        var e = a.createTextRange(),
                            f = e.duplicate();
                        e.moveToBookmark(d.getBookmark()), f.setEndPoint("EndToStart", e), b = f.text.length
                    } else if (a.selectionStart || a.selectionStart == "0") b = a.selectionStart;
                    return this.lastCaret = b, b
                },
                insertOrReplaceSelection: function(a, b) {
                    var c = this.$input[0],
                        d = this.getCaret(),
                        e = d + a.length;
                    if (document.selection) {
                        c.focus();
                        var f = document.selection.createRange();
                        f.text = a;
                        if (b) {
                            var g = c.createTextRange();
                            g.collapse(!0), g.moveEnd("character", e), g.moveStart("character", d), g.select()
                        } else this.setCaretPosition(e)
                    } else if (c.selectionStart || c.selectionStart == "0") {
                        var i = c.selectionStart,
                            j = c.selectionEnd,
                            k = c.scrollTop;
                        c.value = c.value.substring(0, i) + a + c.value.substring(j, c.value.length), c.focus(), c.selectionStart = b ? d : e, c.selectionEnd = e, c.scrollTop = k
                    } else c.value += a, this.setCaretPosition(e), c.focus();
                    this.lastCaret = e, this.$input.change()
                },
                getCurrentWord: function(a) {
                    var b = this.getCurrentText(),
                        c = b.slice(0, a),
                        d = b.slice(a, b.length),
                        e = b.charAt(a - 1);
                    if (!e || e === " ") return "";
                    this.leftBoundary = c.search(this.constructor.wordEnd);
                    var f = c.slice(this.leftBoundary, c.length),
                        g = d.slice(0, d.search(this.constructor.spaceBoundary)),
                        i = f.concat(g);
                    return this.rightBoundary = this.leftBoundary + i.length, i
                },
                replaceCurrentWord: function(a) {
                    var b = this.getCurrentText().split("");
                    this.oldValueArray = b;
                    var c = b.slice(0, this.leftBoundary),
                        d = b.slice(this.rightBoundary, b.length);
                    if (d.length < 1 || !d[0].match(/\s/)) a += " ";
                    var e = (c.join("") + a).length + 1;
                    return {
                        value: c.join("") + a + d.join(""),
                        cursor: e
                    }
                }
            }), this
        }), a(twttr.mixins.caretHelper)
    })
});
provide("components/Autocomplete", function(a) {
    using("_", "util", "constants").as(function(b, _) {
        twttr.provide("twttr.users", {
            autocompleted: []
        }), twttr.klass("twttr.components.Autocomplete", function(a) {
            var c = {
                limit: 5,
                textarea: !1,
                preselect: !0
            };
            this.options = twttr.merge({}, c, a), this.$input = $(this.options.input), this.$container = $('<ul class="autocomplete-container"></ul>').insertAfter(this.options.input), this._isCompletionsOpen = !1, twttr.loggedIn && (twttr.decider.isAvailable("phoenix_autocomplete") || b.util.params().autocomplete) && this.registerEvents(), this.init()
        }).mixin(twttr.mixins.caretHelper).statics({
            cache: {},
            regCache: new twttr.cache.Simple,
            hashtagCache: {},
            _isCompletionsOpen: !1,
            nextCursor: -1,
            cursorCount: 0,
            requestedUsers: !1,
            getAutocompletedUsers: function(a) { !! twttr.currentUser;
                var c = this;
                if (twttr.loggedIn && (twttr.decider.isAvailable("phoenix_autocomplete") || b.util.params().autocomplete)) {
                    function d(a) {
                        return twttr.map(a, function(a, b) {
                            return [a.id, a.screenName, a.name, a.profileImageUrl]
                        })
                    }
                    if (!this.requestedUsers) {
                        this.requestedUsers = !0;
                        var e = twttr.caches.User.get("autocomplete_friends");
                        e ? (twttr.users.autocompleted = e, a && a()) : function() {
                            function b(e) {
                                ++c.cursorCount <= 5 && twttr.currentUser ? twttr.currentUser.friends({
                                    count: 100,
                                    cursor: e,
                                    success: twttr.bind(c, function(c, e) {
                                        twttr.components.Autocomplete.invalidateCache();
                                        if (c.isEmpty()) {
                                            a && a();
                                            return
                                        }
                                        c = d(c.toArray()), twttr.users.autocompleted.push.apply(twttr.users.autocompleted, c), twttr.components.Autocomplete.resetStorageCache(), e.response.next_cursor ? b(e.response.next_cursor) : a && a()
                                    })
                                }) : a && a()
                            }
                            twttr.currentUser && twttr.components.Autocomplete.addToList([twttr.currentUser.id, twttr.currentUser.screenName, twttr.currentUser.name, twttr.currentUser.profileImageUrl]), b(twttr.components.Autocomplete.nextCursor)
                        }()
                    } else a && a()
                }
            }
        }).methods(twttr.EventProvider).statics({
            username: /^[@＠]([a-zA-Z0-9_]{1,20})$/,
            hashtag: /^[#＃]([a-zA-Z0-9_]+)/,
            transformAvatar: /(.+)(?:_normal)\.(\w+)$/,
            _matchesContiguously: function(a, b) {
                var c = twttr.components.Autocomplete,
                    d = c._matchesContiguouslyCaches.matchers = c._matchesContiguouslyCaches.matchers || {},
                    e = c._matchesContiguouslyCaches.results = c._matchesContiguouslyCaches.results || {};
                return e[a] && e[a][b] !== undefined ? e[a][b] : (d[a] = d[a] || new RegExp("^" + a, "i"), e[a] = e[a] || {}, e[a][b] = d[a].test(b.replace(/\W/, "")), e[a][b])
            },
            _matchesConsecutively: function(a, b) {
                var c = twttr.components.Autocomplete,
                    d = c._matchesConsecutivelyCaches.matchers = c._matchesConsecutivelyCaches.matchers || {},
                    e = c._matchesConsecutivelyCaches.results = c._matchesConsecutivelyCaches.results || {};
                return e[a] && e[a][b] !== undefined ? e[a][b] : (d[a] = d[a] || new RegExp(a.split("").join(".*"), "i"), e[a] = e[a] || {}, e[a][b] = d[a].test(b), e[a][b])
            },
            levenSorter: function(a, c) {
                var d = twttr.components.Autocomplete._currentPrefix,
                    e = b.util.leven(a, d),
                    f = b.util.leven(c, d);
                return e < f ? -1 : e > f ? 1 : 0
            },
            sorter: function(a, c) {
                var d = twttr.components.Autocomplete._matchesContiguously,
                    e = twttr.components.Autocomplete._matchesConsecutively,
                    f = twttr.components.Autocomplete._currentPrefix;
                if (d(f, a[1]) && !d(f, c[1])) return -1;
                if (!d(f, a[1]) && d(f, c[1])) return 1;
                if (d(f, a[2]) && !d(f, c[2])) return -1;
                if (!d(f, a[2]) && d(f, c[2])) return 1;
                if (e(f, a[1]) && !e(f, c[1])) return -1;
                if (!e(f, a[1]) && e(f, c[1])) return 1;
                if (e(f, a[2]) && !e(f, c[2])) return -1;
                if (!e(f, a[2]) && e(f, c[2])) return 1;
                var g = b.util.leven(a[1], f),
                    i = b.util.leven(c[1], f);
                if (g < i) return -1;
                if (g > i) return 1;
                var j = b.util.leven(a[2], f),
                    k = b.util.leven(c[2], f);
                return j < k ? -1 : j > k ? 1 : 0
            },
            _htmlEscapeAndStrongifyMatches: function(a, b) {
                return h(a.replace(b, "<strong>$1</strong>")).replace(/<(\/?strong)>/g, "<$1>")
            }
        }).statics({
            _matchesContiguouslyCaches: {
                results: {},
                matchers: {}
            },
            _matchesConsecutivelyCaches: {
                results: {},
                matchers: {}
            }
        }).statics({
            invalidateCache: function(a) {
                if (!a) {
                    this.cache = {}, twttr.components.Autocomplete._matchesConsecutivelyCaches.results = {}, twttr.components.Autocomplete._matchesConsecutivelyCaches.matchers = {}, twttr.components.Autocomplete._matchesContiguouslyCaches.results = {}, twttr.components.Autocomplete._matchesContiguouslyCaches.matchers = {};
                    return
                }
                var b = "";
                a = a.split("");
                for (var c = a.length - 1; c >= 0; c--) b += a.shift(), delete this.cache[b], delete twttr.components.Autocomplete._matchesConsecutivelyCaches.results[b], delete twttr.components.Autocomplete._matchesConsecutivelyCaches.matchers[b], delete twttr.components.Autocomplete._matchesContiguouslyCaches.results[b], delete twttr.components.Autocomplete._matchesContiguouslyCaches.matchers[b]
            },
            resetStorageCache: function() {
                var a = [],
                    b = 0;
                twttr.users.autocompleted.sort(function(a, b) {
                    return a[0] < b[0] ? -1 : a[0] > b[0] ? 1 : 0
                });
                for (var c = 0, d = twttr.users.autocompleted.length; c < d; c++) {
                    if (twttr.users.autocompleted[c + 1] && twttr.users.autocompleted[c][0] == twttr.users.autocompleted[c + 1][0]) continue;
                    a[b++] = twttr.users.autocompleted[c]
                }
                twttr.users.autocompleted = a, twttr.caches.User.set("autocomplete_friends", twttr.users.autocompleted, 2592e5)
            },
            addToList: function(a) {
                var b = !1;
                for (var c = 0, d = twttr.users.autocompleted.length; c < d; ++c) if (twttr.users.autocompleted[c][1] === a[1]) {
                    b = !0;
                    break
                }
                b || twttr.users.autocompleted.push(a), twttr.components.Autocomplete.invalidateCache(a[1]), this.resetStorageCache()
            }
        }).methods({
            registerEvents: function() {
                var a = this;
                twttr.widget.Dialog.bind("close", twttr.bind(this, function() {
                    this.hide()
                }));
                var b = "keypress" + ($.browser.webkit || $.browser.msie ? " keydown" : "");
                this.$input.bind("keyup click", twttr.bind(this, this.keyup)), this.$input.bind("change", twttr.bind(this, this.change)), this.$input.bind(b, twttr.bind(this, this.keypress)), this.$container.delegate("li.selectable", "mouseenter", function(b) {
                    a.$container.find("li.selected").removeClass("selected"), $(this).addClass("selected")
                }).delegate("li.selectable", "click", twttr.bind(this, function(a) {
                    a.preventDefault();
                    if ($(a.target).hasClass("twttr-follow-notice")) return;
                    $(a.target).addClass("selected").siblings(".selected").removeClass("selected"), this.select(), this.focus()
                })), this.$input.bind("keydown", function(b) {
                    if (b.ctrlKey) return;
                    if (!a._isCompletionsOpen && b.which == twttr.constants.keyCodes.escape) return;
                    b.stopPropagation()
                }), this.position()
            },
            focus: function() {
                this.$input.focus()
            },
            set: function(a) {
                if (this.options.textarea) {
                    var b = this.replaceCurrentWord(a);
                    this.$input.val(b.value), this.setCaretPosition(b.cursor)
                } else this.$input.val(a);
                this.$input.change()
            },
            hide: function() {
                setTimeout(twttr.bind(this, function() {
                    this.$container.css("visibility", "hidden"), this._isCompletionsOpen && this.trigger("hide"), this._isCompletionsOpen = !1, this.constructor._isCompletionsOpen = !1
                }), 0)
            },
            show: function() {
                this.$container.css("visibility", "visible"), this.constructor._isCompletionsOpen = !0, this._isCompletionsOpen = !0
            },
            keypress: function(a) {
                if (a.ctrlKey) return;
                switch (a.keyCode) {
                case b.constants.keyCodes.tab:
                case b.constants.keyCodes.enter:
                case b.constants.keyCodes.escape:
                    if (!this._isCompletionsOpen) return;
                    a.preventDefault();
                    break;
                case b.constants.keyCodes.upArrow:
                    this._isCompletionsOpen && !a.shiftKey && (this.previous(), a.preventDefault());
                    break;
                case b.constants.keyCodes.downArrow:
                    this._isCompletionsOpen && !a.shiftKey && (this.next(), a.preventDefault())
                }
                a.stopPropagation(), setTimeout(twttr.bind(this, this.change), 0)
            },
            keyup: function(a) {
                if (a.ctrlKey) return;
                a.stopPropagation();
                if (a && (a.keyCode === b.constants.keyCodes.tab || a.keyCode === b.constants.keyCodes.shift) && !this._isCompletionsOpen) return;
                var c = "",
                    d = !1;
                if (this.options.textarea) {
                    var e = this.getCaret();
                    c = this.getCurrentWord(e).replace(twttr.constants.regexps.dirMark, ""), c.match(this.constructor.username) ? (c = RegExp.$1, this.autocompleteType = "username", d = !0) : c.match(this.constructor.hashtag) && (c = RegExp.$1, this.autocompleteType = "hashtag", d = !0)
                } else this.autocompleteType = "username", c = this.$input.val(), d = !0;
                if (c.length && d) switch (a.keyCode) {
                case b.constants.keyCodes.escape:
                    this.hide(), a.stopPropagation();
                    break;
                case b.constants.keyCodes.upArrow:
                case b.constants.keyCodes.downArrow:
                    break;
                case b.constants.keyCodes.tab:
                case b.constants.keyCodes.enter:
                    !a.shiftKey && this._isCompletionsOpen && this.select();
                    break;
                default:
                    this.autocompleteType == "hashtag" ? this.lookUpHashtag(c) : this.lookUpUser(c)
                } else this.hide()
            },
            select: function() {
                var a = this.$container.find("li.selected"),
                    b = a.find("b").text(),
                    c = a.find("img").attr("src");
                this.set(b), this.hide();
                if (this.autocompleteType === "username") {
                    var d = a.attr("data-user-screenname"),
                        e = a.attr("data-user-id");
                    this.trigger("select", [this.autocompleteType, b, c, d, e])
                } else this.trigger("select", [this.autocompleteType, b, c])
            },
            change: function() {
                var a = this.getCurrentText(),
                    b = this.lastText || "";
                if (a === b) return;
                var c = 0,
                    d = a.length,
                    e = b.length,
                    f = Math.min(d, this.getCaret());
                for (var g = 0; g < f; g++) {
                    if (b.charAt(g) !== a.charAt(g)) break;
                    c += 1
                }
                var i = 0;
                for (var g = 1; g <= d - c; g++) {
                    if (b.charAt(e - g) !== a.charAt(d - g)) break;
                    i += 1
                }
                var j = c + i;
                this.lastText = a, this.trigger("substitution", [c, e - j, d - j, a])
            },
            sanitize: function(a) {
                return this.constructor._currentPrefix = a.replace(/ /g, ""), this.constructor._currentPrefix
            },
            appendNotice: function(a) {
                return twttr.currentUser && twttr.currentUser.friendsCount > 500 && (a += '<li class="twttr-follow-notice">' + _("<em>Showing most recent 500 you're following</em>") + "</li>"), a
            },
            lookUpHashtag: function(a) {
                var b = this;
                a = this.sanitize(a);
                var c = this.constructor.hashtagCache[a];
                if (c) {
                    this.$container.html(c), this.$container.find("li.selectable:first").addClass("selected"), this.show();
                    return
                }
                var d = function(a) {
                        if (a.match(b.regexPrefix)) return a
                    },
                    e = twttr.merge({}, this.getFilteredResults(a, twttr.suggestedHashtags || [], d, this.constructor.levenSorter), !0),
                    f = this.getItemTemplate(e, function(a, c) {
                        return '<li class="hashtag-completion selectable"><b>#' + b.constructor._htmlEscapeAndStrongifyMatches(a, c) + "</b></li>"
                    }).slice(0, this.options.limit);
                if (f.length > 0) {
                    var g = f.join("");
                    this.constructor.hashtagCache[a] = g, this.$container.html(g), this.$container.find("li.selectable:first").addClass("selected"), this.show()
                } else this.hide()
            },
            lookUpUser: function(a) {
                var b = this;
                a = this.sanitize(a);
                var c = this.constructor.cache[a];
                if (c) {
                    this.$container.html(c), this.options.preselect && this.$container.find("li.selectable:first").addClass("selected"), this.show();
                    return
                }
                var d = function(a) {
                        if (a[1].match(b.regexPrefix)) return a;
                        if (a[2].replace(/ /g, "").match(b.regexPrefix)) return a
                    },
                    e = twttr.merge({}, this.getFilteredResults(a, twttr.users.autocompleted, d, this.constructor.sorter), !0),
                    f = this.getItemTemplate(e, function(a, c) {
                        var d = a[3].replace(b.constructor.transformAvatar, "$1_mini.$2");
                        return '<li data-user-id="' + h(a[0]) + '" data-user-screenname="' + h(a[1]) + '" class="selectable"><img src="' + h(d) + '"/> <span><b>@' + b.constructor._htmlEscapeAndStrongifyMatches(a[1], c) + "</b> <em>" + b.constructor._htmlEscapeAndStrongifyMatches(a[2], c) + "</em></span></li>"
                    }).slice(0, this.options.limit);
                this.options.defaultResults && twttr.each(this.options.defaultResults, function(b) {
                    (!b.show || b.show(a, e)) && f.splice(f.length, 0, b.format(a))
                });
                if (f.length > 0) {
                    var g = f.join("");
                    g = this.appendNotice(g), this.constructor.cache[a] = g, this.$container.html(g), this.options.preselect && this.$container.find("li.selectable:first").addClass("selected"), this.show()
                } else this.hide()
            },
            position: function() {
                setTimeout(twttr.bind(this, function() {
                    if (this.$input.offsetParent().length) {
                        var a = this.$input.position(),
                            b = Math.round(a.top + this.$input.innerHeight() + 1),
                            c = Math.round(a.left);
                        this.$container.css({
                            top: b,
                            left: c
                        })
                    }
                }), 0), this.$container.css({
                    width: this.$input.innerWidth()
                })
            },
            getItemTemplate: function(a, b) {
                var c = new RegExp("(" + this.constructor._currentPrefix.split("").join("|") + ")", "gi");
                return twttr.map(a, twttr.bind(this, function(a, d) {
                    return b(a, c)
                }), null, "array")
            },
            getFilteredResults: function(a, b, c, d) {
                var e = this,
                    f, g = this.constructor.regCache.get(a);
                if (g) this.regexPrefix = g;
                else {
                    var i = a.split(""),
                        j = "^" + i.join("\\w*");
                    this.regexPrefix = new RegExp(j, "i"), this.constructor.regCache.set(a, this.regexPrefix)
                }
                var k = twttr.filter(b, c);
                return d ? k.sort(d) : k
            },
            next: function() {
                var a = this.$container.find("li.selected");
                if (!a.length) {
                    this.$container.find("li.selectable:first").addClass("selected");
                    return
                }
                a = a.removeClass("selected").nextAll("li.selectable:first"), a.length ? a.addClass("selected") : this.$container.find("li.selectable:first").addClass("selected")
            },
            previous: function() {
                var a = this.$container.find("li.selected");
                if (!a.length) {
                    this.$container.find("li.selectable:last").addClass("selected");
                    return
                }
                a = a.removeClass("selected").prevAll("li.selectable:first"), a.length ? a.addClass("selected") : this.$container.find("li.selectable:last").addClass("selected")
            }
        }), a(twttr.components.Autocomplete)
    })
});
provide("components/Typeahead", function(a) {
    using("constants", "mixins/typeaheadScribing").as(function(b, c, d) {
        var e = twttr.klass.component("twttr.components.Typeahead", function(a) {
            var b = this,
                c = {
                    pauseInterval: 300,
                    closeDelay: 500,
                    select: $.noop
                };
            this.options = twttr.merge({}, c, a), this.datasources = this.options.datasources, this._select = this.options.select, this.val = this._val = "", this.typingPauseDetectionTimeoutId = null, this.$input = $(this.options.input), this.$inputHint = $(this.options.inputHint), this.$node = $((new twttr.views.Typeahead).html()).insertAfter(this.$inputHint), this._isCompletionsOpen = this._wasCompletionsOpen = !1, this._keystrokes = 0, this._localLatencies = [], this._remoteLatencies = [], this._lastTimerEvent = "none", this._statsTimerStart = 0, this._statsCumulativeTime = 0, this._resultsDirty = !1, this._lastHint = "", this._placeholder = this.$input.attr("placeholder"), this.resizeTimer = null, this.heightLimit = {
                1: 0,
                2: 1,
                3: 2,
                4: 3,
                5: 5,
                6: 6
            };
            var d = twttr.abdecider.choose("typeahead_271", !0);
            this.inBucket = d !== "control" && (d === "typeahead" || twttr.decider.isAvailable("swift_typeahead")), this.registerTypeaheadEvents();
            if (twttr.loggedIn && (twttr.decider.isAvailable("typeahead") || this.inBucket)) {
                var e = this.$find(".js-typeahead-results");
                twttr.each(this.datasources, function(a) {
                    a.bind("show", function(a, c) {
                        c === b._val && b.$input.hasClass("focus") && b.show()
                    }), a.bind("scribeLocalStorageLatency", twttr.bind(b, b.scribeLocalStorageLatency)), a.bind("localLatency", twttr.bind(b, b.addLocalLatency)), a.bind("remoteLatency", twttr.bind(b, b.addRemoteLatency)), a.bind("resultsDirty", twttr.bind(b, b.resultsDirty)), a.bind("hint", twttr.bind(b, b.hint)), a.init(), e.append(a.$node)
                }), this.bind("hint", twttr.bind(this, this.hint)), this.resizeHeight(), this.executeQueryIfAlreadyFocused()
            }
        }).deciderKey("typeahead").mixin(d).methods({
            registerTypeaheadEvents: function() {
                var a = this,
                    b = "keypress" + ($.browser.webkit || $.browser.msie ? " keydown" : "");
                this.$input.bind("keyup click", twttr.bind(this, this.keyup)), this.$input.bind(b, twttr.bind(this, this.keypress)), this.$node.delegate(".js-selectable", "mouseenter", function(b) {
                    a.$find(".selected").removeClass("selected"), $(this).addClass("selected");
                    var c = $(this).data("hint");
                    c = c ? c : "", a.trigger("hint", [c, a.$input.val()])
                }).delegate(".js-selectable", "click", twttr.bind(this, function(a) {
                    this.select(a)
                })), this.$input.bind("keydown", function(b) {
                    b.keyCode === 27 && (a.$input.removeClass("focus"), a.$inputHint.removeClass("focus"), a.hide(), a.$input.trigger("blur")), clearTimeout(a.typingPauseDetectionTimeoutId)
                }), this.$input.bind("focus", twttr.bind(this, this.focus)), this.$input.bind("blur", twttr.bind(this, this.blur)), this.$node.bind({
                    mouseenter: function() {
                        a.mouseOverDropDown = !0
                    },
                    mouseleave: function() {
                        a.mouseOverDropDown = !1
                    }
                }), twttr.widget.Dialog.bind("close", twttr.bind(this, function() {
                    this.hide()
                })), $(window).resize(function() {
                    clearTimeout(a.resizeTimer), a.resizeTimer = setTimeout(twttr.bind(a, a.resizeHeight), 100)
                }), $(document).click(function(b) {
                    a.$node.parent().find($(b.target)) || a.hide()
                }), $(document).bind("searchPlaceholderUpdate", function(b, c) {
                    a._placeholder = c
                })
            },
            hint: function(a, b, c) {
                if (twttr.decider.isAvailable("typeahead_hinting") || this.inBucket) {
                    var d = this.$input.val();
                    d.toLowerCase() === c.toLowerCase() && this.inputIsFocused() && this.$input[0].scrollWidth <= this.$input.width() ? this.$inputHint.val(d + b.slice(d.length)) : this.$inputHint.val(""), c === "" && b !== "" && this.$input.attr("placeholder", ""), this.$inputHint.css("direction", this.$input.css("direction"))
                }
            },
            resultsDirty: function() {
                this._resultsDirty = !0;
                if (this.$input.hasClass("focus")) {
                    var a = this.$input.val();
                    this.queryLocalData(a), this.queryRemoteData(a)
                }
            },
            executeQueryIfAlreadyFocused: function() {
                this.inputIsFocused() && (this.$input.addClass("focus"), this.$inputHint.addClass("focus"), this.focus())
            },
            focus: function(a) {
                var b = this.$input.val();
                b === this._val && this._wasCompletionsOpen && !this._resultsDirty ? (this.show(), this._lastHint !== "" && (twttr.decider.isAvailable("typeahead_hinting") || this.inBucket) && (this.$inputHint.val(this._lastHint), this.$input.attr("placeholder", ""))) : setTimeout(twttr.bind(this, function() {
                    this.queryLocalData(b), this.typingPauseDetectionTimeoutId = setTimeout(twttr.bind(this, function() {
                        this.queryRemoteData(b)
                    }), this.options.pauseInterval)
                }), 0), this.startStatsTimer()
            },
            blur: function(a) {
                this._lastHint = this.$inputHint.val();
                if (twttr.decider.isAvailable("typeahead_hinting") || this.inBucket) this.$inputHint.val(""), this.$input.attr("placeholder", this._placeholder);
                !this.mouseOverDropDown && !twttr.search.mouseOverMagnifying && setTimeout(twttr.bind(this, function() {
                    this.hide()
                }), this.options.closeDelay), this.pauseStatsTimer()
            },
            inputIsFocused: function() {
                return this.$input.is(":focus") || this.$input[0] == document.activeElement
            },
            resizeHeight: function() {
                var a = $(window).height(),
                    b = Math.ceil(a / 100),
                    c = b in this.heightLimit ? this.heightLimit[b] : b < 2 ? 1 : 6;
                twttr.each(this.datasources, function(a) {
                    a.trigger("newLimit", c)
                })
            },
            autocompleteHint: function(a) {
                if (this._isCompletionsOpen && !a.shiftKey && this.isCursorAtEnd()) {
                    var c = this.$input.css("direction") === "rtl";
                    if (c && a.keyCode === b.constants.keyCodes.rightArrow || !c && a.keyCode === b.constants.keyCodes.leftArrow) return;
                    var d = this.$node.find(".js-selectable.selected[data-hint]:visible").first();
                    if (d.length === 0 && this.$node.find(".js-selectable.selected").length === 1) return;
                    d.length === 0 && (d = this.$node.find(".js-selectable[data-hint]:visible").first()), this.$input.val(d.data("hint")), a.preventDefault()
                }
            },
            isCursorAtEnd: function() {
                var a;
                return document.selection ? (this.$input.focus(), a = document.selection.createRange(), a.moveStart("character", -this.$input[0].value.length), this.$input.val().length - a.text.length === 0) : typeof this.$input[0].selectionStart == "number" ? this.$input.val().length - this.$input[0].selectionStart === 0 : !0
            },
            hide: function() {
                setTimeout(twttr.bind(this, function() {
                    this._isCompletionsOpen && (this.$node.hide(), this._wasCompletionsOpen = this._isCompletionsOpen, this._isCompletionsOpen && this.trigger("hide"), this._isCompletionsOpen = !1)
                }), 0)
            },
            show: function() {
                this.$find(".js-selectable").length > 0 && (this.$node.show(), this._isCompletionsOpen = !0)
            },
            keypress: function(a) {
                a.stopPropagation();
                switch (a.keyCode) {
                case b.constants.keyCodes.enter:
                    if (this.inputIsFocused() && !a.shiftKey && a.type === "keypress" || this.inputIsFocused() && !a.shiftKey && a.type === "keydown" && (a.metaKey || a.ctrlKey)) a.preventDefault(), this.select(a);
                    break;
                case b.constants.keyCodes.escape:
                    this._isCompletionsOpen && a.preventDefault();
                    break;
                case b.constants.keyCodes.rightArrow:
                    if (a.charCode === 39) break;
                case b.constants.keyCodes.leftArrow:
                case b.constants.keyCodes.tab:
                    this.autocompleteHint(a);
                    break;
                case b.constants.keyCodes.upArrow:
                    this._isCompletionsOpen && !a.shiftKey && (this.previous(), a.preventDefault());
                    break;
                case b.constants.keyCodes.downArrow:
                    this._isCompletionsOpen && !a.shiftKey && (this.next(), a.preventDefault())
                }
            },
            keyup: function(a) {
                a.type !== "click" && (a.stopPropagation(), a.keyCode !== b.constants.keyCodes.enter && this._keystrokes++);
                if (a && (a.keyCode === b.constants.keyCodes.tab || a.keyCode === b.constants.keyCodes.shift) && !this._isCompletionsOpen) return;
                val = this.$input.val();
                var c = this;
                if (val !== this._val || this._resultsDirty) this.hide(), setTimeout(twttr.bind(this, function() {
                    this.queryLocalData(val), this.typingPauseDetectionTimeoutId = setTimeout(function() {
                        c.queryRemoteData(val)
                    }, this.options.pauseInterval)
                }), 0), this._resultsDirty = !1
            },
            queryLocalData: function(a) {
                twttr.loggedIn && (twttr.decider.isAvailable("typeahead_local_queries") || this.inBucket) && (this._val = a, twttr.each(this.datasources, function(b) {
                    b.localQueryAndRenderResults(a)
                }))
            },
            queryRemoteData: function(a) {
                var b = this;
                twttr.loggedIn && (twttr.decider.isAvailable("typeahead_remote_queries") || this.inBucket) && twttr.each(b.datasources, function(b) {
                    b.remoteQueryAndRenderResults(a)
                })
            },
            select: function(a) {
                var b = this.$find(".selected"),
                    c = this.$input.val();
                if (c === "" && b.length === 0) return;
                var d = a.metaKey || a.ctrlKey;
                this.$input.val(""), this.$inputHint.val(""), this.hide(), this.$input.blur(), trackClient({
                    section: "top_nav",
                    component: "searchbox",
                    action: "search"
                }, {
                    query: c
                }), this.scribeSelect(a, c, b, d), this._select(a, c, b, d)
            },
            next: function() {
                var a = this.$find(".selected").removeClass("selected"),
                    b = this.$find(".js-selectable:visible"),
                    c = b.index(a),
                    d = c === b.length ? 0 : c + 1;
                d !== b.length && $(b[d]).addClass("selected");
                var e = d === b.length,
                    f = $(b[d]),
                    g = $(b[0]);
                this.hintForNextOrPreviousItem(e, f, g)
            },
            previous: function() {
                var a = this.$find(".selected").removeClass("selected"),
                    b = this.$find(".js-selectable:visible"),
                    c = b.index(a),
                    d = c === -1 ? b.length - 1 : c - 1;
                d !== -1 && $(b[d]).addClass("selected");
                var e = d === -1,
                    f = $(b[d]),
                    g = $(b[0]);
                this.hintForNextOrPreviousItem(e, f, g)
            },
            hintForNextOrPreviousItem: function(a, b, c) {
                var d = this.$input.val(),
                    e = b.data("hint"),
                    f = "";
                e ? f = e : a && (f = c.data("hint")), this.trigger("hint", [f, d])
            }
        });
        a(e)
    })
});
provide("components/TypeaheadDatasource", function(a) {
    using().as(function(b, _) {
        var c = twttr.klass.component("twttr.components.TypeaheadDatasource").methods({
            init: $.noop,
            localQueryAndRenderResults: $.noop,
            remoteQueryAndRenderResults: $.noop,
            inBucket: function() {
                var a = twttr.abdecider.choose("typeahead_271", !0);
                return a !== "control" && (a === "typeahead" || twttr.decider.isAvailable("swift_typeahead"))
            },
            tokenizeName: function(a) {
                return $.trim(a.replace(/[@#]/, "")).toLowerCase().split(/[\s-_]+/)
            },
            tokenizeScreenName: function(a) {
                return $.trim(a).toLowerCase().split(/_/)
            },
            tokenizeText: function(a) {
                return $.trim(a).toLowerCase().split(/[\s-_]+/)
            },
            queryTopicAndAccountRemoteApi: function(a, b, c) {
                twttr.API.User.typeaheadGlobal(a, {
                    count: b,
                    success: function(b) {
                        $(document).trigger("accountResults", [a, c, b.users]), $(document).trigger("topicResults", [a, c, b.topics])
                    }
                })
            },
            updateStorageCache: function() {
                var a = 2592e5;
                twttr.caches.User.set("typeahead_friends", twttr.users.typeahead, a), twttr.caches.User.set("typeahead_people_from_api", twttr.users.typeahead.length - 1 || 0)
            },
            reset: function() {
                twttr.caches.User.reset()
            },
            get: function(a) {
                twttr.caches.User.get(a)
            },
            set: function(a, b, c) {
                var d = 2592e5;
                c = c || d, twttr.caches.User.set(a, b, c)
            },
            update: function(a, b) {
                twttr.caches.User.update(a, b)
            },
            "delete": function(a) {
                twttr.caches.User.set(a, null, -1)
            }
        });
        a(c)
    })
});
provide("components/TypeaheadSearchQueryDatasource", function(a) {
    using("components/TypeaheadDatasource").as(function(b, _) {
        var c = twttr.klass("twttr.components.TypeaheadSearchQueryDatasource", function(a) {
            var b = {
                limit: 6
            };
            this.options = twttr.merge({}, b, a), this.$node = (new twttr.views.TypeaheadSavedSearches).render(), this.$results = this.$find("ul"), this.savedSearches = [], this._version = 10, this._lastQuery = ""
        }).subclassOf(b.components.TypeaheadDatasource).deciderKey("typeahead_saved_searches").methods({
            init: function() {
                var a = this;
                this.$node.hide(), this._version !== twttr.caches.User.get("saved_searches_version") && (twttr.caches.User.set("saved_searches", null, -1), twttr.caches.User.set("saved_searches_version", this._version)), this.cacheSavedSearches(), twttr.API.SavedSearch.bind("create", function(b, c) {
                    b.type === "create" && (($.inArray(c), a.savedSearches) && a.savedSearches.push(c), twttr.caches.User.update("saved_searches", a.savedSearches), a.savedSearches.length === 1 && $(".global-nav .js-search-form").addClass("has-saved-searches"), a.updateOrDirtyResults())
                }), twttr.API.SavedSearch.bind("delete", function(b, c) {
                    b.type === "delete" && (a.savedSearches = a.savedSearches.filter(function(a) {
                        return a.query != c.query
                    }), twttr.caches.User.update("saved_searches", a.savedSearches), a.savedSearches.length === 0 && $(".global-nav .js-search-form").removeClass("has-saved-searches"), a.updateOrDirtyResults())
                }), this.bindLimitBasedOnWindowHeight(), this.bindRemoteApiListener()
            },
            bindRemoteApiListener: function() {
                var a = this;
                (twttr.decider.isAvailable("typeahead_searches") || this.inBucket()) && $(document).bind("topicResults", function(b, c, d, e) {
                    var c = a._lastQuery,
                        f = "",
                        g = [];
                    if (c === "") g = a.savedSearches;
                    else {
                        e.length && twttr.each(e, function(b) {
                            var c = b.topic,
                                d = b.rounded_score;
                            a.isSavedSearch(c) || g.push(a.mapQuerySuggestionsToApiSearchItem(c, d))
                        });
                        if (twttr.decider.isAvailable("typeahead_new_style_saved_searches") || a.inBucket()) g = g.concat(twttr.filter(a.savedSearches, twttr.bind(a, a.matcher(c))));
                        g = g.slice(0, Math.min(4, a.options.limit))
                    }
                    f = g.length > 0 ? g[0].name : "", a.trigger("hint", [f, c]), a.render(g, c);
                    var i = new Date - d;
                    a.trigger("remoteLatency", i)
                })
            },
            bindLimitBasedOnWindowHeight: function() {
                this.bind("newLimit", twttr.bind(this, function(a, b) {
                    this.options.limit = b
                }))
            },
            updateOrDirtyResults: function() {
                this.$node.is(":visible") ? this.localQueryAndRenderResults(this._lastQuery) : this.trigger("resultsDirty")
            },
            cacheSavedSearches: function() {
                var a = this;
                savedSearches = twttr.caches.User.get("saved_searches"), savedSearches ? a.savedSearches = savedSearches : twttr.currentUser.savedSearches(function(b) {
                    a.savedSearches = b.array, $(".global-nav .js-search-form").addClass("has-saved-searches");
                    var c = 36e5;
                    twttr.caches.User.set("saved_searches", a.savedSearches, c), a.trigger("resultsDirty")
                })
            },
            mapQuerySuggestionsToApiSearchItem: function(a, b) {
                return {
                    debug_info: twttr.decider.isAvailable("typeahead_debug_info") ? ' title="score = ' + b + '"' : "",
                    search_results_path: twttr.router.searchResultsPath({
                        query: a
                    }),
                    query: a,
                    name: a,
                    search_query_source: "typeahead_click"
                }
            },
            localQueryAndRenderResults: function(a) {
                if (twttr.decider.isAvailable("typeahead_saved_searches") || this.inBucket()) {
                    var b = new Date;
                    this._lastQuery = a;
                    var c = twttr.filter(this.savedSearches, twttr.bind(this, this.matcher(a)));
                    this.render(c, a);
                    var d = c[0] ? c[0].name : "";
                    this.trigger("hint", [d, a]);
                    var e = new Date - b;
                    this.trigger("localLatency", e)
                }
            },
            remoteQueryAndRenderResults: $.noop,
            matcher: function(a) {
                return function(b) {
                    if (b.name.toLowerCase().indexOf(a.toLowerCase()) === 0) return b
                }
            },
            ranker: function(a) {
                return function(b, c) {
                    return a.length / c.length + c.matched_count - (a.length / b.length + b.matched_count)
                }
            },
            renderSearch: function(a) {
                return (new twttr.views.TypeaheadSearchItem(a)).html()
            },
            render: function(a, b) {
                this.$results.attr("data-search-query", b.toLowerCase());
                var c = twttr.map(a, this.renderSearch);
                if (c.length > 0) {
                    var d = c.join("");
                    this.$results.html(d), this.$node.show(), this.$node.addClass("has-results"), this.trigger("show", b)
                } else this.$results.empty(), this.$node.hide(), this.$node.removeClass("has-results")
            },
            isSavedSearch: function(a) {
                for (var b = 0, c = this.savedSearches.length; b < c; b++) if (this.savedSearches[b].name.toLowerCase() === a) return !0
            }
        });
        a(c)
    })
});
provide("components/TypeaheadAccountsDatasource", function(a) {
    using("components/TypeaheadDatasource").as(function(b, _) {
        twttr.provide("twttr.users", {
            typeahead: {
                adjacencyList: {},
                userHash: {},
                length: 0
            }
        });
        var c = twttr.klass.component("twttr.components.TypeaheadAccountsDatasource", function(a) {
            var b = {
                limit: 6
            };
            this.options = twttr.merge({}, b, a), this.$node = (new twttr.views.TypeaheadAccounts).render(), this.$results = this.$find("ul"), this.weights = {
                PROFILE_VISIT_BOOST: 10,
                UNCACHED_PROFILE_VISIT: 75,
                FOLLOW: 100,
                UNBLOCK: 50,
                SELF: 250
            }, this.IE8_ACCOUNT_LIMIT = 1e3, this.ACCOUNT_LIMIT = 2500, this.addUsersQueue = [], this.blocks = {}, this.userIdsCurrentlyRendered = {}, this._version = 66, this.isFullySupportedBrowser = !($.browser.msie && parseInt($.browser.version, 10) < 8)
        }).subclassOf(b.components.TypeaheadDatasource).deciderKey("typeahead_people").methods({
            init: function() {
                this.$node.hide(), this.isFullySupportedBrowser && (twttr.decider.isAvailable("typeahead_people") && twttr.decider.isAvailable("typeahead_people_local_queries") || this.inBucket()) && (this.clearCacheIfNewVersion(), this.bindRemoteApiListener(), this.bindProfileVisitHandler(), this.bindFollowEventHandler(), this.bindBlockEventHandler(), this.bindUnblockEventHandler(), this.bindLimitBasedOnWindowHeight(), this.getTypeaheadUsers(), this.userIdsCurrentlyRendered = {})
            },
            clearCacheIfNewVersion: function() {
                this._version !== twttr.caches.User.get("typeahead_people_version") && (twttr.caches.User.set("typeahead_friends", null, -1), twttr.caches.User.set("blocks", null, -1), twttr.caches.User.set("typeahead_people_version", this._version), twttr.caches.User.set("typeahead_people_from_api", 0), twttr.caches.User.set("typeahead_people_followed", 0), twttr.caches.User.set("typeahead_profile_visits", 0), twttr.caches.User.set("typeahead_people_blocked", 0), twttr.caches.User.set("typeahead_people_unblocked", 0))
            },
            mapJavaScriptUser: function(a, b) {
                return {
                    id: a.id,
                    screen_name: a.screenName,
                    name: a.name,
                    profile_image_url: a.profileImageUrl,
                    profile_image_url_https: a.profileImageUrlHttps,
                    verified: a.verified,
                    tokens: a.tokens || this.tokenizeJavascriptUserObject(a),
                    weight: b || a.weight || 0
                }
            },
            mapApiUser: function(a, b) {
                return {
                    id: a.id,
                    screen_name: a.screen_name,
                    name: a.name,
                    profile_image_url: a.profile_image_url,
                    profile_image_url_https: a.profile_image_url_https,
                    verified: a.verified,
                    tokens: a.tokens,
                    weight: b || parseFloat(a.rounded_graph_weight) || 0
                }
            },
            bindRemoteApiListener: function() {
                $(document).bind("accountResults", twttr.bind(this, function(a, b, c, d) {
                    if (this.$results.attr("data-query") === b.toLowerCase()) {
                        d = twttr.filter(d, twttr.bind(this, this.filterBlockedUsers)), d = twttr.filter(d, twttr.bind(this, this.filterAlreadyDisplayedUsers)), this.renderRemoteUsers(d, b);
                        var e = new Date - c;
                        this.trigger("remoteLatency", e)
                    }
                }))
            },
            bindProfileVisitHandler: function() {
                var a = this;
                $(document).bind("profileVisit", function(b, c) {
                    if (!c.screenName) return;
                    var d = a.removeFromList(a.mapJavaScriptUser(c));
                    d ? (d.tokens = a.tokenizeJavascriptUserObject(d), a.addToList(a.mapApiUser(d, d.weight + a.weights.PROFILE_VISIT_BOOST))) : (c.tokens = a.tokenizeJavascriptUserObject(c), a.addToList(a.mapJavaScriptUser(c, a.weights.UNCACHED_PROFILE_VISIT)));
                    var e = a.get("typeahead_profile_visits") || 0;
                    a.set("typeahead_profile_visits", e + 1)
                })
            },
            bindFollowEventHandler: function() {
                var a = this;
                twttr.API.User.bind("follow", function(b, c) {
                    a.addToList(a.mapJavaScriptUser(c, a.weights.FOLLOW)), a.set("typeahead_people_followed", a.get("typeahead_people_followed") + 1), a.trigger("resultsDirty")
                })
            },
            bindBlockEventHandler: function() {
                var a = this;
                twttr.API.User.bind("block", function(b, c) {
                    a.blocks[c.id] = c, a.update("blocks", a.blocks), a.removeFromList(a.mapJavaScriptUser(c)), a.set("typeahead_people_blocked", a.get("typeahead_people_blocked") + 1), a.trigger("resultsDirty")
                })
            },
            bindUnblockEventHandler: function() {
                var a = this;
                twttr.API.User.bind("unblock", function(b, c) {
                    delete a.blocks[c.id], a.update("blocks", a.blocks), a.addToList(a.mapJavaScriptUser(c, a.weights.UNBLOCK)), a.set("typeahead_people_unblocked", a.get("typeahead_people_unblocked") + 1), a.trigger("resultsDirty")
                })
            },
            bindLimitBasedOnWindowHeight: function() {
                this.bind("newLimit", twttr.bind(this, function(a, b) {
                    this.options.limit = b
                }))
            },
            localQueryAndRenderResults: function(a) {
                this.userIdsCurrentlyRendered = {}, this.$results.attr("data-query", a.toLowerCase());
                if (this.isFullySupportedBrowser && (twttr.decider.isAvailable("typeahead_people") && twttr.decider.isAvailable("typeahead_people_local_queries") || this.inBucket())) {
                    var b = new Date,
                        c;
                    a.length && twttr.users.typeahead ? (processedQuery = this.processQuery(a), c = this.getPossiblyMatchingAccounts(processedQuery), c = twttr.filter(c, twttr.bind(this, this.matcher(processedQuery, twttr.users.typeahead.length))), c = twttr.filter(c, twttr.bind(this, this.filterBlockedUsers)), c = c.sort(this.ranker), c = c.slice(0, this.options.limit)) : c = [], this.renderLocalUsers(c, a);
                    var d = new Date - b;
                    this.trigger("localLatency", d)
                }
            },
            remoteQueryAndRenderResults: function(a) {
                var b = this;
                if (this.isFullySupportedBrowser && (twttr.decider.isAvailable("typeahead_people") && twttr.decider.isAvailable("typeahead_people_remote_queries") || this.inBucket())) {
                    var c = new Date,
                        d;
                    a.length && this.queryTopicAndAccountRemoteApi(a, this.options.limit + 2, c)
                }
            },
            processQuery: function(a) {
                var b = this.tokenizeText(a);
                return {
                    raw: a,
                    length: a.length,
                    terms: twttr.map(this.tokenizeText(a), function(a) {
                        return {
                            val: a
                        }
                    })
                }
            },
            getUserObjectsFromIds: function(a) {
                var b = [],
                    c = twttr.users.typeahead.userHash;
                for (var d = 0, e = a.length; d < e; d++) $.inArray(c[a[d]], b) === -1 && b.push(c[a[d]]);
                return b
            },
            getPossiblyMatchingAccounts: function(a) {
                var b = {},
                    c = {};
                for (var d = 0, e = a.terms.length; d < e; d++) {
                    var f = a.terms[d],
                        g = f.val[0],
                        i = twttr.users.typeahead.adjacencyList[g];
                    f && i && !b[g] && (b[g] = !0, twttr.map(i, function(a) {
                        c[a] = !0
                    }))
                }
                var j = [];
                return $.each(c, function(a) {
                    j.push(a)
                }), this.getUserObjectsFromIds(j)
            },
            matcher: function(a, b) {
                return function(b) {
                    var c = b.tokens,
                        d = [];
                    for (var e = 0, f = c.length; e < f; e++) for (var g = 0, i = a.terms.length; g < i; g++) c[e].token.indexOf(a.terms[g].val) === 0 && d.push(g);
                    b.matchedCount = $.unique(d).length;
                    if (b.matchedCount === a.terms.length) return b
                }
            },
            ranker: function(a, b) {
                return b.weight - a.weight
            },
            renderLocalUsers: function(a, b) {
                var c = twttr.map(a, twttr.bind(this, this.renderAccount));
                b && a.length && c.push((new twttr.views.TypeaheadAccountsShortcut({
                    query: b
                })).html()), this.$results.html(c.join("")), c.length > 0 ? (this.$node.show(), this.$node.addClass("has-results"), this.trigger("show", b)) : (this.$node.hide(), this.$node.removeClass("has-results"))
            },
            renderRemoteUsers: function(a, b) {
                var c = this.$results.find('li a[data-shortcut="true"]').length,
                    d = this.$results.find("li").length - c;
                a = a.slice(0, Math.max(0, this.options.limit - d));
                var e = twttr.map(a, twttr.bind(this, this.renderAccount));
                b && c === 0 && a.length ? (e.push((new twttr.views.TypeaheadAccountsShortcut({
                    query: b
                })).html()), this.$results.html(e.join(""))) : $(e.join("")).insertBefore(this.$results.find(".js-shortcut")), e.length > 0 && (this.$node.show(), this.$node.addClass("has-results"), this.trigger("show", b))
            },
            tokenizeJavascriptUserObject: function(a) {
                var b = this.tokenizeScreenName(a.screenName).concat(["@" + a.screenName], this.tokenizeName(a.name));
                return twttr.map(b, function(a) {
                    return {
                        token: a
                    }
                })
            },
            mapApiUsers: function(a) {
                var b = this;
                return twttr.map(a, function(a, c) {
                    return b.mapApiUser(a)
                })
            },
            addCurrentUser: function() {
                if (twttr.currentUser) {
                    var a = twttr.currentUser;
                    a.tokens = this.tokenizeJavascriptUserObject(a), this.addToList(this.mapJavaScriptUser(twttr.currentUser, this.weights.SELF))
                }
            },
            getTypeaheadUsers: function() {
                if (twttr.decider.isAvailable("typeahead_local_queries") || this.inBucket()) if (!this.requestedUsers) {
                    var a = this;
                    this.requestedUsers = !0;
                    var b = twttr.caches.User.get("typeahead_people_from_api"),
                        c = +(new Date);
                    twttr.users.typeahead = twttr.caches.User.get("typeahead_friends"), b && b !== 0 && !! twttr.users.typeahead ? (this.trigger("scribeLocalStorageLatency", ["load", +(new Date) - c]), this.processQueuedUsers(), this.trigger("resultsDirty")) : twttr.API.User.typeaheadSocial(twttr.currentUser.id, {
                        count: $.browser.msie && parseInt($.browser.version, 10) === 8 ? a.IE8_ACCOUNT_LIMIT : a.ACCOUNT_LIMIT,
                        success: function(b) {
                            b.length && (b = a.mapApiUsers(b), a.getBlockedUsers(function() {
                                b = a.filterBlockedUsers(b);
                                var c = twttr.is.def(twttr.users.typeahead) ? twttr.users.typeahead : {
                                    adjacencyList: {},
                                    userHash: {},
                                    length: 0
                                };
                                twttr.users.typeahead = a.preprocessUsers(b, c), a.addCurrentUser();
                                var d = +(new Date);
                                a.updateStorageCache(), a.trigger("scribeLocalStorageLatency", ["save", +(new Date) - d]), a.trigger("resultsDirty")
                            }), a.processQueuedUsers())
                        }
                    })
                }
            },
            preprocessUsers: function(a, b) {
                for (var c = 0, d = a.length; c < d; c++) {
                    var e = a[c];
                    for (var f = 0, g = e.tokens.length; f < g; f++) {
                        var i = e.tokens[f].token[0];
                        if (!i) break;
                        b.adjacencyList[i] || (b.adjacencyList[i] = []), $.inArray(e.id, b.adjacencyList[i]) === -1 && b.adjacencyList[i].push(e.id)
                    }
                    b.userHash[a[c].id] = a[c]
                }
                return b.length = b.length + a.length, b
            },
            getBlockedUsers: function(a) {
                var b = this;
                blocks = b.get("blocks"), blocks ? a(blocks) : twttr.currentUser.blocks(function(c) {
                    c = c.array;
                    for (var d = 0, e = c.length; d < e; d++) b.blocks[c[d].id] = c[d];
                    var f = 36e5;
                    b.set("blocks", b.blocks, f), a(b.blocks)
                })
            },
            filterBlockedUsers: function(a) {
                if (!twttr.is.def(this.blocks[a.id])) return a
            },
            filterAlreadyDisplayedUsers: function(a) {
                if (!twttr.is.def(this.userIdsCurrentlyRendered[a.id])) return a
            },
            renderAccount: function(a) {
                this.userIdsCurrentlyRendered[a.id] = a;
                var b = twttr.isSSL() ? a.profile_image_url_https : a.profile_image_url;
                return a.avatar = twttr.helpers.transformProfileImageUrl(b, "mini"), a.verified = a.verified ? ' <i class="verified"></i>' : "", twttr.decider.isAvailable("typeahead_debug_info") ? (isUserLocal = twttr.is.def(a.weight), a.debug_info = twttr.util.supplant(' title="{datasource} user, weight/score: {score}"', {
                    datasource: isUserLocal ? "local" : "remote",
                    score: isUserLocal ? a.weight : a.rounded_score
                })) : a.debug_info = "", (new twttr.views.TypeaheadAccountItem(a)).html()
            },
            processQueuedUsers: function() {
                for (var a = 0, b = this.addUsersQueue.length; a < b; a++) this.addToList(this.addUsersQueue[a])
            },
            addToList: $.noop,
            removeFromList: function(a) {
                return a
            }
        });
        a(c)
    })
});
provide("components/GlobalNavTypeahead", function(a) {
    using("constants", "components/Typeahead", "components/TypeaheadSearchQueryDatasource", "components/TypeaheadAccountsDatasource").as(function(b, c, _) {
        var d = twttr.klass("twttr.components.GlobalNavTypeahead", function(a) {
            var c = {
                input: $("#search-query"),
                inputHint: $("#search-query-hint"),
                datasources: [new b.components.TypeaheadSearchQueryDatasource, new b.components.TypeaheadAccountsDatasource],
                select: function(a, b, c, d) {
                    var e = c.find("a").attr("data-shortcut"),
                        f = c.attr("data-user-screenname"),
                        b = c.find("a").attr("data-search-query") || b,
                        g = c.find("a").attr("data-query-source") === "saved_search_click",
                        i = g ? twttr.search.searchQuerySource.SAVED_SEARCH_CLICK : twttr.search.searchQuerySource.TYPEAHEAD_CLICK;
                    !c.find("a").attr("data-search-query") && !f && (i = twttr.search.searchQuerySource.TYPED_QUERY), twttr.search.setLastQuerySource(i);
                    var j;
                    e ? j = c.find("a")[0].href : f ? j = twttr.router.profilePath({
                        screen_name: f
                    }) : (twttr.search.$searchQuery.val(b), j = twttr.router.searchResultsPath({
                        query: b
                    })), d ? window.open(j) : twttr.router.routeTo(j), a.preventDefault()
                }
            },
                a = twttr.merge({}, c, a);
            !twttr.isMobile && (twttr.decider.isAvailable("typeahead_global_nav") || twttr.abdecider.choose("typeahead_271") === "typeahead") && b.components.Typeahead.call(this, a)
        }).subclassOf(b.components.Typeahead);
        a(d)
    })
});
provide("components/Editor", function(a) {
    using("util", "constants").as(function(b) {
        twttr.klass("twttr.components.Editor", function(a, b) {
            var c = this;
            this.$container = $(a), this.$container.addClass("twttr-editor"), this.options = b || {}, this._defaultContent = this.options.defaultContent || "", this._enableAutoGrow = this.options.enableAutoGrow || !1, this._isIE7() && (this._enableAutoGrow = !1), this._autoGrowMinHeight = this.options.height || 75;
            var d = this.options.width || "100%",
                e = this.options.height || "auto";
            this.$editor = $("<textarea/>").addClass("twitter-anywhere-tweet-box-editor").css({
                width: d,
                height: e
            }).val(this._defaultContent), this.options.condensed && this.$container.addClass("condensed"), this.css = {
                width: $.browser.mozilla ? d - 2 : d,
                height: e,
                "min-height": e
            }, this.$container.append(this.$editor), this._enableAutoGrow && (this.$editor.css("overflow", "hidden"), this.$shadow = this._createShadowForTextArea(this.$editor), this.$shadow.appendTo(this.$editor.parent())), this._registerEvents()
        }).methods(twttr.EventProvider).methods({
            moveCursorToEnd: function() {
                var a = this.$editor[0];
                setTimeout(function() {
                    try {
                        if (a.createTextRange) {
                            var b = a.createTextRange();
                            b.collapse(!0), b.moveStart("character", a.value.length), b.moveEnd("character", a.value.length), b.select()
                        } else a.selectionStart = a.value.length
                    } catch (c) {}
                }, 0)
            },
            content: function() {
                return this.$editor.val().replace(twttr.constants.regexps.dirMark, "")
            },
            setContent: function(a) {
                a = a || "", this.$editor.val(a), this.trigger("didChangeContent", [a])
            },
            height: function(a) {
                this.$editor.css("height", a)
            },
            width: function(a) {
                this.$editor.css("width", a)
            },
            focus: function() {
                this.$editor.focus(), this.moveCursorToEnd()
            },
            blur: function() {
                this.$editor.blur()
            },
            toggle: function() {
                this.$editor.toggle()
            },
            reset: function() {
                this.setContent("")
            },
            _tryAutoGrow: function() {
                var a = this._autoGrowMinHeight,
                    b = 150,
                    c = "xyz",
                    d = this.$editor;
                this._copyCssPropertiesFromTextArea(this.$shadow, d), this.$shadow.text(d.val() + c);
                var e = this.$shadow.height();
                e > a && e <= b ? (d.css("overflow", "hidden"), d.height(e)) : e < a ? (d.css("overflow", "hidden"), d.height(a)) : e > b && d.css("overflow", "auto")
            },
            _isIE7: function() {
                return $.browser.msie && parseInt($.browser.version, 10) === 7
            },
            _copyCssPropertiesFromTextArea: function(a, b) {
                var c = ["font-family", "font-size", "font-weight", "line-height", "padding-bottom", "padding-left", "padding-right", "padding-top", "white-space", "width", "word-wrap"];
                $.each(c, function(c, d) {
                    a.css(d, b.css(d))
                })
            },
            _createShadowForTextArea: function(a) {
                var b = $("<div />").css("display", "none");
                return this._copyCssPropertiesFromTextArea(b, a), b
            },
            _registerEvents: function() {
                var a = this;
                this.$editor.bind("focus blur", function(b) {
                    a.trigger(b.type, Array.prototype.slice.call(arguments, 1))
                }), this.$editor.bind("keypress", function(a) {
                    if (a.ctrlKey) return;
                    a.stopPropagation()
                }), this.$editor.bind("keydown", function(c) {
                    if (c.ctrlKey) return;
                    switch (c.keyCode) {
                    case b.constants.keyCodes.tab:
                        c.preventDefault(), a.trigger("blurFromTab", [c]);
                        break;
                    case b.constants.keyCodes.esc:
                        c.preventDefault(), a.trigger("blurFromEscape");
                        break;
                    default:
                        c.stopPropagation()
                    }
                }), $.browser.mozilla ? this.$editor.bind("input mousedown mouseup", twttr.bind(this, this._keyEvents)) : this.$editor.bind("keydown keyup paste change mousedown mouseup input", twttr.bind(this, this._keyEvents)), this._enableAutoGrow && this.$editor.bind("change cut keyup paste", twttr.bind(this, this._tryAutoGrow))
            },
            _keyEvents: function(a) {
                !$.browser.webkit || a.type != "paste" && a.type != "keydown" ? this._inputCallback(a) : setTimeout(twttr.bind(this, function() {
                    this._inputCallback(a)
                }), 0)
            },
            _inputCallback: function(a) {
                this.trigger("didChangeContent", [this.content(), a])
            }
        }), twttr.klass("twttr.components.RichEditor", function(a, c) {
            function d(a) {
                var b = e.$editor.offset();
                e.$proxy = $(a.contentWindow.document.body), twttr.i18n && twttr.i18n.rtl && (e.$proxy[0].dir = "rtl"), e.$proxy.append("<style>" + e.constructor.css + "</style>"), e._$proxyWrapper = $('<pre class="proxy-wrapper"></pre>').appendTo(e.$proxy), e._applyStyles(), e._queue.flush()
            }
            var e = this;
            this.supr = twttr.components.Editor, this.supr.apply(this, arguments), this._queue = new b.util.WaitQueue, this._$proxyWrapper = {
                length: 0
            }, this.$iframe = $('<iframe allowtransparency="false" src="../../receiver.html" frameborder="0" tabindex="-1" role="presentation" scrolling="no"/>'), this.$iframe.insertBefore(this.$editor), this.$iframe.bind("load", function() {
                d(this)
            }), this.$iframe.addClass("proxy-editor"), this.$container.addClass("rich-editor"), this._tweetBoxHeight = 0, $('<div class="tweet-meta"><div class="tweetbox-media-icon"/></div>').appendTo(this.$container), this.$mediaicon = this.$container.find(".tweetbox-media-icon"), this._foundMedia = !1, this.bind("didChangeContent", twttr.bind(this, this._proxyLinkify))
        }).subclassOf(twttr.components.Editor).statics({
            css: 'body {        margin: 0;        width: 482px;        height: 56px;        color: #222;        overflow-x: hidden;        overflow-y: hidden;      }      .proxy-wrapper {        margin: 0;        padding: 0;        font: 14px/18px "Helvetica Neue", Arial, sans-serif;        white-space: pre-wrap;        word-wrap: break-word;      }      a {        color: #0084b4;        text-decoration: none;      }      a.twitter-timeline-link {        background-color: #bedff8;        -moz-border-radius: 5px;        -webkit-border-radius: 5px;        border-radius: 5px;      }      em {        font-style: normal;        display: inline-block;        width: 2px;      }'
        }).methods({
            _applyStyles: function() {
                this.$editor.css("min-height", this.css.height), this.$proxy.css("width", this.css.width), this.$iframe.css("width", this.css.width)
            },
            _growTweetBox: function() {
                var a = this._$proxyWrapper.height();
                $.browser.webkit && (a += 10), a !== this._tweetBoxHeight && (this.$editor.height(a), this.$iframe.height(a), this.trigger("heightChange")), this._tweetBoxHeight = a
            },
            _replaceAndys: function(a) {
                return a.replace(/&/g, "&")
            },
            _proxyLinkify: function() {
                this._queue.add(twttr.bind(this, function() {
                    var a = b.util.linkify(this._replaceAndys(h(this.content()))) + "<em> </em>";
                    this._$proxyWrapper.html(a), this._growTweetBox(), this._showMediaIcon()
                }))
            },
            _showMediaIcon: function() {
                var a = twttr.txt.extractUrls(this.content()),
                    b;
                for (var c = 0; c < a.length; c++) {
                    var d = a[c];
                    b = twttr.media.matchInstance(d);
                    if (b) {
                        var e = twttr.is.fn(b.icon) ? b.icon() : b.icon;
                        this.$mediaicon.addClass(e), this._foundMedia = !0;
                        return
                    }
                }!b && this._foundMedia && (this.$mediaicon[0].className = "tweetbox-media-icon", this._foundMedia = !1)
            },
            reset: function() {
                this.supr.prototype.reset.apply(this, arguments), this._$proxyWrapper.html(""), this._applyStyles()
            }
        }), a(twttr.components.Editor)
    })
});
provide("TweetBox", function(a) {
    using("_", "util", "constants", "components/TweetboxAutocomplete", "mixins/urlShortener", "mixins/photoBox").as(function(b, _) {
        var c = {
            condensed: !0,
            condensedContent: "",
            closeAfterSuccess: !0,
            defaultContent: !1,
            width: 560,
            height: 56,
            autocomplete: !0,
            autocompleteSuggestionLimit: 10,
            displayError: !0,
            template: {
                show_geo: !0,
                show_title: !0,
                title: _("What’s happening?"),
                button_text: _("Tweet"),
                api_url: window.location.protocol + "//" + twttr.domains.upload
            },
            enableDraft: !1,
            statusAction: "update",
            draggable: !0
        },
            d = 1,
            e = {},
            f = {
                update: "Status",
                reply: "Status",
                dm: "DirectMessage",
                directMessage: "DirectMessage"
            },
            g = /^(?:d|m|dm)\s+[@＠]?([a-zA-Z0-9_]{1,20}) /;
        twttr.klass("twttr.TweetBox", function(a, f) {
            var g = this;
            c.template.title = _("What’s happening?"), c.template.button_text = _("Tweet"), c.template.post_authenticity_token = twttr.API.getConfig().postAuthenticityToken, this.options = twttr.merge({}, c, f || {}, !0), this.places = [], this._explainLinkShortening = twttr.is.def(this.options.explainLinkShortening) ? this.options.explainLinkShortening : !0, this._isButtonEnabled = !1, this._hasWarned = !0, this._hasSuperWarned = !1, this._hasNoWarned = !1;
            var i = {
                defaultContent: this._getDraftTweet() || this.options.condensedContent || this.options.defaultContent,
                width: this.options.width,
                height: this.options.height,
                enableAutoGrow: this.options.enableAutoGrow || !1
            };
            this.id = this.options.id || d++, e[this.id] = this, this.$container = $(a), this.view = (new twttr.views.TweetBox(this.options.template)).render(a, "append");
            var j = twttr.decider.isAvailable("phoenix_tweetbox_talon") && twttr.decider.isAvailable("phoenix_rich_editor") && !$.browser.msie,
                k = j ? "RichEditor" : "Editor";
            this.editor = new twttr.components[k](this.$container.find(".text-area-editor"), i), this.$counter = this.$find(".tweet-counter"), this.$tweetButton = this.$container.find(".tweet-button"), this.$title = this.$container.find("h2"), this.options.autocomplete && (this.autocomplete = new b.components.TweetboxAutocomplete(this)), this._updateDraftTweet = twttr.bind(this, this._updateDraftTweet), !this.options.condensed || !this.options.condensedContent && this.options.defaultContent || i.defaultContent !== (this.options.condensedContent || this.options.defaultContent) ? this.open() : this.editor.blur(), twttr.is.def(this.options.dynamicTitle) && (this._dynamicTitle = this.options.dynamicTitle), this._registerUrlShortenerEvents(), this.registerEvents(), this._initPhotobox(), this._toggleCounterState(null, i.defaultContent || "")
        }).mixin(twttr.mixins.i18nTweetBox, twttr.mixins.urlShortener, twttr.mixins.photoBox).statics({
            focus: function(a) {
                e[a].editor.focus()
            },
            _getDefaultContentForReply: function(a, b, c) {
                var d = !1,
                    e = a ? a.find("a.twitter-atreply") : [],
                    f = "@" + b + " ";
                if (e.length) {
                    d = !0;
                    var g = [];
                    e.each(function(a, d) {
                        var e = $(this).text().replace("@", "");
                        !e.match(new RegExp("^" + b + "$"), "i") && !twttr.is.inArray(e, g) && !e.match(new RegExp("^" + c + "$", "i")) && g.push(e)
                    }), g.unshift(b), f = twttr.map(g, function(a) {
                        return "@" + a + " "
                    }).join("")
                }
                return {
                    defaultContent: f,
                    multiple: d
                }
            }
        }).statics(twttr.EventProvider).methods(twttr.EventProvider).methods({
            $find: function(a) {
                return this.$container.find(a)
            },
            _locked: !1,
            _dynamicTitle: !0,
            lock: function() {
                this._locked = !0
            },
            unlock: function() {
                this._locked = !1
            },
            focus: function() {
                this.editor.focus(), this.editor.moveCursorToEnd()
            },
            _getTextLength: function(a) {
                var c = b.util.displayLength(a);
                return c
            },
            _noPhotosPresent: function() {
                return !this.turkey || this.turkey && !this.turkey.hasItems()
            },
            _toggleButtonState: function(a, b) {
                var c = this._getTextLength(b),
                    d = this.options.defaultContent || "";
                (c > 140 || $.trim(this.getTweetContent()) == $.trim(d)) && this._noPhotosPresent() ? this._isButtonEnabled && (this._isButtonEnabled = !1, this.$tweetButton.addClass("disabled").removeClass("primary-btn")) : this._isButtonEnabled || (this._isButtonEnabled = !0, this.$tweetButton.removeClass("disabled").addClass("primary-btn"))
            },
            _toggleCounterState: function(a, b) {
                var c = this._getTextLength(b);
                this._updateCounter(c), c > 120 && c < 130 ? this._hasWarned || (this._hasWarned = !0, this._hasSuperWarned = !1, this._hasNoWarned = !1, this.$counter.addClass("warn").removeClass("superwarn")) : c >= 130 ? this._hasSuperWarned || (this._hasSuperWarned = !0, this._hasWarned = !1, this._hasNoWarned = !1, this.$counter.addClass("superwarn").removeClass("warn")) : this._hasNoWarned || (this._hasNoWarned = !0, this._hasSuperWarned = !1, this._hasWarned = !1, this.$counter.removeClass("superwarn").removeClass("warn"))
            },
            _updateCounter: function(a) {
                this.$counter.val(140 - a)
            },
            open: function() {
                var a = this;
                if (this._isOpen) return;
                this._isOpen = !0, this.$container.find(".tweet-box").removeClass("condensed");
                var b = this._getDraftTweet();
                b ? this.setTweetContent(b) : twttr.is.string(this.options.defaultContent) && this.setTweetContent(this.options.defaultContent), this.editor.bind("didChangeContent", this._updateDraftTweet), this.trigger("open");
                var c = {};
                twttr.audit.currentPage() == "profile" && (c.profile_id = twttr.profileUser.id);
                var d = a.options.statusAction === "directMessage" || a.editor.content().match(g);
                d || (twttr.profileUser && twttr.profileUser.verified && twttr.app.currentPageName() == "profile" && twttr.abdecider.track("replies_stripped_on_verified_profiles_222", "compose_tweet"), trackClient({
                    component: "tweetbox",
                    action: "compose_tweet"
                }, c))
            },
            close: function() {
                if (!this._isOpen) return;
                this.options.condensed && this.$container.find(".tweet-box").addClass("condensed"), this.editor.unbind("didChangeContent", this._updateDraftTweet), this.turkey && this.turkey.reset(), this.trigger("close"), this._isOpen = !1
            },
            disable: function() {
                this.close(), this.editor.$editor.val(""), this.editor.$editor.bind("keypress", function(a) {
                    a.preventDefault()
                })
            },
            getTweetContent: function() {
                return this.editor.content()
            },
            setTweetContent: function(a) {
                this._setDraftTweet(a), this.editor.setContent(a)
            },
            resetTweetContent: function() {
                this.editor.reset(), this._setDraftTweet(null), this.$container.find("textarea").val(this.options.condensedContent)
            },
            _tweet: function() {
                this.trigger("readyToTweet"), this.tweet()
            },
            tweet: function() {
                var a = this._shouldTweet();
                a.shouldTweet && (this.setTweetBoxToBusyState(), this._setDraftTweet(null), this.trigger("sendingTweet", {
                    action: this.options.statusAction
                }), this.makeRequest.apply(this, a.args)), a.msg && (this.options.displayError && twttr.showError(a.msg), this.trigger("error", [a.msg])), a.redirectToProfile && twttr.router.routeTo(twttr.router.profilePath({
                    screen_name: a.redirectToProfile
                }))
            },
            _getDraftTweet: function() {
                return this.options.enableDraft ? twttr.app.caches.draftTweets.get(this.options.enableDraft === !0 ? window.location.href : this.options.enableDraft) : null
            },
            _setDraftTweet: function(a) {
                if (this.options.enableDraft) {
                    var b = this.options.enableDraft === !0 ? window.location.href : this.options.enableDraft;
                    a ? twttr.app.caches.draftTweets.set(b, a, 864e5) : twttr.app.caches.draftTweets.remove(b)
                }
            },
            _updateDraftTweet: function() {
                this._setDraftTweet(this.getTweetContent())
            },
            _shouldTweet: function() {
                var a = [],
                    c = this.options.statusAction,
                    d = f[c],
                    e = $.trim(this.editor.content());
                if ((this.options.condensedContent && e == $.trim(this.options.condensedContent) || this.options.defaultContent && e == $.trim(this.options.defaultContent)) && this._noPhotosPresent()) return {
                    shouldTweet: !1
                };
                if (this._sendingStatus || this._locked) return {
                    shouldTweet: !1
                };
                var g = this.turkey && this.turkey.hasItems();
                if (c === "update" && this.editor.content().match(b.constants.regexps.usernameWithSpace) && !g) {
                    var i = RegExp.$1;
                    return this.$container.find(".tweet-spinner").show(), this.$container.find(".tweet-counter").hide(), {
                        shouldTweet: !1,
                        redirectToProfile: i
                    }
                }
                if (this._getTextLength(e) > 140) return {
                    shouldTweet: !1,
                    msg: (new twttr.views.TooLongErrorMessage({
                        is_dm: c === "directMessage"
                    })).html()
                };
                if (this._getTextLength(e) === 0) return {
                    shouldTweet: !1
                };
                if (c == "directMessage") if (!twttr.is.def(this.options.data.getUser()) || twttr.is.blank(this.options.data.getUser())) return {
                    shouldTweet: !1,
                    msg: _("Whoops! You forgot to type in a username.")
                };
                var j = this,
                    k = this._getRequestOptions();
                this.options.inReplyToStatusId && twttr.merge(k, {
                    in_reply_to_status_id: this.options.inReplyToStatusId
                });
                if (twttr.geo.location) {
                    var l = twttr.geo.location.isLocationOn() && twttr.geo.location.cityId();
                    l && (k.place_id = l)
                }
                k.timeout = function(a) {
                    a.retry()
                };
                switch (c) {
                case "update":
                    a = [this.getTweetContent(), k];
                    break;
                case "reply":
                    k.impression_id = this.options.data.impressionId, a = [this.options.data.tweetId, this.getTweetContent(), k];
                    break;
                case "directMessage":
                    c = "send", a = [this.options.data.getUser(), this.getTweetContent(), k]
                }
                return {
                    shouldTweet: !0,
                    args: [d, c, a]
                }
            },
            setTweetBoxToBusyState: function() {
                this.$container.find(".tweetbox-counter-tipsy").hide(), this.$container.find(".tweet-spinner").show(), this.$container.find(".tweet-counter").hide(), this.$tweetButton.addClass("disabled")
            },
            unSetTweetBoxToBusyState: function() {
                this.$container.find(".tweet-spinner").hide(), this.$container.find(".tweet-counter").show(), this.$container.find(".tweetbox-counter-tipsy").show(), this.$tweetButton.removeClass("disabled")
            },
            _getRequestOptions: function() {
                var a = this,
                    b = a.options.statusAction === "directMessage" || a.editor.content().match(g);
                return {
                    complete: function() {
                        a.unSetTweetBoxToBusyState(), a._sendingStatus = !1
                    },
                    success: function(c, d) {
                        var e = "";
                        a.options.closeAfterSuccess && a.close(), b || (a.trigger("tweetSuccess", [c, a.options.statusAction]), a.constructor.trigger("tweetSuccess", [c, a.options.statusAction]), e = a.options.inReplyToStatusId || c.text.indexOf("@") == 0 ? "send_reply" : "send_tweet"), a.editor.reset(), a.places = [], delete a.options.inReplyToStatusId;
                        var f = {
                            item_ids: [c.id]
                        };
                        twttr.profileUser && (f.profile_id = twttr.profileUser.id);
                        var g = a.options.id || "unspecified-tweetbox";
                        g.indexOf("send-message-box") != -1 && (g = "send-message-box"), b ? (a.trigger("dmSuccess", [c, a.options.statusAction]), trackClient({
                            component: "direct_message",
                            action: "send_dm"
                        }, f)) : trackClient({
                            component: g,
                            action: e
                        }, f), a.options.condensed && a.$container.find(".tweet-box").addClass("condensed"), a.resetTweetContent()
                    },
                    error: function(c) {
                        a.$tweetButton.removeClass("disabled");
                        if (twttr.isT1 && b) var d = twttr.errors.errorCodeFromResponse(c);
                        else var d = twttr.helpers.showErrorFromResponse(c, b ? "dm" : "tweet");
                        a.trigger(b ? "dmError" : "tweetError", [d])
                    }
                }
            },
            makeRequest: function(a, b, c) {
                this._sendingStatus = !0, twttr.API[a][b].apply(twttr.API[a], c)
            },
            destroy: function() {
                this.trigger("destroy")
            },
            collapseOnBlur: function() {
                if (this.preventBlur) return;
                var a = this.editor.content(),
                    b = a === this.options.defaultContent || a === "";
                b && this._noPhotosPresent() && (this.close(), this.editor.setContent(this.options.condensedContent || this.options.defaultContent || ""), $(document).unbind("click.tweetbox"))
            },
            registerEvents: function() {
                var a = this;
                this.$tweetButton.addClass("disabled"), this.editor.bind("focus", function(b) {
                    setTimeout(function() {
                        a.open(), twttr.geo.location && twttr.geo.location.onFocusTweetBox(a.$container)
                    }, 0)
                }), twttr.isT1 && (this.editor.bind("blur", function() {
                    a.collapseOnBlur()
                }), this.editor.bind("focus", function() {
                    $(document).unbind("click.tweetbox"), $(document).bind("click.tweetbox", function(b) {
                        $(b.target).is(".tweet-box, .tweet-box *") || a.collapseOnBlur()
                    })
                }), this.$container.bind("mouseenter", function() {
                    a.preventBlur = !0
                }), this.$container.bind("mouseleave", function() {
                    a.preventBlur = !1
                })), this.editor.bind("didChangeContent", twttr.bind(this, this._toggleButtonState)), this.editor.bind("didChangeContent", twttr.bind(this, this._toggleCounterState)), this.registerTextDirEvents(), this.editor.bind("blurFromTab", function(b, c) {
                    twttr.components.Autocomplete._isCompletionsOpen || a.$container.find(".tweet-button").focus()
                }), this.editor.bind("blurFromEscape", function(b) {
                    twttr.components.Autocomplete._isCompletionsOpen || (a.preventBlur = !1, a.editor.blur(), a.trigger("blurFromEscape"))
                }), !this.options.condensedContent && this.options.defaultContent.length > 0 && (this.editor.trigger("didChangeContent", [this.options.defaultContent]), setTimeout(twttr.bind(this, function() {
                    this.open(), this.focus(), this.editor.$editor.trigger(jQuery.Event("keyup"))
                }), 0)), this.$tweetButton.bind("keypress", twttr.bind(this, function(a) {
                    a.stopPropagation();
                    if (a.keyCode === b.constants.keyCodes.enter || a.charCode === b.constants.charCodes.space) return this._tweet(), a.preventDefault(), this.blur(), !1
                })).bind("click", function(b) {
                    a._tweet(), this.blur(), b.preventDefault()
                });
                var d, e, f, i;
                if (this.options.statusAction == "update" || this.options.statusAction == "reply") this.bind("titleChanged", function(b, c, d) {
                    a.$tweetButton[0].childNodes[0].nodeValue = d == "dm" ? _("Send Message") : _("Tweet")
                }), this._dynamicTitle && this.editor.bind("didChangeContent", twttr.bind(this, function(a, j) {
                    if (j.match(g)) {
                        if (!d) {
                            d = !0, e = f = i = !1;
                            var k = RegExp.$1,
                                l = _("Message {{username}}", {
                                    username: k
                                });
                            this.$title.html(l), this.trigger("titleChanged", [l, "dm"])
                        }
                    } else if (this.options.statusAction == "reply" && j.match(new RegExp("[@＠]" + this.options.data.screenName + " "))) {
                        if (!e) {
                            e = !0, d = f = i = !1;
                            var l = _("Reply to @{{username}}", {
                                username: this.options.data.screenName
                            });
                            this.$title.html(l), this.trigger("titleChanged", [l, "reply"])
                        }
                    } else if (j.match(b.constants.regexps.usernameWithAt)) {
                        if (!f) {
                            f = !0, d = e = i = !1;
                            var l = _("Tweet to {{username}}", {
                                username: RegExp.$1
                            });
                            this.$title.html(l), this.trigger("titleChanged", [l, "mention"])
                        }
                    } else i || (i = !0, d = e = f = !1, this.$title.html(c.template.title), this.trigger("titleChanged", [c.template.title, "update"]))
                }));
                twttr.geo.location && twttr.geo.location.onRegisterTweetBox(this.$container, this.options.whenGeoPopupOpens), this.trigger("ready")
            }
        }), a(twttr.TweetBox)
    })
});
provide("components/TweetboxAutocomplete", function(a) {
    using().as(function() {
        twttr.klass("twttr.components.TweetboxAutocomplete").subclassOf(twttr.components.Base).initializer(function(a) {
            var b = this;
            this.tweetbox = a, this.places = a.places, this.autocomplete = new twttr.components.Autocomplete({
                input: a.editor.$editor,
                textarea: !0,
                limit: a.options.autocompleteSuggestionLimit
            }), this.autocomplete.bind("select", function(a) {
                b.tweetbox.editor.trigger("didChangeContent", [b.tweetbox.editor.content()])
            }), this.tweetbox.editor.bind("heightChange", twttr.bind(this.autocomplete, this.autocomplete.position)), a.bind("open", function(a) {
                twttr.components.Autocomplete.getAutocompletedUsers(), b.autocomplete.position()
            }), a.$container.delegate(".geo-insert-place-button", "click", twttr.bind(this, function(a) {
                return this.autocomplete.insertPlace(), !1
            }))
        }), a(twttr.components.TweetboxAutocomplete)
    })
});
provide("shortcuts_t1", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.shortcuts = {
            delegateToApp: function() {
                $(document).bind("keypress", function(a) {
                    return twttr.app.currentPage().send("onkeypress", [a])
                }), $(document).bind("keyup", function(a) {
                    return twttr.app.currentPage().send("onkeyup", [a])
                }), $(document).bind("keydown", function(a) {
                    return twttr.app.currentPage().send("onkeydown", [a])
                })
            },
            focusSearchBox: function(a) {
                a.preventDefault(), $("#search-query").focus(), scribble("search-box-focus", {
                    input: "keyboard"
                })
            },
            initCombos: function() {
                twttr.shortcuts.currentKey = null;
                var a = [],
                    b = {
                        65: "a",
                        67: "c",
                        68: "d",
                        71: "g",
                        76: "l",
                        85: "u",
                        82: "r",
                        83: "s",
                        80: "p",
                        72: "h",
                        70: "f",
                        86: "v",
                        88: "x",
                        77: "m"
                    };
                $(document).keydown(function(a) {
                    if (twttr.helpers.isModifier(a)) return;
                    twttr.shortcuts.verify(a) && $(a.target).is(":not(input)") ? a.preventDefault() : twttr.shortcuts.currentKey = null
                }), twttr.augmentString("twttr.shortcuts.combo", function(b, c) {
                    a.push({
                        keys: b,
                        fn: c
                    })
                }), twttr.augmentString("twttr.shortcuts.verify", function(c) {
                    var d = c.keyCode,
                        e = !1;
                    for (var f = 0; f < a.length; f++) {
                        var g = a[f];
                        if (b[d] === g.keys[0]) {
                            e = !0, twttr.shortcuts.currentKey = b[d];
                            break
                        }
                        if (b[d] === g.keys[1] && twttr.shortcuts.currentKey === g.keys[0]) {
                            e = !0, twttr.shortcuts.currentKey = null, g.fn();
                            break
                        }
                    }
                    return e
                }), twttr.shortcuts.combo(["g", "u"], function() {
                    scribble("open-goto-user-dialog", {
                        input: "keyboard"
                    }), twttr.components.Autocomplete.getAutocompletedUsers(), twttr.dialogs.goToUser().open()
                });
                if (twttr.loggedIn) {
                    function c() {
                        scribble("switch-stream", {
                            input: "keyboard",
                            toStream: "connect"
                        }), twttr.router.routeTo(twttr.router.connectPath())
                    }
                    function d() {
                        scribble("switch-stream", {
                            input: "keyboard",
                            toStream: "activity"
                        }), twttr.router.routeTo(twttr.router.networkActivityPath())
                    }
                    function e() {
                        scribble("switch-stream", {
                            input: "keyboard",
                            toStream: "mentions"
                        }), twttr.router.routeTo(twttr.router.mentionsPath())
                    }
                    twttr.decider.isActivityEnabled() ? (twttr.shortcuts.combo(["g", "a"], d), twttr.shortcuts.combo(["g", "c"], c), twttr.shortcuts.combo(["g", "r"], e)) : twttr.shortcuts.combo(["g", "r"], e), twttr.shortcuts.combo(["g", "d"], function() {
                        scribble("switch-page", {
                            input: "keyboard",
                            toPage: "discover"
                        }), twttr.router.routeTo(twttr.router.discoverPath())
                    }), twttr.shortcuts.combo(["g", "l"], function() {
                        scribble("switch-stream", {
                            input: "keyboard",
                            toPage: "lists"
                        }), twttr.router.routeTo(twttr.router.listsPath())
                    }), twttr.shortcuts.combo(["g", "p"], function() {
                        scribble("switch-page", {
                            input: "keyboard",
                            toPage: "profile"
                        }), twttr.router.routeTo(twttr.router.profilePath({
                            screen_name: twttr.currentUser.screenName
                        }))
                    }), twttr.shortcuts.combo(["g", "m"], function() {
                        scribble("switch-page", {
                            input: "keyboard",
                            toPage: "messages"
                        }), twttr.dialogs.directMessage({
                            origin: "message-dialog-hotkey"
                        }).open().switchToConversationListView()
                    }), twttr.shortcuts.combo(["g", "h"], function() {
                        scribble("switch-stream", {
                            input: "keyboard",
                            toStream: "home"
                        }), twttr.router.routeTo(twttr.router.homePath())
                    }), twttr.shortcuts.combo(["g", "f"], function() {
                        scribble("switch-stream", {
                            input: "keyboard",
                            toStream: "favorites"
                        }), twttr.router.routeTo(twttr.router.favoritesPath())
                    }), twttr.shortcuts.combo(["g", "s"], function() {
                        scribble("switch-page", {
                            input: "keyboard",
                            toPage: "settings"
                        }), twttr.router.routeTo(twttr.router.settingsPath())
                    }), twttr.decider.isAvailable("phoenix_facets") && (twttr.shortcuts.combo(["s", "p"], function() {
                        scribble("open-search-facets-dialog", {
                            input: "keyboard",
                            facetsType: "photos"
                        }), twttr.dialogs.searchFacets("photos").open()
                    }), twttr.shortcuts.combo(["s", "v"], function() {
                        scribble("open-search-photos-dialog", {
                            input: "keyboard",
                            facetsType: "videos"
                        }), twttr.dialogs.searchFacets("videos").open()
                    })), twttr.shortcuts.combo(["g", "x"], function() {
                        twttr.decider.isAvailable("muteUsers") && (twttr.components.Autocomplete.getAutocompletedUsers(), (new twttr.widget.MuteDialog).open())
                    })
                }
            },
            initSecrets: function() {
                twttr.loggedIn && (twttr.provide("twttr.secrets"), twttr.secrets.secretSauce = function(a, b) {
                    $(document).bind("keydown", b.split("->"), function(b) {
                        twttr.decider.isAvailable(a) && (twttr.secrets[a] = !twttr.secrets[a])
                    })
                }, twttr.secrets.secretSauce("hideMentions", "x->o"), twttr.secrets.secretSauce("allMedia", "x->i"))
            },
            openDialogs: function(a) {
                if (!twttr.loggedIn || twttr.shortcuts.currentKey) return;
                if (twttr.helpers.isModifier(a) || $(a.target).is("input")) return;
                a.keyCode === 77 ? (twttr.dialogs.directMessage({
                    origin: "message-dialog-hotkey"
                }).open().switchToNewMessageView(), scribble("dialog-direct-message", {
                    input: "keyboard"
                }), a.preventDefault()) : a.keyCode === 78 && ((new twttr.widget.TweetDialog({
                    draggable: !0,
                    template: {
                        title: _("What’s happening?")
                    },
                    origin: "new-tweet-hotkey"
                })).open().focus(), scribble("dialog-new-tweet", {
                    input: "keyboard"
                }), a.preventDefault())
            },
            closeDialogs: function(a) {
                a.keyCode === b.constants.keyCodes.escape && twttr.widget.Dialog.currentModal && twttr.widget.Dialog.currentModal.options.closable && (twttr.widget.Dialog.close(), a.stopPropagation(), a.preventDefault())
            },
            openKeyboardDialog: function(a) {
                a.which === b.constants.charCodes.questionMark && (a.preventDefault(), twttr.dialogs.keyboardShortcuts().toggle(), scribble("shortcut-dialog", {
                    input: "keyboard"
                }))
            }
        }, twttr.app.waitForSignal("init", function() {
            $(document).bind("keydown", twttr.shortcuts.openDialogs), $(document).bind("keydown", twttr.shortcuts.closeDialogs), $(document).bind("keypress", "/", twttr.shortcuts.focusSearchBox), $(document).bind("keypress", twttr.shortcuts.openKeyboardDialog), twttr.shortcuts.delegateToApp(), twttr.shortcuts.initCombos(), twttr.shortcuts.initSecrets(), $("a.js-keyboard-shortcut-trigger").live("click", function(a) {
                a.preventDefault(), twttr.dialogs.keyboardShortcuts().open()
            })
        }), a(twttr.shortcuts)
    })
});
provide("stork", function(a) {
    using("util").as(function(b) {
        function c(a) {
            return function(b) {
                if (twttr.stork.isEnabled()) return a("stork." + b)
            }
        }
        twttr.provide("twttr.stork", twttr.merge({
            init: function() {
                twttr.isT1 && twttr.decider.isAvailable("stork_guidance") && (this.EXPIRE_TIME = 12096e5, twttr.caches.User.set("stork.enabled", !0, this.EXPIRE_TIME), $.cookie("help_pips", "1", {
                    path: "/"
                }), $.each(twttr.stork.STORKS, function(a, b) {
                    twttr.caches.User.set("stork." + b.counter, 0, twttr.stork.EXPIRE_TIME)
                }))
            },
            STORKS: [{
                id: "expand_photo",
                counter: "expand_tweet",
                icon: "stork-help",
                matcher: function(a) {
                    return a.find(".js-sm-icon.sm-image").length > 0
                },
                promptHtml: _("There’s a photo in this Tweet. Check it out."),
                explainHtml: _("<p>You’ll also find music, videos, and replies inside Tweets, so keep expanding them.</p>"),
                promptHighlight: ".original-tweet .js-view-details",
                explainHighlight: "remove",
                explainOn: "expanded.tweet",
                dismissOn: "collapsed.tweet"
            }, {
                id: "expand_video",
                counter: "expand_tweet",
                icon: "stork-help",
                matcher: function(a) {
                    return a.find(".js-sm-icon.sm-video").length > 0
                },
                promptHtml: _("There’s a video in this Tweet. Check it out."),
                explainHtml: _("You’ll also find photos, music, and replies inside Tweets, so keep expanding them."),
                promptHighlight: ".original-tweet .js-view-details",
                explainHighlight: "remove",
                explainOn: "expanded.tweet",
                dismissOn: "collapsed.tweet"
            }, {
                id: "retweet_profile",
                counter: "retweet_profile",
                icon: "stork-help",
                matcher: function(a) {
                    return a.find("[data-retweet-id]").length > 0
                },
                explainHtml: _("<p>A <strong>retweet</strong> is a Tweet that was shared by someone you’re following.</p> <p>The author of that Tweet may be someone you don’t follow, so it’s a great way to check out somebody new.</p>"),
                explainHighlight: ".stream-item-footer .context .js-retweet-text",
                explainOn: "expanded.tweet",
                dismissOn: "profile_popup.tweet collapsed.tweet"
            }, {
                id: "hashtag",
                counter: "hashtag",
                icon: "stork-help",
                matcher: function(a) {
                    return a.find(".original-tweet .js-tweet-text .twitter-hashtag").length > 0
                },
                explainHtml: _("<p>The # symbol makes this word a <strong>hashtag</strong>. People add hashtags to their Tweets to give them topics.</p> <p>Click on it to find other Tweets with the same hashtag.</p>"),
                explainHighlight: ".original-tweet .js-tweet-text .twitter-hashtag",
                explainOn: "expanded.tweet",
                dismissOn: {
                    selector: ".js-tweet-text .twitter-hashtag",
                    event: "click"
                }
            }, {
                id: "mention",
                counter: "mention",
                icon: "stork-help",
                matcher: function(a) {
                    return a.find(".original-tweet .js-tweet-text .twitter-atreply").length > 0
                },
                explainHtml: _("<p>The @ symbol is used to <strong>mention</strong> another person by username. Mentions call attention to someone and can start a conversation.</p> <p>Click on it to see that user’s profile.</p>"),
                explainHighlight: ".original-tweet .js-tweet-text .twitter-atreply",
                explainOn: "expanded.tweet",
                dismissOn: {
                    selector: ".js-tweet-text .twitter-atreply",
                    event: "click"
                }
            }],
            getValue: c(function(a) {
                return twttr.caches.User.get(a) || 0
            }),
            incrValue: c(function(a) {
                var b = twttr.caches.User.get(a) || 0;
                twttr.caches.User.set(a, b + 1, twttr.stork.EXPIRE_TIME)
            }),
            isEnabled: function() {
                return twttr.isT1 && twttr.caches.User.get("stork.enabled")
            },
            storkifyTweets: function(a) {
                if (!this.isEnabled()) return;
                var b = [];
                $.each(twttr.stork.STORKS, function(a, c) {
                    twttr.stork.getValue(c.counter) == 0 && b.push(c)
                });
                var c = a.find(".js-stream-item").slice(0, 10),
                    d = !! c.find(".js-pip").length;
                if (d) return;
                c.each(function(a, c) {
                    var d = $(c),
                        e = !1;
                    if (d.attr("data-promoted") || d.find("[data-promoted]").length > 0) return;
                    $.each(b, function(a, b) {
                        if (b.matcher(d)) {
                            var c = new twttr.components.StorkPip(d, b);
                            return e = !0, !1
                        }
                    });
                    if (e) return !1
                })
            }
        }, twttr.EventProvider)), a(twttr.stork)
    })
});
provide("streams/ActivityStream", function(a) {
    using().as(function(b) {
        twttr.stream("twttr.streams.ActivityStream", function(a, b) {
            twttr.streams.Stream.apply(this, arguments), this.page = 0, this.scribbler = a.scribbler || twttr.Scribbler.clientEvent, this.registerTweetActionEvents(), this.registerUserActionEvents(), this.updateI18nDisplay(), this.initComponentEvents()
        }).subclassOf(twttr.streams.Stream).mixin(twttr.mixins.componentEvents, twttr.mixins.SinceMaxPagination, twttr.mixins.PollingStream, twttr.mixins.tweetActionable, twttr.mixins.i18nTweet, twttr.mixins.userActionable, twttr.mixins.activityStreamEvents, twttr.mixins.streamablePageWithInlineMedia).deciderKey(function() {
            return twttr.decider.isActivityEnabled()
        }).pollingDeciderKey(function() {
            return twttr.decider.isActivityEnabled()
        }).methods({
            PAGE_SIZE: 20,
            timeouts: {
                ACTIVE: 15e3,
                INACTIVE: 9e4
            },
            itemViewClass: "ActivityItem",
            streamItemType: "activity",
            additionalStreamItemClass: function(a) {
                return "js-activity js-activity-" + a.event
            },
            _idForItem: function(a, b) {
                return b === "first" ? a.maxPosition : a.minPosition
            },
            _pollShouldFetch: function() {
                var a = $(".stream-container").offset().top,
                    b = $(window).scrollTop();
                return b <= a
            },
            streamItemId: function(a) {
                return [a.minPosition, a.maxPosition, a.event, a.timestamp].join("_")
            },
            update: function() {},
            beforeSwitchingAway: function() {
                this.stopPeriodicFetcher()
            },
            afterFirstSwitchingTo: function(a) {
                var b = this;
                this.startPeriodicFetcher(), this._loadedStreamOnce = !0, this.isLoadingMore(), this.fetcher(!0, function(c, d) {
                    c.render(), c.doneLoadingMore(), d !== twttr.streams.SUCCESS ? (b._scribeResults("error", [], {
                        status_code: 502
                    }), b._showError(d)) : b.fetchUntilScreenIsFull(), a ? a() : $.noop
                }), twttr.isT1 && this.addInlineMediaIcons(this.$node)
            },
            afterSwitchingToAgain: function(a) {
                this.fetcher(twttr.bind(this, function(b) {
                    var c = this.newItemsCount;
                    this.newItemsCount > 0 && this.showNewItems(this.newItemsCount), this.restartFetcher(), a ? a() : $.noop
                }))
            },
            showNewItems: function(a, b) {
                this._showNewItems()
            },
            _showNewItems: function(a) {
                var b = this.$streamItems();
                this.beforeShowNewItems(), this.newItemsCount > this.NEW_ITEMS_COUNT_MAX && (b.empty(), this.items = this.items.slice(0, this.NEW_ITEMS_COUNT_CUTOFF), this.newItemsCount = this.NEW_ITEMS_COUNT_CUTOFF);
                var c = this.items.slice(0, this.newItemsCount),
                    d = this._renderItems(c);
                !a && this.newItemsCount > 0 && this.onGotNewItems(c), a && this.onGotInitialResults(this.items);
                var e = d.children();
                e.hide(), b.prepend(d), e.fadeIn(), this.newItemsCount = 0, this.onShowNewItems(d), this.trigger("newItemsCountChanged", [0])
            },
            onShowNewItems: function(a) {
                twttr.isT1 && this.addInlineMediaIcons(a), twttr.streams.Stream.prototype.onShowNewItems.apply(this, arguments), this.updateI18nDisplay(), this.trigger("onShowNewItems", a)
            },
            onShowOldItems: function(a) {
                twttr.isT1 && this.addInlineMediaIcons(a), twttr.streams.Stream.prototype.onShowOldItems.apply(this, arguments), this.updateI18nDisplay(), this.trigger("onShowOldItems", a)
            },
            unshift: function(a) {
                twttr.is.array(a) || (a = Array.prototype.slice.call(arguments));
                for (var b = 0, c = a.length; b < c; ++b) a[b].sync("for_stream", this.constructor.activityType);
                twttr.streams.Stream.prototype.unshift.call(this, a)
            },
            push: function(a) {
                twttr.is.array(a) || (a = Array.prototype.slice.call(arguments));
                for (var b = 0, c = a.length; b < c; ++b) a[b].sync("for_stream", this.constructor.activityType);
                twttr.streams.Stream.prototype.push.call(this, a)
            },
            _getStreamErrorComponent: function(a) {
                return a === twttr.streams.PROTECTED ? new twttr.components.ProtectedUser({
                    screen_name: this.params.screenName
                }) : twttr.streams.Stream.prototype._getStreamErrorComponent.apply(this, arguments)
            },
            _scribeResults: function(a, b, c) {
                var d = [],
                    e = [];
                twttr.each(b, function(a) {
                    var b = [a.minPosition, a.maxPosition, a.event, a.timestamp].join("_");
                    e.push(b), d.push(a.position || a.minPosition)
                });
                if (a == "error" || a == "initial" && !d.length) {
                    var f = {
                        item_count: 0,
                        event_value: 0,
                        cursor_or_page: this._sinceId,
                        referring_event: a
                    };
                    a == "error" && c && c.status_code && (f.status_code = c.status_code), this.scribbler.scribe({
                        component: "stream",
                        action: a == "error" ? "error" : "no_results"
                    }, f)
                } else a != "initial" && this.scribbler.scribe({
                    component: "stream",
                    action: a
                }, {
                    item_count: d.length,
                    cursor_or_page: this._sinceId
                });
                d.length && this.scribbler.scribe({
                    component: "stream",
                    action: "results"
                }, {
                    item_ids: d,
                    item_names: e,
                    item_count: d.length,
                    event_value: d.length,
                    cursor_or_page: this._sinceId,
                    referring_event: a
                })
            },
            showActivitySupplements: function(a) {
                var b = a.closest(".stream-item");
                b.find(".hidden-supplement").removeClass("hidden-supplement").addClass("hidden-supplement-expanded"), b.find(".sub-stream-item-hidden").removeClass("sub-stream-item-hidden").addClass("sub-stream-item-showing"), b.find(".view-all-supplements").removeClass("show").addClass("hide")
            },
            hideActivitySupplements: function(a) {
                var b = a.closest(".stream-item");
                b.find(".hidden-supplement-expanded").removeClass("hidden-supplement-expanded").addClass("hidden-supplement"), b.find(".sub-stream-item-showing").removeClass("sub-stream-item-showing").addClass("sub-stream-item-hidden"), b.find(".view-all-supplements").removeClass("hide").addClass("show")
            },
            oldShowActivitySupplements: function(a) {
                var b = a.closest(".stream-item"),
                    c = b.find(".sub-stream-item"),
                    d = c.filter(".sub-stream-item-hidden"),
                    e = b.find(".stream-item-activity"),
                    f = c.length,
                    g = d.length;
                a.removeClass("show").addClass("hide"), b.addClass("parent");
                var i;
                for (var j = f - g; j < f; ++j) i = b.clone(), i.find(".view-all-supplements").remove(), i.addClass("expanded"), i.find(".activity-supplement > div").each(function(a, b) {
                    var c = $(b);
                    a != j ? c.remove() : c.removeClass("sub-stream-item-hidden")
                }), b.after(i)
            },
            oldHideActivitySupplements: function(a) {
                var b = a.closest(".stream-item"),
                    c = b.find(".stream-item-activity");
                b.removeClass("parent"), b.nextUntil(".stream-item:not('.expanded')").remove(), a.removeClass("hide").addClass("show")
            }
        }).click({
            ".stream-item-activity .activity-count": function(a, b) {
                var c = b.closest(".stream-item");
                return c.find(".sub-stream-item-hidden").removeClass("sub-stream-item-hidden"), c.find(".activity-secondary-supplement").show(), b.find("span").unwrap(), !1
            },
            ".stream-item-activity-network .stream-item-activity-header": function(a, b) {
                if (!twttr.isT1) return;
                var c = b.find(".view-all-supplements");
                c.get(0) && (c.hasClass("show") ? this.showActivitySupplements(c) : this.hideActivitySupplements(c))
            },
            "div.js-activity .view-all-supplements": function(a, b) {
                return twttr.isT1 ? b.hasClass("show") ? this.showActivitySupplements(b) : this.hideActivitySupplements(b) : b.hasClass("show") ? this.oldShowActivitySupplements(b) : this.oldHideActivitySupplements(b), a.stopPropagation(), a.preventDefault(), !1
            },
            ".js-activity .hidden-supplement": function(a, b) {
                this.showActivitySupplements(b)
            }
        }), a(twttr.streams.ActivityStream)
    })
});
provide("streams/ActivityByUserStream", function(a) {
    using("_").as(function(b, _) {
        twttr.stream("twttr.streams.ActivityByUserStream").subclassOf(twttr.streams.ActivityStream).statics({
            activityType: "profile_activity"
        }).methods({
            update: function(a) {
                twttr.API.User.find(this.params.screenName).activity(a)
            },
            _setTitle: function(a) {
                a(_("Activity by {{screen_name}}", {
                    screen_name: this.params.screenName
                }))
            }
        }), a(twttr.streams.ActivityByUserStream)
    })
});
provide("streams/ActivityByNetworkStream", function(a) {
    using("streams/ActivityStream").as(function(b) {
        twttr.stream("twttr.streams.ActivityByNetworkStream").subclassOf(b.streams.ActivityStream).statics({
            activityType: "activity"
        }).methods({
            afterFirstSwitchingTo: function() {
                b.streams.ActivityStream.prototype.afterFirstSwitchingTo.apply(this, arguments)
            },
            onShowNewItems: function(a) {
                b.streams.ActivityStream.prototype.onShowNewItems.apply(this, arguments)
            },
            onShowOldItems: function(a) {
                b.streams.ActivityStream.prototype.onShowOldItems.apply(this, arguments)
            },
            _getEmptyStreamHtml: function() {
                return _("Favorites, follows, retweets, and more by people you follow will appear here.")
            },
            update: function(a) {
                twttr.currentUser.networkActivity(a)
            },
            _setTitle: function(a) {
                twttr.isT1 ? a(_("Activity")) : a(_("Favorites, follows, retweets, and more by people you follow"))
            }
        }), a(twttr.streams.ActivityByNetworkStream)
    })
});
provide("streams/ActivityOfMeStream", function(a) {
    using().as(function(b) {
        twttr.stream("twttr.streams.ActivityOfMeStream").subclassOf(twttr.streams.ActivityStream).mixin(twttr.mixins.newStreamItemsBar).statics({
            activityType: "your_activity"
        }).methods({
            itemForRender: function(a) {
                return a.isMention ? a.targetObjects.get(0) : a.isReply ? a.targets.get(0) : a
            },
            additionalStreamItemClass: function(a) {
                var b = twttr.streams.ActivityStream.prototype.additionalStreamItemClass.apply(this, arguments);
                return twttr.isT1 && (a.isReply || a.isMention) && (b += " expanding-stream-item"), b
            },
            itemViewClass: function(a) {
                return a.isMention || a.isReply ? twttr.views.StreamTweet : twttr.views.ActivityItem
            },
            _getEmptyStreamHtml: function() {
                return _("@mentions, favorites, follows and more on you and your Tweets will appear here.")
            },
            _afterItemsRendered: function(a) {
                twttr.helpers.ellipsify(a.find(".activity-truncated-tweet .tweet-row"))
            },
            onShowNewItems: function(a) {
                twttr.streams.ActivityStream.prototype.onShowNewItems.apply(this, arguments), this.$find(".js-new-tweets-bar").remove(), this._afterItemsRendered(a)
            },
            onShowOldItems: function(a) {
                twttr.streams.ActivityStream.prototype.onShowOldItems.apply(this, arguments), this._afterItemsRendered(a)
            },
            update: function(a) {
                !twttr.isT1 && $.cookie("should_filter_mentions") && (a.filter = ["mention", "reply"]), twttr.currentUser.inboundActivity(a)
            },
            newStreamItemsBarPhrase: function(a) {
                return a == 1 ? _("1 New interaction") : _("{{count}} New interactions", {
                    count: a
                })
            },
            _setTitle: function(a) {
                twttr.isT1 ? a(_("Interactions")) : a((new twttr.views.ActivityOfMeStreamTitle({})).html())
            },
            showNewItems: function(a, b) {
                b ? this.showNewStreamItemsBar(a) : this._showNewItems()
            },
            afterSwitchingToAgain: function(a) {
                twttr.streams.ActivityStream.prototype.afterSwitchingToAgain.apply(this, arguments), this.afterSwitchingTo()
            },
            afterFirstSwitchingTo: function(a) {
                twttr.streams.ActivityStream.prototype.afterFirstSwitchingTo.apply(this, arguments);
                var b = this;
                this._attachedTweetBarEvent || (this._attachedTweetBarEvent = !0, this.dom().delegate(".js-new-tweets-bar", "click", function() {
                    b._showNewItems()
                })), this.afterSwitchingTo()
            },
            afterSwitchingTo: function() {
                this.updateI18nDisplay();
                var a = this,
                    b = this.$node.closest(".stream-manager").find("#show_mentions_only"),
                    c = !! $.cookie("should_filter_mentions");
                b.attr("checked", c ? "checked" : null), setTimeout(function() {
                    b.one("click", function() {
                        return c = !c, $.cookie("should_filter_mentions", c || null, {
                            expires: 3650
                        }), b.attr("checked", c ? "checked" : null), trackClient({
                            component: "mentions_filter",
                            action: c ? "select" : "deselect"
                        }), a.trigger("reloadCurrentStream", [a.constructor]), !1
                    })
                }, 0)
            }
        }), a(twttr.streams.ActivityOfMeStream)
    })
});
provide("streams/AllSubscriptions", function(a) {
    using("_", "streams/ListStream").as(function(b, _) {
        twttr.stream("twttr.streams.AllSubscriptions", function(a, b) {
            twttr.streams.ListStream.apply(this, arguments), this._registerEvents(a)
        }).subclassOf(twttr.streams.ListStream).methods({
            API_METHOD: "allLists",
            _setTitle: function(a) {
                a(_("Lists"))
            },
            _setViewToggler: function(a, b) {
                a(new twttr.views.ListsStreamViewToggler(!1))
            },
            _setHeaderButton: function(a, b) {
                twttr.helpers.isCurrentUser(b.screenName) && a(new twttr.views.CreateListButton)
            },
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("You aren't following any lists yet.") : _("@{{screen_name}} isn't following any lists yet.", {
                    screen_name: this.screenName
                })
            },
            _registerEvents: function(a) {
                if (twttr.loggedIn) {
                    var b = function(b, c) {
                            return twttr.helpers.isCurrentUser(a.screenName) ? c : null
                        };
                    this._registerAddToStreamEvent(twttr.API.List, "create follow", b), this._registerRemoveFromStreamEvent(twttr.API.List, "delete unfollow", b, "uri"), this._registerUpdateStreamEvent(twttr.API.List, "update", b)
                }
            }
        }), a()
    })
});
provide("streams/AllSubscriptionsUser", function(a) {
    using("_", "streams/AllSubscriptions").as(function(b, _) {
        twttr.stream("twttr.streams.AllSubscriptionsUser", function(a, b) {
            twttr.streams.AllSubscriptions.apply(this, arguments)
        }).subclassOf(twttr.streams.AllSubscriptions).methods({
            _setViewToggler: function(a, b) {
                a(new twttr.views.ProfileListsStreamViewToggler(!0, {
                    screen_name: b.screenName
                }))
            }
        }), a()
    })
});
provide("media", function(a) {
    using().as(function(b) {
        twttr.provide("twttr.media");
        var c = {};
        twttr.aug(twttr.media, {
            match: function(a) {
                if (twttr.is.nil(a)) return;
                var b, d, e;
                return (d = c[a]) ? d.mediaType : ($.each(twttr.media.types, function(b, f) {
                    if (!f.isEnabled()) return !0;
                    $.each(f.matchers, function(b, g) {
                        d = twttr.is.regex(g) ? a.match(g) : g(a);
                        if (d) return c[a] = {
                            mediaType: f,
                            matchLabel: b,
                            match: RegExp.$1
                        }, e = f, !1
                    });
                    if (d) return !1
                }), e)
            },
            matchInstance: function(a, b) {
                var d = this.match(a);
                if (d) return new d({
                    url: a,
                    matchLabel: c[a].matchLabel,
                    slug: c[a].match,
                    tweet: b
                })
            },
            expand: function(a, b) {
                twttr.urlResolver.expand(a, function(a) {
                    b(a)
                })
            },
            mediaTypes: function(a, b) {
                var c = [],
                    d = {},
                    e = function(a, b) {
                        var e = twttr.media.match(b);
                        if (e) {
                            d[b] = e;
                            return
                        }
                        c.push(a)
                    };
                $.each(a, e);
                if (c.length === 0) {
                    b(d);
                    return
                }
                twttr.media.expand(c, function(a) {
                    $.each(a, e), b(d)
                })
            },
            extractUrls: function(a) {
                var b = {};
                return a.entities ? (a.entities.urls && $.each(a.entities.urls, function(a, c) {
                    c.url && (b[c.url] = c.expanded_url || c.url)
                }), twttr.media.extractMedia(a, b), b) : ($.each(twttr.txt.extractUrls(a.text), function(a, c) {
                    b[c] || (b[c] = c)
                }), b)
            },
            extractMedia: function(a, b) {
                return a.entities && a.entities.media && $.each(a.entities.media, function(a, c) {
                    c.type && c.type == "photo" && c.display_url && (b[c.display_url] = c.display_url)
                }), b
            },
            hasMedia: function(a) {
                var b = a.entities && a.entities.media && a.entities.media.length,
                    c = twttr.Cards.prototype.hasCards(a);
                return b || c
            },
            resolveImageUrl: function(a, b, c, d) {
                var e = this;
                c = c || {};
                var f = twttr.media.matchInstance(a, c.tweet),
                    g = c.error ? c.error : $.noop;
                if (f && f.getImageURL) {
                    if (c.filter && c.filter(f) !== !0) {
                        g("your filter function filtered out this media");
                        return
                    }
                    f.getImageURL(b, function(a) {
                        !twttr.is.nil(a) && twttr.is.def(a) ? c.success(a) : g("getImageUrl did not return a resolvedURL")
                    }, d)
                } else g("url did not match any media types")
            },
            iconType: function(a, b) {
                var d = new b({
                    url: a,
                    matchLabel: c[a].matchLabel,
                    slug: c[a].match
                });
                return d.icon()
            },
            getViewMediaCookie: function() {
                var a = $.cookie("show_all_inline_media");
                return !!a
            },
            setViewMediaCookie: function() {
                $.cookie("show_all_inline_media", !0)
            },
            matchCache: c
        }), a(twttr.media)
    })
});
provide("media/Iconifier", function(a) {
    using("media").as(function(b) {
        twttr.provide("twttr.media");
        var c = twttr.klass("twttr.media.Iconifier", function(a, b) {
            var c = this,
                d = $(a);
            d.attr("media", !0), twttr.isT1 && c.iconifyGeo(d), twttr.decider.isAvailable("platform_enable_cards") && (c.iconifyNativeMedia(d.find(".js-stream-tweet.has-native-media")), c.iconifyCards(d.find(".js-stream-tweet.has-cards:not(.iconified)"))), c.iconify(d.find(".js-stream-tweet a.twitter-timeline-link").get(), !0, b)
        });
        c.methods({
            expand: function(a, c) {
                var d = [],
                    e = [];
                $.each(a, function(a, b) {
                    d.push(b.href)
                }), b.media.expand(d, function(b) {
                    var d;
                    $.each(a, function(a, c) {
                        d = b[c.href], d && (c.setAttribute("data-ultimate-url", d), e.push(c))
                    }), c(e)
                })
            },
            iconifyGeo: function(a) {
                var b = this,
                    c = a.find('div.js-stream-tweet[data-geo="true"] span.js-icon-container'),
                    d = (new twttr.views.InlineMediaIcon({
                        is_geo: !0
                    })).html();
                c.each(function() {
                    var a = $(this);
                    a.append(d), b.updateHandleText(a, "geo")
                })
            },
            iconifyNativeMedia: function(a) {
                var b = this;
                a.each(function() {
                    var a = $(this),
                        c = a.find("span.js-icon-container"),
                        d = "photo";
                    b.updateHandleText(a, d), b.addSmallIcon(c, d, d), a.addClass("iconified")
                })
            },
            iconifyCards: function(a) {
                var b = this;
                a.each(function() {
                    var a = $(this),
                        c = a.find("span.js-icon-container"),
                        d = a.data("card-type");
                    b.updateHandleText(a, d), b.addSmallIcon(c, d, d), a.addClass("iconified")
                })
            },
            preloadTwimgs: function(a) {
                if (twttr.decider.isAvailable("phoenix_preload_twimgs")) {
                    var b = a.closest("div.js-stream-tweet").attr("data-item-id");
                    twttr.API.Status.find(b, function(b) {
                        b.entities && b.entities.media && twttr.each(b.entities.media, function(b) {
                            var c = new Image;
                            c.src = twttr.isSSL() ? b.media_url_https : b.media_url, a.trigger("preloadedImage", [c])
                        })
                    })
                }
            },
            iconify: function(a, c, d) {
                var e = this,
                    f = [];
                $.each(a, function(a, d) {
                    var g = $(d),
                        i = g.closest("div.js-stream-tweet"),
                        j = d.getAttribute("data-ultimate-url") || d.getAttribute("data-expanded-url") || d.href,
                        k = b.media.match(j);
                    if (twttr.abdecider.choose("long_tweet_urls_248") === "long") {
                        var l = j.replace(/^https?:\/\//, "");
                        l.length > 32 && (l = l.slice(0, 29) + "..."), g.html(l)
                    }
                    if (k || !c) {
                        var m = 0;
                        switch (twttr.abdecider.choose("long_tweet_urls_2_259")) {
                        case "p25":
                            m = .25;
                            break;
                        case "p50":
                            m = .5;
                            break;
                        case "p75":
                            m = .75;
                            break;
                        case "p100":
                            m = 1;
                            break;
                        case "control":
                        default:
                            m = 0
                        }
                        if (m && Math.random() <= m) {
                            var l = j.replace(/^https?:\/\//, "");
                            l.length > 32 && (l = l.slice(0, 29) + "..."), g.attr("data-long_tweet_urls_2_259", "expanded"), g.html(l)
                        }
                    }
                    if (!k) {
                        f.push(d);
                        return
                    }
                    var n = !! g.parents().filter(function(a, b) {
                        return $(b).hasClass("js-old-content")
                    }).length;
                    if (n) return;
                    g.data("media-type", k);
                    var o = b.media.iconType(j, k),
                        p = i.find(".js-icon-container");
                    p.find('[data-media-class="' + o + '"]').length === 0 && (!g.closest(".js-stream-tweet:not(.iconified)").length || (e.addSmallIcon(p, o, k._name.toLowerCase()), e.updateHandleText(p, o)), k._name.toLowerCase() === "CopiedTwimg" && e.preloadTwimgs(p))
                }), c && f.length > 0 ? this.expand(f, function(a) {
                    e.iconify(a, !1, d)
                }) : d && d()
            },
            addSmallIcon: function(a, b, c) {
                (new twttr.views.InlineMediaIcon({
                    icon: b,
                    media_name: c,
                    is_image: b === "photo",
                    is_video: b === "video" || b === "player",
                    is_audio: b === "song" || b === "album",
                    is_summary: b === "summary",
                    is_embed: b === "generic" || b === "software" || b === "tweet"
                })).render(a, "append")
            },
            updateHandleText: function(a, b) {
                if (!twttr.decider.isExpando()) return;
                var c = a.data("placename");
                c ? (c = _("from {{placename}}", {
                    placename: c
                }), c = [c, _("Collapse")]) : c = [_("View location"), _("Collapse")];
                var d = {
                    photo: [_("View photo"), _("Hide photo")],
                    video: [_("View video"), _("Hide video")],
                    generic: [_("View media"), _("Hide media")],
                    song: [_("View song"), _("Hide song")],
                    album: [_("View album"), _("Hide album")],
                    software: [_("View app"), _("Hide app")],
                    tweet: [_("View tweet"), _("Hide tweet")],
                    geo: c,
                    player: [_("View media"), _("Hide media")],
                    summary: [_("View summary"), _("Hide summary")]
                }[b],
                    e = "tweet_anatomy_hide_view_179",
                    f = twttr.abdecider.choose(e);
                f !== "hide" && (f === "always" ? (d || (d = [_("View details"), _("Hide details")]), d && a.show().parent().find("span.js-view-details").html(d[0]).end().find("span.js-hide-details").html(d[1])) : d && a.show().parent().find("span.js-view-details").html(d[0]).end().find("span.js-hide-details").html(d[1]))
            }
        }), a(c)
    })
});
provide("media/Embedder", function(a) {
    using("media").as(function(b) {
        var c = twttr.klass("twttr.media.Embedder", function(a, b) {
            this.tweet = a, this.options = b || {}, this.options.preProcess = this.options.preProcess ||
            function(a, b) {
                b()
            }, this.options.postProcess = this.options.postProcess ||
            function() {}, this.options.beforeRender = this.options.beforeRender ||
            function(a, b) {
                b({
                    shouldRender: !0
                })
            }, this.options.afterRender = this.options.afterRender ||
            function() {}
        });
        c.mixin(twttr.mixins.tweetFlagging), c.methods({
            expand: function(a, c) {
                var d = [];
                b.media.expand(a, function(a) {
                    $.each(a, function(a, b) {
                        d.push(b)
                    }), c(d)
                })
            },
            render: function(a) {
                var c = this,
                    d = twttr.Cards.prototype;
                if (twttr.decider.isAvailable("platform_coerce_native_media_to_cards") && d.hasCardPhotoEntities(this.tweet)) $(this.tweet.entities.media).each(function(a, b) {
                    c.embed(b.url, twttr.media.types.nativePhoto, b)
                });
                else if (!d.hasCardPhotoEntities(this.tweet) && d.hasCards(this.tweet)) d.hasPhotos(this.tweet) ? c.embed(this.tweet.cards.photos[0].url, twttr.media.types.photo, this.tweet.cards) : d.hasPlayers(this.tweet) ? c.embed(this.tweet.cards.players[0].url, twttr.media.types.player, this.tweet.cards) : d.hasSummaries(this.tweet) && c.embed(this.tweet.cards.summaries[0].url, twttr.media.types.summary, this.tweet.cards);
                else {
                    var e = b.media.extractUrls(this.tweet),
                        f = this.embedMatchedAndReturnUnmatched(e);
                    f.length && this.expand(f, function(a) {
                        c.embedMatchedAndReturnUnmatched(a)
                    })
                }
                a && a()
            },
            embedMatchedAndReturnUnmatched: function(a) {
                var c = this,
                    d = [];
                return $.each(a, function(a, e) {
                    var f = b.media.match(e);
                    f ? c.embed(e, f) : d.push(a)
                }), d
            },
            embedThumbnail: function(a) {
                var c = this,
                    d = b.media.match(a);
                if (!d) return;
                var e = new d({
                    url: a,
                    matchLabel: b.media.matchCache[a].matchLabel,
                    slug: b.media.matchCache[a].match,
                    size: this.options.size
                });
                e.process(function() {
                    e.renderThumbnail(c.options.DOMContainer)
                })
            },
            embed: function(a, c, d) {
                var e = this,
                    f;
                d ? f = new c({
                    url: a,
                    tweet: this.tweet,
                    mediaEntity: d
                }) : f = new c({
                    url: a,
                    matchLabel: b.media.matchCache[a].matchLabel,
                    slug: b.media.matchCache[a].match,
                    tweet: this.tweet
                }), e.options.preProcess(f, function(b) {
                    f.process(function() {
                        e.options.postProcess(f, b || {}), e.options.beforeRender(f, function(b) {
                            var c = (new twttr.views.MediaTypeContainer({
                                url: a,
                                media_type: f.constructor._name,
                                media_type_class: f.constructor._name.toLowerCase()
                            })).$html(),
                                d = c.data("url-id");
                            e.options.DOMContainer.find('div[data-url-id="' + d + '"]').remove().end().append(c), f.render(c);
                            if (!f.data || !f.data.is_card) e.tweetFlaggable(e.tweet) && c.append(f.flaggable()), c.append(f.attribution());
                            setTimeout(function() {
                                c.closest(".tweet").delegate(".flaggable", "click", function(a) {
                                    e.flagLinkClicked(a, e.tweet)
                                })
                            }, 0), e.options.afterRender(f, b || {}), twttr.images.addPrivacyCover(c.find("a img"))
                        })
                    }, b || {}, d)
                })
            }
        }), a(c)
    })
});
provide("media/mediaType", function(a) {
    using("_", "util", "constants").as(function(b, _) {
        twttr.klass("twttr.media.MediaType", function(a) {
            this.url = a.url, this.matchLabel = a.matchLabel, this.slug = a.slug, this.tweet = a.tweet || null, this.options = a || {}, this.location = new b.util.Location(this.url), this.data = {}
        }), twttr.mediaType = function(a, c) {
            var d = "twttr.media.types." + a,
                e = twttr.klass(d, function() {
                    twttr.media.MediaType.apply(this, arguments)
                });
            e.subclassOf(twttr.media.MediaType).statics({
                partnerName: a,
                domain: c.domain || "",
                attributionName: c.attributionName || a,
                skipAttributionInDiscovery: c.skipAttributionInDiscovery || !1,
                title: c.title || null,
                _icon: c.icon || "generic",
                deciderKey: c.deciderKey || null,
                screenName: c.screenName || null,
                aspectRatio: c.aspectRatio || b.constants.videos.fullscreen,
                height: c.height,
                ssl: c.ssl || !1,
                isEnabled: function() {
                    return this.deciderKey ? twttr.decider && twttr.decider.isAvailable(this.deciderKey) : !0
                },
                attributionTemplate: c.attributionTemplate || "MediaAttribution",
                validActions: $.extend({
                    resizeFrame: !0
                }, c.validActions),
                enableAPI: c.enableAPI || !1,
                addMatchers: function(a) {
                    for (var c in a) this.matchers[c] = b.util.regexSupplant(a[c])
                },
                flagActionTemplate: c.flagActionTemplate || "<span class='flag-container'><a href='#' class='flaggable' alternateText='" + _("Un-flag this media") + "'>" + _("Flag this media") + "</a></span>"
            }).methods({
                process: c.process ||
                function() {},
                content: c.content ||
                function() {},
                getImageURL: c.getImageURL ||
                function() {},
                isBlobStore: c.isBlobStore ||
                function() {
                    return !1
                },
                partnerName: a,
                metadata: function(a) {
                    if (twttr.is.fn(c.metadata)) return c.metadata.apply(this, [a])
                },
                calcHeight: function(a, b) {
                    b || (b = this.constructor.aspectRatio);
                    var c = parseInt(b.split(":")[0], 10),
                        d = parseInt(b.split(":")[1], 10),
                        e = 30;
                    return Math.round(a * (d / c)) + e
                },
                resizeHtmlEmbed: function(a, b, c, d) {
                    if (a && b && b.maxwidth && b.maxwidth < c) {
                        var e = Math.round(b.maxwidth * d / c);
                        a = a.replace(new RegExp('width=("?)' + c + "(?=\\D|$)", "g"), "width=$1" + b.maxwidth).replace(new RegExp('height=("?)' + d + "(?=\\D|$)", "g"), "height=$1" + e)
                    }
                    return a
                },
                useOpaqueModeForFlash: function(a) {
                    return a.replace(/(<\/object>)/, '<param name="wmode" value="opaque">$1').replace(/(<embed .*?)(\/?>)/, '$1 wmode="opaque"$2')
                },
                icon: function() {
                    return twttr.is.fn(this.constructor._icon) ? this.constructor._icon.call(this, this.url) : this.constructor._icon
                },
                flaggable: function() {
                    return !twttr.loggedIn || !c.flaggable || !twttr.decider.isAvailable("media_flagging") ? !1 : $(Mustache.to_html(this.constructor.flagActionTemplate))
                },
                attribution: function() {
                    return c.attribution && twttr.is.fn(c.attribution) ? c.attribution.call(this) : this.isBlobStore() ? "" : (new twttr.views[this.constructor.attributionTemplate]({
                        url: this.domainUrl(),
                        icon_url: this.iconUrl(),
                        title: this.data.attribution_title || this.constructor.title || this.constructor._name,
                        media_type: this.constructor._name
                    })).html()
                },
                iconUrl: function() {
                    return this.data.attribution_icon || twttr.assets.path("/images/partner-favicons/" + this.constructor._name + ".png")
                },
                domainUrl: function() {
                    return this.data.attribution_url || this.constructor.domain
                },
                attributionName: function() {
                    return this.constructor.attributionName
                },
                hasAttributionInDiscovery: function() {
                    return !this.constructor.skipAttributionInDiscovery
                },
                render: function(a) {
                    if (c.render && twttr.is.fn(c.render)) return c.render.call(this, a);
                    var b = this.content();
                    if ($.browser.msie && $.browser.version <= 8) $(a).html(b);
                    else {
                        b = "<div class='tweet-media'>" + b + "</div>";
                        var d = new twttr.platform.SandboxedApplication(this.constructor, {
                            tweet: this.tweet,
                            originalUrl: this.url
                        }),
                            e = {
                                DOMContainer: a,
                                htmlContent: b,
                                height: this.data.height,
                                width: this.data.width,
                                security: this.constructor.ssl
                            };
                        d.run(e)
                    }
                },
                content: function() {
                    return c.content && twttr.is.fn(c.content) ? c.content.call(this) : ""
                },
                renderThumbnail: function(a) {
                    var b = this;
                    this.metadata(function(c) {
                        c.alt = b.constructor.title;
                        var d = Mustache.to_html('<img src="{{image}}" alt="{{alt}}" title="{{title}}" />', c);
                        $(a).append(d)
                    })
                },
                renderIframe: function(a, b) {
                    t = "<iframe src='{{url}}' width='{{width}}' height='{{height}}'></iframe>", $(a).append(Mustache.to_html(t, $.extend({
                        url: b
                    }, this.data)))
                },
                renderEmbeddedApplication: function(a, b) {
                    var c = new twttr.platform.EmbeddedApplication(this.constructor, {
                        tweet: this.tweet,
                        originalUrl: this.url
                    }),
                        d = {
                            DOMContainer: a,
                            height: this.data.height,
                            width: this.data.width
                        };
                    c.run(b, d)
                }
            }), e.matchers = c.matchers || {};
            for (var f in e.matchers)(function() {
                var a = f;
                e.matchers[a] = b.util.regexSupplant(e.matchers[a])
            })();
            return e
        }, a(twttr.mediaType)
    })
});
provide("media/expandodo", function(a) {
    using("util", "constants").as(function(b) {
        function c(a) {
            return a.expanded_url.replace(/^https?:\/\//, "//") + "/large"
        }
        function d(a) {
            a && (a.profile_path = "/" + a.screen_name)
        }
        function e(a) {
            var b = ["players", "summaries", "photos"],
                c, e, f, g;
            for (c = 0; c < b.length; c++) {
                g = a[b[c]];
                if (g && g.length) for (e = 0; e < g.length; e++) f = g[e], d(f.author_user), d(f.site_user)
            }
        }
        function f(a, b, c) {
            this.data = c, this.data.is_card = !0, e(this.data), a()
        }
        function g(a, b, c) {
            var d = this;
            c && c.source_status_id_str ? twttr.API.Status.find(c.source_status_id_str, function(e) {
                i(c, e.user, function(c) {
                    f.apply(d, [a, b, c])
                })
            }) : i(c, !1, function(c) {
                f.apply(d, [a, b, c])
            })
        }
        function i(a, b, d) {
            var e = j(a.sizes.medium.w, a.sizes.medium.h, m, l),
                f = {
                    photos: [{
                        url: c(a),
                        title: !1,
                        description: !1,
                        images: {
                            web: {
                                image_url: a.media_url_https,
                                width: e.width,
                                height: e.height
                            }
                        },
                        twimg_attribution: !0,
                        permalink_continuity: !0
                    }]
                };
            b && (f.photos[0].author_user = {
                id_str: b.id,
                screen_name: b.screenName,
                name: b.name,
                profile_image_url: b.profileImageUrl,
                profile_image_url_https: b.profileImageUrlHttps
            }), d(f)
        }
        function j(a, b, c, d) {
            return b >= a && b > d ? (a *= d / b, b = d) : a > b && a > c && (b *= c / a, a = c), {
                width: Math.ceil(a),
                height: Math.ceil(b)
            }
        }
        function k(a) {
            $(a).append(Mustache.to_html(twttr.templates.cards_base, this.data, twttr.templates))
        }
        var l = 375,
            m = 435;
        twttr.mediaType("photo", {
            icon: "photo",
            process: f,
            render: k
        }), twttr.mediaType("nativePhoto", {
            icon: "photo",
            attribute: !1,
            process: g,
            render: k
        }), twttr.mediaType("summary", {
            icon: "summary",
            process: f,
            render: k
        }), twttr.mediaType("player", {
            icon: "player",
            process: f,
            render: k
        }), a()
    })
});
provide("platform/BaseApplication", function(a) {
    using("_").as(function(b, _) {
        (function() {
            function a(a) {
                var b = twttr.platform.runningApplications[a];
                b && (b.stop(), delete twttr.platform.runningApplication[a])
            }
            twttr.platform || (twttr.platform = {}), twttr.platform.application_types = {
                embedded: "embedded"
            }, twttr.platform.runningApplications = {};
            var b = 50,
                c = 36e5,
                d = {
                    trends: !0,
                    "geo/nearby_places": !0,
                    "statuses/retweets/:id": !0,
                    "followers/ids": !0,
                    "geo/id/:id": !0,
                    "geo/search": !0,
                    "lists/statuses": !0,
                    "users/suggestions": !0,
                    "friendships/show": !0,
                    "statuses/show": !0,
                    "trends/current": !0,
                    "geo/similar_places": !0,
                    "statuses/user_timeline": !0,
                    "friends/ids": !0,
                    "trends/:woeid": !0,
                    "statuses/followers": !0,
                    "statuses/friends": !0,
                    "statuses/public_timeline": !0,
                    "users/show": !0
                },
                e = {
                    "users/search": !0,
                    "users/typeahead": !0,
                    ":user/lists/subscriptions": !0,
                    "statuses/network_timeline": !0,
                    "statuses/friends_timeline": !0,
                    ":user/:list_id/members": !0,
                    ":user/lists/memberships": !0,
                    "statuses/:id/retweeted_by/ids": !0,
                    ":user/lists": !0,
                    "statuses/mentions": !0,
                    "geo/reverse_geocode": !0,
                    "friendships/exists": !0,
                    ":user/:list_id/members/:id": !0,
                    search: !0,
                    "statuses/retweeted_to_me": !0,
                    "statuses/retweets_of_me": !0,
                    "statuses/retweeted_by_me": !0,
                    ":user/:list_id/subscribers": !0,
                    ":user/:list_id/subscribers/:id": !0,
                    "favorites/:id": !0,
                    "statuses/:id/retweeted_by": !0,
                    "account/verify_credentials": !0,
                    "users/lookup": !0,
                    "trends/weekly": !0,
                    "trends/daily": !0,
                    "statuses/home_timeline": !0,
                    "lists/show": !0
                };
            twttr.platform.events = {
                resize: function() {
                    var a = this;
                    $(window).bind("resize." + this.config._name, function() {
                        var b = $("div.details-pane.opened");
                        b.length !== 0 && a.socket.trigger("resize", b.width())
                    })
                }
            }, twttr.platform.interfaceActions = {
                openTab: function(a) {
                    window.open(a.url, "_blank")
                },
                openProfile: function(a, b) {
                    twttr.app.currentPage().send("loadUserInDetailsPane", [this.config.screenName,
                    {}], function() {
                        a(!0)
                    }, function() {
                        b("Profile pane not available or no registered screen name")
                    })
                },
                tweet: function(a, b, c) {
                    (new twttr.widget.TweetDialog({
                        defaultContent: a,
                        draggable: !0,
                        template: {
                            title: _("What’s happening?")
                        },
                        origin: "new-tweet-titlebar-button"
                    })).open().focus()
                },
                notify: function(a, b) {
                    twttr.Notifications.notify(a.type, a.subject, a.message, a.icon, function() {
                        b(a)
                    })
                },
                resizeFrame: function(a) {
                    this.DOMContainer.firstChild.style.height = a + "px"
                },
                bind: function(a, b, c) {
                    var d = twttr.platform.events[a];
                    d ? (d.call(this), b(!0)) : c("You tried to bind to an event that is not bindable")
                },
                unbind: function(a, b, c) {
                    var d = twttr.platform.events[a];
                    d ? ($(window).unbind(a + "." + this.config._name), b(!0)) : c("You tried to unbind from an event that is not bindable")
                }
            };
            var f = 0,
                g = twttr.klass("twttr.platform.BaseApplication", function(a) {
                    this.limiter = 0, this.interval = (new Date).getTime(), this.socket = null, this.config = a, this.minimized = !1, this.id = ++f
                });
            g.methods({
                run: function(a, b) {
                    var c = this;
                    this.options = b || {}, this.url = a;
                    var d = b.DOMContainer || $(document.body);
                    d instanceof jQuery && (this.DOMContainer = d[0]), this.socket = new easyXDM.Rpc({
                        remote: this.url,
                        container: this.DOMContainer,
                        props: {
                            width: b.width || "100%",
                            height: b.height || 0
                        },
                        onReady: function() {
                            twttr.platform.runningApplications[c.id] = c, c.limiter = 0, c.interval = (new Date).getTime();
                            var a = c.initialData();
                            c.socket.initialize(a), b.loaded && b.loaded.call(c)
                        }
                    }, {
                        local: {
                            api: twttr.bind(this, this.api),
                            ui: twttr.bind(this, this.ui),
                            log: twttr.bind(this, this.log)
                        },
                        remote: {
                            trigger: {},
                            initialize: {}
                        }
                    })
                },
                initialData: function() {
                    var a = {},
                        b = $("div.details-pane.opened");
                    return b.length !== 0 && (a.size = b.width()), twttr.currentUser && twttr.currentUser.profileLinkColor && (a.styles = [
                        ["a", ["color", "#" + twttr.currentUser.profileLinkColor]]
                    ]), a
                },
                stop: function() {
                    this.socket.destroy()
                },
                maximize: function() {
                    this.minimized && (this.minimized = !1, this.run(this.url, this.options))
                },
                minimize: function() {
                    this.stop(), this.attribution = $(this.DOMContainer).find(".media-attribution").detach(), this.minimized = !0
                },
                isRateLimited: function() {
                    var a = (new Date).getTime();
                    return a - this.interval > c ? (this.limiter = 0, this.interval = a, !1) : this.limiter >= b
                },
                isPermitted: function() {
                    return !0
                },
                isProtectedEndpoint: function(a) {
                    return twttr.currentUser["protected"] && !this.isPermitted(this.socket.origin) ? !0 : !d[a] && !e[a] ? !0 : !1
                },
                log: function(a, b, c, d) {
                    twttr.is.fn(b) && (d = c, c = b, b = {}), b = b || {}, c = c || $.noop, d = d || $.noop;
                    if (this.minimized) return d("You cannot log information while your application is minimized");
                    scribble("partner_event", {
                        partner: this.config._name,
                        origin: this.socket.origin,
                        eventName: a,
                        data: b
                    }), c(!0)
                },
                api: function(a, b, c, d) {
                    d = d || $.noop;
                    if (this.minimized) return d("You cannot access the API while your application is minimized");
                    if (!this.config.enableAPI) return d("You do not have API Access");
                    if ( !! this.isRateLimited()) return d("You have been rate-limited.");
                    this.limiter++;
                    if (this.isProtectedEndpoint(a)) return d("You do not have access to that endpoint.");
                    twttr.is.fn(b) && (d = c, c = b, b = []), twttr.API.util.makeRemoteRequest(a, b, {
                        success: function(a) {
                            c && c(a)
                        },
                        error: function(a) {
                            d && d(a)
                        }
                    })
                },
                ui: function(a, b, c, d) {
                    twttr.is.fn(b) && (d = c, c = b, b = {}), b = b || {}, c = c || $.noop, d = d || $.noop;
                    if (!this.config.validActions[a]) return d("This is not a valid UI action.");
                    if (this.minimized) return d("You cannot access interface components while your application is minimized");
                    scribble("partner_ui_action", {
                        partner: this.config._name,
                        origin: this.socket.origin,
                        actionName: a,
                        data: b
                    }), twttr.platform.interfaceActions[a].apply(this, [b, c, d])
                }
            })
        })(), a(twttr.platform.BaseApplication)
    })
});
provide("platform/EmbeddedApplication", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.platform.EmbeddedApplication", function(a, b) {
            b = b || {}, twttr.platform.BaseApplication.apply(this, arguments), this.tweet = b.tweet || null, this.originalUrl = b.originalUrl || null, this.applicationType = twttr.platform.application_types.embedded
        });
        c.subclassOf(twttr.platform.BaseApplication), c.methods({
            initialData: function() {
                var a = twttr.platform.BaseApplication.prototype.initialData.call(this);
                return a
            },
            log: function(a, b, c, d) {
                twttr.is.fn(b) && (d = c, c = b, b = {}), b.original_url = this.originalUrl, twttr.platform.BaseApplication.prototype.log.apply(this, arguments)
            }
        }), a(c)
    })
});
provide("platform/SandboxedApplication", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.platform.SandboxedApplication", function(a, b) {
            twttr.platform.EmbeddedApplication.apply(this, arguments)
        }).subclassOf(twttr.platform.EmbeddedApplication).statics({
            remoteUrl: function(a) {
                var b = twttr.domains.local.match(/localhost/),
                    c = "/details_pane_content_sandbox.html";
                return b ? "http://localhost:3000" + c : twttr.assets.path(c, {
                    isSSL: twttr.isSSL() && a
                })
            }
        }).methods({
            run: function(a) {
                twttr.platform.EmbeddedApplication.prototype.run.call(this, twttr.platform.SandboxedApplication.remoteUrl($.browser.msie || a.security), a)
            },
            initialData: function() {
                var a = twttr.platform.EmbeddedApplication.prototype.initialData.call(this);
                return twttr.currentUser && twttr.currentUser.profileLinkColor && a.styles.push([".sandboxed-media a", ["color", "#" + twttr.currentUser.profileLinkColor]]), $.extend({}, a, {
                    htmlContent: this.options.htmlContent
                })
            }
        }), a(twttr.platform.SandboxedApplication)
    })
});
provide("sandboxedAjax", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.AjaxSandboxer", function() {
            this._nextRequestId = 0, this._requests = {}, this._sockets = [null, null]
        }).statics({
            TIMEOUT: 5e3
        }).methods({
            send: function(a) {
                a.timeout || (a.timeout = twttr.AjaxSandboxer.TIMEOUT), this._useSandbox() ? this._sendWithSandbox(a) : this._sendWithoutSandbox(a)
            },
            _useSandbox: function() {
                return twttr.isSSL()
            },
            _sendWithSandbox: function(a) {
                security = !! (a.url.match(/^https:/) || twttr.isSSL() && a.url.match(/^\/\//)), $.browser.msie && (security = 1), index = security ? 0 : 1, this._sockets[index] || (this._sockets[index] = this._generateSocket(this._remoteUrl(security)));
                var b = this._generateSandboxRequest(a);
                this._sockets[index].postMessage(JSON.stringify(b))
            },
            _sendWithoutSandbox: function(a) {
                $.ajax(a)
            },
            _generateSandboxRequest: function(a) {
                var b = ++this._nextRequestId;
                a = twttr.merge({}, a);
                var c = {
                    id: b,
                    callbacks: {
                        success: a.success,
                        error: a.error,
                        before: a.before,
                        complete: a.complete
                    },
                    request: {
                        id: b,
                        data: a
                    }
                };
                return delete a.success, delete a.error, delete a.complete, delete a.before, this._requests[b] = c, c.request
            },
            _remoteUrl: function(a) {
                var b = "/jsonp_sandbox.html";
                return twttr.domains.local.match(/localhost/) ? "http://localhost:3000" + b : twttr.assets.path(b, {
                    isSSL: a
                })
            },
            _generateSocket: function(a) {
                var b = this;
                return new easyXDM.Socket({
                    remote: a,
                    onMessage: function(a, c) {
                        var d = JSON.parse(a),
                            e = b._requests[d.id];
                        e && e.callbacks[d.callbackName] && e.callbacks[d.callbackName].apply(null, d.callbackArgs), d.callbackName === "complete" && delete b._requests[d.id]
                    }
                })
            }
        }), twttr.sandboxedAjax = new twttr.AjaxSandboxer, a(twttr.sandboxedAjax)
    })
});
provide("media/types", function(a) {
    using("util", "constants").as(function(b) {
        function c(a) {
            return twttr.isSSL() ? a.replace(/^http:/, "https:") : a
        }
        twttr.provide("twttr.regexps", {
            protocol: /(?:https?\:\/\/)/,
            protocol_no_ssl: /(?:http\:\/\/)/,
            optional_protocol: /(?:(?:https?\:\/\/)?(?:www\.)?)/,
            protocol_subdomain: /(?:(?:https?\:\/\/)?(?:[\w\-]+\.))/,
            optional_protocol_subdomain: /(?:(?:https?\:\/\/)?(?:[\w\-]+\.)?)/,
            wildcard: /[a-zA-Z0-9_#\.\-\?\&\=\/]+/,
            itunes_protocol: /(?:https?\:\/\/)?(?:[a-z]\.)?itunes\.apple\.com(?:\/[a-z][a-z])?/
        }), twttr.mediaType("Youtube", {
            title: "YouTube",
            icon: "video",
            domain: "//www.youtube.com",
            ssl: !0,
            flaggable: !0,
            height: 359,
            matchers: {
                tinyUrl: /^#{optional_protocol}?youtu\.be\/([a-zA-Z0-9_\-\?\&\=\/]+)/i,
                standardUrl: /^#{optional_protocol}?youtube\.com\/watch[a-zA-Z0-9_\-\?\&\=\/]+/i
            },
            process: function(a, b) {
                this.data.width = b && b.maxwidth || 390, this.data.height = b && b.maxwidth ? this.calcHeight(b.maxwidth) : 307, this.url.match(this.constructor.matchers.tinyUrl) ? (this.data.id = this.location.pathname.replace(/\//g, ""), a()) : this.location.search.match(/[\?\&]v\=([\w\-]+)(?:\&|$)/) && (this.data.id = this.location.query("v"), a())
            },
            metadata: function(a) {
                var c = {
                    image: b.util.supplant("//img.youtube.com/vi/{id}/0.jpg", this.data)
                };
                a(c)
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.metadata(function(a) {
                        a && a.image ? b(a.image) : b(null)
                    })
                })
            },
            render: function(a) {
                this.renderIframe(a, twttr.proto + "://www.youtube.com/embed/" + this.data.id + "?wmode=opaque")
            }
        }), twttr.mediaType("Twitter", {
            icon: "tweet",
            domain: "//twitter.com",
            ssl: !0,
            skipAttributionInDiscovery: !0,
            matchers: {
                permalink: /^#{optional_protocol}?twitter\.com\/(?:#!?\/)?\w{1,20}\/status\/(\d+)[\/]?$/i
            },
            process: function(a) {
                var b = this;
                twttr.API.Status.find(this.slug, function(c) {
                    b.data.tweet = c, twttr.isT1 ? using("//platform.twitter.com/js/vendor/twt/dist/twt.all.min.js", "css!//platform.twitter.com/twt/twt.css", function() {
                        if (!window.twt) return;
                        for (var c = twttr.languages.length; c--;) if (twttr.languages[c].current) {
                            twt.settings.lang = twttr.languages[c].code;
                            break
                        }
                        var d = twt.tweet(b.data.tweet.attributes);
                        b.tweetHtml = d.html(), a()
                    }).load() : a()
                })
            },
            render: function(a) {
                if (!twttr.isT1) $(a).append((new twttr.views.EmbeddedTweet(this.data.tweet)).html());
                else {
                    var b = this;
                    $(a).append(Mustache.to_html("<div class='tweet-embed'>{{{tweet}}}</div>", {
                        tweet: b.tweetHtml
                    }))
                }
            }
        }), twttr.mediaType("CopiedTwimg", {
            icon: "photo",
            domain: "//twitter.com",
            ssl: !0,
            flaggable: !0,
            deciderKey: "photo_copy_paste_inception",
            skipAttributionInDiscovery: !0,
            attributionTemplate: "PhotobucketAttribution",
            matchers: {
                media: /^#{optional_protocol}?twitter\.com\/(?:#!?\/)?\w{1,20}\/status\/(\d+)\/photo\/\d*$/i
            },
            getImageURL: function() {
                twttr.media.types.Twimg.prototype.getImageURL.apply(this, arguments)
            },
            metadata: function() {
                twttr.media.types.Twimg.prototype.metadata.apply(this, arguments)
            },
            process: function(a) {
                var b = this;
                twttr.API.Status.find(this.slug, function(c) {
                    b.data.tweet = c, c.entities && c.entities.media && $.each(c.entities.media, function(a, c) {
                        if (c.expanded_url.indexOf(b.slug) > -1) return b.foundMedia = c, !1
                    });
                    var d;
                    twttr.isSSL() ? d = b.foundMedia.media_url_https : d = b.foundMedia.media_url, b.data.src = d, b.data.url = b.foundMedia.expanded_url, b.data.name = b.constructor._name, a()
                })
            },
            render: function(a) {
                var b = this.data.tweet;
                if (!this.foundMedia) return;
                var c = {
                    name: "copied-twimg",
                    time_ago: twttr.helpers.timeAgo(twttr.helpers.parseDateString(b.createdAt), !0),
                    url: this.foundMedia.url,
                    media_url: twttr.isSSL() ? this.foundMedia.media_url_https : this.foundMedia.media_url,
                    screen_name: b.user.screenName
                },
                    d = $(a);
                d.append((new twttr.views.CopiedTwimg(c)).html()), d.find(".inline-media-image img").bind("load", function() {
                    $(this).closest(".media-instance-container").width(this.width)
                }), twttr.app.isOnPage("permalink") && d.find(".user-profile-link").click(function() {
                    return twttr.router.routeTo(twttr.router.profilePath({
                        screen_name: $(this).data("screen-name")
                    })), !1
                })
            }
        }), twttr.mediaType("Twimg", {
            icon: "photo",
            domain: "//twitter.com",
            attributionName: "Twitter",
            flaggable: !0,
            ssl: !0,
            skipAttributionInDiscovery: !0,
            matchers: {
                twimg: /^#{optional_protocol}?p\.twimg\.com\/[a-zA-Z0-9_-]+\.(?:jpg|png|gif)$/i,
                media: /^#{optional_protocol}?pic\.twitter\.com\/[a-zA-Z0-9]+$/i
            },
            attributionTemplate: "PhotobucketAttribution",
            getImageURL: function(a, c) {
                var d = this;
                this.process(function() {
                    d.metadata(function(d) {
                        if (d && d.image) {
                            var e = d.image;
                            a == b.constants.imageSizes.small || a == b.constants.imageSizes.medium ? e += ":thumb" : a == b.constants.imageSizes.large && (e += ":large"), c(e)
                        } else c(null)
                    })
                })
            },
            metadata: function(a) {
                a({
                    image: this.data.src,
                    name: this.data.name,
                    expandedUrl: this.data.url
                })
            },
            process: function(a, b) {
                var d = twttr.media.types.Twimg.matchers,
                    e = this,
                    f, g;
                if (this.url.match(d.twimg)) this.data.src = c(this.url), this.data.url = c(this.url), this.data.displayUrl = this.url, this.data.name = this.constructor._name;
                else {
                    if (!this.tweet || !this.tweet.entities.media) {
                        a();
                        return
                    }
                    var i = $.map(this.tweet.entities.media, function(a) {
                        return a.display_url
                    });
                    if ($.inArray(this.url, i) < 0) {
                        a();
                        return
                    }
                    $.each(this.tweet.entities.media, function() {
                        if (this.display_url == e.url) {
                            g = this;
                            return
                        }
                    });
                    if (!g) {
                        a();
                        return
                    }
                    twttr.isSSL() ? f = g.media_url_https : f = g.media_url, this.data.src = f, this.data.url = b && b.linkLarge === !0 ? g.expanded_url + "/large" : g.url, this.data.displayUrl = g.display_url, this.data.name = this.constructor._name
                }
                a()
            },
            isBlobStore: function() {
                return this.process($.noop), this.data.src && this.data.src.match(/\/\/pbs\.twimg\.com\//)
            },
            render: function(a) {
                var b = '<div class="twimg">                <a class="inline-media-image" data-inline-type="{{name}}" href="{{url}}" target="_blank" title="{{displayUrl}}">                  <img src="{{src}}" alt="{{displayUrl}}"/>                 </a>              </div>';
                $(a).append(Mustache.to_html(b, this.data))
            }
        }), twttr.mediaType("Ustream", {
            icon: "video",
            domain: "http://ustream.tv",
            ssl: !1,
            flaggable: !0,
            matchers: {
                recorded: /^#{optional_protocol}?ustream\.tv\/(recorded\/(?:\d+))/i,
                channel: /^#{optional_protocol}?ustream\.tv\/(channel\/(?:[\w\-]+)\/?)/i
            },
            metadata: function(a) {
                var b = null;
                this.data && this.data.imageUrl && this.data.imageUrl.small && (b = this.data.imageUrl.small), a({
                    title: this.data.title,
                    description: this.data.description ? twttr.helpers.truncate(this.data.description, 255, "...") : "",
                    image: b
                })
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.metadata(function(a) {
                        b(a.image)
                    })
                })
            },
            process: function(a, b) {
                var c = this;
                this.data.width = b && b.maxwidth || 390, this.data.height = this.calcHeight(this.data.width), (this.slug.match(this.constructor.re.channel) || this.slug.match(this.constructor.re.video)) && twttr.sandboxedAjax.send({
                    url: "http://api.ustream.tv/json/channel/" + RegExp.$1 + "/getInfo",
                    dataType: "jsonp",
                    data: {
                        key: this.constructor.API_KEY,
                        maxwidth: this.data.width
                    },
                    success: function(b) {
                        b !== null && (c.data.type = "channel", c.data.embed = c.useOpaqueModeForFlash(b.embedTag), c.data.imageUrl = b.imageUrl), a()
                    }
                })
            },
            content: function() {
                return this.data.type === "channel" ? this.data.embed : Mustache.to_html(this.constructor.templates[this.data.type], this.data)
            }
        }).statics({
            API_KEY: "12ab548e85128e0d3182ba3a346c3428",
            re: {
                video: /^recorded\/(\d+)/,
                channel: /^channel\/([\w\-]+)\/?/
            },
            templates: {
                video: '        <object width="{{width}}" height="{{height}}">          <param name="flashvars" value="autoplay=false&vid={{videoId}}&"/>          <param name="allowfullscreen" value="true"/>          <param name="allowscriptaccess" value="always"/>          <param name="wmode" value="opaque"/>          <param name="src" value="http://www.ustream.tv/flash/video/{{videoId}}"/>          <embed            flashvars="loc=%2F&autoplay=false&vid={{videoId}}&"            width="{{width}}"            height="{{height}}"            allowfullscreen="true"            allowscriptaccess="always"            wmode="opaque"            src="http://www.ustream.tv/flash/video/{{videoId}}"            type="application/x-shockwave-flash" />        </object>'
            }
        }), twttr.mediaType("Vevo", {
            icon: "video",
            domain: "http://vevo.com",
            ssl: !1,
            flaggable: !0,
            matchers: {
                standardVideo: /^#{optional_protocol}?vevo\.com\/watch\/[\w-]+\/[\w-]+\/([a-zA-Z0-9_]+)/i
            },
            process: function(a, b) {
                this.data.id = this.slug, this.data.width = b && b.maxwidth || 390, this.data.height = this.calcHeight(this.data.width), a()
            },
            content: function() {
                var a = '<object width="{{width}}" height="{{height}}">                <param name="movie" value="http://www.vevo.com/VideoPlayer/Embedded?videoId={{id}}&playlist=false&autoplay=0&playerId=62FF0A5C-0D9E-4AC1-AF04-1D9E97EE3961&playerType=embedded"/>                <param name="bgcolor" value="#000000"/>                <param name="allowFullScreen" value="true"/>                <param name="allowScriptAccess" value="always"/>                <param name="wmode" value="opaque"/>                <embed                  src="http://www.vevo.com/VideoPlayer/Embedded?videoId={{id}}&playlist=false&autoplay=0&playerId=62FF0A5C-0D9E-4AC1-AF04-1D9E97EE3961&playerType=embedded"                   type="application/x-shockwave-flash"                   allowfullscreen="true"                   allowscriptaccess="always"                   wmode="opaque"                   width="{{width}}"                   height="{{height}}"                   bgcolor="#000000" />              </object>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("Flickr", {
            icon: "photo",
            favicon: twttr.isSSL() ? "https://secure.flickr.com/favicon.ico" : "http://www.flickr.com/favicon.ico",
            domain: twttr.isSSL() ? "https://secure.flickr.com" : "http://www.flickr.com",
            deciderKey: "phoenix_flickr_details",
            flaggable: !0,
            matchers: {
                profile: /^#{optional_protocol}?flickr\.com\/(?:photos|people)\/([\w\@\-]+)\/?$/i,
                photo: /^#{optional_protocol}?flickr\.com\/photos\/[\w\@\-]+\/(\d+)\/?/i,
                sets: /^#{optional_protocol}?flickr\.com\/photos\/(?:[\w\@\-]+)\/sets\/(\d+)\/?(?:show\/?)?$/i,
                galleries: /^#{optional_protocol}?flickr\.com\/photos\/([\w\@\-]+)\/galleries\/(\d+)\/?$/i,
                pool: /^#{optional_protocol}?flickr\.com\/groups\/([\w\@\-]+)\/?(?:pool\/|discuss\/)?$/i
            },
            ssl: !0,
            metadata: function(a) {
                var b;
                this.data.photos && this.data.photos.length >= 1 ? (b = this.data.photos[0], a({
                    image: Mustache.to_html("//farm{{farm}}.static.flickr.com/{{server}}/{{id}}_{{secret}}.jpg", b),
                    title: this.data.title,
                    description: this.data.description,
                    author: {
                        name: this.data.author_name,
                        url: this.data.author_url
                    }
                })) : a(null)
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.metadata(function(a) {
                        a && a.image ? b(a.image) : b(null)
                    })
                })
            },
            process: function(a, b) {
                this.data.width = b && b.maxwidth || 390, this.data.height = this.calcHeight(this.data.width), this.data.domain = this.constructor.domain;
                var c = twttr.media.types.Flickr.matchers,
                    d = this,
                    e = this.url;
                if (e.match(c.photo)) {
                    var f = RegExp.$1;
                    this.makeRequest({
                        data: {
                            method: "flickr.photos.getInfo",
                            photo_id: f
                        },
                        success: function(b) {
                            b.photo && (d.data.author_name = b.photo.owner.realname, d.data.author_url = d.constructor.domain + "/photos/" + b.photo.owner.nsid, b.photo.media && b.photo.media == "video" && (d.data.isVideo = !0), d.data.photos = [b.photo]), a()
                        }
                    })
                } else e.match(c.sets) ? this._makeSetRequest(RegExp.$1, a) : e.match(c.profile) ? this.lookUpUserPhotos(RegExp.$1, this.slug, a) : e.match(c.pool) ? this._makeGroupRequestByName(RegExp.$1, a) : e.match(c.galleries) && this.makeRequest({
                    data: {
                        method: "flickr.urls.lookupGallery",
                        url: "flickr.com/photos/" + RegExp.$1 + "/galleries/" + RegExp.$2
                    },
                    success: function(b) {
                        var c = b.gallery.id;
                        d.makeRequest({
                            data: {
                                method: "flickr.galleries.getPhotos",
                                gallery_id: c
                            },
                            success: function(b) {
                                d.data.photos = b.photos.photo.slice(0, 16), d.data.isGallery = 1, a()
                            }
                        })
                    }
                });
                return
            },
            content: function() {
                var a = "",
                    b = twttr.media.types.Flickr;
                if (this.data.photos.length == 1) if (this.data.isVideo) {
                    var c = this.data.photos[0];
                    c.domain = this.data.domain, a += Mustache.to_html(b.templates.video, c)
                } else this.data.photos[0].href = this.data.photos[0].urls.url[0]._content, a += Mustache.to_html(b.templates.photo, this.data.photos[0]);
                else {
                    a = '<div class="flickr-group">' + this.createThumbList(this.data.photos) + "</div>";
                    if (this.data.isGallery) return a;
                    var d;
                    this.data.set_id ? d = b.photoSetFlashVars : this.data.group_id ? d = b.photoGroupFlashVars : d = b.photoUserFlashVars, d = twttr.merge({}, b.defaultSlideshowFlashVars, d, !0);
                    var e = [];
                    jQuery.each(d, function(a, b) {
                        e.push(a + "=" + b)
                    }), e = Mustache.to_html(e.join("&"), this.data), a += Mustache.to_html(b.templates.slideshow, {
                        flashvars: e,
                        domain: this.data.domain
                    })
                }
                return a
            }
        }).statics({
            API_KEY: "2a56884b56a00758525eaa2fee16a798",
            SECRET: "7c794fe3256175b6",
            REST_DOMAIN: "//widgets.platform.twitter.com",
            defaultSlideshowFlashVars: {
                lang: "en-us",
                offsite: !0,
                minH: 100,
                minW: 100
            },
            templates: {
                video: '<object width="{{width}}" height="{{height}}"                   type="application/x-shockwave-flash"                   data="{{domain}}/apps/video/stewart.swf?v=71377"                   classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">                   <param name="flashvars" value="intl_lang=en-us&photo_secret={{secret}}&photo_id={{id}}"/>                   <param name="movie" value="{{domain}}/apps/video/stewart.swf?v=71377"/>                   <param name="bgcolor" value="#000000"/>                   <param name="allowFullScreen" value="true"/>                   <param name="wmode" value="opaque"/>                   <embed                     type="application/x-shockwave-flash"                     src="{{domain}}/apps/video/stewart.swf?v=71377"                     bgcolor="#000000"                     allowfullscreen="true"                     wmode="opaque"                     flashvars="intl_lang=en-us&photo_secret={{secret}}&photo_id={{id}}"                     height="{{height}}"                     width="{{width}}" />                 </object>',
                photo: '<div class="flickr-photo">                   <a href="{{href}}" target="_blank">                     <img src="//farm{{farm}}.static.flickr.com/{{server}}/{{id}}_{{secret}}.jpg"/>                   </a>                 </div>',
                set: '<a href="{{href}}" style="text-decoration:none;" target="_blank">                <img class="flickr-thumb" src="//farm{{farm}}.static.flickr.com/{{server}}/{{id}}_{{secret}}_s.jpg"/>              </a>',
                slideshow: '<embed type="application/x-shockwave-flash"                             src="{{domain}}/apps/slideshow/show.swf?v=107931"                             width="{{width}}"                             height="{{height}}"                             id="slideShowMovie"                             bgcolor="#000000"                             quality="high"                             allowfullscreen="true"                             allowscriptaccess="always"                             wmode="opaque"                             flashvars={{flashvars}} />'
            },
            photoUserFlashVars: {
                user_id: "{{user_id}}",
                page_show_back_url: "/photos/{{user_name}}/",
                page_show_url: "/photos/{{user_name}}/show/"
            },
            photoGroupFlashVars: {
                group_id: "{{group_id}}",
                page_show_url: "/groups/{{group_id}}/pool/show/",
                page_show_back_url: "/groups/{{group_id}}/pool/"
            },
            photoSetFlashVars: {
                set_id: "{{set_id}}",
                page_show_back_url: "/photos/{{user_name}}/sets/{{set_id}}/",
                page_show_url: "/photos/{{user_name}}/sets/{{set_id}}/show/"
            }
        }).methods({
            base58: function(a) {
                var b = "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",
                    c = a.length,
                    d = 0,
                    e = 1;
                for (var f = c - 1; f >= 0; f--) d += e * b.indexOf(a[f]), e *= b.length;
                return d
            },
            lookUpUserPhotos: function(a, b, c) {
                var d = this;
                this.makeRequest({
                    data: {
                        method: "flickr.urls.lookupUser",
                        url: "flickr.com/photos/" + a
                    },
                    success: function(b) {
                        if (b.stat === "fail") {
                            c();
                            return
                        }
                        var e = b.user.id,
                            f = b.user.username._content;
                        d.makeRequest({
                            data: {
                                method: "flickr.people.getPublicPhotos",
                                user_id: e
                            },
                            success: function(b) {
                                d.data.photos = b.photos.photo.slice(0, 16), d.data.user_id = e, d.data.user_name = a, d.data.author_name = f, d.data.author_url = d.constructor.domain + "/photos/" + e, c()
                            }
                        })
                    }
                })
            },
            createThumbList: function(a) {
                var b = "http://www.flickr.com/photos",
                    c = this;
                return $.map(a, function(a, c) {
                    return a.href = [b, a.owner, a.id].join("/"), Mustache.to_html(twttr.media.types.Flickr.templates.set, a)
                }).join("")
            },
            _makeGroupRequestByName: function(a, b) {
                this.makeRequest({
                    data: {
                        method: "flickr.urls.lookupGroup",
                        url: "flickr.com/groups/" + a
                    },
                    success: twttr.bind(this, function(a) {
                        this._makeGroupRequestById(a.group.id, b)
                    })
                })
            },
            _makeGroupRequestById: function(a, b) {
                this.makeRequest({
                    data: {
                        method: "flickr.groups.pools.getPhotos",
                        group_id: a
                    },
                    success: twttr.bind(this, function(c) {
                        this.data.photos = c.photos.photo.slice(0, 16), this.data.group_id = a, b()
                    })
                })
            },
            _makeSetRequest: function(a, b) {
                this.makeRequest({
                    data: {
                        method: "flickr.photosets.getPhotos",
                        photoset_id: a
                    },
                    success: twttr.bind(this, function(a) {
                        var c = a.photoset.owner;
                        this.data.photos = a.photoset.photo.slice(0, 16), twttr.each(this.data.photos, function(a) {
                            a.owner = c
                        }), this.data.set_id = a.photoset.id, this.data.user_name = c, this.data.author_name = a.photoset.ownername, this.data.author_url = this.constructor.domain + "/photos/" + a.photoset.owner, b()
                    })
                })
            },
            makeRequest: function(a) {
                var b = {
                    url: twttr.media.types.Flickr.REST_DOMAIN + "/services/rest",
                    dataType: "jsonp",
                    jsonp: "jsoncallback",
                    data: {
                        format: "json",
                        api_key: twttr.media.types.Flickr.API_KEY
                    },
                    success: function(a) {}
                };
                twttr.sandboxedAjax.send(twttr.merge({}, b, a, !0))
            }
        }), twttr.mediaType("DeviantArt", {
            title: "deviantART",
            icon: "photo",
            domain: "http://deviantart.com",
            flaggable: !0,
            matchers: {
                canonical: /^(#{protocol}?(?:[\w\-]+\.)deviantart\.com\/art\/(?:[\w\@-]+))/i,
                oldStyle: /^(#{protocol}?(?:[\w\-]+\.)deviantart\.com\/deviation\/(?:[\w\@-]+))/i,
                gallery: /^(#{protocol}?(?:[\w\-]+\.)deviantart\.com\/gallery\/#\/d(?:[\w\@-]+))/i,
                favMe: /^(#{protocol}?fav\.me\/(?:[\w\@-]+))/i,
                oldView: /^(#{protocol}?(?:[\w\-]+\.)deviantart\.com\/view\/(?:[\w\@-]+))/i
            },
            process: function(a, b) {
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://backend.deviantart.com/oembed",
                    data: {
                        url: this.slug,
                        format: "jsonp",
                        maxwidth: b.maxwidth
                    },
                    dataType: "jsonp",
                    success: twttr.bind(this, function(b) {
                        this.data.href = this.url, this.data.name = this.constructor._name, this.data.src = b.thumbnail_url, this.data.author_name = b.author_name, this.data.author_url = b.author_url, a()
                    })
                })
            },
            attribution: function() {
                var a = "         <div class='media-attribution'>           <span>via</span>            <a target='_blank' class='media-attribution-link' href='{{author_url}}'>{{author_name}}</a>            from <img src='{{icon_url}}'/>           <a target='_blank' data-media-type='{{media_type}}' class='media-attribution-link' href='{{url}}'>{{title}}</a>         </div>";
                return Mustache.to_html(a, {
                    url: this.constructor.domain,
                    icon_url: twttr.assets.path("/partner-favicons/DeviantArt.ico"),
                    title: this.constructor.title || this.constructor._name,
                    media_type: this.constructor._name,
                    author_name: this.data.author_name,
                    author_url: this.data.author_url
                })
            },
            content: function() {
                var a = '<div class="deviantart">                <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                  <img src="{{src}}"/>                </a>              </div>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("Vimeo", {
            icon: "video",
            domain: "//vimeo.com",
            ssl: !0,
            flaggable: !0,
            height: 150,
            matchers: {
                video: /^#{optional_protocol}?vimeo\.com\/(\d+)/i
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.data && c.data.thumbnail_url ? b(c.data.thumbnail_url) : b(null)
                })
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, this.data.video_id = this.slug, twttr.sandboxedAjax.send({
                    url: "//vimeo.com/api/oembed.json",
                    dataType: "jsonp",
                    data: {
                        url: "http://vimeo.com/" + this.slug,
                        width: b.maxwidth || 446
                    },
                    success: function(b) {
                        c.data.thumbnail_url = b.thumbnail_url, c.data.width = b.width, c.data.height = b.height, a()
                    }
                })
            },
            render: function(a) {
                this.renderIframe(a, "//player.vimeo.com/video/" + this.data.video_id.replace(/[^0-9]/g, ""))
            }
        }), twttr.mediaType("Etsy", {
            icon: "photo",
            domain: "http://etsy.com",
            ssl: !1,
            matchers: {
                itemListing: /^#{optional_protocol}?etsy\.com\/listing\/(\d+)/i
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.data && c.data.images && c.data.images.length > 0 ? b(c.data.images[0].url_170x135) : b(null)
                })
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, this.data.itemId = this.slug, this.data.href = this.url, this.data.name = this.constructor._name, twttr.sandboxedAjax.send({
                    url: "http://openapi.etsy.com/v2/public/listings/" + this.slug + ".js",
                    dataType: "jsonp",
                    data: {
                        detail_level: "high",
                        api_key: "qev732j7b8j44eg5pqsb38k4",
                        includes: "Images(url_170x135):6",
                        fields: "listing_id,title,price,currency_code,quantity",
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        var d = b.results[0];
                        c.data.title = d.title;
                        switch (d.currency_code) {
                        case "USD":
                            c.data.price = d.quantity + " for $" + (d.price || 0);
                            break;
                        default:
                            c.data.price = d.quantity + " for " + (d.price || 0) + " " + d.currency_code
                        }
                        c.data.images = d.Images;
                        var e = $.map(d.Images, function(a, b) {
                            return '<a class="inline-media-image" data-inline-type="{{name}}" target="_blank" href="{{href}}">                      <img class="thumb" src="' + a.url_170x135 + '"/>                    </a>'
                        }).join(""),
                            f = '            <div class="etsy">              <h3>{{title}}</h3>              <p>{{price}}</p>              <p>' + e + "</p>            </div>";
                        c.data.html = Mustache.to_html(f, c.data), a()
                    }
                })
            },
            content: function() {
                return this.data.html
            }
        }), twttr.mediaType("Photozou", {
            icon: "photo",
            domain: "http://photozou.jp",
            flaggable: !0,
            matchers: {
                photo: /^#{optional_protocol}?photozou\.(?:com|jp)\/photo\/show\/\d+\/(\d+)/i
            },
            ssl: !1,
            getImageURL: function(a, c, d) {
                var e = this;
                this.process(function() {
                    e.data && e.data.src ? d && d < 120 || a == b.constants.imageSizes.small ? c(e.data.smallSrc) : c(e.data.src) : c(null)
                })
            },
            process: function(a) {
                this.data.src = "http://photozou.jp/p/img/" + this.slug, this.data.smallSrc = "http://photozou.jp/p/thumb/" + this.slug, this.data.href = this.url, this.data.name = this.constructor._name, a()
            },
            content: function() {
                var a = '<div class="photozou">                 <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                   <img src="{{src}}"/>                 </a>               </div>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("TwitPic", {
            icon: "photo",
            domain: "//twitpic.com",
            flaggable: !0,
            matchers: {
                media: /^#{optional_protocol}?twitpic\.com\/(?!(?:place|photos|events)\/)([a-zA-Z0-9\?\=\-]+)/i
            },
            ssl: !0,
            process: function(a) {
                this.data.src = this.slug, this.data.href = this.url, this.data.name = this.constructor._name, a()
            },
            getImageURL: function(a, c) {
                if (this.slug) {
                    var d = "";
                    a == b.constants.imageSizes.medium ? d = "//twitpic.com/show/thumb/" + this.slug : a == "small" ? d = "//twitpic.com/show/mini/" + this.slug : d = "//twitpic.com/show/iphone/" + this.slug, c(d)
                } else c(null)
            },
            content: function() {
                var a = '<div class="twitpic">                 <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                   <img src="//twitpic.com/show/large/{{src}}"/>                 </a>              </div>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("Twitgoo", {
            icon: "photo",
            domain: "http://twitgoo.com",
            ssl: !1,
            flaggable: !0,
            matchers: {
                image: /^#{optional_protocol}?twitgoo\.com\/(?!a\/)([a-zA-Z0-9\-\?\=]+)/i
            },
            getImageURL: function(a, c) {
                this.slug ? c(b.util.supplant("http://twitgoo.com/{src}/img", {
                    src: this.slug
                })) : c(null)
            },
            process: function(a) {
                this.data.src = this.slug, this.data.href = this.url, this.data.name = this.constructor._name, a()
            },
            content: function() {
                var a = '<div class="twitgoo">                 <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                   <img src="http://twitgoo.com/{{src}}/img"/>                 </a>               </div>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("DailyBooth", {
            icon: "photo",
            domain: "//dailybooth.com",
            ssl: !0,
            matchers: {
                photo1: /^#{optional_protocol}?dailybooth\.com\/(u\/\w+)/i,
                photo2: /^#{optional_protocol}?dailybooth\.com\/(\w+\/\w+)/i
            },
            getImageURL: function(a, c) {
                var d = this;
                this.process(function() {
                    d.data ? a === b.constants.imageSizes.original ? c(d.data.src) : c(d.data.smallImage) : c(null)
                })
            },
            process: function(a) {
                var b = this;
                this.data.href = c(this.url), this.data.name = this.constructor._name;
                if (this.slug.match(/^u\/(\w+)/)) var d = parseInt(RegExp.$1, 36),
                    e = this.getBaseTen(d);
                else {
                    var e = this.slug.match(/\w+\/(\w+)/);
                    if (!e) {
                        a();
                        return
                    }
                    e = e[1]
                }
                twttr.sandboxedAjax.send({
                    url: "//api.dailybooth.com/v1/picture/" + e + ".json",
                    dataType: "jsonp",
                    type: "get",
                    success: function(d) {
                        b.data.src = c(d.urls.large), b.data.smallImage = c(d.urls.small), a()
                    }
                })
            },
            content: function() {
                var a = '<div class="dailybooth">                 <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                   <img src="{{src}}"/>                 </a>               </div>';
                return Mustache.to_html(a, this.data)
            }
        }).methods({
            getBaseTen: function(a) {
                if (Number.prototype.toFixed) a = a.toFixed(5), a = parseFloat(a);
                else {
                    var b = Math.floor(a),
                        c = a - b;
                    a = b + Math.round(c * 1e14) / 1e14
                }
                return a
            }
        }), twttr.mediaType("YFrog", {
            domain: "//yfrog.com",
            ssl: !0,
            flaggable: !0,
            icon: function(a) {
                var b = this.slug.charAt(this.slug.length - 1);
                switch (b) {
                case "j":
                case "p":
                case "b":
                case "t":
                case "g":
                    return "photo";
                case "z":
                case "f":
                case "s":
                    return "video"
                }
            },
            matchers: {
                media: /^#{optional_protocol}?yfrog\.(?:com|ru|com\.tr|it|fr|co\.il|co\.uk|com\.pl|pl|eu|us)\/(\w+)/i
            },
            getImageURL: function(a, c) {
                this.slug ? this.icon() === "video" ? c(b.util.supplant("//yfrog.com/{id}:frame", {
                    id: this.slug
                })) : a === b.constants.imageSizes.small ? c(b.util.supplant("//yfrog.com/{id}:twthumb", {
                    id: this.slug
                })) : c(b.util.supplant("//yfrog.com/{id}:tw1", {
                    id: this.slug
                })) : c(null)
            },
            process: function(a) {
                this.data.media_id = this.slug, this.data.href = this.url.replace(/\/$/, ""), this.data.name = this.constructor._name, a()
            },
            content: function() {
                var a, b = this.data.media_id.charAt(this.data.media_id.length - 1);
                if (b == "j" || b == "p" || b == "b" || b == "t" || b == "g") a = '<div class="yfrog">               <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                 <img src="//yfrog.com/{{media_id}}:iphone">               </a>             </div>';
                else if (b == "z" || b == "f" || b == "s") a = '<embed                src="//yfrog.com/{{media_id}}:embed"                width="100%"                allowFullScreen="true"                wmode="transparent"                type="application/x-shockwave-flash"/>';
                return a || (a = ""), Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("Lockerz", {
            icon: "photo",
            domain: "//www.lockerz.com",
            ssl: !0,
            matchers: {
                tweetphoto: /^#{optional_protocol}?tweetphoto\.com\/(\d+)/i,
                plixi: /^#{protocol}?(?:(?:m|www)\.)?plixi\.com\/p\/(\d+)/i,
                lockerz: /^#{protocol}?(?:(?:m|www)\.)?lockerz\.com\/s\/([0-9\?\=\- ]+)/i
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.data && c.data.src ? b(c.data.src) : b(null)
                })
            },
            process: function(a) {
                this.data.src = "//api.plixi.com/api/tpapi.svc/imagefromurl?size=medium&url=" + encodeURIComponent(this.url), this.data.href = this.url, this.data.name = this.constructor._name, a()
            },
            content: function() {
                var a = '<div class="lockerz">                 <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                   <img src="{{src}}" />                 </a>              </div>';
                return Mustache.to_html(a, this.data)
            },
            flaggable: !0
        }), twttr.mediaType("Kiva", {
            icon: "generic",
            domain: "http://www.kiva.org",
            ssl: !1,
            matchers: {
                project: /^#{optional_protocol}?kiva\.org\/lend\/(\d+)/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://www.kiva.org/services/oembed",
                    dataType: "jsonp",
                    jsonp: "jsonp",
                    data: {
                        url: "http://www.kiva.org/lend/" + this.slug,
                        format: "jsonp",
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        c.data.html = b.html, a()
                    }
                })
            },
            content: function() {
                return this.data.html
            }
        }), twttr.mediaType("TwitVid", {
            icon: "video",
            domain: "//www.twitvid.com",
            ssl: !0,
            flaggable: !0,
            favicon: "//www.twitvid.com/favicon.ico",
            matchers: {
                video: /^#{optional_protocol}?twitvid\.com\/([a-zA-Z0-9_\-\?\=]+)/i
            },
            process: function(a, b) {
                this.data.media_id = this.slug, this.data.width = b && b.maxwidth || 425, this.data.height = this.calcHeight(this.data.width), a()
            },
            metadata: function(a) {
                a({
                    image: b.util.supplant("//www.twitvid.com/{media_id}:largethumb", this.data)
                })
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.metadata(function(a) {
                        a && a.image ? b(a.image) : b(null)
                    })
                })
            },
            render: function(a) {
                this.renderIframe(a, twttr.proto + "://www.twitvid.com/embed.php?autoplay=0&guid=" + this.data.media_id)
            }
        }), twttr.mediaType("GoogleVideo", {
            icon: "video",
            domain: "http://video.google.com",
            ssl: !1,
            flaggable: !0,
            matchers: {
                video: /^#{optional_protocol}video\.google\.com\/([a-zA-Z0-9_\-\?\=\&\#]+)/i
            },
            process: function(a, b) {
                this.data.width = 400, this.data.height = 326, b && b.maxwidth && b.maxwidth < this.data.width && (this.data.width = b.maxwidth, this.data.height = Math.round(b.maxwidth * 326 / 400)), this.slug.match(/#docid=(\-?\d+)/) ? (this.data.doc_id = RegExp.$1, a()) : this.slug.match(/\?docid=(\-?\d+)/) && (this.data.doc_id = RegExp.$1, a())
            },
            content: function() {
                var a = '         <embed type="application/x-shockwave-flash"                 id="VideoPlayback"                 src="http://video.google.com/googleplayer.swf?docid={{doc_id}}&hl=en&fs=true"                 style="width:{{width}}px;height:{{height}}px"                 allowFullScreen="true"                 allowScriptAccess="always"                wmode="opaque" />';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("JustinTV", {
            icon: "video",
            domain: "http://justin.tv",
            ssl: !1,
            flaggable: !0,
            matchers: {
                embed: /^#{protocol_no_ssl}([a-zA-Z0-9_\-\?\=]*\.)?justin\.tv\/[a-zA-Z0-9]+(\/b\/\d+)?\/?(\?\w*?)?(#\w*)?$/i
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.data && c.data.thumbnail_url ? b(c.data.thumbnail_url) : b(null)
                })
            },
            process: function(a, b) {
                var c = this,
                    d = 400,
                    e = 300;
                twttr.sandboxedAjax.send({
                    url: "http://api.justin.tv/api/embed/from_url.json",
                    dataType: "jsonp",
                    jsonp: "jsonp",
                    data: {
                        url: c.url,
                        maxwidth: b && b.maxwidth || d
                    },
                    success: function(f) {
                        f.error || (c.data.embed = c.useOpaqueModeForFlash(c.resizeHtmlEmbed(f.html, b, d, e)), f.thumbnail_url && (c.data.thumbnail_url = f.thumbnail_url), a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("Kickstarter", {
            icon: "generic",
            domain: "//kickstarter.com",
            ssl: !0,
            matchers: {
                project: /^#{optional_protocol}?(kickstarter\.com\/projects\/[a-zA-Z0-9_\-]+\/[a-zA-Z0-9_\-]+)/i
            },
            process: function(a) {
                this.data.height = "380px", this.data.width = "220px", a()
            },
            render: function(a) {
                var b = this.slug;
                b.slice(-1) !== "/" && (b += "/"), b += "widget/card.html", this.renderIframe(a, twttr.proto + "://www." + b)
            }
        }), twttr.mediaType("MTV", {
            icon: "video",
            domain: "http://mtv.com",
            ssl: !1,
            matchers: {
                video: /^#{optional_protocol}?mtv\.com\/videos\/([a-z0-9\-\_]+\/)+[0-9]+\/[a-z0-9\-\_]+\.jhtml(#[a-z0-9\=\&]+)?/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://www.mtv.com/videos/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.url = b.url, b.width > 315 ? (c.data.width = 315, c.data.height = Math.floor(b.height * 315 / b.width)) : (c.data.height = b.height, c.data.width = b.width), a())
                    }
                })
            },
            content: function() {
                var a = '<object width="{{width}}" height="{{height}}">                <param name="movie" value="{{url}}"/>                <param name="allowFullScreen" value="true"/>                <param name="allowscriptaccess" value="always"/>                <param name="wmode" value="opaque"/>                <embed src="{{url}}"                        type="application/x-shockwave-flash"                        allowscriptaccess="always"                        allowfullscreen="true"                        wmode="opaque"                        width="{{width}}"                        height="{{height}}"/>              </object>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("WashingtonPost", {
            icon: "video",
            domain: "http://washingtonpost.com",
            matchers: {
                video: /(^(?:#{protocol}?(?:[\w\-\_]+\.))?washingtonpost\.com\/wp-dyn\/content\/video\/\d{4}\/\d{2}\/\d{2}\/VI\d+\.html(#{wildcard})?)/i
            },
            ssl: !1,
            process: function(a, b) {
                var c = this,
                    d = 400,
                    e = 225;
                twttr.sandboxedAjax.send({
                    url: "http://specials.washingtonpost.com/tv/info.json",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b && b.maxwidth || d
                    },
                    success: function(f) {
                        f.error || (c.data.embed = c.useOpaqueModeForFlash(c.resizeHtmlEmbed(f.html, b, d, e)), c.data.width = f.width, c.data.height = f.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("MSNBC", {
            icon: "video",
            domain: "http://msnbc.com",
            ssl: !1,
            matchers: {
                video: /(^(?:#{protocol}?(?:[\w\-\_]+\.))?msnbc\.msn\.com\/id\/\d{1,8}\/vp\/\d{1,8}(#{wildcard})?)/i
            },
            process: function(a, b) {
                var c = this,
                    d = 420,
                    e = 245;
                twttr.sandboxedAjax.send({
                    url: "http://www.polls.newsvine.com/_labs/twitter/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        format: "jsonp",
                        url: this.url,
                        maxwidth: b && b.maxwidth || d
                    },
                    success: function(f) {
                        f.error || (c.data.embed = c.resizeHtmlEmbed(f.html, b, d, e), c.data.width = f.width, c.data.height = f.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("CNN", {
            icon: "video",
            domain: "http://cnn.com",
            title: "CNN Video",
            ssl: !1,
            deciderKey: "phoenix_cnn_details",
            matchers: {
                video: /(^(?:#{protocol}?(?:(?:www|edition|us)\.)?)?cnn\.com\/video\/[\?|#]\/#{wildcard})/i
            },
            process: function(a, b) {
                var c = this,
                    d = this.url,
                    e = 416,
                    f = 374,
                    g = d.split("?");
                g.length > 2 && (g.pop(), d = g.join("?")), twttr.sandboxedAjax.send({
                    url: "http://newspulse.cnn.com/widget/json/twitter-video",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        format: "jsonp",
                        maxwidth: b && b.maxwidth || e,
                        url: d
                    },
                    success: function(d) {
                        d.error || (c.data.embed = c.resizeHtmlEmbed(d.html, b, e, f), c.data.attribution_url = "http://cnn.com/video", c.data.width = d.width, c.data.height = d.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("Apple", {
            icon: twttr.isT1 ?
            function() {
                switch (this.matchLabel) {
                case "song":
                    return "song";
                case "album":
                    return "album";
                case "music_video":
                case "video":
                case "movie":
                case "tv":
                    return "video";
                case "software":
                    return "software";
                case "event":
                case "preorder":
                case "playlist":
                case "ping_playlist":
                case "podcast":
                case "book":
                default:
                    return "generic"
                }
            } : "song",
            domain: "http://itunes.apple.com",
            deciderKey: "phoenix_apple_itunes",
            matchers: {
                song: /^#{itunes_protocol}(?:\/album)\/.*\?i=/i,
                album: /^#{itunes_protocol}(?:\/album)\//i,
                event: /^#{itunes_protocol}\/event\//i,
                music_video: /^#{itunes_protocol}(?:\/music-video)\//i,
                video: /^#{itunes_protocol}(?:\/video)\//i,
                software: /^#{itunes_protocol}(?:\/app)\//i,
                playlist: /^#{itunes_protocol}(?:\/imix)\//i,
                ping_playlist: /^#{itunes_protocol}(?:\/imixes)\?/i,
                preorder: /^#{itunes_protocol}(?:\/preorder)\//i
            },
            ssl: !1,
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.data && c.data.src ? b(c.data.src) : b(null)
                })
            },
            enableAPI: !1,
            validActions: {
                resizeFrame: !0,
                bind: !0,
                unbind: !0
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://itunes.apple.com/WebObjects/MZStore.woa/wa/remotePreview",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.src = b.src, c.data.attribution_icon = b.attribution_icon, c.data.attribution_url = b.attribution_url, c.data.attribution_title = "iTunes", b.favicon && (c.data.attribution_icon = b.favicon), b.faviconLink && (c.data.attribution_url = b.faviconLink), b.height && (c.data.height = b.height), a())
                    }
                })
            },
            render: function(a) {
                this.renderEmbeddedApplication(a, this.data.src)
            }
        });
        var d = {
            _queue: [],
            push: function(a, b) {
                b === !0 ? this._queue.unshift(a) : this._queue.push(a), this._process()
            },
            _process: function() {
                var a = this;
                if (this._isProcessing) return;
                this._isProcessing = !0, setTimeout(function() {
                    var b = a._queue.shift();
                    a._isProcessing = !1, b && (b(), a._process())
                }, 200)
            }
        };
        twttr.mediaType("Instagram", {
            icon: "photo",
            domain: "//instagr.am",
            title: "Instagram",
            deciderKey: "phoenix_instagram_and_friends",
            ssl: !0,
            height: 301,
            matchers: {
                video: /^#{optional_protocol_subdomain}?(?:instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+\/?)/i
            },
            getImageURL: function(a, c) {
                var d = this;
                this.process(function() {
                    if (d.data && d.data.href) {
                        var e = b.constants.imageSizes;
                        a === e.small || a === e.medium ? c(d.data.smallSrc) : c(d.data.src)
                    } else c(null)
                }, {
                    size: a
                })
            },
            process: function(a, c) {
                this.data.href = Mustache.to_html("{{domain}}/p/{{slug}}", {
                    domain: this.constructor.domain,
                    slug: this.slug
                }), this.data.src = b.util.joinPath(this.data.href, "media/?size=l"), this.data.smallSrc = b.util.joinPath(this.data.href, "media/?size=t"), this.data.name = this.constructor._name, d.push(a, c && c.size === b.constants.imageSizes.large)
            },
            content: function() {
                var a = '        <div class="instagram">          <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">            <img src="{{src}}"/>          </a>        </div>';
                return Mustache.to_html(a, this.data)
            },
            flaggable: !0
        }), twttr.mediaType("Rdio", {
            icon: "song",
            domain: "//rdio.com",
            ssl: !0,
            matchers: {
                rdio: /^#{optional_protocol}(?:rd\.io|rdio\.com)\/#{wildcard}/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "//rdio.com/api/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth || 390
                    },
                    success: function(b) {
                        b.error || (c.data.embed = c.resizeHtmlEmbed(b.html), a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    b(this.url)
                }, {
                    maxwidth: 500
                })
            }
        }), twttr.mediaType("Dipdive", {
            domain: "http://dipdive.com",
            ssl: !1,
            deciderKey: "phoenix_dipdive_details",
            matchers: {
                photos: /^#{optional_protocol_subdomain}?dipdive\.com\/(((?:member\/[a-zA-Z0-9\-]+\/)?pictures\/([0-9]+))|(v\/[a-zA-Z0-9]+))/i,
                videos: /^#{optional_protocol_subdomain}?dipdive\.com\/(((?:member\/[a-zA-Z0-9\-]+\/)?media\/([0-9]+))|(v\/[a-zA-Z0-9]+))/i
            },
            icon: function(a) {
                return this._icon ? this._icon : (this.url.match(/pictures/) ? this._icon = "photo" : this._icon = "video", this._icon)
            },
            process: function(a, b) {
                var c = this,
                    d = 425,
                    e = 385;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://api.dipdive.com/oembed.jsonp",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b && b.maxwidth || d
                    },
                    success: function(f) {
                        f.error || (f.type === "photo" ? (c.data.type = "photo", c.data.href = f.url, c.data.name = c.constructor._name) : (c.data.embed = c.resizeHtmlEmbed(f.html, b, d, e), c.data.width = f.width, c.data.height = f.height), a())
                    }
                })
            },
            content: function() {
                var a;
                return this.data.type === "photo" ? (a = '<div class="dipdive">               <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                 <img src="{{href}}"/>               </a>             </div>', Mustache.to_html(a, this.data)) : this.data.embed
            },
            flaggable: !0
        }), twttr.mediaType("SlideShare", {
            icon: "generic",
            domain: "http://slideshare.com",
            ssl: !0,
            deciderKey: "phoenix_instagram_and_friends",
            matchers: {
                slides: /^#{optional_protocol}?slideshare\.(?:com|net)\/[a-zA-Z0-9\.]+\/[a-zA-Z0-9-]+\/?#{wildcard}?/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "https://www.slideshare.net/api/oembed/2",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        format: "json",
                        maxwidth: b.maxwidth || 390
                    },
                    success: function(b) {
                        b.error || (c.data.embed = c.resizeHtmlEmbed(b.html), c.data.attribution_url = b.author_url, c.data.attribution_title = b.author_name, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            },
            flaggable: !0
        }), twttr.mediaType("BlipTV", {
            icon: "video",
            domain: "//blip.tv",
            flaggable: !0,
            title: "blip.tv",
            ssl: !1,
            deciderKey: "phoenix_instagram_and_friends",
            matchers: {
                videos: /^#{optional_protocol}?blip\.tv\/(?:(?:file\/[\w-]+)|(?:(?:[\w-]+\/)?[\w-]+-(?:\d+)))\/?/i
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    b(c.data.thumbnail_url)
                })
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "//blip.tv/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.embed = b.html, c.data.thumbnail_url = b.thumbnail_url, c.data.width = b.width, c.data.height = b.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("Livestream", {
            icon: "video",
            domain: "http://www.livestream.com",
            ssl: !1,
            flaggable: !0,
            matchers: {
                wwwlivestream: /^#{optional_protocol}?livestream\.com\/[\w_]+(\/#{wildcard})?/i,
                livestream: /^#{protocol}?livestre\.am\/[\w_]+(\/#{wildcard})?/i,
                twitcam: /^#{protocol}?twitcam\.(?:livestream\.)com\/[\w_]+(\/#{wildcard})?/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://www.livestream.com/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.embed = b.html, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("WallStreetJournal", {
            icon: "video",
            domain: "http://online.wsj.com",
            title: "The Wall Street Journal Digital Network",
            ssl: !1,
            matchers: {
                video: /^#{protocol}?online\.wsj\.com\/video\/[A-Z0-9a-z\-]+\/[A-Z0-9a-z\-]+\.html/i
            },
            process: function(a, b) {
                var c = this,
                    d = 450,
                    e = 344;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://online.wsj.com/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b && b.maxwidth || d
                    },
                    success: function(f) {
                        f.error || (c.data.embed = c.useOpaqueModeForFlash(c.resizeHtmlEmbed(f.html, b, d, e)), c.data.width = f.width, c.data.height = f.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("Hulu", {
            icon: "video",
            domain: "http://www.hulu.com",
            ssl: !1,
            height: 253,
            matchers: {
                video: /^#{optional_protocol}?hulu\.com\/w(atch)?\/([a-zA-Z0-9]+)/i
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    b(c.data.thumbnail_url)
                })
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://www.hulu.com/api/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.embed = c.useOpaqueModeForFlash(b.html), c.data.thumbnail_url = b.thumbnail_url, c.data.width = b.width, c.data.height = b.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("NHL", {
            icon: "video",
            domain: "http://www.nhl.com",
            ssl: !1,
            matchers: {
                video: /^#{protocol}?video\.([a-z]{4,11}\.)?nhl\.com\/videocenter\/console\?(((catid=-?\d+&)?id=\d+)|(hlg=\d{8},\d,\d{1,4}(&event=[A-Z0-9]{4,6})?)|(hlp=\d{5,10}(&event=[A-Z0-9]{4,6})?))/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://video.nhl.com/videocenter/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.embed = c.useOpaqueModeForFlash(b.html), c.data.width = b.width, c.data.height = b.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("Meetup", {
            icon: "generic",
            domain: "//www.meetup.com",
            deciderKey: "phoenix_local_meetup",
            ssl: !0,
            matchers: {
                anevent: /^#{protocol_no_ssl}?(?:(((www|dev)\.){0,2}?meetup.com)|meetu.ps)\/(?:u\/)?[\w\-]{3,}(?:[a-zA-Z0-9_#\.\-\?\&\=\/]+)/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "//api.meetup.com/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.html = b.html, a())
                    }
                })
            },
            content: function() {
                return this.data.html
            }
        }), twttr.mediaType("Plancast", {
            icon: "generic",
            domain: "//plancast.com",
            deciderKey: "phoenix_local_plancast",
            ssl: !0,
            matchers: {
                anevent: /^#{protocol}?(?:[a-z0-9]+\.)?plancast\.com\/p\/(?:[a-z0-9]+)\/?$/i
            },
            enableAPI: !1,
            validActions: {
                resizeFrame: !0,
                bind: !0,
                unbind: !0
            },
            process: function(a, b) {
                var d = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "//plancast.com/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (d.data.src = c(b.src), b.height && (d.data.height = b.height), a())
                    }
                })
            },
            render: function(a) {
                this.renderEmbeddedApplication(a, this.data.src)
            }
        }), twttr.mediaType("Gowalla", {
            icon: "generic",
            domain: "//www.gowalla.com",
            deciderKey: "phoenix_local_gowalla",
            ssl: !0,
            matchers: {
                anevent: /^#{protocol}?(((go)?wal.la)\/([chpnt])\/\w+\/?|gowalla.com\/(trips|challenges|checkins|pins)\/\d+\/?)/i
            },
            enableAPI: !1,
            validActions: {
                resizeFrame: !0,
                bind: !0,
                unbind: !0
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "//gowalla.com/api/twitter_oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.src = b.src, b.height && (c.data.height = b.height), a())
                    }
                })
            },
            render: function(a) {
                this.renderEmbeddedApplication(a, this.data.src)
            }
        }), twttr.mediaType("Foursquare", {
            icon: "generic",
            domain: "//www.foursquare.com",
            deciderKey: "phoenix_local_foursquare",
            ssl: !0,
            matchers: {
                anevent: /^#{optional_protocol}?foursquare\.com\/([a-zA-Z0-9\-]+)\/checkin\/(#{wildcard})/i
            },
            enableAPI: !1,
            validActions: {
                resizeFrame: !0,
                bind: !0,
                unbind: !0
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "https://api.foursquare.com/services/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.src = b.src, b.height && (c.data.height = b.height), a())
                    }
                })
            },
            render: function(a) {
                this.renderEmbeddedApplication(a, this.data.src)
            }
        }), twttr.mediaType("Amazon", {
            icon: "generic",
            domain: "//www.amazon.com",
            deciderKey: "phoenix_amazon_details",
            ssl: !0,
            matchers: {
                review: /^#{protocol}?www\.amazon\.(com|de|fr|ca|it|(?:co\.(?:jp|uk)))(?:(?!(\/[^\/]*)?\/[bs][\/\?]|\/gp\/browse\.html|\/aw\/ri\/|\/gp\/search|\/search|\/gp\/feature|\/gp\/goldbox|\/gp\/registry))(?:#{wildcard}?)/i
            },
            enableAPI: !1,
            validActions: {
                resizeFrame: !0,
                bind: !0,
                unbind: !0
            },
            process: function(a, b) {
                var c = twttr.media.types.Amazon.matchers,
                    d = this,
                    e = this.url;
                b = b || {}, matches = e.match(c.review), matches[1] && twttr.sandboxedAjax.send({
                    url: "//www.amazon." + matches[1] + "/gp/twitter/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (d.data.src = b.src, b.height && (d.data.height = b.height), a())
                    }
                })
            },
            render: function(a) {
                this.renderEmbeddedApplication(a, this.data.src)
            }
        }), twttr.mediaType("AolVideo", {
            icon: "video",
            domain: "http://www.aol.com",
            title: "Aol",
            deciderKey: "phoenix_aol_video",
            matchers: {
                video: /^#{protocol_no_ssl}?share\.aolvideo\.com\/twitter\.php\?video\=(#{wildcard})/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://share.aolvideo.com/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.embed = b.html, c.data.width = b.width, c.data.height = b.height, a())
                    }
                })
            },
            content: function() {
                return this.data.embed
            }
        }), twttr.mediaType("Photobucket", {
            icon: "photo",
            domain: "http://photobucket.com",
            flaggable: !0,
            matchers: {
                user_groups: /^#{protocol}?(?:g?(?:i|s)(?:\d+|mg))\.photobucket\.com\/(?:albums|groups)\/(?:#{wildcard})/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "http://photobucket.com/oembed",
                    type: "GET",
                    dataType: "jsonp",
                    data: {
                        url: this.url.replace(/^([^?]*[^/])(?=\?)/, "$1/"),
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        b.error || (c.data.href = b.url, c.data.name = c.constructor._name, a())
                    }
                })
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    b(c.data.href)
                })
            },
            render: function(a) {
                var b = '        <div class="photobucket">          <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">            <img src="{{href}}"/>          </a>        </div>';
                $(a).append(Mustache.to_html(b, this.data))
            }
        }), twttr.mediaType("With", {
            icon: "photo",
            domain: twttr.isSSL() ? "https://with.me" : "http://with.me",
            ssl: !0,
            deciderKey: "phoenix_withme_details",
            matchers: {
                project: /^#{optional_protocol}?with\.me[\/\?]\??[a-zA-Z0-9]+$/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {}, twttr.sandboxedAjax.send({
                    url: "//with.me/services/oembed",
                    dataType: "jsonp",
                    type: "GET",
                    data: {
                        url: this.url,
                        maxwidth: b.maxwidth
                    },
                    success: function(b) {
                        !b.error && b.hasOwnProperty("url") && (c.data.href = c.url, c.data.src = b.url, c.data.title = b.title, a())
                    }
                })
            },
            content: function() {
                var a = '           <div class="with-me">             <a class="inline-media-image" href="{{href}}" target="_blank">               <img src="{{src}}"/>             </a>           </div>';
                return Mustache.to_html(a, this.data)
            },
            flaggable: !0
        }), twttr.mediaType("Facebook", {
            icon: "photo",
            domain: twttr.isSSL() ? "https://facebook.com" : "http://facebook.com",
            ssl: !0,
            deciderKey: "phoenix_facebook_details",
            matchers: {
                project: /^#{optional_protocol}?facebook\.com\/([a-zA-Z0-9_#\.\-\?\&\=\/])*pid=(#{wildcard})/i
            },
            process: function(a, b) {
                var c = "https://www.facebook.com/twitter/photo/?id={{id}}&l={{l}}&pid={{pid}}",
                    d = this;
                d.data.href = this.url;
                var e = twttr.util.paramsFromUrl(this.url);
                e && e.id && e.l && e.pid && (d.data.src = Mustache.to_html(c, e), a())
            },
            getImageURL: function(a, b) {
                var c = this;
                this.process(function() {
                    c.data.src ? b(c.data.src) : b(null)
                })
            },
            content: function() {
                var a = '            <div class="facebook-dp">              <a class="inline-media-image" href="{{href}}" target="_blank">                <img src="{{src}}"/>              </a>            </div>';
                return Mustache.to_html(a, this.data)
            },
            flaggable: !0
        }), twttr.mediaType("WordPress", {
            icon: "generic",
            domain: "//wordpress.com",
            ssl: !0,
            deciderKey: "phoenix_wordpress_details",
            matchers: {
                tinyUrl: /^#{optional_protocol}?(?:[a-z0-9]+\.)?wp\.me[\/\?][a-zA-Z0-9_#\.\-\?\&\=\/]+$/i,
                standardUrl: /^#{optional_protocol}?(?:[a-z0-9]+\.)?wordpress\.com[\/\?][a-zA-Z0-9_#\.\-\?\&\=\/]+$/i
            },
            process: function(a, b) {
                var c = this;
                b = b || {};
                var d = "//public-api.wordpress.com/oembed/1.0/?for=twitter.com&as_article=true",
                    e = {
                        url: this.url
                    };
                twttr.app.isOnPage("permalink") || (e.maxwidth = 433), twttr.sandboxedAjax.send({
                    url: d,
                    dataType: "jsonp",
                    type: "GET",
                    data: e,
                    success: function(b) {
                        !b.error && b.title && (c.data.href = c.url, b.thumbnail_url && b.thumbnail_url.indexOf("http:") >= 0 && (b.thumbnail_url = b.thumbnail_url.replace("http", "https")), c.data = twttr.merge(c.data, b), a())
                    }
                })
            },
            content: function() {
                var a = '                  <div id="wp-details" class="component"><div class="wp-inset">                  <a href="{{href}}" class="wp-link" target="_blank">                  <h1 class="wp-news-headline">{{title}}</h1></a>                  <p class="wp-news-description">{{{body}}}</p>                  {{#thumbnail_url}}                  <div><a class="inline-media-image" href="{{href}}" target="_blank">                  <img class="wp-img" src="{{thumbnail_url}}"/>                  </a></div>                  {{/thumbnail_url}}                  </div></div>';
                return Mustache.to_html(a, this.data)
            },
            flaggable: !0
        }), twttr.mediaType("WhoSay", {
            domain: "//www.whosay.com",
            ssl: !0,
            flaggable: !0,
            deciderKey: "phoenix_whosay_details",
            icon: "photo",
            matchers: {
                media: /^#{optional_protocol}?whosay\.com\/[^\/\s]+\/photos\/(\d+)/i
            },
            getImageURL: function(a, c) {
                if (this.slug) {
                    if (a === b.constants.imageSizes.medium) return c(b.util.supplant("//d1au12fyca1yp1.cloudfront.net/{id}/{id}_melt.jpg", {
                        id: this.slug
                    }));
                    if (a === b.constants.imageSizes.large) return c(b.util.supplant("//d1au12fyca1yp1.cloudfront.net/{id}/{id}_lalt.jpg", {
                        id: this.slug
                    }))
                }
                c(null)
            },
            process: function(a) {
                this.data.href = this.url, this.data.name = this.constructor._name, this.data.src = b.util.supplant("//d1au12fyca1yp1.cloudfront.net/{id}/{id}_melt.jpg", {
                    id: this.slug
                }), a()
            },
            content: function() {
                var a = '<div class="whosay">                  <a class="inline-media-image" data-inline-type="{{name}}" href="{{href}}" target="_blank">                    <img alt="" src="{{src}}">                  </a>                </div>';
                return Mustache.to_html(a, this.data)
            }
        }), twttr.mediaType("Pepsi", {
            domain: "//www.pepsi.com",
            ssl: !0,
            deciderKey: "phoenix_pepsi_details",
            icon: "video",
            matchers: {
                media: /^#{optional_protocol}?pepsi\.com\/(CelebrateBad25)/i
            },
            process: function(a) {
                this.data.width = 432, this.data.height = 243, a()
            },
            render: function(a) {
                var b = "https://tremolossl-a.akamaihd.net/clients/twitter/20120829_mj/twitter/index.html";
                this.renderIframe(a, b)
            }
        }), a()
    })
});
provide("geo/Location", function(a) {
    using("_", "util", "constants").as(function(b, _) {
        twttr.klass("twttr.geo.Location", function() {
            var a = this;
            a.$empty = a.$fakeFocus = a.$dropdown = a.$input = a.$helpText = $([]), a.clearLocation(), a.closeDropdownClick = function(b) {
                var c = a.$dropdown.get(0);
                c && b.target !== c && !$.contains(c, b.target) && a.closeDropdown()
            }
        }).statics({
            GEO_WEBCLIENT_COOKIE: "geo_webclient",
            MS_WAIT_BETWEEN_GET_LOCATIONS: 9e5,
            LOCATION_URL: "/account/location.json"
        }).methods({
            onRegisterTweetBox: function(a, b) {
                var c = this,
                    d = a.find(".geo-control");
                c.showGeoState(), d.find("a.geo-location").click(function(a) {
                    a.preventDefault(), d.find(".geo-location-dropdown").length || setTimeout(function() {
                        $(".geo-control .geo-icon").tipsy("hide"), c.isLocationOn() ? (c.openDropdown(d), b && b()) : c.isGeoEnabled() ? c.turnLocationOn() : (new twttr.widget.GeoPromoDialog).show()
                    }, 0)
                }), d.find(".geo-icon").tipsy({
                    gravity: "nw",
                    offset: 5,
                    fade: !0,
                    opacity: .9,
                    title: function() {
                        return c.isLocationOn() ? "" : h(_("Add your location"))
                    }
                })
            },
            onFocusTweetBox: function(a) {
                this.isLocationOn() && !this.isUpdatingLocation() && (!this.cityId() || this.now() - this.lastLocationTime >= this.constructor.MS_WAIT_BETWEEN_GET_LOCATIONS) && this.updateLocation()
            },
            clearLocation: function() {
                this.location = {}, this.cache = {}, this.searchKeyShowing = null, this.$dropdown.remove(".override-location"), this.lastMessage = "", this.lastFetchId = null
            },
            isUpdatingLocation: function() {
                return !!this.lastFetchId
            },
            updateLocation: function(a) {
                var c = this;
                if (!c.isGeoUiAllowed()) {
                    c.processNewLocation(null);
                    return
                }
                c.isUpdatingLocation() || (c.clearLocation(), c.showGeoState(a ? _("Changing location...") : _("Getting location...")));
                var d = {};
                c.lastFetchId = d, twttr.currentUser.geoLocation({
                    override_place_id: a,
                    spoof_ip: b.util.params().spoof_ip,
                    success: function(a) {
                        c.lastFetchId === d && c.processNewLocation(a)
                    },
                    error: function(a) {
                        if (c.lastFetchId === d) {
                            var b = a.status && a.status === 503;
                            c.processNewLocation(b ? {
                                status: "busy"
                            } : null)
                        }
                    }
                })
            },
            places: function() {
                return this.location && this.location.places || []
            },
            place: function() {
                return this.places()[0] || {}
            },
            cityId: function() {
                var a = this.place();
                return a.full_name && a.id || ""
            },
            cityName: function() {
                var a = this.place();
                return a.id && a.full_name || ""
            },
            isGeoUiAllowed: function() {
                return twttr.decider.isAvailable("geo_ui") && twttr.decider.isAvailable("geo_location")
            },
            isGeoEnabled: function() {
                return twttr.currentUser && twttr.currentUser.geoEnabled
            },
            isLocationOn: function() {
                return this.isGeoEnabled() && !! $.cookie(this.constructor.GEO_WEBCLIENT_COOKIE)
            },
            turnLocationOn: function() {
                $.cookie(this.constructor.GEO_WEBCLIENT_COOKIE, "1", {
                    expires: 3650
                }), this.updateLocation()
            },
            turnLocationOff: function() {
                $.cookie(this.constructor.GEO_WEBCLIENT_COOKIE, null), this.clearLocation(), this.showGeoState()
            },
            processNewLocation: function(a) {
                var b = this;
                b.lastFetchId = null;
                var c = a && a.status;
                if (c === "busy" || c === "ok") b.lastLocationTime = this.now();
                b.location = a, b.cache = {}, b.showGeoState(b.cityName() || c === "unresolved" && _("Unknown location") || _("Location service unavailable")), b.inputChanged(), b.showPlaceSuggestions()
            },
            now: function() {
                return (new Date).getTime()
            },
            showGeoState: function(a) {
                var b = this.isLocationOn();
                this.lastMessage = b && (a || this.lastMessage) || "";
                var c = this.lastMessage !== "";
                $("span.geo-control span.geo-icon").toggleClass("geo-icon-on", b).toggleClass("geo-icon-ok", b && !! this.cityId()), twttr.helpers.ellipsify($("span.geo-control span.geo-text").html(h(this.lastMessage)), !0), $("span.geo-control span.geo-dropdown-icon").toggle(c).css("visibility", "visible")
            },
            openDropdown: function(a) {
                var b = this;
                b.closeDropdown(), $(document).add("textarea").bind("click", b.closeDropdownClick);
                var c = (new twttr.views.GeoLocationDropdown).$html();
                b.$dropdown = c, b.$input = c.find("input"), b.$helpText = c.find(".help-text"), b.$helpText.click(function(a) {
                    a.preventDefault(), a.stopPropagation(), b.$input.focus()
                }), c.find(".geo-turn-off-item a").bind("select", function() {
                    b.closeDropdown(), b.turnLocationOff()
                }).click(function(a) {
                    a.preventDefault(), $(this).trigger("select")
                }), c.find(".glass").click(function(a) {
                    a.stopPropagation(), b._updateSearchResults(!0)
                }), c.delegate(".override-location a", "select", function() {
                    b.updateLocation($(this).attr("data-place-id")), b.closeDropdown()
                }).delegate(".override-location a", "click", function(a) {
                    a.preventDefault(), $(this).trigger("select")
                }).delegate(".focusable", "mousemove", function() {
                    b.setFakeFocus($(this))
                }).delegate(".focused", "mouseout", function() {
                    b.setFakeFocus(b.$empty)
                });
                var d = a.find(".geo-icon"),
                    e = d.position(),
                    f = Math.round(e.top + d.outerHeight());
                c.css({
                    left: e.left,
                    top: f
                }), b.searchKeyShowing = null, b.showPlaceSuggestions(), b.setupInput(), a.append(c), b.$input.focus().select()
            },
            closeDropdown: function() {
                this.$dropdown.remove(), this.$fakeFocus = this.$empty, $(document).add("textarea").unbind("click", this.closeDropdownClick)
            },
            showSearchError: function(a) {
                this.$dropdown.find(".location-error").text(a)
            },
            showPlaceSuggestions: function() {
                var a = this.$dropdown,
                    b = (new twttr.views.GeoLocationDropdownItems({
                        places: this.places()
                    })).html();
                a.find(".override-location").remove(), a.find(".geo-turn-off-item").before(b), a.find(".override-location:first").addClass("checked-item padding-above"), this.updateMenuSeparators()
            },
            updateMenuSeparators: function() {
                var a = this.$dropdown;
                a.find(".location-search-result:first").addClass("padding-above"), a.find(".override-location:last,").addClass("separator-below"), a.find(".location-search-result:last").addClass("separator-below"), a.find("li:last").removeClass("separator-below")
            },
            setupInput: function() {
                var a = this;
                a.$input.click(function(a) {
                    a.stopPropagation()
                }).keydown(function(c) {
                    c.stopPropagation();
                    if (c.keyCode === b.constants.keyCodes.escape) a.closeDropdown();
                    else switch (c.keyCode) {
                    case b.constants.keyCodes.upArrow:
                        a.arrowUp(), a.arrowKeyDownEvent = !0, c.preventDefault();
                        break;
                    case b.constants.keyCodes.downArrow:
                        a.arrowDown(), a.arrowKeyDownEvent = !0, c.preventDefault();
                        break;
                    case b.constants.keyCodes.enter:
                        a.hasFakeFocus() ? a.$fakeFocus.find("a").trigger("select") : a.updateSearchResults(!0);
                    default:
                        a.inputChanged()
                    }
                }).keypress(function(c) {
                    c.stopPropagation();
                    if (c.charCode === 0 && !a.arrowKeyDownEvent) switch (c.keyCode) {
                    case b.constants.keyCodes.upArrow:
                        a.arrowUp(), c.preventDefault();
                        break;
                    case b.constants.keyCodes.downArrow:
                        a.arrowDown(), c.preventDefault()
                    }
                    a.arrowKeyDownEvent = !1
                }).keyup(function(a) {
                    a.stopPropagation()
                }).change(function() {
                    a.inputChanged()
                }).mousedown(function() {
                    a.setFakeFocus(a.$empty)
                }).focus(function() {
                    a.setFakeFocus(a.$empty)
                })
            },
            arrowUp: function() {
                var a = this.$fakeFocus.prevAll(".focusable:first");
                a.length || (a = this.$dropdown.find(".focusable:last")), this.setFakeFocus(a)
            },
            arrowDown: function() {
                var a = this.$fakeFocus.nextAll(".focusable:first");
                a.length || (a = this.$dropdown.find(".focusable:first")), this.setFakeFocus(a)
            },
            hasFakeFocus: function() {
                return !!this.$fakeFocus.length
            },
            setFakeFocus: function(a) {
                this.$fakeFocus.removeClass("focused"), this.$fakeFocus = a.addClass("focused")
            },
            inputChanged: function() {
                var a = this;
                setTimeout(function() {
                    (a.$input.val() || "") !== "" && a.$helpText.hide(), setTimeout(function() {
                        a.updateSearchResults(!1)
                    }, 0)
                }, 0)
            },
            updateSearchResults: function(a) {
                var b = this,
                    c = b.$input.val() || "";
                a && c ? b.enterQuery = c : c !== b.enterQuery && (b.enterQuery = null);
                if (b.isUpdatingLocation()) return;
                var d = !b.enterQuery,
                    e = (d ? "~" : "=") + c;
                e != b.searchKeyShowing && b.setFakeFocus(b.$empty);
                if (b.searchKeyShowing === e || b.searchKeySearching === e || d && b.searchKeySearching) return;
                var f = c ? b.cache[e] : [];
                f ? b.showSearchResults(f, e) : b.search(e)
            },
            centroid: function() {
                var a = this.place();
                if (!a.bounding_box || a.bounding_box.type !== "Polygon" || !a.bounding_box.coordinates) return null;
                var b = a.bounding_box.coordinates[0];
                return !b || b.length !== 4 ? null : {
                    lat: (b[0][1] + b[2][1]) * .5,
                    lon: (b[0][0] + b[2][0]) * .5
                }
            },
            search: function(a) {
                var b = this,
                    c = a.charAt(0) === "~",
                    d = a.substr(1);
                b.$dropdown.addClass("geo-location-dropdown-searching"), b.searchKeySearching = a, b.showSearchError(_("Searching places...")), twttr.API.Place.search(twttr.merge({
                    max_results: 5,
                    granularity: "neighborhood",
                    autocomplete: c ? "true" : "false",
                    query: d,
                    full_geom: "false",
                    success: function(c) {
                        var d = twttr.geo.placesFromApi(c);
                        b.cache[a] = d, b.searchKeySearching === a && (b.searchKeySearching = null, b.showSearchError("")), b.$dropdown.removeClass("geo-location-dropdown-searching"), b.updateSearchResults()
                    },
                    error: function() {
                        b.$dropdown.removeClass("geo-location-dropdown-searching"), b.searchKeySearching === a ? (b.showSearchError(_("Location service unavailable")), b.searchKeySearching = null) : b.updateSearchResults()
                    }
                }, b.centroid()))
            },
            showSearchResults: function(a, b) {
                this.searchKeyShowing = b, a.length === 0 && b.length > 1 && this.showSearchError(_("No search results")), this.$dropdown.find(".location-search-result").remove();
                var c = (new twttr.views.GeoLocationDropdownItems({
                    places: a,
                    for_search_results: !0
                })).html();
                this.$dropdown.find(".query-location").after(c), this.updateMenuSeparators()
            }
        }), twttr.app.waitForSignal("init", function(a) {
            twttr.geo.location = new twttr.geo.Location
        }), a(twttr.geo.Location)
    })
});
provide("control/Dropdown", function(a) {
    using().as(function(b) {
        (function() {
            var a = {
                view: "Control"
            };
            twttr.klass("twttr.control.Base", function(b) {
                this.options = $.extend({}, a, b), this.itemView = twttr.views.DefaultDropdownItem, this.options.itemView && (this.itemView = twttr.is.string(this.options.itemView) ? twttr.views[this.options.itemView] : this.options.itemView)
            }).methods(twttr.EventProvider).methods({
                render: function(a, b) {
                    var c = this.viewData();
                    this.view = new twttr.views[this.options.view](c), this.$dropdown = this.view.$html(), $(a)[b](this.$dropdown)
                },
                viewData: function() {
                    return this.options
                }
            }), twttr.augmentString("twttr.helpers.control", function(a, b) {
                var c = twttr.klass("twttr.control." + a, b);
                return c.subclassOf(twttr.control.Base), c
            }), function() {
                var a = {
                    direction: "left",
                    view: "Dropdown"
                },
                    b = [];
                twttr.helpers.control("Dropdown", function(c, d) {
                    b.push(this), this.$controller = $(c);
                    var d = $.extend({}, a, d);
                    this.items = d.items || [], twttr.control.Dropdown.uber.constructor.call(this, d), this.registerEvents()
                }).statics({
                    _registeredHtmlClick: !1,
                    caches: {},
                    createCache: function(a) {
                        this.caches[a] = {}
                    },
                    closeAll: function() {
                        twttr.each(b, function(a) {
                            a.close()
                        })
                    }
                }).methods({
                    defaultDividerView: twttr.views.DefaultDropdownDivider,
                    registerEvents: function() {
                        this.$controller.bind("click", twttr.bind(this, function(a) {
                            this.toggle()
                        }))
                    },
                    applyDirection: function() {
                        this.$dropdown.css({
                            left: this.options.direction == "left" ? "0" : "auto",
                            right: this.options.direction == "right" ? "0" : "auto"
                        })
                    },
                    flushItems: function() {
                        this.$dropdown.empty(), this.items = []
                    },
                    setItemsFromCallback: function() {
                        var a = this;
                        a.flushItems(), a.itemsCallback(function(b) {
                            a.addItems(b), a.registerItemHandlers()
                        })
                    },
                    disable: function() {
                        this.close(), this.$controller.unbind("click")
                    },
                    enable: function() {
                        this.registerEvents()
                    },
                    open: function(a) {
                        this.constructor.closeAll(), this.itemsCallback && this.setItemsFromCallback(), this.$controller.addClass("open").addClass("button-active"), this.$dropdown.css({
                            top: this.$container ? this.$container.outerHeight() : this.$controller.outerHeight(),
                            visibility: "visible"
                        }), a && this.$dropdown.css({
                            opacity: 0
                        }).animate({
                            opacity: 1
                        }, {
                            duration: 500,
                            queue: !1
                        });
                        var b = twttr.bind(this, function(a) {
                            this.$controller.get(0) !== a.target && !$.contains(this.$controller.get(0), a.target) && ($("#doc").unbind("click", b), this.close())
                        });
                        $("#doc").bind("click", b)
                    },
                    close: function(a) {
                        if (a) {
                            var b = this;
                            this.$dropdown.animate({
                                opacity: 0
                            }, 500, function() {
                                b.$controller.removeClass("open").removeClass("button-active"), b.$dropdown.css("visibility", "hidden"), b.$dropdown.css("opacity", 1)
                            })
                        } else this.$controller.removeClass("open").removeClass("button-active"), this.$dropdown.css("visibility", "hidden")
                    },
                    toggle: function() {
                        this.$controller.hasClass("open") ? this.close() : this.open()
                    },
                    addItem: function(a, b, c) {
                        b = b || "appendTo", this.items.push(a);
                        var d = this.getItemView(a).$html();
                        return b == "insertBefore" || b == "insertAfter" ? d[b](c) : d[b](this.$dropdown), d
                    },
                    addItems: function(a) {
                        var b = this;
                        b.items = b.items.concat(a);
                        var c = twttr.map(b.items, function(a) {
                            return b.getItemView(a).html()
                        });
                        $(c.join("")).appendTo(b.$dropdown)
                    },
                    itemsFrom: function(a) {
                        this.itemsCallback = a
                    },
                    registerItemHandlers: function() {
                        var a = this.$dropdown.children();
                        for (var b = 0; b < this.items.length; b++) {
                            var c = this.items[b];
                            if (!c.handlers) continue;
                            $.each(c.handlers, function(c, d) {
                                var e = $(a[b]),
                                    f = [c];
                                twttr.is.array(d) ? f = f.concat(d) : f.push(d), e.bind.apply(e, f)
                            })
                        }
                    },
                    render: function(a, b, c) {
                        if (b === "before" || b === "after") this.$controller.parent().hasClass("drop-down-container") ? this.$container = this.$controller.parent() : this.$container = this.$controller.wrap('<div class="drop-down-container"/>').parent();
                        return twttr.control.Base.prototype.render.apply(this, arguments), c && (this.constructor.caches[c.key] || (this.constructor.caches[c.key] = {}), this.constructor.caches[c.key][c.id] = !0), this.registerItemHandlers(), this.applyDirection(), this
                    },
                    getItemView: function(a) {
                        return a.itemView ? new twttr.views[a.itemView](a) : a.divider ? new this.defaultDividerView : new this.itemView(a)
                    },
                    viewData: function() {
                        var a = this,
                            b = twttr.map(this.items, function(b, c) {
                                return a.getItemView(b).html()
                            });
                        return {
                            items: b.join("")
                        }
                    }
                })
            }()
        })(), a(twttr.control.Dropdown)
    })
});
provide("widget/Dialog", function(a) {
    using("constants", "util").as(function(b) {
        twttr.provide("twttr.dialogs"), twttr.dialogs.defaultOptions = {
            modal: !1,
            stackPreviousModal: !1,
            draggable: !1,
            closable: !0,
            closeOnClickOutside: !1,
            closeOnNavigate: !1,
            destroyOnClose: !0,
            css: {
                width: 500,
                height: "auto"
            },
            fixed: !0,
            template: {
                container_id: null,
                title: null,
                footer: null,
                content: null
            }
        };
        var c = !1,
            d = function() {
                c = !0;
                var a = $("<div>", {
                    height: 100,
                    width: 100,
                    position: "absolute",
                    top: -300,
                    left: -300
                }).prependTo($("body")),
                    b = $("<div>", {
                        height: 200
                    }).appendTo(a);
                a.css("overflow-y", "scroll");
                var d = a.width() - b.width();
                a.remove(), $("head").append("<style>          .modal-enabled,          .modal-enabled .global-nav-inner {            margin-right: " + d + "px        } </style>")
            },
            e = twttr.klass("twttr.widget.Dialog", function(a) {
                var c = this;
                this.options = twttr.merge({}, twttr.dialogs.defaultOptions, a || {}, !0), this.options.template.closable = this.options.closable, this._isOpen = !1, this.view = new twttr.views[this.options.view || this.constructor._name](this.options), twttr.isT1 ? (this.options.modal = !0, this.$container = this.view.render(this.options.node || $(".twttr-dialog-wrapper"), "append")) : this.$container = this.view.render(this.options.node || "body", "append"), this.$dialog = this.$container.find(".twttr-dialog"), this.$title = this.$container.find(".twttr-dialog-header h3"), twttr.isT1 ? this.$container.css(twttr.merge({
                    top: $(".js-banners").height()
                }, this.options.css)) : this.$dialog.css(this.options.css), this.$dialog.attr("data-component-term", b.util.underscore(this.constructor._name)), twttr.is.nil(c.options.template.footer) && this.$container.find(".twttr-dialog-footer").hide(), this.options.draggable && this.applyDraggability(), this.options.modal && (this.$overlay = $('<div class="twttr-dialog-overlay"></div>').appendTo($("body"))), this._escKeyHandler = function(a) {
                    c.options.closable && a.keyCode === b.constants.keyCodes.esc && (c.close(), a.stopPropagation())
                };
                if (this.options.closeOnClickOutside || this.options.modal) this._clickOutsideHandler = function(a) {
                    !$.contains(c.$container.get(0), a.target) && ($.contains(document.body, a.target) || document.body === a.target) && (c.close(), c.options.modal || (a.preventDefault(), a.stopPropagation()))
                };
                if (this.options.closeOnNavigate) {
                    var d = twttr.bind(this, this.close);
                    twttr.router.bind("routeFollowed", d), this.bind("close", function() {
                        twttr.router.unbind("routeFollowed", d)
                    })
                }
                this.registerEvents()
            }).statics(twttr.EventProvider).statics({
                currentModal: !1,
                close: function() {
                    var a = 0;
                    while (this.currentModal && a++ < 8) this.currentModal.close()
                }
            }).methods(twttr.EventProvider).methods({
                $find: function(a) {
                    return this.$container.find(a)
                },
                registerEvents: function() {
                    var a = this;
                    this.$find("textarea, input[type=text], input[type=password]").bind("keydown keypress keyup", function(c) {
                        twttr.components.Autocomplete._isCompletionsOpen || (c.stopPropagation(), c.type === "keydown" && c.keyCode === b.constants.keyCodes.esc && a.close())
                    }), this.$container.delegate(".twttr-dialog-close", "click", function(b) {
                        b.preventDefault(), b.stopPropagation(), a.close()
                    }), twttr.router.bind("urlChanged", this.urlChangedListener = function(b, c) {
                        a.close()
                    });
                    if ($.browser.mozilla && $.browser.version.slice(0, 1) == "8") {
                        var c = null;
                        this.bind("close", function() {
                            twttr.$win.scrollTop(c)
                        }), this.bind("open", function() {
                            c = twttr.$win.scrollTop()
                        })
                    }
                },
                applyDraggability: function() {
                    var a = this;
                    this.$container.addClass("draggable").draggable({
                        cursor: "move",
                        handle: this.$container.find(".js-twttr-dialog-draggable"),
                        start: function() {
                            a.$container.addClass("unselectable"), $("#doc").addClass("unselectable")
                        },
                        stop: function() {
                            a.$container.removeClass("unselectable"), $("#doc").removeClass("unselectable")
                        },
                        cancel: ":input,option,.js-twttr-dialog-not-draggable"
                    })
                },
                toggle: function() {
                    return this[this._isOpen ? "close" : "open"](), this
                },
                open: function() {
                    c || d();
                    var a = this;
                    return twttr.widget.Dialog.currentModal && (this.options.stackPreviousModal && this.options.modal ? (this.previousModal = twttr.widget.Dialog.currentModal, this.previousModal._close()) : twttr.widget.Dialog.close()), this.options.modal && (twttr.widget.Dialog.currentModal = this, this.$overlay.show(), $("body").addClass("modal-enabled")), this.position(), this.$container.css({
                        visibility: "visible",
                        display: "block"
                    }), this.trigger("open"), twttr.widget.Dialog.trigger("open"), this._isOpen = !0, twttr.$win.bind("keydown", this._escKeyHandler), this._clickOutsideHandler && setTimeout(function() {
                        $("body").bind("click", a._clickOutsideHandler)
                    }, 0), this
                },
                _close: function() {
                    return this.options.modal && (twttr.widget.Dialog.currentModal = !1, this.$overlay.hide(), $("body").removeClass("modal-enabled")), document.activeElement && $.contains(this.$container.get(0), document.activeElement) && $(document.activeElement).blur(), this.$container.css({
                        visibility: "hidden",
                        display: "none"
                    }), $(".tipsy").remove(), this.trigger("close"), twttr.widget.Dialog.trigger("close"), this._isOpen = !1, twttr.$win.unbind("keydown", this._escKeyHandler), this._clickOutsideHandler && $("body").unbind("click", this._clickOutsideHandler), this.previousModal && (this.previousModal.open(), delete this.previousModal), this
                },
                show: function() {
                    return this.open()
                },
                hide: function() {
                    return this._close()
                },
                setFooterText: function(a) {
                    this.$find(".twttr-dialog-footer").html(a)
                },
                setError: function(a) {
                    this.$find(".twttr-dialog-error").show().html(_("<p>{{message}}</p>", {
                        message: a
                    }))
                },
                clearError: function() {
                    this.$find(".twttr-dialog-error").hide().empty()
                },
                position: function() {
                    this.options.fixed || this.$container.addClass("static");
                    var a = $(window).scrollTop(),
                        b = this.$container.innerHeight(),
                        c = $(window).height(),
                        d = Math.round(c / 2 - b / 2);
                    this.options.fixed || (d += a);
                    var e = this.$container.innerWidth(),
                        f = $(window).width(),
                        g = twttr.i18n && twttr.i18n.rtl ? "right" : "left",
                        i = Math.round(f / 2 - e / 2);
                    d = this.options.positioning && this.options.positioning.top ? this.options.positioning.top : d, i = this.options.positioning && this.options.positioning.left ? this.options.positioning.left : i;
                    var j = {
                        top: d
                    };
                    return j[g] = i, this.$container.css(j), this
                },
                destroy: function() {
                    return this._close(), this.remove(), this
                },
                remove: function() {
                    return this.$container.unbind().remove(), this.$overlay && this.$overlay.unbind().remove(), this._isOpen = !1, this
                },
                close: function() {
                    return this[this.options.destroyOnClose ? "destroy" : "_close"]()
                },
                isOpen: function() {
                    return this._isOpen
                }
            });
        twttr.isT1 && e.methods({
            position: twttr.util.noopInT1
        }), a(e)
    })
});
provide("dialogs", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.aug(twttr.dialogs, {
            reply: function(a, b) {
                var c = a.dataFields || twttr.TweetBox._getDefaultContentForReply(a.$tweet, a.screenName, twttr.currentUserScreenName),
                    d = {
                        multiple: c.multiple,
                        modal: !0,
                        draggable: !0,
                        defaultContent: c.defaultContent,
                        template: {
                            title: _("Reply to @<strong>{{screen_name}}</strong>", {
                                screen_name: a.screenName
                            }),
                            footer: ""
                        },
                        data: a,
                        origin: a.origin
                    };
                return b ? d : new twttr.widget.ReplyDialog(d)
            },
            directMessage: function(a) {
                if (twttr.isT1) var b = twttr.widget.DirectMessageDialog.views.newConversation;
                else var c = twttr.assets.path("sticky/default_profile_images/default_profile_6_mini.png", {
                    isVersioned: !1
                }),
                    b = {
                        modal: !1,
                        draggable: !0,
                        basic: !1,
                        template: {
                            title: _("Message") + ' <div><img class="avatar" src="' + c + '"/> <input class="twttr-directmessage-input" type="text"/></div> <span class="twttr-dm-check"/>',
                            footer: _("Tip: you can send a message to anyone who follows you")
                        },
                        origin: a.origin
                    };
                return new twttr.widget.DirectMessageDialog(b)
            },
            dmSingle: function(a) {
                return twttr.isT1 ? new twttr.widget.DirectMessageDialog(twttr.widget.DirectMessageDialog.views.conversation, a.user.screenName) : (twttr.merge(a, {
                    draggable: !0,
                    basic: !1,
                    template: {
                        title: '<img src="' + a.user.profile_image_url + '"/> ' + _("<strong>Send <b>{{user_name}}</b> a message</strong>", {
                            user_name: a.user.name
                        })
                    }
                }), new twttr.widget.DirectMessageDialogSingle(a))
            },
            keyboardShortcuts: function() {
                return twttr.dialogs._keyboardShortcuts = twttr.dialogs._keyboardShortcuts || new twttr.widget.Dialog({
                    css: {
                        width: twttr.loggedIn ? 600 : 300
                    },
                    modal: !0,
                    draggable: !0,
                    destroyOnClose: !1,
                    template: {
                        title: _("Keyboard shortcuts"),
                        content: (new twttr.views.KeyboardShortcuts).html()
                    }
                }), twttr.dialogs._keyboardShortcuts
            },
            discoverable: function() {
                var a = twttr.currentUser,
                    b = {
                        help_url: twttr.router.helpDiscoveryPath(),
                        email_checked: !a.emailDiscoverabilitySet || a.discoverableByEmail,
                        phone_checked: !a.mobilePhoneDiscoverabilitySet || a.discoverableByMobilePhone
                    };
                return new twttr.widget.DiscoveryDialog(twttr.merge(b, a.attributes))
            },
            verifyEmail: function(a) {
                return new twttr.widget.VerifyEmailDialog(a, twttr.currentUser)
            },
            retweet: function(a, b, c) {
                var d, e, f = twttr.isT1 && twttr.currentUser && new Date(2012, 6, 3) < new Date(twttr.currentUser.createdAt) && twttr.abdecider.choose("change_deutsch_verbs_229") === "change_verbs";
                f ? (d = "Diesen Tweet mit Deinen Followern teilen?", e = "Teilen") : (d = _("Retweet this to your followers?"), e = _("Retweet"));
                var g = {
                    modal: !0,
                    draggable: !0,
                    callback: c,
                    template: {
                        title: d,
                        container_id: "retweet-dialog",
                        footer: "",
                        content: (new twttr.views.Prompt({
                            ok: e,
                            cancel: _("Cancel")
                        })).html()
                    },
                    data: {
                        tweetId: a
                    },
                    tweetText: b,
                    css: {
                        width: 500
                    }
                };
                return new twttr.widget.RetweetDialog(g)
            },
            deleteMessage: function(a) {
                var b = {
                    modal: !0,
                    stackPreviousModal: !0,
                    draggable: !0,
                    callback: a,
                    template: {
                        title: _("Are you sure you want to delete this message?")
                    },
                    css: {
                        width: 450
                    }
                };
                return new twttr.widget.Prompt(b)
            },
            deleteSavedSearch: function(a) {
                return new twttr.widget.Prompt({
                    modal: !0,
                    template: {
                        title: _("Are you sure you want to delete this search?"),
                        content: (new twttr.views.Prompt({
                            ok: _("Yes"),
                            cancel: _("No")
                        })).html()
                    },
                    callback: a
                })
            },
            goToUser: function() {
                var a = {
                    modal: !0,
                    draggable: !0,
                    template: {
                        title: _("Go to a person's profile"),
                        content: '<input class="twttr-goto-user-input" type="text"/>'
                    },
                    css: {
                        width: 450
                    },
                    positioning: {
                        top: 75
                    }
                },
                    c = new twttr.widget.Dialog(a),
                    d = c.$find(".twttr-goto-user-input"),
                    e = function(a) {
                        c.close(), twttr.router.one("routed", function() {
                            $('<input type="text"/>').css({
                                position: "absolute",
                                top: 0,
                                left: 0
                            }).appendTo("body").focus().remove()
                        });
                        var b = a.replace("@", "").split("/");
                        b.length === 1 ? (screen_name = b[0], twttr.API.User.find(screen_name, {
                            success: function(a) {
                                twttr.router.routeTo(twttr.router.profilePath({
                                    screen_name: screen_name
                                }))
                            },
                            error: function(a) {
                                twttr.router.routeTo(twttr.router.userSearchPath({
                                    query: screen_name
                                }))
                            }
                        })) : twttr.router.routeTo(twttr.router.userListPath({
                            screen_name: b[0],
                            list_slug: b[1]
                        }))
                    },
                    f = new twttr.components.Autocomplete({
                        limit: 8,
                        input: d,
                        type: "username",
                        preselect: !0,
                        defaultResults: [{
                            format: function(a) {
                                return (new twttr.views.CurrentTextUserAutocompleteItem({
                                    screenname: a.charAt(0) === "@" ? a.substring(1) : a
                                })).html()
                            },
                            show: function(a, b) {
                                for (var c in b) if (b[c][1] === a) return !1;
                                return !0
                            }
                        }]
                    });
                return f.bind("select", function(a, b, c, d, f, g) {
                    e(f)
                }), d.bind("keypress", function(a) {
                    a.keyCode === b.constants.keyCodes.enter && !f._isCompletionsOpen && (a.preventDefault(), e(d.val()))
                }), c.bind("open", function() {
                    d.focus()
                }), c
            },
            searchFacets: function(a) {
                if (!twttr.decider.isAvailable("phoenix_facets")) return !1;
                var c = {
                    modal: !0,
                    draggable: !0,
                    template: {
                        title: a === "photos" ? _("Search photos") : _("Search videos"),
                        content: '<input class="twttr-search-facets-input" type="text"/>'
                    },
                    css: {
                        width: 450
                    },
                    positioning: {
                        top: 75
                    }
                },
                    d = new twttr.widget.Dialog(c),
                    e = d.$find(".twttr-search-facets-input");
                return e.bind("keypress", function(c) {
                    c.keyCode === b.constants.keyCodes.enter && (c.preventDefault(), d.close(), twttr.router.one("routed", function() {
                        $('<input type="text"/>').css({
                            position: "absolute",
                            top: 0,
                            left: 0
                        }).appendTo("body").focus().remove()
                    }), twttr.router.routeTo(twttr.router.searchFacetsGridPath({
                        query: e.val(),
                        mode: a
                    })))
                }), d.bind("open", function() {
                    e.focus()
                }), d
            },
            _trendsOptions: function() {
                return options = {
                    draggable: !0,
                    css: {
                        width: 520
                    },
                    template: {
                        title: _("Choose a trend location")
                    }
                }
            },
            trends: function() {
                return arguments.callee._ret = arguments.callee._ret || new twttr.widget.TrendsDialog(this._trendsOptions())
            },
            signinOrSignup: function(a) {
                a = a || {};
                var c = a.follow ? a.follow.screenName : !1,
                    d = {
                        screen_name: c,
                        signup_source: twttr.audit.currentPage()
                    };
                if (c) d.redirect_after_login = twttr.router.profilePath(d);
                else if (twttr.audit.currentPage() === "permalink" || twttr.audit.currentPage() === "profile" || twttr.audit.currentPage() === "search") d.redirect_after_login = twttr.audit.currentPath();
                var e = c ? _("Sign in to Twitter & follow @{{screen_name}}", d) : _("Sign in to Twitter");
                a.justSignup && (d.is_signup_only = !0, d.guest_modal = !0, d.signup_source = twttr.audit.currentPage(), e = c ? _("Sign up for Twitter & follow @{{screen_name}}", d) : _("Sign up for Twitter"));
                var f = new twttr.widget.Dialog({
                    css: {
                        width: 500
                    },
                    modal: !0,
                    draggable: !0,
                    template: {
                        title: e,
                        content: (new twttr.views.SigninOrSignup(d)).html()
                    }
                }),
                    g = f.$find("form.signin"),
                    i = g.find(".textbox input");
                return a.justSignup && f.$dialog.addClass("signup-only-dialog"), twttr.helpers.addHoldingInputEvents(g), twttr.helpers.addFormEvents(g), i.bind("keypress", function(a) {
                    a.keyCode === b.constants.keyCodes.enter && $(this).val() && (a.preventDefault(), g.submit())
                }), f.bind("open", function() {
                    i.first().focus();
                    var b = {
                        section: "auth_dialog",
                        component: a.follow ? "unauth_follow" : "unauth_action",
                        action: "open"
                    };
                    trackClient(b, twttr.audit.currentPage())
                }), f.$find("form").bind("submit", function() {
                    setTimeout(function() {
                        f.close(), trackClient({
                            section: "auth_dialog",
                            component: "signup_form",
                            action: "signup_click"
                        }, twttr.audit.currentPage())
                    }, 0)
                }), f
            },
            signupModalDialogGuest: function(a, b) {
                var c = [],
                    d = [],
                    e = 0;
                for (var f = 0; f < a; f++) twttr.API.User.find(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - f - 1], {
                    success: function(f) {
                        c.push({
                            name: f.name,
                            screen_name: f.screenName,
                            profile_image_url: f.profileImageUrl,
                            id: f.id,
                            description: "@" + f.screenName,
                            count_num: e
                        }), d.push(f.screenName), e++;
                        if (e == a) {
                            var g = {
                                screen_names: d.join(","),
                                signup_source: twttr.audit.currentPage(),
                                user_data_list: c,
                                guest_modal: !0
                            },
                                i = new twttr.widget.Dialog({
                                    css: {
                                        width: 575
                                    },
                                    modal: !0,
                                    draggable: !0,
                                    template: {
                                        title: _("Follow your interests on Twitter!"),
                                        content: (new twttr.views.GuestModalSignup(g)).html()
                                    }
                                });
                            $signup = i.$find("form.signup-btn"), $inputs = $signup.find(".textbox input"), twttr.helpers.addFormEvents($signup), twttr.helpers.addHoldingInputEvents($signup), i.bind("open", function() {
                                $inputs.first().focus()
                            });
                            var j = i.$find("input[type=checkbox]");
                            j.bind("click", function(a) {
                                var b = i.$find("input[type=checkbox]:checked"),
                                    c = $.map(b, function(a, b) {
                                        return a.value
                                    }).join(",");
                                $signup.find("input[name=follows]").val(c)
                            }), i.$find("form").bind("submit", function() {
                                i.close(), trackClient({
                                    section: "profiles_viewed_dialog",
                                    component: "signup_form",
                                    action: "signup_click"
                                }, twttr.audit.currentPage())
                            }), b(i)
                        }
                    }
                })
            },
            searchOperators: function() {
                return twttr.dialogs._searchOperators = new twttr.widget.Dialog({
                    css: {
                        width: 600
                    },
                    modal: !1,
                    draggable: !0,
                    template: {
                        title: _("Search Operators"),
                        content: (new twttr.views.SearchOperators).html()
                    }
                }), twttr.dialogs._searchOperators
            },
            smsCodes: function() {
                return twttr.dialogs._smsCodes = twttr.dialogs._smsCodes || new twttr.widget.Dialog({
                    modal: !1,
                    draggable: !0,
                    template: {
                        title: _("Two-way (sending and receiving) short codes:"),
                        content: (new twttr.views.SmsCodes).html()
                    }
                }), twttr.dialogs._smsCodes
            },
            sensitiveFlagConfirmation: function(a) {
                var b = new twttr.widget.Prompt({
                    modal: !1,
                    draggable: !0,
                    template: {
                        title: _("Flag this media"),
                        content: (new twttr.views.SensitiveFlagConfirmation).html()
                    },
                    callback: function(c) {
                        c && (b.$find("#sensitive-settings-checkbox").attr("checked") && twttr.currentUser.updateViewPossiblySensitive(!1, {
                            success: function() {
                                twttr.showMessage(_("Your media display settings have been changed."))
                            },
                            error: function(a) {
                                twttr.showError(_("Couldn't set inline media settings."))
                            }
                        }), b.$find("#sensitive-illegal-checkbox").attr("checked") && a())
                    }
                });
                return b
            },
            embedCode: function(a) {
                return new twttr.widget.EmbedDialog(a)
            }
        }), a(twttr.dialogs)
    })
});
provide("widget/TweetDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.TweetDialog", function(a) {
            a = twttr.merge({
                basic: !0,
                modal: !0,
                fixed: !0
            }, a), a.template = twttr.merge({
                show_geo: !0,
                container_id: "tweet_dialog"
            }, a && a.template), a = $.extend(!0, {
                basic: !0,
                template: {
                    show_geo: !0,
                    container_id: "tweet_dialog"
                }
            }, a), twttr.widget.TweetDialog.uber.constructor.call(this, a), this._ready = !1
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                var a = this;
                twttr.widget.Dialog.prototype.registerEvents.call(this), this.view.bind("ready", twttr.bind(this, function() {
                    this._ready = !0, setTimeout(twttr.bind(this, function() {
                        this.onReady()
                    }), 0)
                })), this.view.tweetBox.bind("tweetSuccess", twttr.bind(this, function(a, b, c) {
                    c === "reply" && b.inReplyToScreenName ? twttr.showMessage(_("Your Tweet to @{{username}} has been sent!", {
                        username: b.inReplyToScreenName
                    })) : (twttr.showMessage(_("Your Tweet was posted!")), $(document).trigger("tweetSuccess", b)), this.destroy()
                })), this.view.tweetBox.bind("dmSuccess", twttr.bind(this, function(b, c) {
                    twttr.is.def(twttr.messageManager) && twttr.messageManager.addMessage(c), twttr.showMessage(_("Your message was sent!")), a.close()
                })), this.view.tweetBox.bind("dmFail", twttr.bind(this, function(b, c) {
                    a.close()
                })), this.options.basic && this.view.tweetBox.bind("titleChanged", twttr.bind(this, function(a, b) {
                    this.$title.html(b || this.options.template.title)
                }))
            },
            onReady: function() {
                var a = [];
                return function(b) {
                    b ? a.push(b) : (twttr.each(a, function(a) {
                        a()
                    }), a = [])
                }
            }(),
            open: function() {
                return twttr.widget.Dialog.prototype.open.call(this), this.onReady(twttr.bind(this, function() {
                    setTimeout(twttr.bind(this, function() {
                        this.options.defaultContent && (this.focus(), this.setContent(this.options.defaultContent))
                    }), 0)
                })), this
            },
            setContent: function(a) {
                return this.view.tweetBox.editor.setContent(a), this
            },
            setCaretPosition: function(a, b) {
                b = b || a;
                var c = this.view.tweetBox.editor.$editor[0];
                if (c.setSelectionRange) c.focus(), c.setSelectionRange(a, b);
                else if (c.createTextRange) {
                    var d = c.createTextRange();
                    d.collapse(!0), d.moveStart("character", a), d.moveEnd("character", b), d.select()
                }
            },
            focus: function() {
                if (this.options.defaultContent) {
                    var a = this.view.tweetBox.editor.$editor.val().length;
                    this.setCaretPosition(a)
                } else this.view.tweetBox.editor.focus();
                return this
            }
        }), a(twttr.widget.TweetDialog)
    })
});
provide("widget/Prompt", function(a) {
    using("_", "constants").as(function(b, _) {
        var c = twttr.isT1 ? "primary-btn" : "selected";
        twttr.klass("twttr.widget.Prompt", function(a) {
            var b = {
                view: "Dialog",
                template: {
                    content: (new twttr.views.Prompt({
                        ok: _("Yes"),
                        cancel: _("No")
                    })).html()
                }
            };
            this.options = twttr.merge({}, b, a, !0), twttr.widget.Prompt.uber.constructor.call(this, this.options)
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                twttr.widget.Dialog.prototype.registerEvents.call(this), this.$ok = this.$container.find(".js-prompt-ok"), this.$cancel = this.$container.find(".js-prompt-cancel"), this.$ok.addClass(c).bind("click", twttr.bind(this, function(a) {
                    a.preventDefault(), this.close(), this.options.callback(!0)
                })), this.$cancel.bind("click", twttr.bind(this, function(a) {
                    a.preventDefault(), this.options.callback(!1), this.close()
                })), this.$container.bind("keypress", twttr.bind(this, function(a) {
                    a.stopPropagation();
                    if (a.metaKey) return;
                    if (a.keyCode === b.constants.keyCodes.tab) this.$cancel.toggleClass(c), this.$ok.toggleClass(c);
                    else if (a.keyCode === b.constants.keyCodes.enter || a.keyCode === b.constants.keyCodes.spacebar) a.preventDefault(), this.options.callback(this.$ok.hasClass(c)), this.close()
                })), this._$tabInput = $('<input type="text" class="twttr-hidden-input"/>').appendTo(this.$dialog).bind("keypress", function(a) {
                    a.preventDefault()
                })
            },
            open: function() {
                return twttr.widget.Dialog.prototype.open.call(this), setTimeout(twttr.bind(this, function() {
                    this._$tabInput.focus()
                }), 10), this
            }
        }), a(twttr.widget.Prompt)
    })
});
provide("widget/DeviceSetupDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.DeviceSetupDialog", function(a) {
            a = twttr.merge({
                modal: !0,
                draggable: !0,
                css: {
                    width: 550,
                    height: "auto"
                },
                positioning: {
                    top: 80
                },
                template: {
                    title: _("Get notifications and Tweet via SMS"),
                    content: (new twttr.views.DeviceSetupDialog).html()
                }
            }, a || {}, !0), a.view = "Dialog", this._fetchStatus();
            var b = this;
            this._carriers = twttr.API.Device.carriers({
                success: function(a) {
                    b._carriers = a
                }
            }), twttr.widget.Dialog.call(this, a)
        }).subclassOf(twttr.widget.Dialog).statics({
            POLLING_DELAY: 15e3
        }).methods({
            close: function() {
                this._clearDelayedStatusFetch(), twttr.widget.Dialog.prototype.close.call(this)
            },
            _fetchStatus: function() {
                this._clearDelayedStatusFetch();
                var a = this;
                twttr.API.Device.list({
                    success: twttr.bind(this, this._updateStatus),
                    error: function(b) {
                        a.close(), twttr.showError(b.response.error.message)
                    }
                })
            },
            _fetchStatusDelayed: function() {
                this._fetchTimeout = window.setTimeout(twttr.bind(this, this._fetchStatus), twttr.widget.DeviceSetupDialog.POLLING_DELAY)
            },
            _clearDelayedStatusFetch: function() {
                this._fetchTimeout && (window.clearTimeout(this._fetchTimeout), this._fetchTimeout = null)
            },
            _updateStatus: function(a) {
                if (a.length == 0) this._showCreate();
                else {
                    var b = a[0];
                    b.verified ? this._showVerified(b) : this._showWaiting(b)
                }
            },
            _showCreate: function() {
                var a = this,
                    b = this.$container.find(".twttr-dialog-device-setup"),
                    c = new twttr.views.DeviceSetupDialogCreate;
                b.empty().append('<div class="loading"></div>'), this._carriers.get(function(d) {
                    b.empty();
                    var e = c.render(b, "append"),
                        f = e.find("select.country-or-region"),
                        g = e.find("select.country-in-region"),
                        i = e.find("select.carrier"),
                        j = e.find("select.language"),
                        k = !1;
                    for (var l = 0; l < d.regionsAndCountryCodes.length; ++l) {
                        var m = d.regionsAndCountryCodes[l];
                        m[0] == "-------------" ? $('<option disabled="disabled">').text(m[0]).val(m[1]).appendTo(f) : $("<option>").text(m[0]).val(m[1]).appendTo(f)
                    }
                    var n = function() {
                            var a = $(this),
                                b = a.find("option:selected"),
                                c = b.text(),
                                f = b.val();
                            if (d.countries[c]) {
                                var l = c;
                                g.empty();
                                var m = d.countries[l];
                                for (var o = 0; o < m.length; ++o) {
                                    var p = m[o];
                                    $("<option>").text(p[0]).val(p[1]).appendTo(g)
                                }
                                g.parents(".field").first().show(), n.call(g.get(0));
                                return
                            }
                            var q = c;
                            e.find(".country-code").text(f), a.hasClass("country-or-region") && (g.empty(), g.parents(".field").first().hide()), i.empty(), j.empty();
                            var r = d.carriers[q],
                                s = d.languages[q];
                            k = !1;
                            if (d.countries[_("Satellite")]) for (var o = 0; o < d.countries[_("Satellite")].length; o++) if (d.countries[_("Satellite")][o][0] == q) {
                                k = !0;
                                break
                            }
                            if (r) {
                                for (var o = 0; o < r.length; ++o) {
                                    var t = r[o];
                                    $("<option>").text(t.display).val(t.value).appendTo(i)
                                }
                                k ? i.parents(".field").first().hide() : i.parents(".field").first().show()
                            } else i.parents(".field").first().hide();
                            if (s) {
                                for (var o = 0; o < s.length; ++o) {
                                    var u = s[o];
                                    $("<option>").text(u.display).val(u.value).appendTo(j)
                                }
                                j.parents(".field").first().show()
                            } else j.parents(".field").first().hide()
                        };
                    f.change(n), g.change(n), n.call(f.get(0)), twttr.helpers.addFormEvents(e.find("form"), function(b, c) {
                        var d = $(this);
                        c.device_country_intl_prefix = d.find(".country-code").text(), d.find(".error").removeClass("error"), d.find(".error-text").remove(), d.addClass("submitting"), twttr.API.Device.create(c, {
                            success: function(b) {
                                d.removeClass("submitting");
                                var e = b.devices[0];
                                b.duplicate ? a._showDuplicate(e, c) : b.errors ? a._showCreateErrors(d, b.errors) : (k || (e.carrier_name = i.find(":selected").text()), a._showWaiting(e))
                            },
                            error: function(a) {
                                d.removeClass("submitting");
                                var b = a.response.errors;
                                b && b.length && b[0].message ? twttr.showError(b[0].message) : twttr.showError(_("Whoops! Something went wrong. Please try again!"))
                            }
                        })
                    })
                })
            },
            _showCreateErrors: function(a, b) {
                var c = b.device;
                for (var d = 0; d < c.length; ++d) {
                    var e = c[d],
                        f = a.find("input[name='device[" + e[0] + "]']"),
                        g = f.parents(".field").first();
                    $error = $("<div>").addClass("error-text").text(e[1]), g.addClass("error"), g.find(".label").first().append($error)
                }
            },
            _showDuplicate: function(a, b) {
                this._updateDeviceForRendering(a);
                var c = this,
                    d = this.$container.find(".twttr-dialog-device-setup");
                d.empty();
                var e = (new twttr.views.DeviceSetupDialogDuplicate(a)).render(d, "append");
                e.find(".retry").click(function(a) {
                    a.preventDefault();
                    var d = $(this);
                    if (d.hasClass("disabled")) return;
                    d.addClass("disabled"), twttr.API.Device.create(b, {
                        success: function(a) {
                            d.removeClass("disabled"), a.duplicate || (a.errors ? c._showCreate() : c._showWaiting(a.devices[0]))
                        },
                        error: function() {
                            d.removeClass("disabled")
                        }
                    })
                }), e.find(".cancel-instructions a").click(function(a) {
                    a.preventDefault(), c._showCreate()
                })
            },
            _showWaiting: function(a) {
                this._fetchStatusDelayed();
                var b = this,
                    c = this.$container.find(".twttr-dialog-device-setup"),
                    d = c.find(".twttr-dialog-device-setup-waiting");
                if (d.length) return;
                c.empty(), this._updateDeviceForRendering(a), d = (new twttr.views.DeviceSetupDialogWaiting(a)).render(c, "append"), d.find(".refresh a").click(function(a) {
                    a.preventDefault(), b._fetchStatus()
                }), d.find(".cancel-instructions a").click(function(c) {
                    c.preventDefault(), b._clearDelayedStatusFetch(), twttr.API.Device.destroy(a.id, {
                        success: twttr.bind(b, b._showCreate)
                    })
                })
            },
            _showVerified: function(a) {
                var b = this.$container.find(".twttr-dialog-device-setup");
                b.empty(), this._updateDeviceForRendering(a), (new twttr.views.DeviceSetupDialogVerified(a)).render(b, "append")
            },
            _updateDeviceForRendering: function(a) {
                a.address_without_country_code = a.address.replace("+" + a.country_code, ""), a.stop_command = "Stop", a.go_command = "Go"
            }
        }), a(twttr.widget.DeviceSetupDialog)
    })
});
provide("widget/DeviceFollowDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.DeviceFollowDialog", function(a) {
            a = twttr.merge({
                modal: !0,
                draggable: !0,
                css: {
                    width: 500,
                    height: "auto"
                },
                positioning: {
                    top: 200
                },
                template: {
                    title: _("Don’t miss a Tweet."),
                    content: (new twttr.views.WelcomeDeviceFollow).html()
                }
            }, a || {}, !0), a.view = "Dialog", this.onclose = a.onclose, twttr.widget.Dialog.call(this, a)
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                twttr.widget.Dialog.prototype.registerEvents.call(this), this.$find(".device-follow-done-button").bind("click", twttr.bind(this, function(a) {
                    trackClient({
                        component: "device_follow_dialog",
                        action: "done"
                    }), this.close()
                }))
            },
            close: function() {
                this.onclose && this.onclose(), trackClient({
                    component: "device_follow_dialog",
                    action: "close"
                }), twttr.widget.Dialog.prototype.close.call(this)
            }
        }), a(twttr.widget.DeviceFollowDialog)
    })
});
provide("widget/InviteContactsDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.InviteContactsDialog", function(a, b) {
            b = b || {}, this.routeToHome = b.routeToHome, b.template = b.template || {}, b.template.title = b.template.title || _("Invite your friends who aren't on Twitter"), b.template.content = b.template.content || "", defaultOptions = {
                modal: !0,
                draggable: !0
            }, b = twttr.merge({}, defaultOptions, b, !0), b.view = "Dialog", twttr.widget.Dialog.call(this, b);
            var c = b.onSuccess || $.noop,
                d = this,
                e = {
                    onSuccess: function() {
                        c.call(d)
                    },
                    onSubmit: function() {
                        d.clearError()
                    },
                    showError: function(a) {
                        d.setError(a)
                    },
                    scribbler: b.scribbler,
                    clientEventComponent: "invite_contacts_dialog"
                },
                f = new twttr.components.InviteContacts(a, e);
            this.$container.find(".twttr-dialog-content").append(f.$node), this.$container.find(".twttr-dialog-footer").remove(), this.$find(".twttr-dialog-close").bind("click", function() {
                b.scribbler && b.scribbler.scribe({
                    component: e.clientEventComponent,
                    action: "close"
                })
            })
        }).subclassOf(twttr.widget.Dialog).methods({
            close: function() {
                this.constructor.uber.close.call(this), this.routeToHome && twttr.router.routeTo(twttr.router.homePath())
            }
        }), a(twttr.widget.InviteContactsDialog)
    })
});
provide("widget/ListDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.ListDialog", function(a) {
            a = a || {}, a.template = a.template || {}, a.template.title = a.template.title || a.list ? _("Edit list details") : _("Create a new list"), a.template.content = a.template.content || (new twttr.views.ListDialog(a.list)).html(), twttr.is.def(a.modal) || (a.modal = !0), twttr.is.def(a.draggable) || (a.draggable = !0), a.view = "Dialog", twttr.is.fn(a.onSuccess) || (a.onSuccess = function(a) {
                twttr.router.routeTo(twttr.router.userListPath({
                    screen_name: twttr.currentUser.screenName,
                    list_slug: a.slug
                }))
            }), twttr.widget.Dialog.call(this, a)
        }).subclassOf(twttr.widget.Dialog).methods({
            open: function() {
                twttr.widget.Dialog.prototype.open.call(this), this.$container.find("input[name=name]").focus()
            },
            registerEvents: function() {
                var a = this;
                twttr.widget.Dialog.prototype.registerEvents.call(this);
                var b = this.$container.find(".update-list-button");
                this.$container.find(".field .text").bind("focus blur keyup", function(a) {
                    this.value.length ? b.removeClass("disabled") : b.addClass("disabled")
                }), b.click(function(b) {
                    if ($(this).hasClass("disabled")) return;
                    $(this).addClass("disabled");
                    var c = {
                        name: a.$container.find("[name=name]").val(),
                        description: a.$container.find("[name=description]").val(),
                        mode: a.$container.find("[name=mode]:checked").val(),
                        error: function(b) {
                            twttr.helpers.showErrorFromResponse(b), $(a).removeClass("disabled")
                        },
                        complete: function(b) {
                            a.close()
                        }
                    };
                    a.options.list ? a.options.list.update(twttr.merge(c, {
                        success: function(b) {
                            twttr.showMessage(_("List updated!")), a.options.onSuccess(b)
                        }
                    })) : twttr.currentUser.lists.create(c.name, twttr.merge(c, {
                        success: function(b) {
                            twttr.showMessage(_("List created!")), a.options.onSuccess(b)
                        }
                    }))
                })
            },
            close: function() {
                this.constructor.uber.close.call(this), this.remove()
            }
        }), a(twttr.widget.ListDialog)
    })
});
provide("components/t1/DirectMessageDialog", function(a) {
    using("widget/Dialog", "constants", "TweetBox", function(b, c, d) {
        var e = twttr.klass("twttr.widget.DirectMessageDialog", function(a, b, c) {
            twttr.messageManager._fetchMessages(), c = c || {}, d = c.tweetBox || d, twttr.widget.Dialog.call(this, {
                modal: !0,
                draggable: !0,
                view: "DirectMessageDialog",
                closeOnNavigate: !0,
                template: {
                    footer: !0
                },
                positioning: {
                    top: 55
                }
            }), this.initComponentEvents(this.$container);
            var e = this;
            twttr.messageManager.bind("updatedThread", function(a, b, c, d) {
                e._updateConversation(b, c, d)
            }), twttr.messageManager.bind("deletedThread", function(a, b) {
                e._deleteThread(b)
            }), this._hideTweetBox(), this.tweetBox = new d(".twttr-dialog-container .js-dm-tweetbox", {
                data: {
                    getUser: twttr.bind(this, this._getRecipient)
                },
                closeAfterSuccess: !1,
                condensed: !1,
                width: 450,
                height: 56,
                statusAction: "directMessage",
                displayError: !1,
                template: {
                    button_text: _("Send message"),
                    show_geo: !1,
                    show_turkey: !1,
                    show_title: !1
                }
            }), this.tweetBox.bind("dmSuccess", function(a, b, c) {
                twttr.messageManager.addMessage(b, !0), e.switchToConversationView(b.threadId)
            }), this.tweetBox.bind("dmError", function(a, b) {
                var b = twttr.errors.getViewForErrorCode(b, "dm").html();
                e._showError($("<span>").html(b))
            }), this.tweetBox.bind("error", function(a, b) {
                e._showError(b)
            });
            var e = this;
            a = a || twttr.widget.DirectMessageDialog.views.conversationList, this.bind("close", function() {
                twttr.messageManager.unbind("updatedThread"), twttr.messageManager.unbind("deletedThread")
            }), this.bind("open", function() {
                switch (a) {
                case twttr.widget.DirectMessageDialog.views.newConversation:
                    e.switchToNewMessageView(b), e._trackClientDialogImpression("dm_new_conversation");
                    break;
                case twttr.widget.DirectMessageDialog.views.conversation:
                    e.switchToConversationView(b), e._trackClientDialogImpression("dm_existing_conversation");
                    break;
                case twttr.widget.DirectMessageDialog.views.conversationList:
                default:
                    e.switchToConversationListView(), e._trackClientDialogImpression("dm_conversation_list")
                }
            })
        }).subclassOf(b).mixin(twttr.mixins.componentEvents, twttr.mixins.i18nTweet).statics({
            views: {
                conversationList: 1,
                conversation: 2,
                newConversation: 3
            }
        }).methods({
            _getRecipient: function() {
                var a = this.$find(".js-dm-conversation[data-thread-id]").attr("data-thread-id");
                return a || this.$find(".js-dm-user-autocomplete").val()
            },
            _trackClientDialogImpression: function(a) {
                trackClient({
                    component: a,
                    action: "open"
                }, {})
            },
            _trackClientDelete: function(a) {
                trackClient({
                    component: "direct_message",
                    action: "delete"
                }, {
                    item_ids: [a],
                    item_count: 1
                })
            },
            switchToConversationListView: function() {
                var a = this;
                this._updateHeader({
                    conversation_list: !0
                }), this._hideTweetBox(), twttr.messageManager.getAllThreads(function(b) {
                    a._updateContent("DirectMessageDialogConversationList", {
                        threads: b
                    }), a.$find("div.dm-thread-content").each(function() {
                        a.updateRtlDisplay($(this))
                    })
                })
            },
            switchToConversationView: function(a) {
                var b = this;
                twttr.messageManager.getThread(a, function(c) {
                    if (!c) {
                        b.switchToNewMessageView(a);
                        return
                    }
                    var d = c.messages[0],
                        e = twttr.helpers.isCurrentUser(d.recipient) ? d.sender : d.recipient;
                    b._updateHeader({
                        conversation: !0,
                        name: e.name
                    }), b._updateContent("DirectMessageDialogConversation", c), b.$find("div.dm-content").each(function() {
                        b.updateRtlDisplay($(this))
                    }), b._showTweetBox(a), b.tweetBox.focus(), b.$find("a.js-dm-delete").tipsy({
                        gravity: "s"
                    });
                    var f = b.$find(".js-dm-conversation");
                    f.scrollTop(f[0].scrollHeight), twttr.messageManager.markThreadAsRead(c.threadId)
                })
            },
            switchToNewMessageView: function(a) {
                var b = this;
                this._updateHeader({
                    new_dm: !0
                }), this._updateContent("DirectMessageDialogNew", {}), twttr.components.Autocomplete.getAutocompletedUsers(function() {
                    b.autocomplete = new twttr.components.Autocomplete({
                        limit: 8,
                        input: b.$find(".js-dm-user-autocomplete")
                    }), b.autocomplete.bind("select", function(a, c, d, e, f, g) {
                        b._setProfileImageUrl(e), b.switchToConversationView(f), b.tweetBox.focus()
                    }), b.autocomplete.bind("hide", function() {
                        !b.$find(".js-dm-user-autocomplete:focus").length && b._verifyUser()
                    }), b._setProfileImageUrl(), b.autocomplete.focus(), a && (b.autocomplete.set(a), b._verifyUser())
                }), this._showTweetBox()
            },
            _updateConversation: function(a, b, c) {
                var d = this._getCurrentView();
                switch (d) {
                case twttr.widget.DirectMessageDialog.views.conversationList:
                    this._updateConversationListView(a, b);
                    break;
                case twttr.widget.DirectMessageDialog.views.conversation:
                    this._updateConversationView(a, b, c)
                }
            },
            _deleteThread: function(a) {
                this.$find(".js-dm-threads .js-dm-thread[data-thread-id=" + a + "]").remove(), this.$find(".js-dm-conversation[data-thread-id=" + a + "]").empty()
            },
            _updateConversationListView: function(a, b) {
                var c = this.$find(".js-dm-threads"),
                    d = c.find(".js-dm-thread[data-thread-id=" + a.threadId + "]"),
                    e = $((new twttr.views.DirectMessageDialogConversationListItem(a)).html());
                d.length > 0 && d.replaceWith(e), d = e, b === "new" && c.find(".js-dm-thread-list").prepend(d)
            },
            _updateConversationView: function(a, b, c) {
                var d = this.$find(".js-dm-conversation[data-thread-id=" + a.threadId + "]");
                if (d.length > 0) {
                    var e = d.find(".js-dm-item[data-message-id=" + c.messageId + "]");
                    switch (b) {
                    case "new":
                        if (e.length) break;
                        d.append((new twttr.views.DirectMessageDialogConversationItem(c.message)).html()), d.animate({
                            scrollTop: d.attr("scrollHeight")
                        }, 500);
                        break;
                    case "delete":
                        e.remove()
                    }
                    twttr.messageManager.markThreadAsRead(a.threadId)
                }
            },
            _getCurrentView: function() {
                return this.$find(".js-dm-threads").length > 0 ? twttr.widget.DirectMessageDialog.views.conversationList : this.$find(".js-dm-conversation").length > 0 ? twttr.widget.DirectMessageDialog.views.conversation : this.$find(".js-dm-new").length > 0 ? twttr.widget.DirectMessageDialog.views.newConversation : null
            },
            _updateHeader: function(a) {
                return this._replaceDivWithView(".js-dm-header", "DirectMessageDialogHeader", a)
            },
            _setProfileImageUrl: function(a) {
                a = a || twttr.assets.path("sticky/default_profile_images/default_profile_6_mini.png", {
                    isVersioned: !1
                }), this.$find("img.js-dm-avatar").attr("src", a)
            },
            _updateContent: function(a, b) {
                return this._replaceDivWithView(".js-dm-content", a, b)
            },
            _replaceDivWithView: function(a, b, c) {
                return this.$find(a).html((new twttr.views[b](c)).html())
            },
            _hideTweetBox: function() {
                this.$find(".js-dm-tweetbox").hide()
            },
            _showTweetBox: function(a) {
                this.tweetBox.resetTweetContent(), this.$find(".js-dm-tweetbox").show()
            },
            _showError: function(a) {
                var b = this.$find(".js-dm-error");
                b.find(".dm-error-text").html(a), b.show()
            },
            _hideError: function() {
                this.$find(".js-dm-error").hide()
            },
            _verifyUser: function() {
                var a = this,
                    b = this.$find(".js-dm-user-autocomplete").val();
                this._hideError();
                if (!b || twttr.is.blank(b)) return;
                if (!b.match(c.regexps.username)) {
                    a._setProfileImageUrl(), a._showError(_("Whoops! That's not a valid username."));
                    return
                }
                twttr.API.User.find(b, {
                    success: function(b) {
                        twttr.currentUser.relationshipWith(b.screenName, function(c) {
                            c.canDM ? a._setProfileImageUrl(b.profileImageUrl) : a._showError(_("You can't send a message to a user who is not following you."))
                        })
                    },
                    error: function(b) {
                        a._setProfileImageUrl(), a._showError(_("Whoops! That user does not exist."))
                    }
                })
            }
        }).click({
            ".js-dm-thread-link": function(a) {
                var b = $(a.currentTarget).attr("data-thread-id");
                this.switchToConversationView(b), a.preventDefault()
            },
            ".js-dm-header-title": function(a) {
                this.switchToConversationListView(), a.preventDefault()
            },
            ".js-dm-header-new": function(a) {
                this.switchToNewMessageView(), a.preventDefault()
            },
            ".js-dm-delete": function(a) {
                this.$find(".js-dm-delete").tipsy("hide"), $("div.js-dm-tweetbox").addClass("dm-deleting");
                var b = $(a.currentTarget).attr("data-message-id"),
                    c = ".js-dm-delete-confirm";
                this._replaceDivWithView(c, "DirectMessageDeleteConfirm", {
                    messageId: b
                }), $(c).show(), a.preventDefault()
            },
            ".js-dm-delete-confirm .js-prompt-ok": function(a) {
                var b = $(a.currentTarget).attr("data-message-id"),
                    c = this.$find(".js-dm-conversation").attr("data-thread-id");
                this.$find(".js-dm-item[data-message-id=" + b + "]").remove(), this.$find(".js-dm-item").length == 0 && this.switchToConversationListView(), $("div.js-dm-tweetbox").removeClass("dm-deleting"), twttr.messageManager.deleteMessage(b, c), this._trackClientDelete(b), a.preventDefault()
            },
            ".js-dm-delete-confirm .js-prompt-cancel": function(a) {
                var b = $(a.currentTarget).attr("data-message-id");
                this.$find(".js-dm-item[data-message-id=" + b + "]").hide(), $("div.js-dm-tweetbox").removeClass("dm-deleting"), a.preventDefault()
            },
            ".js-dm-error .js-dismiss": function(a) {
                this._hideError(), a.preventDefault()
            }
        }).focus({
            ".twitter-anywhere-tweet-box-editor": function(a) {
                this._getCurrentView() === twttr.widget.DirectMessageDialog.views.newConversation && (this._verifyUser(), this.autocomplete && this.autocomplete.hide())
            }
        });
        a(e)
    })
});
provide("widget/MuteDialog", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.klass("twttr.widget.MuteDialog", function() {
            this.peoples = twttr.caches.User.get("muted"), this.peoples || (this.peoples = {});
            var a = {
                fixed: !1,
                draggable: !0,
                modal: !1,
                view: "Dialog",
                template: {
                    title: _("Mute a User"),
                    content: (new twttr.views.MuteUsers).html()
                }
            };
            twttr.widget.Dialog.call(this, a)
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                var a = this;
                twttr.widget.Dialog.prototype.registerEvents.call(this), this.autocomplete = new twttr.components.Autocomplete({
                    input: this.$find(".mute-input"),
                    limit: 10
                }), this.currentSelection = {}, this.autocomplete.bind("select", function(b, c, d, e, f, g) {
                    a.currentSelection.screenName = f, a.currentSelection.userId = g, a.currentSelection.profileImageUrl = e
                }), this.$dialog.delegate(".remove-muted-person", "click", function(b) {
                    var c = $(this).parent(),
                        d = c.attr("data-user-id");
                    delete a.peoples[d], twttr.caches.User.set("muted", a.peoples), c.remove()
                }), this.$find(".mute-input,.twttr-dialog").bind("keydown", function(c) {
                    c.keyCode === b.constants.keyCodes.enter && !twttr.components.Autocomplete._isCompletionsOpen && (c.stopPropagation(), a.fetchUser())
                }), this.$find(".button").bind("click", function(b) {
                    a.fetchUser()
                }), this.populateUsers()
            },
            fetchUser: function() {
                var a = this.$find("input[type=text]");
                twttr.API.User.find(a.val().toString(), twttr.bind(this, function(b) {
                    a.val(""), $(".stream-tweet[data-user-id=" + b.id + "]").parent().hide();
                    var c = {
                        screenName: b.screenName,
                        userId: b.id,
                        profileImageUrl: twttr.helpers.transformProfileImageUrl(b.profileImageUrl, "mini")
                    };
                    this.peoples[b.id] = c, twttr.caches.User.set("muted", this.peoples), this.populateUsers()
                }))
            },
            populateUsers: function() {
                var a = [];
                for (var b in this.peoples) a.push('<li data-user-id="' + this.peoples[b].userId + '" data-user-screenname="' + this.peoples[b].screenName + '">                  <img width="24" height="24" src="' + this.peoples[b].profileImageUrl + '"/> ' + this.peoples[b].screenName + ' <span class="remove-muted-person">×</span></li>');
                a = a.join(""), this.$find(".muted-user-list").html(a)
            },
            open: function() {
                return twttr.widget.Dialog.prototype.open.call(this), this.$find("input[type=text]").focus(), this
            },
            close: function() {
                return twttr.widget.Dialog.prototype.close.call(this), this.remove(), this
            }
        }), a(twttr.widget.MuteDialog)
    })
});
provide("widget/DiscoveryDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.DiscoveryDialog", function(a) {
            twttr.widget.Dialog.call(this, twttr.merge({
                modal: !0,
                draggable: !1,
                css: {
                    width: 530
                }
            }, a))
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                twttr.widget.Dialog.prototype.registerEvents.call(this);
                var a = this,
                    b = this.$find("form"),
                    c = function() {
                        b.find("input, textarea").attr("disabled", "disabled"), b.find(".button").addClass("disabled")
                    },
                    d = function() {
                        twttr.Router.performRedirect(twttr.router.homePath())
                    };
                twttr.helpers.addFormEvents(b, function(e, f) {
                    if (b.find(".button").hasClass("disabled")) return;
                    c(), twttr.currentUser.updateDiscoverability(f, {
                        success: function(b) {
                            twttr.currentUser.sync("name", b.name), twttr.currentUser.sync("description", b.description), twttr.currentUser.sync("location", b.location), twttr.currentUser.sync("email_discoverability_set", b.email_discoverability_set), twttr.currentUser.sync("mobile_phone_discoverability_set", b.mobile_phone_discoverability_set), twttr.currentUser.sync("discoverable_by_email", b.discoverable_by_email), twttr.currentUser.sync("discoverable_by_mobile_phone", b.discoverable_by_mobile_phone), a.destroy(), d()
                        },
                        error: function(b) {
                            twttr.showError(_("Whoops! Something went wrong. Please try again!")), a.destroy()
                        }
                    })
                }), this.$find(".button.cancel").bind("click", function() {
                    c(), d()
                })
            }
        }), a(twttr.widget.DiscoveryDialog)
    })
});
provide("widget/GeoPromoDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.GeoPromoDialog", function() {
            twttr.widget.Dialog.call(this, {
                template: {
                    title: _("Add a location to your tweets"),
                    content: (new twttr.views.GeoPromoDialog).html()
                },
                view: "Dialog",
                modal: !0,
                stackPreviousModal: !0
            })
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                var a = this;
                twttr.widget.Dialog.prototype.registerEvents.call(this), this.$find("#geo_turn_location_on").click(function() {
                    a.enableGeoForCurrentUser()
                }), this.$find(".geo_dialog_close").click(function(b) {
                    b.preventDefault(), a.destroy()
                })
            },
            enableGeoForCurrentUser: function() {
                var a = this,
                    b = $("#geo_promo_dialog_content .geo-progress"),
                    c = $("#geo_promo_dialog_content .geo-unable-to-turn-location-on");
                if (b.hasClass("geo-spinner")) return;
                b.addClass("geo-spinner"), c.hide(), twttr.currentUser.setGeoEnabled(!0, {
                    success: function() {
                        twttr.geo.geoEnabled = !0, a.destroy(), twttr.geo.location.turnLocationOn()
                    },
                    error: function() {
                        b.removeClass("geo-spinner"), c.show()
                    }
                })
            }
        }), a(twttr.widget.GeoPromoDialog)
    })
});
provide("widget/RetweetDialog", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.widget.RetweetDialog", function(a) {
            twttr.widget.RetweetDialog.uber.constructor.call(this, a), this.$dialog.attr("type", "retweet"), this.$container.find(".twttr-dialog-footer").hide(), twttr.API.Status.find(this.options.data.tweetId, twttr.bind(this, function(b) {
                var c = new twttr.views.ReplyDialogFooter({
                    screen_name: b.user.screenName,
                    text: a.tweetText,
                    profile_image_url: b.user.profileImageUrl
                });
                c.render(this.$container.find(".twttr-dialog-content"), "prepend")
            }))
        }).subclassOf(twttr.widget.Prompt), a()
    })
});
provide("widget/TrendsDialog", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.widget.TrendsDialog", function(a) {
            var b = this,
                a = twttr.merge({
                    view: "Dialog",
                    destroyOnClose: !1,
                    template: {
                        container_id: "trends_dialog"
                    }
                }, a, !0);
            a.template.title = twttr.decider.isAvailable("personalized_trends") ? _("Trends") : _("Choose a trend location"), twttr.widget.Dialog.call(b, a), b.resetChangeCount(), b.bind("close", function() {
                b.logClose()
            }), b.bind("open", function() {
                trackClient({
                    section: "trends_location_dialog",
                    action: "open"
                }), b.rerender()
            }), this.initComponentEvents(this.$container), b.position()
        }).subclassOf(twttr.widget.Dialog).mixin(twttr.mixins.componentEvents).methods({
            resetChangeCount: function() {
                this.changeCount = 0
            },
            logClose: function() {
                scribble("close-trend-location-dialog", {
                    woeid: twttr.trendLocations.current.woeid,
                    change_count: this.changeCount,
                    input: "click"
                }), this.resetChangeCount()
            },
            updateFooter: function(a) {
                var b = this.$find(".twttr-dialog-footer");
                twttr.decider.isAvailable("personalized_trends") && !twttr.trendLocations.current.isPersonalized || a ? (b.html((new twttr.views.TrendsDialogFooter).html()), b.show()) : b.hide()
            },
            rerender: function(a) {
                var b = this.$container.find(".twttr-dialog-content");
                b.empty(), this.updateFooter(a), (new twttr.views.LocalTrendsNew(twttr.trendLocations.all, a)).render(b, "append"), this.markLocation()
            },
            registerEvents: function() {
                var a = this;
                twttr.widget.TrendsDialog.uber.constructor.prototype.registerEvents.call(a), a.$container.delegate("li a", "click", function(b) {
                    a.changeCurrentLocation($(this), "dialog"), b.preventDefault()
                }), a.$container.delegate("a.trend-breadcrumb-location", "click", function(b) {
                    a.changeCurrentLocation($(this), "dialog-breadcrumb"), b.preventDefault()
                })
            },
            position: function() {
                this.options.fixed || this.$dialog.addClass("static");
                var a = twttr.app.currentPage().$find(".dashboard");
                if (twttr.isT1 || a.length === 0) var b = ($(document).width() + this.$dialog.outerWidth()) / 2;
                else var b = Math.max(a.offset().left, this.$dialog.outerWidth());
                var c = $(window).scrollTop(),
                    d = this.$dialog.innerHeight(),
                    e = $(window).height(),
                    f = Math.round(e / 2 - d / 2);
                f = Math.max(f, $("#top-stuff").innerHeight() + 1), this.options.fixed || (f += c), this.$container.css({
                    left: b - this.$dialog.outerWidth(),
                    top: f
                })
            },
            changeCurrentLocation: function(a, b) {
                if (a) {
                    a.closest(".twttr-dialog-content").find(".selected").removeClass("selected"), a.addClass("selected");
                    var c = parseInt(a.attr("data-woeid"), 10)
                }
                twttr.trendLocations.setCurrent({
                    isPersonalized: !c,
                    woeid: c,
                    origin: b
                }), this.changeCount += 1
            },
            markLocation: function() {
                var a = twttr.trendLocations.current;
                if (!a.isPersonalized) {
                    var b = a && a.woeid || 1;
                    this.$container.find("[data-woeid=" + b + "]").addClass("selected")
                }
            }
        }).click({
            ".customize-by-location": function() {
                this.rerender(!0)
            },
            "button.done": function() {
                this.close()
            },
            ".select-personalized": function() {
                this.changeCurrentLocation(null, "dialog"), this.close()
            }
        });
        twttr.isT1 && c.methods({
            position: twttr.util.noopInT1
        }), a(c)
    })
});
provide("widget/ReplyDialog", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.widget.ReplyDialog", function(a) {
            var a = twttr.merge({}, twttr.dialogs.defaultOptions, a, {}, !0);
            twttr.widget.ReplyDialog.uber.constructor.call(this, a), this.$dialog.attr("type", "reply")
        }).subclassOf(twttr.widget.TweetDialog).statics({
            openReplyDialog: !1
        }).methods({
            open: function() {
                return this.constructor.openReplyDialog && this.constructor.openReplyDialog.close(), twttr.widget.TweetDialog.prototype.open.call(this), this.constructor.openReplyDialog = this, this.focus(), this
            },
            focus: function() {
                var a = this.view.tweetBox.editor.$editor.val().length,
                    b = this.view.tweetBox.editor.$editor.val().length;
                this.options.multiple && (a = this.options.data.screenName.length + 2), this.setCaretPosition(a, b)
            }
        }), a(twttr.widget.ReplyDialog)
    })
});
provide("widget/ListMembershipDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.ListMembershipDialog", function(a, b) {
            b = twttr.merge({
                view: "Dialog",
                modal: !0,
                draggable: !0,
                css: {
                    width: 340,
                    height: "auto"
                },
                positioning: {
                    top: 80
                },
                template: {
                    container_id: "list_membership_dialog",
                    title: _("Your lists"),
                    content: (new twttr.views.AddToListDialog({
                        screen_name: a.screenName
                    })).html()
                }
            }, b || {}, !0), this.makeListItems(a), twttr.widget.Dialog.call(this, b), this.addSpinner()
        }).subclassOf(twttr.widget.Dialog).methods({
            makeListItems: function(a) {
                var b = this;
                this.getListDialogItems(a, function(a) {
                    b.spinner && b.spinner.hide(), a.length > 1 && b.$container.find(".add-to-list-prompt").show(), b.renderItems(a), b.attachHandlers(a)
                })
            },
            addSpinner: function() {
                this.spinner = $("<span class='spinner' title='{{_i}}Loading...{{/i}}'></span>"), this.spinner.appendTo(this.$container.find(".twttr-dialog-body"))
            },
            attachHandlers: function(a) {
                var b = this.$container.find(".list-membership-container").children();
                for (var c = 0; c < a.length; c++) {
                    var d = a[c];
                    if (!d.handlers) continue;
                    $.each(d.handlers, function(a, d) {
                        var e = $(b[c]),
                            f = [a, d];
                        e.bind.apply(e, f)
                    })
                }
            },
            renderItems: function(a) {
                var b = twttr.map(a, function(a) {
                    return (new twttr.views.CheckboxListItem(a)).html()
                });
                $(b.join("")).appendTo(this.$container.find(".list-membership-container"))
            },
            getListDialogItems: function(a, b) {
                var c = this;
                twttr.currentUser.lists({
                    count: twttr.currentUser.listsLimit,
                    success: function(d) {
                        var e = [],
                            f = {},
                            g = function(f) {
                                d.each(function(a) {
                                    e.push(i(a))
                                }), e.push({
                                    label: _("Create a list"),
                                    icon: "list",
                                    className: "btn create-a-list",
                                    handlers: {
                                        click: function() {
                                            c.destroy(), (new twttr.widget.ListDialog({
                                                onSuccess: function(b) {
                                                    b.add(a, {
                                                        success: function(a) {
                                                            twttr.router.routeTo(twttr.router.userListPath({
                                                                screen_name: twttr.currentUser.screenName,
                                                                list_slug: b.slug
                                                            }))
                                                        },
                                                        error: function(a) {
                                                            twttr.helpers.showErrorFromResponse(a)
                                                        }
                                                    })
                                                }
                                            })).open()
                                        }
                                    }
                                }), b(e)
                            },
                            i = function(b) {
                                return {
                                    label: h(b.name),
                                    id: b.id,
                                    user_is_member: f[b.id],
                                    is_private: b.mode === "private",
                                    handlers: {
                                        click: c.handler(b, a)
                                    }
                                }
                            };
                        d.length() ? a.memberships({
                            filter_to_owned_lists: !0,
                            success: function(a) {
                                a.each(function(a, b) {
                                    f[a.id] = !0
                                }), g()
                            }
                        }) : g()
                    }
                })
            },
            handler: function(a, b) {
                return function(c) {
                    c.stopPropagation(), c.preventDefault();
                    var d = $(this).find("input[type=checkbox]"),
                        e = d.attr("data-is-checked"),
                        f = !! e && e === "true",
                        g = $(this).find("img");
                    d.hide(), g.show();
                    var i = f ? "remove" : "add";
                    a[i](b, {
                        success: function() {
                            twttr.widget.ListMembershipDialog.trigger(i + "ListMember", [a, b]), d.attr("data-is-checked", !f), d.attr("checked", !f)
                        },
                        error: function() {
                            d.attr("data-is-checked", f), d.attr("checked", f), twttr.showError(_("There was an error updating the list"))
                        },
                        complete: function() {
                            g.hide(), d.show()
                        }
                    })
                }
            }
        }), a(twttr.widget.ListMembershipDialog)
    })
});
provide("widget/MiniProfileDialog", function(a) {
    using("components/ProfilePane", "components/RecentTweets", function(b, c) {
        twttr.klass("twttr.widget.MiniProfileDialog", function(a, d) {
            var e = this;
            d = d || !1;
            var f = "";
            d && (f = " js-unclickable unclickable"), twttr.widget.Dialog.call(this, {
                modal: !0,
                draggable: !0,
                view: "Dialog",
                closeOnNavigate: !0,
                template: {
                    container_id: "mini-profile",
                    title: twttr.isT1 ? null : "@" + a.screenName,
                    content: "<div class='expando-profile-popup expanding-stream-item js-expando-profile-popup" + f + "'/>"
                },
                css: {
                    width: 400
                },
                positioning: {
                    top: 95
                }
            });
            var g = new b(a),
                i = new c(a);
            this.$find(".js-expando-profile-popup").append(g.$node).append(i.$node), this.$dialog.delegate(".js-unclickable, .js-unclickable a", "click", function(a) {
                !$(a.target).hasClass("js-action-follow") && !$(a.target).hasClass("js-action-unfollow") && !$(a.target).hasClass("twttr-dialog-close") && (a.stopPropagation(), a.preventDefault())
            }).delegate(".js-mini-profile-user", "click", function() {
                setTimeout(function() {
                    e.close()
                }, 0)
            })
        }).subclassOf(twttr.widget.Dialog), a(twttr.widget.MiniProfileDialog)
    })
});
provide("widget/EmbedDialog", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.klass("twttr.widget.EmbedDialog", function(a) {
            return this.status = a, twttr.widget.Dialog.call(this, {
                modal: !0,
                fixed: !1,
                draggable: !1,
                destroyOnClose: !0,
                positioning: {
                    top: $(window).scrollTop() + 100
                },
                view: "Dialog",
                template: {
                    title: _("Embed this Tweet"),
                    content: (new twttr.views.EmbedDialog).html()
                }
            })
        }).subclassOf(twttr.widget.Dialog).methods({
            open: function() {
                function a(a) {
                    setTimeout(function() {
                        z.select()
                    }, 0), l()
                }
                function b() {
                    using("//platform.twitter.com/js/vendor/twt/dist/twt.all.min.js", "css!//platform.twitter.com/twt/twt.css", function() {
                        if (!window.twt) return;
                        twt.settings.lang = u;
                        var a = twt.tweet(p.status.attributes, {
                            expandMedia: !0
                        });
                        p.status.isReply ? p.status.inReplyTo({
                            success: function(b) {
                                A.html(a.inReplyTo(b.attributes).html())
                            },
                            error: function() {
                                A.html(a.html())
                            }
                        }) : A.html(a.html())
                    }).load()
                }
                function c(a, b) {
                    var c = b.find(".active");
                    if (c[0] == a[0]) return;
                    c.removeClass("active"), a.addClass("active")
                }
                function d(a) {
                    c($(this).prev(), $(a.delegateTarget)), m($("input:checked", w).val()), i()
                }
                function e(a) {
                    a.preventDefault();
                    var b = $(this);
                    c(b, $(a.delegateTarget));
                    var d = b.data().target;
                    m(d), i()
                }
                function f() {
                    var a = {
                        lang: u,
                        target: $(".active", x).data().target,
                        align: $("input:checked", w).val()
                    },
                        b = g(a);
                    return a.success = j(b), a
                }
                function g(a) {
                    return a.lang + a.target + a.align
                }
                function i() {
                    var a = f(),
                        b = g(a),
                        c = {
                            html: "https://twitter.com/" + p.status.user.screenName + "/statuses/" + p.status.id + ""
                        };
                    t++ || z.addClass(r).attr(r, r);
                    if (s[b]) return a.success(s[b]);
                    if (a.target == "link") return a.success(c);
                    p.status.oembed(a)
                }
                function j(b) {
                    return function(c) {
                        var d = f();
                        s[b] = c, --t || z.val(s[g(d)].html).removeClass(r).removeAttr(r), q && (q = !1, a())
                    }
                }
                function k() {
                    var a = {
                        section: "embed_code_dialog",
                        component: "embed_tweet_code",
                        action: "open"
                    };
                    trackClient(a, twttr.audit.currentPage())
                }
                function l() {
                    var a = {
                        section: "embed_code_dialog",
                        component: "embed_tweet_code",
                        action: "focus"
                    };
                    trackClient(a, twttr.audit.currentPage())
                }
                function m(a) {
                    var b = {
                        section: "embed_code_dialog",
                        component: "embed_tweet_code",
                        action: "target_" + a
                    };
                    trackClient(b, twttr.audit.currentPage())
                }
                function n(a) {
                    var b = {
                        section: "embed_code_dialog",
                        component: "embed_tweet_code",
                        action: "align_" + a
                    };
                    trackClient(b, twttr.audit.currentPage())
                }
                function o(a) {
                    var b = {
                        section: "embed_code_dialog",
                        component: "embed_tweet_code",
                        action: "language_" + a
                    };
                    trackClient(b, twttr.audit.currentPage())
                }
                var p = this,
                    q = !0,
                    r = "disabled",
                    s = {},
                    t = 0,
                    u;
                twttr.widget.Dialog.prototype.open.call(this);
                for (var v = twttr.languages.length; v--;) if (twttr.languages[v].current) {
                    u = twttr.languages[v].code;
                    break
                }
                var w = this.$container,
                    x = w.find(".embed-target"),
                    y = w.find(".embed-alignment"),
                    z = w.find("textarea"),
                    A = w.find(".embed-preview");
                return i(), b(), k(), o(u), x.delegate("a", "click", e), y.delegate("input", "click", d), z.focus(a), this
            },
            destroy: function() {
                twttr.widget.Dialog.prototype.destroy.call(this), twttr.router.unbind("urlChanged", this.urlChangedListener), twttr.router.routeTo(twttr.router.permalinkPath({
                    screen_name: this.status.user.screenName,
                    id: this.status.id
                }))
            }
        }), a(twttr.widget.EmbedDialog)
    })
});
provide("components/pages/mixins/searchT1", function(a) {
    using("mixins/sideNavigationT1", "components/t1/SearchHeader", "components/t1/dashboard/SearchNav", "components/SignupCallOut").as(function(b) {
        var c = twttr.klass.mixin("twttr.components.pages.mixins.searchT1", function() {
            this.mixin(b.mixins.sideNavigationT1).view(twttr.views.SearchPage).addOnSwitchAway(function() {
                this.removeSearchHeader(), this.removeSearchAssistance()
            }).addOnSwitchTo(function() {
                this.registerSearchAssistanceDecider(), this.$node.find(".js-search-header").length || this.addSearchHeader()
            }).addAfterRender(function() {
                this.isNewSearchHeaderAvailable() ? (this.setQuery(this._query), this.focusQuery()) : (this.addSearchHeader(), $("#search-query").val(""))
            }).methods({
                getDashboardComponents: function() {
                    var a = [];
                    return twttr.loggedIn || a.push(new b.components.SignupCallOut("search", {
                        query: this._query
                    })), this._nav = new b.components.t1.dashboard.SearchNav(this._query), this.trendsComponent = this.trendsComponent || new twttr.components.Trends, a.concat([this._nav, this.trendsComponent, new twttr.components.Footer])
                },
                noAutoRender: !0,
                people: function(a, c) {
                    var d = a.query || c.q,
                        e = this._query !== d;
                    this._query = d;
                    if (!d) return this.routePageTo(this.PATH_ROOT);
                    this.streamManager || this.render({
                        query: d,
                        pretty_query: d,
                        has_relevance_search: !1,
                        top_mode: !1,
                        all_mode: !1,
                        timeline_mode: !1,
                        with_links_mode: !1
                    }), this.streamManager.switchTo(twttr.streams.PeopleSearch, {
                        query: d,
                        pathRoot: this.PATH_ROOT,
                        hideTitle: !1
                    });
                    if (e) {
                        var f = new b.components.t1.dashboard.SearchNav(this._query);
                        this._nav.$node.replaceWith(f.$node), delete this._nav, this._nav = f
                    }
                    this.setQuery(d), this.focusQuery(), this.selectCurrentSideNav(), this.removeOnebox(), this.removeSearchAssistance(), this.updatePageTitle(_("Twitter / User Search"))
                },
                registerSearchAssistanceDecider: function() {
                    if (twttr.decider.isAvailable("search_assistance")) {
                        this._isNewSearchHeaderAvailable = !0, this._isSearchAssistanceAvailable = !0;
                        return
                    }
                    var a = twttr.abdecider.choose("search_assistance_192");
                    this._isNewSearchHeaderAvailable = a === "no_header_no_assistance" || a === "no_header_with_assistance", this._isSearchAssistanceAvailable = a === "no_header_with_assistance"
                },
                isNewSearchHeaderAvailable: function() {
                    return !!this._isNewSearchHeaderAvailable
                },
                isSearchAssistanceAvailable: function() {
                    return !!this._isSearchAssistanceAvailable
                },
                renderRelatedQueries: function(a) {
                    if (!$.isArray(a) || !a.length) return;
                    var b = a.length,
                        c = [],
                        d = [];
                    for (var e = 0; e < b; e++) c[e] = {
                        search_query_source: twttr.search.searchQuerySource.RELATED_QUERY,
                        query: this._query,
                        related_query: a[e].query,
                        url: twttr.router.searchResultsPath({
                            query: a[e].query
                        }),
                        delimiter: e < b - 1 ? ", " : ""
                    }, d[e] = a[e].query;
                    this.$find(".js-search-header").append((new twttr.views.RelatedQueries({
                        related_queries: c
                    })).html()), trackClient({
                        section: "search",
                        component: "related_queries",
                        action: "impression"
                    }, {
                        query: this._query,
                        item_count: d.length,
                        item_names: d
                    })
                },
                renderSpellingCorrections: function(a) {
                    if (!$.isArray(a) || !a.length) return;
                    var b = a[0].query,
                        c = [];
                    if (a[0].indices && a[0].indices.length) {
                        var d = a[0].indices,
                            e = 0,
                            f = b.length;
                        for (var g = 0; g < d.length; g++) c[g] = {
                            nonhighlighted: b.substring(e, d[g][0]),
                            highlighted: b.substring(d[g][0], d[g][1])
                        }, e = d[g][1];
                        c[d.length] = {
                            nonhighlighted: b.substring(e, f),
                            highlighted: ""
                        }
                    } else c[0] = {
                        nonhighlighted: "",
                        highlighted: b
                    };
                    this.$find(".js-stream-header").before((new twttr.views.SpellingCorrections({
                        query: this._query,
                        correction: b,
                        partitions: c,
                        url: twttr.router.searchResultsPath({
                            query: b
                        }),
                        search_query_source: twttr.search.searchQuerySource.SPELLING_CORRECTION
                    })).html()), trackClient({
                        section: "search",
                        component: "spelling_corrections",
                        action: "impression"
                    }, {
                        query: this._query,
                        item_count: a.length,
                        item_names: a
                    })
                },
                removeSearchAssistance: function() {
                    this.$find(".js-spelling-corrections").remove(), this.$find(".js-related-queries").remove()
                },
                addSearchHeader: function() {
                    this.isNewSearchHeaderAvailable() || (this._header = new b.components.t1.SearchHeader(this._query), this.$node.prepend(this._header.$node))
                },
                removeSearchHeader: function() {
                    this.isNewSearchHeaderAvailable() || this._header && this._header.destroy()
                },
                setupSavedSearchAction: function() {
                    var a = twttr.search.isSavedSearch(this._query);
                    a ? this.toggleSavedSearchOn(a) : this.toggleSavedSearchOff()
                },
                toggleSavedSearchOn: function(a) {
                    this.isNewSearchHeaderAvailable() ? (this.$find(".js-toggle-saved-search-link").html(_("Remove saved search")).addClass("saved").removeClass("not-saved"), this.$find(".js-search-title").html(Mustache.to_html(_('Saved search: <strong class="search-query">{{query}}</strong>'), {
                        query: this._query
                    }))) : this._header.toggleSavedSearchOn(), this._savedSearch = a
                },
                toggleSavedSearchOff: function() {
                    this.isNewSearchHeaderAvailable() ? (this.$find(".js-toggle-saved-search-link").html(_("Save search")).addClass("not-saved").removeClass("saved"), this.$find(".js-search-title").html(Mustache.to_html(_('Results for <strong class="search-query">{{query}}</strong>'), {
                        query: this._query
                    }))) : this._header.toggleSavedSearchOff(), this._savedSearch = null
                },
                showSearchMenu: function(a) {
                    var b = this;
                    a.addClass("open"), $(document).bind("click.button", function() {
                        b.hideSearchMenu(a)
                    })
                },
                hideSearchMenu: function(a) {
                    a.removeClass("open"), $(document).unbind("click.button")
                },
                toggleSearchMenu: function(a) {
                    var b = this.$node.find(".js-search-dropdown");
                    b.hasClass("open") ? this.hideSearchMenu(b) : this.showSearchMenu(b)
                },
                setQuery: function(a) {
                    this.isNewSearchHeaderAvailable() ? $("#search-query").val(a) : this._header.setQuery(a)
                },
                focusQuery: function() {
                    this.isNewSearchHeaderAvailable() ? ($("#search-query").addClass("focus"), $("#search-query").blur()) : this._header.focusQuery()
                },
                addDropdownMenu: twttr.util.noopInT1,
                renderPeopleResults: twttr.util.noopInT1,
                renderOneboxContainer: function(a) {
                    this.$find(".js-onebox-container").html(a.$node)
                },
                removeOnebox: function() {
                    this.$find(".js-onebox-container").empty()
                },
                addImpressionData: function(a) {
                    a.query = this._query
                }
            }).click({
                "a.js-toggle-saved-search-link": function(a, b) {
                    this._savedSearch ? twttr.dialogs.deleteSavedSearch(twttr.bind(this, function(a) {
                        if (a) {
                            var b = this._savedSearch;
                            this._savedSearch.destroy({
                                before: twttr.bind(this, this.toggleSavedSearchOff),
                                error: twttr.bind(this, function() {
                                    this.toggleSavedSearchOn(b), twttr.showError(_("Error deleting search"))
                                })
                            })
                        }
                    })).open() : twttr.currentUser.savedSearches.create(this._query, {
                        before: twttr.bind(this, this.toggleSavedSearchOn),
                        error: twttr.bind(this, function() {
                            this.toggleSavedSearchOff(), twttr.showError(_("Error saving search"))
                        })
                    }), a.preventDefault()
                },
                "button.js-search-dropdown-button": function(a, b) {
                    return this.toggleSearchMenu(), a.preventDefault(), a.stopPropagation(), !1
                },
                "div.js-related-queries a": function(a, b) {
                    trackClient({
                        section: "search",
                        component: "related_queries",
                        action: "search"
                    }, {
                        query: b.data("query"),
                        item_names: [b.data("search-assistance")]
                    })
                },
                "div.js-spelling-corrections a": function(a, b) {
                    trackClient({
                        section: "search",
                        component: "spelling_corrections",
                        action: "search"
                    }, {
                        query: b.data("query"),
                        item_names: [b.data("search-assistance")]
                    })
                },
                "div.js-spelling-corrections div.js-action-dismiss": function(a, b) {
                    this.$find(".js-spelling-corrections").animate({
                        opacity: "0"
                    }, 250).slideUp(), trackClient({
                        section: "search",
                        component: "spelling_corrections",
                        action: "dismiss"
                    }, {
                        query: b.data("query"),
                        item_names: [b.data("search-assistance")]
                    })
                }
            })
        });
        a(c)
    })
});
provide("components/pages/ProfileAbstract", function(a) {
    using().as(function(b) {
        var c = twttr.klass.page("twttr.components.pages.ProfileAbstract").subclassOf(twttr.components.Page).mixin(twttr.mixins.streamablePage, twttr.mixins.profileHelper).methods({
            _addAdminTools: function() {
                if (twttr.admin && !twttr.helpers.isCurrentUser(this.profileUser)) {
                    var a = this;
                    using(">defaultViews", function() {
                        twttr.admin.addToolsFor(a.profileUser.screenName, a.profileUser.id)
                    })
                }
            },
            _highlightNavIfCurrentUser: function(a) {
                twttr.app.highlightGlobalNav("profile", twttr.helpers.isCurrentUser(a))
            },
            _switchToStream: function(a, b) {
                var c = this;
                this.unfocusStreamItem(), this.loading(a.screenName), this.getUserInfo(a.screenName, function() {
                    c._addPromotedData(), !c._renderedScreenName || c._renderedScreenName.toLowerCase() !== a.screenName ? c._renderPage() : twttr.themes.loadUserStyleFor(c.profileUser), c.streamManager.switchTo(a.stream, twttr.merge({
                        canViewUser: twttr.helpers.canViewUser(c.profileUser)
                    }, a), b), twttr.components.JapaneseAd.refreshAds(), c.trigger("switchedToStream")
                }, {
                    batch: !twttr.loggedIn
                }, twttr.bind(this, this.noUserFoundCallback)), this.focusStreamTab(a.tab), twttr.isT1 || trackClient({
                    action: "impression"
                }, {
                    profile_id: twttr.profileUser && twttr.profileUser.id,
                    context: "profile"
                })
            },
            loading: function(a) {
                a = a.toLowerCase();
                if (this.preRendered) {
                    this.preRenderedScreenName = this.$find("div.profile-header").attr("data-screen-name").toLowerCase();
                    if (this.preRenderedScreenName == a) return
                }
                if (!this._renderedScreenName || this._renderedScreenName.toLowerCase() !== a) this.streamManager && this.streamManager.getCurrent() && this.streamManager.getCurrent().$node.detach(), this.$node.children().empty(), $("div.tipsy").remove()
            },
            _renderPage: function() {
                this.profileUser.screenName.toLowerCase() !== this.preRenderedScreenName && twttr.themes.loadUserStyleFor(this.profileUser), this._addAdminTools(), this.render({
                    can_view: twttr.helpers.canViewUser(this.profileUser),
                    screen_name: this.profileUser.screenName,
                    social_context: this._isSocialContextAvailable()
                }), this._renderedScreenName = this.profileUser.screenName, this.renderUserInfo(), this._followingDropDown = null, this._followersDropDown = null
            },
            noAutoRender: !0
        });
        twttr.isT1 ? c.methods({
            renderUserInfo: twttr.util.noopInT1
        }) : c.methods({
            renderUserInfo: function() {
                var a = this,
                    b = this.profileUser;
                this.panes.push(new twttr.views.Dashboard("profile.dashboard", b.attributes));
                var c = new twttr.components.ProfileActions(b);
                c.$node.appendTo(this.$find(".profile-actions-container"))
            }
        }), a(c)
    })
});
provide("components/pages/Search", function(a) {
    using("_", twttr.isT1 ? "components/pages/mixins/searchT1" : "components/pages/mixins/searchP1", "util", "constants").as(function(b, _, c) {
        var d = twttr.klass("twttr.components.pages.Search").subclassOf(twttr.components.Page).mixin(twttr.mixins.streamablePage).view(twttr.views.SearchPage).addOnSwitchAway(function() {
            twttr.search.clear(), this.trendsComponent && this.trendsComponent.stopUpdatePolling()
        }).addOnSwitchTo(function() {
            twttr.themes.loadCurrentUserStyle(), this.trendsComponent && this.trendsComponent.startUpdatePolling()
        }).addAfterRender(function() {
            this.addDashboardComponents(this.getDashboardComponents()), this.trendsComponent && this.trendsComponent.registerEventHandlers()
        }).statics({
            addSearchClickLogging: function(a, b) {
                if (a.length) {
                    var c = {};
                    b.tweet_click_info = c, c.tweet_id = a.attr("data-tweet-id"), c.pos = a.closest(".stream-item").prevAll(".stream-item").length, c.type = a.is(".promoted-tweet") ? "promoted" : a.is(".top-tweet") ? "popular" : "recent"
                }
            }
        }).methods({
            realtime: function(a, b) {
                var c = a.query || b.q;
                twttr.decider.isAvailable("phoenix_search_relevance") ? this.updatePageTitle(_("Twitter / Search - {{{query}}} - All Tweets", {
                    query: c
                })) : this.updatePageTitle(_("Twitter / Search - {{{query}}}", {
                    query: c
                })), this.enterMode(c, "tweets")
            },
            timeline: function(a, b) {
                var c = a.query || b.q,
                    d = _("Twitter / Timeline Search - {{{query}}}", {
                        query: c
                    });
                twttr.abdecider.choose("timeline_copy_317") === "stream" && (d = _("Twitter / Stream Search - {{{query}}}", {
                    query: c
                })), this.updatePageTitle(d), this.enterMode(c, "timeline")
            },
            links: function(a, b) {
                var c = a.query || b.q;
                if (!c) return this.search({
                    query: "links"
                });
                this.updatePageTitle(_("Twitter / Search - {{{query}}} - Tweets with links", {
                    query: c
                })), this.enterMode(c, "links")
            },
            searchShow: function(a, b) {
                if (twttr.decider.isAvailable("swift_events") && twttr.decider.isAvailable("swift_events_search")) {
                    var c = twttr.griffin.isEvent(a.query);
                    twttr.griffin.setNoRedirectOnSearch(c, !0)
                }
                this.search(a, b)
            },
            search: function(a, b) {
                if (!twttr.currentUser && !twttr.decider.isAvailable("phoenix_search_relevance_logged_out") || twttr.currentUser && !twttr.decider.isAvailable("phoenix_search_relevance")) {
                    this.realtime(a, b);
                    return
                }
                b && b.partner == "mozilla" && b.source == "desktop-search" && (a.query = a.query.replace(/\+/g, " ")), this.query = a.query || b.q, this.query === !0 && (this.query = !1), this.updatePageTitle(_("Twitter / Search - {{{query}}}", {
                    query: this.query
                })), this.enterMode(this.query, "relevance", b)
            },
            placeTweetSearch: function(a) {
                var b = a.place_name,
                    c = a.place_id;
                this.updatePageTitle(_("Twitter / Tweets at {{placeName}}", {
                    placeName: b
                })), this._placeName = b, this.enterMode("place:" + c, "placeTweetSearch")
            },
            noAutoRender: !0,
            enterMode: function(a, b, c) {
                twttr.search.latestQuery = a, c = c || {};
                if (!a) {
                    twttr.router.redirectTo(twttr.router.searchHomePath());
                    return
                }
                twttr.isT1 || trackClient({
                    action: "impression"
                }, {
                    query: a
                }), this.unfocusStreamItem(), twttr.SearchAPI.flushCache();
                var d = this;
                d._mode = b;
                if (a !== this._query) {
                    this._query = a, !twttr.isT1 && twttr.loggedIn && (this.setupSavedSearchAction(), this.registerSavedSearchListeners()), this.streamManager && this.streamManager.$node.detach();
                    var e = !1;
                    twttr.currentUser ? e = twttr.decider.isAvailable("phoenix_search_relevance") : e = twttr.decider.isAvailable("phoenix_search_relevance_logged_out");
                    var f = b == "placeTweetSearch";
                    this.render({
                        query: a,
                        pretty_query: f && this._placeName || a,
                        has_relevance_search: e,
                        top_mode: b == "relevance",
                        all_mode: b == "tweets",
                        timeline_mode: b == "timeline",
                        with_links_mode: b == "links"
                    })
                } else twttr.decider.isAvailable("phoenix_search_dropdown") && this.$find(".stream-tabs").empty().append((new twttr.views.SearchPageTabs({
                    top_mode: b == "relevance",
                    all_mode: b == "tweets",
                    timeline_mode: b == "timeline",
                    with_links_mode: b == "links"
                })).html());
                twttr.decider.isAvailable("phoenix_search_dropdown") && this.addDropdownMenu(this._query, this.$find(".stream-tab-dropdown")), this.streamManager.switchTo(twttr.streams.Search, {
                    query: a,
                    pretty_query: this._placeName || a,
                    mode: b,
                    hideTitle: !0,
                    debug: c.debug,
                    experimentId: c.experimentId,
                    is_new_search_header_available: this.isNewSearchHeaderAvailable()
                }), this.focusStreamTab(b), this.focusQuery(a), twttr.router.getCurrentRoute().name === "searchRealtime" ? this.selectSideNav("searchResults") : this.selectCurrentSideNav(), twttr.isT1 && twttr.loggedIn && (this.setupSavedSearchAction(), this.registerSavedSearchListeners()), this.addSearchExtras(), this.renderPeopleResults()
            },
            focusQuery: function(a) {
                twttr.search.focusQuery(a)
            },
            isNewSearchHeaderAvailable: function() {
                return !1
            },
            isSearchAssistanceAvailable: function() {
                return !1
            },
            removeSearchAssistance: $.noop,
            isOneboxAvailable: function() {
                return !!this._query && twttr.decider.isAvailable("onebox")
            },
            renderOnebox: function(a) {
                if (a.length() === 0) return;
                var c, d = a.get(0),
                    e = twttr.components.onebox[b.util.capitalize(d.type)];
                if (!e) return;
                var c = new e(d, this._query);
                if (!c || c.$node.children().size() == 0) return;
                this.renderOneboxContainer(c, d), this.$find("div.onebox").show(), c.render();
                var f = c.items || [];
                trackClient({
                    section: "onebox",
                    component: d.type,
                    action: "impression"
                }, {
                    item_count: f.length,
                    item_ids: f,
                    query: this._query
                })
            },
            addSearchExtras: function() {
                var a = this,
                    b = a.isSearchAssistanceAvailable(),
                    c = a.isOneboxAvailable();
                if (!c && !b) return;
                c && this.$find("div.onebox").hide();
                var d = twttr.search.getLastQuerySource(),
                    e = {
                        is_t1: twttr.isT1,
                        statuses: !1,
                        stories: c,
                        related_queries: b,
                        spelling_corrections: b,
                        query_source: d,
                        success: function(d) {
                            a.removeSearchAssistance(), c && a.renderOnebox(d.stories), b && (d.spellingCorrections && a.renderSpellingCorrections(d.spellingCorrections), !d.spellingCorrections.length && d.relatedQueries && a.renderRelatedQueries(d.relatedQueries))
                        }
                    };
                this._query && twttr.API.Search.search(this._query, e)
            },
            setupSavedSearchAction: function() {
                var a = this;
                twttr.currentUser.savedSearches(function(b) {
                    var c = b.filter(function(b) {
                        return b.query === a._query
                    });
                    c.length() ? a.toggleSavedSearchOn(c.first()) : a.toggleSavedSearchOff()
                })
            },
            registerSavedSearchListeners: function() {
                var a = this;
                twttr.API.SavedSearch.bind("create", function(b, c) {
                    c.query == a._query && a.toggleSavedSearchOn(c)
                }), twttr.API.SavedSearch.bind("delete", function(b, c) {
                    c.query == a._query && a.toggleSavedSearchOff()
                })
            },
            _getSearchHandlers: function(a, b) {
                return {
                    click: function() {
                        twttr.router.routeTo(twttr.router[b]({
                            query: a
                        }))
                    }
                }
            }
        });
        d.mixin(c), a(d)
    })
});
provide("components/pages/SearchHome", function(a) {
    using("_").as(function(b, _) {
        twttr.klass.page("twttr.components.pages.SearchHome").view(twttr.views.SearchHome).click({
            ".operators a:not(.advanced-search)": function(a) {
                a.preventDefault(), twttr.dialogs.searchOperators().open()
            },
            ".operators a.advanced-search": function(a) {
                twttr.search.latestQuery = this.$find("input:text[name=q]").val()
            }
        }).addAfterRender(function() {
            this.$find(".bottompart").append((new twttr.components.Footer).$node)
        }).addOnSwitchTo(function() {
            twttr.themes.clear()
        }).methods({
            noAutoRender: !0,
            initSearchForm: function() {
                var a = this.$find(".search form"),
                    b = a.is(".advanced-search form");
                twttr.helpers.addFormEvents(a, function(a, c) {
                    var d = $(this),
                        e = b ? twttr.search.serializeAdvancedForm(d) : c.q;
                    e ? (twttr.search.setLastQuerySource(twttr.search.searchQuerySource.TYPED_QUERY), twttr.search.doSearch(e)) : twttr.showMessage(_("Enter your query before submitting the search form!"))
                }), twttr.search.formifyLatestQuery(a);
                if (b) {
                    var c = a.find("input[name=near]"),
                        d = a.find("fieldset.geo div.sel");
                    c.val() ? d.show() : c.one("keyup change", function() {
                        d.slideDown()
                    })
                }
            },
            languages: function() {
                return this.searchLanguages().sort(function(a, b) {
                    return a = a.localized_name.toLowerCase(), b = b.localized_name.toLowerCase(), a == b ? 0 : a < b ? -1 : 1
                })
            },
            searchLanguages: function() {
                return [{
                    code: "am",
                    localized_name: _("Amharic"),
                    name: "አማርኛ"
                }, {
                    code: "ar",
                    localized_name: _("Arabic"),
                    name: "العربية"
                }, {
                    code: "bg",
                    localized_name: _("Bulgarian"),
                    name: "Български"
                }, {
                    code: "bn",
                    localized_name: _("Bengali"),
                    name: "বাংলা"
                }, {
                    code: "bo",
                    localized_name: _("Tibetan"),
                    name: "བོད་སྐད"
                }, {
                    code: "chr",
                    localized_name: _("Cherokee"),
                    name: "ᏣᎳᎩ"
                }, {
                    code: "da",
                    localized_name: _("Danish"),
                    name: "Dansk"
                }, {
                    code: "de",
                    localized_name: _("German"),
                    name: "Deutsch"
                }, {
                    code: "dv",
                    localized_name: _("Maldivian"),
                    name: "ދިވެހި"
                }, {
                    code: "el",
                    localized_name: _("Greek"),
                    name: "Ελληνικά"
                }, {
                    code: "en",
                    localized_name: _("English"),
                    name: "English"
                }, {
                    code: "es",
                    localized_name: _("Spanish"),
                    name: "Español"
                }, {
                    code: "fa",
                    localized_name: _("Persian"),
                    name: "فارسی"
                }, {
                    code: "fi",
                    localized_name: _("Finnish"),
                    name: "Suomi"
                }, {
                    code: "fr",
                    localized_name: _("French"),
                    name: "Français"
                }, {
                    code: "gu",
                    localized_name: _("Gujarati"),
                    name: "ગુજરાતી"
                }, {
                    code: "iw",
                    localized_name: _("Hebrew"),
                    name: "עברית"
                }, {
                    code: "hi",
                    localized_name: _("Hindi"),
                    name: "हिंदी"
                }, {
                    code: "hu",
                    localized_name: _("Hungarian"),
                    name: "Magyar"
                }, {
                    code: "hy",
                    localized_name: _("Armenian"),
                    name: "Հայերեն"
                }, {
                    code: "in",
                    localized_name: _("Indonesian"),
                    name: "Bahasa Indonesia"
                }, {
                    code: "is",
                    localized_name: _("Icelandic"),
                    name: "Íslenska"
                }, {
                    code: "it",
                    localized_name: _("Italian"),
                    name: "Italiano"
                }, {
                    code: "iu",
                    localized_name: _("Inuktitut"),
                    name: "ᐃᓄᒃᑎᑐᑦ"
                }, {
                    code: "ja",
                    localized_name: _("Japanese"),
                    name: "日本語"
                }, {
                    code: "ka",
                    localized_name: _("Georgian"),
                    name: "ქართული"
                }, {
                    code: "km",
                    localized_name: _("Khmer"),
                    name: "ខ្មែរ"
                }, {
                    code: "kn",
                    localized_name: _("Kannada"),
                    name: "ಕನ್ನಡ"
                }, {
                    code: "ko",
                    localized_name: _("Korean"),
                    name: "한국어"
                }, {
                    code: "lo",
                    localized_name: _("Lao"),
                    name: "ລາວ"
                }, {
                    code: "lt",
                    localized_name: _("Lithuanian"),
                    name: "Lietuvių"
                }, {
                    code: "ml",
                    localized_name: _("Malayalam"),
                    name: "മലയാളം"
                }, {
                    code: "my",
                    localized_name: _("Myanmar"),
                    name: "မြန်မာဘာသာ"
                }, {
                    code: "ne",
                    localized_name: _("Nepali"),
                    name: "नेपाली"
                }, {
                    code: "nl",
                    localized_name: _("Dutch"),
                    name: "Nederlands"
                }, {
                    code: "no",
                    localized_name: _("Norwegian"),
                    name: "Norsk"
                }, {
                    code: "or",
                    localized_name: _("Oriya"),
                    name: "ଓଡ଼ିଆ"
                }, {
                    code: "pa",
                    localized_name: _("Panjabi"),
                    name: "ਪੰਜਾਬੀ"
                }, {
                    code: "pl",
                    localized_name: _("Polish"),
                    name: "Polski"
                }, {
                    code: "pt",
                    localized_name: _("Portuguese"),
                    name: "Português"
                }, {
                    code: "ru",
                    localized_name: _("Russian"),
                    name: "Русский"
                }, {
                    code: "si",
                    localized_name: _("Sinhala"),
                    name: "සිංහල"
                }, {
                    code: "sv",
                    localized_name: _("Swedish"),
                    name: "Svenska"
                }, {
                    code: "ta",
                    localized_name: _("Tamil"),
                    name: "தமிழ்"
                }, {
                    code: "te",
                    localized_name: _("Telugu"),
                    name: "తెలుగు"
                }, {
                    code: "th",
                    localized_name: _("Thai"),
                    name: "ไทย"
                }, {
                    code: "tr",
                    localized_name: _("Turkish"),
                    name: "Türkçe"
                }, {
                    code: "ur",
                    localized_name: _("Urdu"),
                    name: "ﺍﺭﺩﻭ"
                }, {
                    code: "vi",
                    localized_name: _("Vietnamese"),
                    name: "Tiếng Việt"
                }, {
                    code: "zh",
                    localized_name: _("Chinese"),
                    name: "中文"
                }]
            },
            index: function() {
                this.updatePageTitle(_("Twitter / Search")), this.render(), this.initSearchForm(), this.$find("input").focus();
                var a = new twttr.components.Trends;
                this.$find(".trends-container").append(a.$node)
            },
            advanced: function() {
                if (!twttr.decider.isAvailable("advanced_search")) return twttr.router.routeTo(twttr.router.searchHomePath());
                this.updatePageTitle(_("Twitter / Advanced Search")), this.render({
                    languages: this.languages(),
                    is_advanced: !0
                }), this.initSearchForm()
            }
        }), a(twttr.components.pages.SearchHome)
    })
});
provide("components/pages/Front", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass.page("twttr.components.pages.Front", function() {
            twttr.components.Page.apply(this, arguments)
        }).methods({
            $find: function(a) {
                return $("#front-container").find(a)
            }
        }).view(twttr.views.Nothing).addAfterRender(function() {
            this.$find('a[href="/#olympics"]').click(function() {
                trackClient({
                    page: "front",
                    section: "",
                    action: "click"
                }, "olympics")
            }), twttr.pageLocale === "de" && twttr.abdecider.choose("localized_image_germany_loggedout_front_page_294");
            var a = this.$find(".js-front-signup form");
            a.find("input[type=text], input[type=password]").focus(function() {
                trackClient({
                    section: "signup_callout",
                    component: $(this).attr("name").split(/[\[|\]]/)[1],
                    action: "focus_field"
                })
            }), a.submit(function() {
                trackClient({
                    section: "signup_callout",
                    component: "form",
                    action: "signup_click"
                })
            }), twttr.helpers.addFormEvents(a);
            var b = this.$find(".js-front-signin form"),
                c = a.data("front_page_full_signup_256_bucket");
            c && (b = $(".js-front-signin form")), document.activeElement.tagName.toLowerCase() != "input" && b.find(".email-input").focus(), b.submit(function() {
                trackClient({
                    section: "login_callout",
                    component: "form",
                    action: "login_click"
                })
            }), twttr.helpers.addFormEvents(b);
            if (c) {
                twttr.helpers.addHoldingInputEvents(b);
                var d = b.parent(".js-front-signin"),
                    e = a.parent(".js-front-signup");
                e.bind("collapsed", function() {
                    d.animate({
                        top: "230px"
                    }, function() {
                        d.removeClass("shrink"), d.addClass("grow")
                    })
                }), a.data("front_page_full_signup_256_bucket") === "login_form_below" && e.bind("signupFocus", function() {
                    if (e.hasClass("expanded")) return;
                    d.addClass("shrink"), d.removeClass("grow"), setTimeout(function() {
                        d.animate({
                            top: "175px"
                        }, 100, function() {
                            a.trigger("loginHide")
                        })
                    }, 400)
                })
            }
        }).addOnSwitchAway(function() {
            twttr.themes.loadDefaultTheme()
        }).methods({
            index: function(a, b) {
                if (b.in_reply_to_status_id) {
                    twttr.router.routeTo(twttr.router.loginRedirectPath({
                        redirect_after_login: "/" + window.location.search
                    }));
                    return
                }
                window._scribedFrontImpression ? window._scribedFrontImpression = !1 : $(".front-card.event-takeover").length > 0 ? trackClient({
                    page: "front",
                    section: "",
                    action: "impression"
                }, "olympics") : trackClient({
                    page: "front",
                    section: "",
                    action: "impression"
                }, "front"), this.updatePageTitle(_("Twitter")), twttr.themes.loadFrontPageTheme()
            }
        });
        twttr.isT1 ? c.addAfterRender(function() {
            var a = $(".js-front-language form");
            a.submit(function() {
                trackClient({
                    section: "language_dropdown",
                    component: "form",
                    action: "select"
                }, {
                    event_info: this.lang.value
                })
            })
        }) : c.addAfterRender(function() {
            this.$find(".bottompart").empty().append((new twttr.components.LanguageLinks).$node.fadeIn()).append((new twttr.components.CountrySelect).$node.fadeIn()).append((new twttr.components.Footer).$node)
        }).addOnSwitchTo(function() {
            twttr.$elements.page.css("padding-top", "")
        }), a(c)
    })
});
provide("components/pages/Login", function(a) {
    using("_", "constants").as(function(b, _, c) {
        var d = twttr.abdecider.choose("remember_me_checked_default_all_users_341") == "checked",
            e = jQuery.cookie("remember_checked") == "1" || jQuery.cookie("remember_checked") == null && d,
            f = twttr.klass.page("twttr.components.pages.Login").view(twttr.views.LoginPage).addBeforeRender(function() {
                this.updatePageTitle(_("Sign in to Twitter")), twttr.themes.clear()
            }).addAfterRender(function() {
                if (twttr.loggedIn) twttr.showMessage(_("You are already logged in!")), twttr.router.routeTo(twttr.router.homePath());
                else {
                    twttr.helpers.addFormEvents(this.$find("form.js-signin")), this.$find("p.js-forgot a[title]").tipsy({
                        gravity: "se"
                    });
                    var a = this.$find(".js-bottompart");
                    twttr.isT1 ? twttr.helpers.addHoldingInputEvents(this.$find("form")) : a.append((new twttr.components.LanguageLinks).$node).append((new twttr.components.CountrySelect).$node), a.append((new twttr.components.Footer).$node);
                    var b = this.$find(".username input").focus();
                    setTimeout(function() {
                        b.focus()
                    }, 1)
                }
            }).addOnSwitchTo(function() {
                twttr.themes.loadDefaultTheme()
            }).methods({
                noAutoRender: !0,
                index: function(a, b) {
                    this.render({
                        redirect_after_login: a.redirect_after_login || b.redirect_after_login,
                        password_reset_title: _("If you remember your password, try logging in with your email"),
                        remember_checked: e
                    }), trackClient({
                        section: "",
                        component: "",
                        action: "impression"
                    }, "login")
                },
                error: function(a, b) {
                    this.render({
                        redirect_after_login: a.redirect_after_login || b.redirect_after_login,
                        username_or_email: b.username_or_email,
                        remember_checked: e
                    }), twttr.loggedIn || (a.error == "captcha" ? (this._addCaptcha(), twttr.showMessage(_("We gotta check... are you human?")), trackClient({
                        section: "form",
                        component: "captcha",
                        action: "show"
                    }, "login")) : (twttr.showError(_("Wrong Username/Email and password combination.")), trackClient({
                        section: "form",
                        component: "username_password",
                        action: "validation_error"
                    }, "login")))
                },
                loginRequired: function() {
                    twttr.router.routeTo(twttr.router.loginRedirectPath({
                        redirect_after_login: twttr.Router.getCurrentPath()
                    })), twttr.showMessage(_("You must log in to do that!"))
                },
                _addCaptcha: function() {
                    var a = this;
                    using(b.constants.recaptcha.srcUrl).load().then(function() {
                        Recaptcha.create(b.constants.recaptcha.publicKey, a.$find(".js-signin .js-captcha")[0], {
                            lang: twttr.pageLocale,
                            theme: "white"
                        })
                    })
                }
            });
        a(twttr.components.pages.Login)
    })
});
provide("components/pages/Logout", function(a) {
    using("_").as(function(b, _) {
        twttr.klass.page("twttr.components.pages.Logout").view(twttr.views.LogoutPage).addAfterRender(function() {
            twttr.helpers.addFormEvents(this.$find("form.signout")), this.$find(".cancel").click(function() {
                return twttr.router.routeTo(twttr.router.homePath()), !1
            });
            var a = this.$find(".bottompart");
            twttr.isT1 || a.append((new twttr.components.LanguageLinks).$node).append((new twttr.components.CountrySelect).$node), a.append((new twttr.components.Footer).$node)
        }).methods({
            index: function(a, b) {
                if (!twttr.loggedIn) return twttr.decider.isAvailable("mobile_download_gallery_logged_out") ? twttr.router.routeTo("/download?logged_out=1") : twttr.router.routeTo(twttr.router.homePath());
                this.updatePageTitle(_("Twitter / Sign out of Twitter")), twttr.themes.loadCurrentUserStyle()
            }
        }), a(twttr.components.pages.Logout)
    })
});
provide("components/pages/Profile", function(a) {
    using("_", twttr.isT1 ? "components/pages/mixins/profileT1" : "components/pages/mixins/profileP1", twttr.isT1 ? "mixins/t1/emptyTimelineRecommendations" : "mixins/emptyTimelineRecommendations", "constants").as(function(b, _, c, d) {
        var e = twttr.klass("twttr.components.pages.Profile").subclassOf(twttr.components.pages.ProfileAbstract).view(twttr.views.ProfilePage).containerCssClass("profile-container").mixin(c, d).methods({
            checkWithheld: function() {
                twttr.decider.isAvailable("phoenix_pctd") && twttr.profileUser && !! twttr.profileUser.withheldScope && twttr.profileUser.withheldScope === "user" && !twttr.helpers.isCurrentUser(twttr.profileUser.id) ? this.renderWithheld() : this.renderNotWithheld()
            },
            renderWithheld: function() {
                $("#page-container").removeClass("profile-container").addClass("wrapper-permalink permalink-container withheld")
            },
            renderNotWithheld: function() {
                $("#page-container").addClass("profile-container").removeClass("wrapper-permalink permalink-container withheld")
            },
            userWasBlocked: function(a, b) {
                b.screenName === twttr.profileUser.screenName && $(".profile-actions-container a.js-direct-message-action, .profile-actions-container div.js-direct-message-action").remove()
            },
            getUserInfo: function(a, b, c) {
                if (this.profileUser && a == this.profileUser.screenName) {
                    twttr.profileUser = this.profileUser, twttr.is.def(this.profileUser.promotedContent) && (twttr.promotedAccount = {
                        id: this.profileUser.id,
                        impressionId: this.profileUser.promotedContent.impression_id
                    }), b && b();
                    return
                }
                var d = this.preRendered ? this.$find("div.profile-header").attr("data-user") : null;
                if (d) {
                    data = JSON.parse(d), this.profileUser = twttr.profileUser = new twttr.anywhere.api.models.User(data), b && b();
                    return
                }
                return twttr.components.pages.ProfileAbstract.prototype.getUserInfo.apply(this, arguments)
            },
            profile: function(a, b) {
                var c = this,
                    d = a.screen_name.toLowerCase().replace(/^@/, "");
                this.loading(d), this.getUserInfo(d, function() {
                    c.updatePageTitle(_("{{fullName}} ({{screenName}}) on Twitter", {
                        fullName: c.profileUser.name,
                        screenName: d
                    })), c._highlightNavIfCurrentUser(d), c.selectCurrentSideNav(), b.banner_preview_url && twttr.helpers.isCurrentUser(c.profileUser) && (c.bannerPreviewUrl = b.banner_preview_url), c._switchToStream({
                        screenName: d,
                        stream: c.initialProfileStream(),
                        tab: "tweets"
                    }), c.checkWithheld()
                }, {
                    batch: !twttr.loggedIn,
                    profiler: !0
                }, twttr.bind(this, this.noUserFoundCallback))
            },
            message: function(a) {
                this.profile(a), a = a || {}, twttr.API.User.find(a.screen_name, function(b) {
                    twttr.dialogs.dmSingle({
                        user: {
                            screenName: a.screen_name,
                            user_id: b.attributes.id,
                            name: b.attributes.name,
                            profile_image_url: b.attributes.profile_image_url
                        },
                        origin: a.origin
                    }).open()
                })
            },
            favorites: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.getUserInfo(b, twttr.bind(this, function() {
                    twttr.helpers.canViewUser(this.profileUser) ? (this.updatePageTitle(_("Twitter / {{screenName}}'s Favorites", {
                        screenName: b
                    })), this._highlightNavIfCurrentUser(b), this.selectCurrentSideNav(), this._switchToStream({
                        screenName: b,
                        stream: twttr.streams.Favorites,
                        tab: "favorites"
                    })) : twttr.router.routeTo(twttr.router.profilePath({
                        screen_name: this.profileUser.screenName
                    }))
                }), {
                    batch: !twttr.loggedIn,
                    profiler: !0
                })
            },
            profile_activity: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.getUserInfo(b, twttr.bind(this, function() {
                    twttr.helpers.canViewUser(this.profileUser) ? (this.updatePageTitle(_("Twitter / {{screenName}}'s Activity", {
                        screenName: b
                    })), this._highlightNavIfCurrentUser(b), this._switchToStream({
                        screenName: b,
                        stream: twttr.streams.ActivityByUserStream,
                        tab: "activity"
                    })) : twttr.router.routeTo(twttr.router.profilePath({
                        screen_name: this.profileUser.screenName
                    }))
                }), {
                    batch: !twttr.loggedIn,
                    profiler: !0
                })
            },
            followers: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.updatePageTitle(_("Twitter / People who follow {{screenName}}", {
                    screenName: b
                })), this._highlightNavIfCurrentUser(b), this.selectCurrentSideNav(), this._switchToStream({
                    screenName: b,
                    stream: twttr.streams.Followers,
                    tab: "followers"
                })
            },
            following: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.updatePageTitle(_("Twitter / People {{screenName}} is following", {
                    screenName: b
                })), this._highlightNavIfCurrentUser(b), this.selectCurrentSideNav(), this.one("switchedToStream", twttr.bind(this, this.insertEmptyTimeline)), this._switchToStream({
                    screenName: b,
                    stream: twttr.streams.Friends,
                    tab: "following"
                })
            },
            youBothFollow: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.getUserInfo(b, twttr.bind(this, function() {
                    this.updatePageTitle(_("Twitter / People you and @{{screenName}} both follow", {
                        screenName: b
                    })), this._highlightNavIfCurrentUser(b), this._switchToStream({
                        screenName: b,
                        stream: twttr.streams.SocialContextStream,
                        socialContextType: "followsInCommonWith",
                        tab: "following"
                    })
                }))
            },
            followersYouFollow: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.getUserInfo(b, twttr.bind(this, function() {
                    this.updatePageTitle(_("Twitter / People you follow who follow @{{screenName}}", {
                        screenName: b
                    })), this._highlightNavIfCurrentUser(b), this.selectSideNav("userFollowers"), this._switchToStream({
                        screenName: b,
                        stream: twttr.streams.SocialContextStream,
                        socialContextType: "followingFollowersOf",
                        tab: "followers"
                    })
                }))
            },
            lists: function(a) {
                var b = this._defaultedScreenName(a.screen_name);
                this.getUserInfo(b, twttr.bind(this, function() {
                    twttr.helpers.canViewUser(this.profileUser) ? (this.updatePageTitle(_("Twitter / {{screenName}}'s Lists", {
                        screenName: b
                    })), this._highlightNavIfCurrentUser(b), this.selectCurrentSideNav(), this._switchToStream({
                        screenName: b,
                        stream: twttr.streams.OwnLists,
                        tab: "lists"
                    })) : twttr.router.routeTo(twttr.router.profilePath({
                        screen_name: this.profileUser.screenName
                    }))
                }), {
                    batch: !twttr.loggedIn,
                    profiler: !0
                })
            },
            subscriptions: function(a) {
                var b = a.screen_name;
                this.updatePageTitle(_("Twitter / Lists {{screenName}} is following", {
                    screenName: b
                })), this._highlightNavIfCurrentUser(b), this._switchToStream({
                    screenName: b,
                    stream: twttr.streams.Subscriptions,
                    tab: "lists"
                })
            },
            followerRequests: function(a) {
                var b = twttr.util.params().uid;
                b && !twttr.helpers.isCurrentUser(+b) && twttr.router.redirectTo("/?badLinkRecipient=" + b);
                var c = this._defaultedScreenName(a.screen_name);
                if (!twttr.helpers.isCurrentUser(c)) twttr.router.routeTo(twttr.router.profilePath({
                    screen_name: c
                }));
                else {
                    this.updatePageTitle(_("Twitter / My follower requests")), this.selectCurrentSideNav(), this._highlightNavIfCurrentUser(c), this._switchToStream({
                        screenName: c,
                        stream: twttr.streams.FollowerRequests,
                        tab: "pending"
                    });
                    if (!this.didBindUserBlockedEvent) {
                        this.didBindUserBlockedEvent = !0;
                        var d = this;
                        twttr.API.User.bind("block", function() {
                            d.streamManager.resetCache()
                        })
                    }
                }
            },
            listDeleted: function(a) {
                this.streamManager.getCurrent().remove(a.uri)
            },
            dashStatsTitle: function() {
                return twttr.helpers.isProfileUser() ? _("About you") : null
            },
            shouldShowTweetBox: function() {
                return twttr.loggedIn && !twttr.helpers.isProfileUser() && twttr.decider.isAvailable("profile_tweetbox")
            },
            renderTweetbox: function() {
                if (this.tweetBox && this._renderedScreenName === twttr.profileUser.screenName) return this.tweetBoxNode;
                var a = this;
                this.$find("div.profile-tweet-box-placeholder").remove();
                if (this.shouldShowTweetBox()) {
                    var b = this.tweetBoxNode = $('<div class="profile-tweet-box"/>'),
                        c = "@" + this.profileUser.screenName;
                    this.$find(".profile-actions-container").addClass("preceeding-profile-tweet-box").after(b), this.tweetBox = new twttr.TweetBox(b.empty(), twttr.merge({
                        defaultContent: c + " ",
                        id: "profile-tweet-box",
                        condensed: !0,
                        enableDraft: twttr.isT1,
                        enableAutoGrow: twttr.isT1,
                        statusAction: "update"
                    }, this.getTweetBoxOptions())), this.tweetBox.bind("tweetSuccess", function(a, b) {
                        b.inReplyToScreenName ? twttr.showMessage(_("Your Tweet to @{{username}} has been sent!", {
                            username: b.inReplyToScreenName
                        })) : twttr.showMessage(_("Your Tweet was posted!"))
                    })
                }
                return b
            },
            getTweetbox: function() {
                return this.tweetBox
            },
            initialProfileStream: function() {
                return twttr.isT1 && twttr.streams.Profile.shouldDisplay() ? twttr.streams.Profile : twttr.streams.User
            },
            noUserFoundCallback: function() {
                this._renderedScreenName = null, this.streamManager && (this.streamManager.switchOut(), this.streamManager.setCurrent(null))
            }
        }).addOnSwitchAway(function() {
            twttr.admin && twttr.admin.removeTools(), this.renderNotWithheld(), twttr.API.User.unbind("block", this.userWasBlocked)
        }).addAfterRender(function() {
            if (!window.location.hash) return;
            var a = twttr.util.paramsFromUrl(window.location.hash);
            a && a.protected_redirect && (window.location.hash = window.location.hash.replace("?protected_redirect=true", ""), twttr.showError(_("Sorry, you are not authorized to see this status.")))
        }).addAfterRender(function() {
            this.preRendered && !this.didEmptyDashboard && (this.$find("div.dashboard").empty(), this.didEmptyDashboard = !0), this.addDashboardComponents(this.getDashboardComponents())
        });
        a(e)
    })
});
provide("components/pages/List", function(a) {
    using("_", "util", twttr.isT1 ? "components/pages/mixins/listT1" : "components/pages/mixins/listP1", "streams/List", "streams/ListMembers", "streams/ListFollowers", "components/SignupCallOut", function(_, b, c, d, e, f, g) {
        var i = twttr.klass("twttr.components.pages.List").subclassOf(twttr.components.Page).mixin(twttr.mixins.streamablePage).methods(twttr.EventProvider).methods({
            list: function(a) {
                a = b.camelizeObject(a), this.updatePageTitle(_("Twitter / @{{screenName}}/{{listSlug}}", a)), this.switchToStream(d, a), this.selectCurrentSideNav(), this.focusStreamTab("tweets")
            },
            members: function(a) {
                a = b.camelizeObject(a), this.updatePageTitle(_("Twitter / @{{screenName}}/{{listSlug}} - Following", a)), this.switchToStream(e, a), this.selectCurrentSideNav(), this.focusStreamTab("members")
            },
            followers: function(a) {
                a = b.camelizeObject(a), this.updatePageTitle(_("Twitter / @{{screenName}}/{{listSlug}} - Followers", a)), this.switchToStream(f, a), this.selectCurrentSideNav(), this.focusStreamTab("followers")
            },
            noAutoRender: !0,
            listDeleted: function(a) {
                twttr.showMessage(_("List deleted")), twttr.router.routeTo(twttr.router.homePath())
            },
            listUpdated: function(a) {
                twttr.router.routeTo(twttr.router.userListPath({
                    screen_name: twttr.currentUser.screenName,
                    list_slug: a.slug
                }))
            },
            _getList: function(a) {
                var b = this;
                if (!this.listOwnerName || !this.listId) throw "You tried to use _getList before defining .listOwnerName and .listId";
                twttr.API.User.find(this.listOwnerName, function(c) {
                    c.lists.find(b.listId, function(b) {
                        a(b, c)
                    })
                })
            },
            switchToStream: function(a, b) {
                var c = this,
                    d = function() {
                        c.trigger("notFound")
                    };
                this.loading(b.screenName, b.listSlug), twttr.API.User.find(b.screenName, {
                    success: function(e) {
                        twttr.profileUser = e, e.lists.find(b.listSlug, {
                            success: function(d) {
                                c.listId = d.id, c.listOwnerName = d.user.screenName, c._listSlug = d.slug, c.fullName = d.fullName;
                                var e = new twttr.views.List(d);
                                twttr.themes.loadUserStyleFor(d.user), c._renderedListId !== d.id && (c.render({
                                    list: e
                                }), c._registerEvents(d), c._renderedListId = d.id), c.streamManager.switchTo(a, b)
                            },
                            error: d
                        })
                    },
                    error: d
                })
            },
            loading: function(a, b) {
                this.unfocusStreamItem(), this._listSlug !== b && this.listOwnerName !== a && this.$node.children().empty()
            }
        }).addAfterRender(function() {
            var a = this;
            this._getList(function(b, c) {
                a.owner = c, twttr.loggedIn || a.addDashboardComponent(new g("list", {
                    profileUser: c
                })), a.addDashboardComponents(a.getDashboardComponents(b)), a.owner && !twttr.isT1 && trackClient({
                    action: "impression"
                }, {
                    profile_id: a.owner.id,
                    message: b.slug
                })
            })
        }).mixin(c);
        a(i)
    })
});
provide("components/pages/Permalink", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.pages.Permalink").subclassOf(twttr.components.Page).view(twttr.views.PermalinkPage).addOnSwitchAway(function() {
            twttr.$elements.page.css("padding-top", ""), twttr.widget.Dialog.close()
        }).methods({
            permalink: function(a) {
                this.loadPage(a)
            },
            loadPage: function(a, b) {
                var c = this;
                twttr.widget.Dialog.close();
                if (this._renderedTweetId == a.id) return b && b.call(this);
                this._renderedTweetId = a.id, this.loading();
                var d = function(b) {
                        b.status == 403 ? twttr.router.routeTo(twttr.router.profilePath({
                            screen_name: a.screen_name
                        })) : c.trigger("notFound")
                    },
                    e = function(d) {
                        c.tweetComponent = new twttr.components.PermalinkTweet(d), c.tweetComponent.$node.appendTo(c.$find(".components-middle")), c.tweetComponent.bind("deleted", function() {
                            twttr.app.isOnPage("permalink") && twttr.router.routeTo(twttr.router.homePath())
                        });
                        if (a.photo_index && !twttr.decider.isAvailable("phoenix_turkey_permalink")) {
                            c.trigger("notFound");
                            return
                        }
                        var e = c.$find(".permalink");
                        if (c.tweetComponent.renderWithheld()) e.addClass("withheld");
                        else {
                            c.tweetComponent.renderCreatorWithheld() ? e.addClass("withheld-creator") : e.removeClass("withheld-creator");
                            var f = c.$find("div.js-tweet-media-container");
                            c.mediaComponent = new twttr.components.Media(d, f.width(), {
                                linkLarge: !0
                            }), c.mediaComponent.$node.appendTo(f);
                            var g = new twttr.components.InReplyTo(d),
                                i = new twttr.components.Footer("slim"),
                                j = new twttr.components.MachineTranslatedTweet(d);
                            g.$node.appendTo(c.$find(".components-above"));
                            if (!twttr.isT1) {
                                var k = new twttr.components.MentionedInTweet(d);
                                k.$node.appendTo(c.$find(".components-below"))
                            }
                            c.renderActivity(d), c.renderReplies(d), i.$node.appendTo(c.$find(".permalink-footer")), j.$node.appendTo(c.$find("div.js-machine-translated-tweet-container")), e.removeClass("withheld"), b && b.call(c)
                        }
                        if (!twttr.loggedIn) {
                            var l = new twttr.components.SignupCallOut("permalink", {
                                profileUser: d.user
                            });
                            twttr.isT1 ? l.$node.prependTo(c.$find(".permalink-footer")) : l.$node.appendTo(c.$find(".permalink-header")), twttr.$elements.page.css("padding-top", "30px")
                        }
                    };
                twttr.API.Status.find(a.id, {
                    success: function(a) {
                        c.status = a, c.updatePageTitle(_("Twitter / @{{screenName}}: {{{truncatedText}}} ...", {
                            screenName: a.user.screenName,
                            truncatedText: a.text.slice(0, 26)
                        })), twttr.themes.loadUserStyleFor(a.user), c.render(), twttr.loggedIn ? twttr.currentUser.relationshipWith(a.user.screenName, {
                            success: function(b) {
                                a.user.following = b.following, a.user.attributes.following = b.following, a.attributes.user.following = b.following, e(a)
                            },
                            error: d
                        }) : (a.user.following = !1, a.user.attributes.following = !1, a.attributes.user.following = !1, e(a)), trackClient({
                            component: "tweet",
                            action: "results"
                        }, {
                            item_ids: [a.id],
                            item_count: 1,
                            event_value: 1
                        })
                    },
                    error: d
                }), trackClient({
                    action: "impression"
                })
            },
            loading: function() {
                this.$find(".permalink").empty()
            }
        }).methods({
            noAutoRender: !0
        }).click({
            "a[data-twitter-media-url='true']": function(a) {
                a.stopPropagation()
            }
        }).keydown({
            f: function(a) {
                $(a.target).is(":not(input)") && this.tweetComponent.faveTweet("keyboard")
            },
            r: function(a) {
                $(a.target).is(":not(input)") && (this.tweetComponent.replyTweet("keyboard"), a.preventDefault())
            },
            t: function(a) {
                $(a.target).is(":not(input)") && this.tweetComponent.retweetTweet("keyboard")
            }
        });
        twttr.isT1 ? c.containerCssClass("wrapper-permalink").methods({
            renderReplies: function(a) {
                var b = this;
                new twttr.components.Conversation(a, null, function(c) {
                    var d = new twttr.components.Replies(a, null, c.resultGroups);
                    d.$node.appendTo(b.$find(".components-below")), new twttr.components.InlineReplyBox(b.tweetComponent.$node.find(".tweet"), b.$find(".components-below"), d.$node, 481, 425)
                })
            },
            permalinkWithEmbedDialog: function(a) {
                this.loadPage(a, this.showEmbedDialog)
            },
            showEmbedDialog: function() {
                twttr.decider.isAvailable("embed_code_dialog") && twttr.dialogs.embedCode(this.status).open()
            },
            renderActivity: twttr.util.noopInT1
        }).click({
            "a.embed-link": function(a) {
                a.preventDefault(), a.stopPropagation(), twttr.router.routeTo(twttr.router.embedDialogPermalinkPath({
                    screen_name: this.status.user.screenName,
                    id: this.status.id
                }))
            }
        }) : c.containerCssClass("permalink-container").methods({
            permalinkWithEmbedDialog: twttr.util.noopInP1,
            showEmbedDialog: twttr.util.noopInP1,
            renderReplies: twttr.util.noopInP1,
            renderActivity: function(a) {
                var b = twttr.decider.isActivityEnabled() && twttr.decider.isAvailable("activity_social_context"),
                    c = new twttr.components[b ? "TweetActivity" : "Retweeters"](a);
                c.$node.appendTo(this.$find(".components-below"))
            }
        }), a(c)
    })
});
provide("components/pages/WhoToFollow", function(a) {
    using("_", "constants", "streams/SuggestionCategoryMembersStream").as(function(b, _) {
        twttr.klass.page("twttr.components.pages.WhoToFollow", function() {
            twttr.components.Page.apply(this, arguments), this.dashboardNeedsToBeCreated = !1
        }).mixin(twttr.mixins.streamablePage).mixin(twttr.mixins.discoveryHelper).view(twttr.views.WhoToFollow).addAfterRender(function() {
            this._rendered = !0;
            var a = this;
            this._createDashboard(!0), twttr.helpers.addFormEvents(this.$find(".who-to-follow-header form"), function() {
                var b = twttr.audit.currentAction(),
                    c = this.q.value,
                    d;
                twttr.audit.currentPage() == "welcome" ? d = twttr.components.pages.Welcome.ROUTES_TO_STEP[b] : d = twttr.components.pages.WhoToFollow.ROUTES_TO_STEP[b], c != "" && (trackClient({
                    component: "user_search_form",
                    action: "search"
                }, {
                    step: d,
                    query: c
                }), a.routePageTo(a.PATH_ROOT, "Search", {
                    query: c
                }))
            })
        }).addOnSwitchTo(function() {
            this._createDashboard(), trackClient({
                section: "",
                component: "",
                action: "impression"
            })
        }).addOnSwitchAway(function() {
            twttr.API.User.unbind("follow.RecentlyFollowedComponent"), twttr.recentlyViewedUsers.unbind("push.RecentlyViewedComponent"), this.dashboardNeedsToBeCreated = !0, this._rendered = !1, this.$find(".dashboard > .component").remove()
        }).statics({
            ROUTES_TO_STEP: {
                whoToFollow: "suggestions",
                suggestions: "suggestions",
                interests: "interests",
                category: "interests",
                "import": "import",
                matches: "import",
                search: "search"
            }
        }).methods({
            switchToStream: function() {
                var a = this.streamManager.switchTo.apply(this.streamManager, arguments);
                return a
            },
            search: function(a, b) {
                var c = a.query || b.q;
                if (!c) return this.routePageTo(this.PATH_ROOT);
                this._switchTabAndRender("search", c), this.updatePageTitle(_("Twitter / User Search")), trackClient({
                    action: "impression"
                }, {
                    context: "search",
                    query: c
                });
                var d = twttr.Scribbler.clientEvent.spawn({
                    context: "search",
                    query: c
                });
                this.switchToStream(twttr.streams.PeopleSearch, {
                    query: c,
                    scribbler: d,
                    pathRoot: this.PATH_ROOT
                })
            },
            suggestions: function(a, b) {
                if (!twttr.loggedIn) return this.trigger("loginRequired");
                this._switchTabAndRender("suggestions"), this.updatePageTitle(_("Twitter / Who to follow / Suggestions")), trackClient({
                    action: "impression"
                }, "suggestions");
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "suggestions"
                });
                if (twttr.decider.isAvailable("whotofollow_recommendations")) {
                    var d = this.switchToStream(twttr.streams.UserRecommendationsStream, {
                        scribbler: c,
                        pathRoot: this.PATH_ROOT
                    });
                    d && d.setStreamManager(this.streamManager)
                } else twttr.router.redirectTo(twttr.router.whoToFollowInterestsPath())
            },
            interests: function(a, b) {
                this._switchTabAndRender("interests"), this.updatePageTitle(_("Twitter / Who to follow / Interests")), trackClient({
                    action: "impression"
                }, "interests");
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "interests"
                }),
                    d = {
                        scribbler: c,
                        pathRoot: this.PATH_ROOT
                    };
                this.switchToStream(twttr.streams.SuggestionCategoriesStream, this.localizeQuery(d, b))
            },
            category: function(a, c) {
                var d = this,
                    e = function(a) {
                        if (!a) return d.routePageTo(d.PATH_ROOT, "Interests");
                        var e = twttr.Scribbler.clientEvent.spawn({
                            context: "interests",
                            query: a.slug
                        });
                        d._switchTabAndRender("interests"), d.updatePageTitle(_("Twitter / Who to follow / Interests / {{category}}", {
                            category: a.name
                        })), d.switchToStream(b.streams.SuggestionCategoryMembersStream, d.localizeQuery({
                            category: f,
                            suggestionCategory: a,
                            scribbler: e,
                            pathRoot: d.PATH_ROOT
                        }, c))
                    },
                    f = a.category || c.category;
                trackClient({
                    action: "impression"
                }, {
                    query: f,
                    context: "interests"
                });
                var g = twttr.streams.SuggestionCategoriesStream.CATEGORY_MAP;
                g ? e(g[f]) : twttr.API.SuggestionCategory.getAll(this.localizeQuery({
                    success: function(a) {
                        a = twttr.streams.SuggestionCategoriesStream.filterTopTweetsCategories(a), twttr.streams.SuggestionCategoriesStream.cacheCategories(a);
                        var b = twttr.streams.SuggestionCategoriesStream.CATEGORY_MAP[f];
                        e(b)
                    }
                }, c))
            },
            "import": function(a, b) {
                if (!twttr.loggedIn) return this.trigger("loginRequired");
                this._switchTabAndRender("import", "", "services"), this.updatePageTitle(_("Twitter / Who to follow / Find friends")), trackClient({
                    action: "impression"
                }, "import");
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "import"
                }),
                    d = this.localizeQuery({
                        scribbler: c,
                        pathRoot: this.PATH_ROOT
                    }, b),
                    e = this.switchToStream(twttr.streams.ContactImportServices, d);
                e && e.setStreamManager(this.streamManager)
            },
            matches: function() {
                if (!twttr.loggedIn) return this.trigger("loginRequired");
                this._switchTabAndRender("import", "", "matches"), this.updatePageTitle(_("Twitter / Who to follow / Find friends / Results")), trackClient({
                    action: "impression"
                }, "import");
                var a = twttr.Scribbler.clientEvent.spawn({
                    context: "import"
                });
                this.switchToStream(twttr.streams.ContactImportMatches, {
                    scribbler: a,
                    pathRoot: this.PATH_ROOT
                })
            },
            localizeQuery: function(a, b) {
                return b.lang && (a.lang = b.lang), b.country && (a.country = b.country), b.city && (a.city = b.city), a.top_tweets = !0, a
            },
            PATH_ROOT: "whoToFollow",
            noAutoRender: !0,
            _createDashboard: function(a) {
                if (a || this.dashboardNeedsToBeCreated) this.addDashboardComponents(this._dashboardComponents()), this.dashboardNeedsToBeCreated = !1
            },
            _dashboardComponents: function() {
                var a = twttr.Scribbler.clientEvent.spawn({
                    context: function() {
                        var a = twttr.audit.currentAction();
                        return twttr.audit.currentPage() == "welcome" ? twttr.components.pages.Welcome.ROUTES_TO_STEP[a] : twttr.components.pages.WhoToFollow.ROUTES_TO_STEP[a]
                    }
                });
                if (!twttr.loggedIn) return [new twttr.components.SignupCallOut("who_to_follow"), new twttr.components.Footer];
                var b = twttr.abdecider.choose("wtf_with_less_122"),
                    c = [new twttr.components.RecentlyFollowed, new twttr.components.RecentlyViewed, new twttr.components.InviteFriends(a), new twttr.components.RelatedServices, new twttr.components.Footer];
                return b == "empty_dashboard" ? c = [] : b == "no_recent_follow" ? c = [new twttr.components.RecentlyViewed, new twttr.components.InviteFriends(a), new twttr.components.RelatedServices, new twttr.components.Footer] : b == "no_recent_view" ? c = [new twttr.components.RecentlyFollowed, new twttr.components.InviteFriends(a), new twttr.components.RelatedServices, new twttr.components.Footer] : b == "no_invite_friends" ? c = [new twttr.components.RecentlyFollowed, new twttr.components.RecentlyViewed, new twttr.components.RelatedServices, new twttr.components.Footer] : b == "no_related_services" ? c = [new twttr.components.RecentlyFollowed, new twttr.components.RecentlyViewed, new twttr.components.InviteFriends(a), new twttr.components.Footer] : b == "invite_friends_only" && (c = [new twttr.components.InviteFriends(a)]), c
            },
            _switchTabAndRender: function(a, b, c) {
                this._rendered || this.render();
                var d = this.$find(".who-to-follow-header form input");
                b ? d.val(b).addClass("actasfocused").focus() : d.val("").removeClass("actasfocused").blur(), this.focusStreamTab(a, c), this.$find(".who-to-follow-stream").removeClass().addClass("who-to-follow-stream who-to-follow-" + a + "-stream"), twttr.themes.loadDefaultTheme()
            }
        }), a(twttr.components.pages.WhoToFollow)
    })
});
provide("components/pages/WebPersonalizationPreview", function(a) {
    using("_", "constants", "components/WebPersonalizationSettings", "components/Footer").as(function(b, _) {
        var c = twttr.klass.page("twttr.components.pages.WebPersonalizationPreview").view(twttr.views.WebPersonalizationPreview).containerCssClass("wrapper-narrow").methods({
            preview: function(a, c) {
                if (!twttr.decider.isAvailable("personalization_preview") && !c.force_bq) return twttr.router.redirectTo(twttr.router.whoToFollowInterestsPath());
                this.updatePageTitle(_("Twitter / Web Personalization Preview")), twttr.inEU && trackClient({
                    element: "eu",
                    action: "impression"
                }), twttr.doNotTrack && trackClient({
                    element: "dnt",
                    action: "impression"
                }), twttr.themes.loadDefaultTheme(), this.$node.empty();
                var d = new b.components.WebPersonalizationSettings;
                d.$node.appendTo(this.$node), d.bind("disallow", function(a) {
                    twttr.router.routeTo(twttr.router.homePath())
                }), (new b.components.Footer("slim")).$node.appendTo(this.$node)
            }
        });
        a(c)
    })
});
provide("components/pages/404", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.pages.404").subclassOf(twttr.components.Page).view(twttr.views["404Page"]).containerCssClass("error-page").methods({
            notFound: function(a) {
                this.render(), this.updatePageTitle(_("Twitter / ?")), twttr.themes.loadCurrentUserStyle()
            }
        }).methods({
            noAutoRender: !0
        }).addAfterRender(function() {
            var a = this,
                b = new twttr.components.Footer("slim");
            this.$find("div.four-oh-four-footer").remove(), b.$node.appendTo(this.$find(".four-oh-four")), twttr.helpers.addFormEvents(this.$find(".user-search-form"), function() {
                var a = this.q.value;
                a != "" && (twttr.isT1 ? twttr.router.routeTo(twttr.router.userSearchPath({
                    query: a
                })) : twttr.router.routeTo(twttr.router.whoToFollowSearchPath({
                    query: a
                })))
            }), a.$find(".user-search-form").addClass("ready")
        }), a(twttr.components.pages[404])
    })
});
provide("components/pages/403", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.pages.403").subclassOf(twttr.components.Page).view(twttr.views.SuspendedUserPage).containerCssClass("error-page").methods({
            suspendedUser: function(a) {
                this.render(), this.updatePageTitle(_("Twitter / Suspended")), twttr.themes.loadCurrentUserStyle()
            }
        }).methods({
            noAutoRender: !0
        }), a(twttr.components.pages[403])
    })
});
provide("components/pages/RateLimit", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.pages.RateLimit").subclassOf(twttr.components.Page).view(twttr.views.RateLimitPage).methods({
            tooMuch: function(a) {
                this.render(), this.updatePageTitle(_("Twitter / Error")), twttr.themes.loadDefaultTheme()
            }
        }).methods({
            noAutoRender: !0
        }).containerCssClass("four-twenty-container"), a(twttr.components.pages.RateLimit)
    })
});
provide("components/pages/mixins/welcomeLearnFlowT1", function(a) {
    using().as(function() {
        twttr.klass.mixin("twttr.components.pages.mixins.welcomeLearnFlowT1", function() {
            return this.click({
                ".js-account-group": function(a, b) {
                    a.stopPropagation(), a.preventDefault(), this.showMiniProfile(b.closest(".js-actionable-user").data("user-id")), twttr.scribbles.logViewProfileDetails.call(b, a)
                },
                ".js-who-to-follow-search .js-submit": function() {
                    trackClient({
                        component: "user_search_form",
                        element: "search_button",
                        action: "click"
                    })
                }
            }).methods({
                showMiniProfile: function(a) {
                    twttr.API.User.find(a, function(a) {
                        using("widget/MiniProfileDialog", function(b) {
                            (new b(a, !0)).open()
                        })
                    })
                },
                _slideDrawer: function(a, b) {
                    a ? $(".js-welcome-dashboard").show() : $(".js-welcome-dashboard").hide(), b && b()
                },
                _customRenderStep: function(a) {
                    a == "matches" ? this.$find(".js-back-to-import").show() : this.$find(".js-back-to-import").hide()
                },
                _pulseFollowButton: function() {},
                _resizeFlow: function() {
                    var a = $(window).height() - $(".js-flow-step").outerHeight() - $(".js-welcome-stream-header").outerHeight() - $("div.js-stream-header").outerHeight() - ($(".js-back-to-import:visible").outerHeight() || 0) - 114;
                    a > 100 && $(".stream-manager-container").css("max-height", a);
                    var b = $(window).height() - $(".js-welcome-faux-tweet-stream").height() - $(".js-content-header").height() - 153 + 30;
                    b > 20 && $(".route-welcome .content-main .stream-end-inner").css("padding-bottom", b)
                },
                _getNextButtonText: function(a) {
                    return a ? _("Done") : _("Next")
                },
                _setTheme: function() {
                    twttr.themes.loadDefaultTheme()
                }
            }).addOnSwitchTo(function() {
                twttr.cache.local.shownWelcomeFlow = !0
            })
        }), a()
    })
});
provide("components/pages/WelcomeLearnFlow", function(a) {
    using("streams/SuggestionCategoryMembersDashboardStream", "stork").as(function(b) {
        twttr.klass.page("twttr.components.pages.WelcomeLearnFlow", function() {
            twttr.components.Page.apply(this, arguments), this._steps = this._firstStep = null;
            var a = twttr.Router.getCurrentQueryStringParams();
            this._resurrect = !! a.resurrect;
            var b = [];
            for (var c = 0; c < b.length; ++c) {
                var d = twttr.abdecider.choose(b[c]);
                if (d != "") break
            }
            d || (this._bucket = a.welcomeBucket), this._showIntro = !0, this._showProgress = !0, this.PROFILE_SIZE_LIMIT = 716800
        }).subclassOf(twttr.components.Page).mixin(twttr.mixins.streamablePage).mixin(twttr.mixins.discoveryHelper).mixin(twttr.mixins.welcomeScribing).mixin(twttr.isT1 ? twttr.components.pages.mixins.welcomeLearnFlowT1 : twttr.components.pages.mixins.welcomeLearnFlowP1).view(twttr.views.WelcomeLearnFlow).click({
            ".user-content-image, .display-name, .screen-name": function(a) {
                $(a.target).closest(".stream-item-content").find(".more-info").slideDown()
            },
            ".glass .submit": function(a) {
                $(a.target).closest("form").submit()
            },
            ".js-tweet-1, .js-tweet-2, .js-skip-tweets": function(a) {
                return this._nextGameRound($(a.target)), !1
            },
            ".js-image-error .js-dismiss": function() {
                this._hideImageError()
            },
            ".js-back-to-stream .js-button": function() {
                this.$find(".js-welcome-search input[type='text']").val("");
                var a = this._steps[this._currentSearchStepId].route;
                twttr.router.routeTo(a)
            },
            ".js-full-results-link": function(a) {
                var b = $(a.target).data("query") || "";
                trackClient({
                    section: "search",
                    element: "full_results_link",
                    action: "click"
                }, {
                    query: b
                }), this.routePageTo(this.PATH_ROOT, "Search", {
                    query: b
                })
            },
            ".js-skip-link": function(a) {
                this._forceInviteModal();
                var b = this,
                    c = $(a.target),
                    d = this._steps[this._currentStepId],
                    e = function() {
                        b._scribeStepCompletion("skip"), b._isOnLastStep() ? b.finish() : twttr.router.routeTo(c.attr("href"))
                    };
                return d && d.skip_handler ? d.skip_handler(e) : window.setTimeout(e, 0), !1
            },
            ".js-next-btn": function(a) {
                var b = this,
                    c = $(a.target);
                if (c.is(".disabled")) return !1;
                this._forceInviteModal();
                var d = this._steps[this._currentStepId],
                    e = function() {
                        b._scribeStepCompletion("done"), b._isOnLastStep() ? b.finish() : twttr.router.routeTo(c.attr("href"))
                    },
                    f;
                return b._lastStream && b._lastStream.deferFollows ? f = function() {
                    d.suppress_follow_progress = !0, b._addNextDisableReason("prefollowing"), b._lastStream.commitPrefollows(function() {
                        d.suppress_follow_progress = !1, e()
                    })
                } : f = e, d && d.next_handler ? d.next_handler(f) : window.setTimeout(f, 0), !1
            },
            ".js-action-follow-all-listed": function(a) {
                var b = this,
                    c = $(a.target);
                if (c.hasClass("disabled")) return;
                trackClient({
                    component: "stream",
                    action: "follow_all"
                });
                var d = b._lastStream.usersToFollow();
                if (d.length === 0) return;
                c.addClass("disabled"), b._onFollowAll(d, {
                    complete: function() {
                        c.removeClass("disabled")
                    }
                }), a.preventDefault()
            }
        }).addOnSwitchTo(function() {
            this.updatePageTitle(_("Twitter / Welcome")), twttr.app.resetPadding(), this.setWelcomeSkipCookie(), this._setSteps(), twttr.abdecider.choose("growth_stork_persistent_239") != "no_stork" && twttr.stork.init(), twttr.decider.isAvailable("welcome_timeline_stats") && (twttr.streams.Home.scribeTweetDensity = !0, twttr.components.pages.Home.scribeScroll = !0);
            var a = this;
            twttr.API.User.bind("follow_request.WelcomeLearnFlow prefollow_request.WelcomeLearnFlow", {
                before: function(b) {
                    var c = a._steps[a._currentStepId];
                    c.suppress_follow_progress || a._updateProgress(1)
                }
            }), twttr.API.User.bind("follow.WelcomeLearnFlow prefollow.WelcomeLearnFlow", {
                before: function(b) {
                    var c = a._steps[a._currentStepId];
                    c.suppress_follow_progress || a._updateProgress(1)
                },
                success: function(b, c) {
                    a._previewFollow(c)
                }
            }), twttr.API.User.bind("unfollow.WelcomeLearnFlow unprefollow.WelcomeLearnFlow", {
                before: function(b) {
                    var c = a._steps[a._currentStepId];
                    c.suppress_follow_progress || a._updateProgress(-1)
                },
                success: function(b, c) {
                    a._previewUnfollow(c)
                }
            }), $(window).bind("resize.WelcomeLearnFlow", twttr.bind(this, this._resizeFlow))
        }).addOnSwitchAway(function() {
            twttr.app.recalculatePadding(), this._steps = this._firstStep = null, twttr.API.User.unbind(".WelcomeLearnFlow"), $(window).unbind("resize.WelcomeLearnFlow"), this._profileImageInterval && (window.clearInterval(this._profileImageInterval), this._profileImageInterval = null), twttr.components.pages.WelcomeLearnFlow.profileImageUploadCallback = $.noop
        }).addAfterRender(function() {
            var a = this;
            this._rendered = !0, this.streamManager.noInfiniteScroll = !0, this.$find(".welcome-dashboard div.js-stream-manager-container").bind("scroll", function(b) {
                var c = $(this);
                Math.abs(c.scrollTop() + c.height() - c.children().height()) < 100 && a.streamManager.getMoreOldItems(function(a) {
                    scribble("stream-scrolled", {
                        page: a._page,
                        stream: a._cacheKey,
                        focused_tweet_id: a.focusedItemId || ""
                    })
                })
            }), twttr.helpers.addFormEvents(a.$find(".js-welcome-search form"), function(b, c) {
                var d = c.q;
                if (d !== "") {
                    var e = function() {
                            trackClient({
                                component: "user_search_form",
                                action: "search"
                            }, {
                                query: d
                            });
                            var b = twttr.abdecider.choose("welcome_top_people_286") == "top_people" ? "SearchTop" : "Search";
                            a.routePageTo(a.PATH_ROOT, b, {
                                query: d
                            })
                        };
                    a._lastStream && a._lastStream.deferFollows ? a._lastStream.commitPrefollows(e) : e()
                }
            }), twttr.helpers.addFormEvents(a.$find(".js-welcome-zipcode-search form"), function(b, c) {
                var d = c.q;
                if (d !== "") {
                    var e = function() {
                            trackClient({
                                component: "zipcode_search_form",
                                action: "search"
                            }, {
                                query: d
                            }), a.routePageTo(a.PATH_ROOT, "LifelineSearch", {
                                query: d
                            })
                        };
                    a._lastStream && a._lastStream.deferFollows ? a._lastStream.commitPrefollows(e) : e()
                }
            })
        }).statics({
            ROUTES_TO_STEP: {
                intro: "intro",
                interests: "interests",
                lifeline: "lifeline",
                category: "interests",
                "import": "import",
                matches: "import",
                search: "search",
                starter: "starter",
                recommendations: "recommendations",
                profile: "profile",
                tweets: "tweets",
                preview: "preview",
                edit: "edit"
            }
        }).methods({
            PATH_ROOT: "welcome",
            noAutoRender: !0,
            _addressBookAvailable: function() {
                return twttr.decider.isAvailable("wtf_signup_suggestions")
            },
            _previewFollow: function(a) {
                var b = this,
                    c = this.$find('.js-tweet-preview-container .js-unclickable-tweet[data-user-id="' + a.idStr + '"]');
                if (c.length) {
                    b.trigger("followPreviewed"), c.slideDown();
                    return
                }
                var d = function(a) {
                        b.trigger("followPreviewed");
                        var c = new twttr.views.UnclickableTweet(a),
                            d = $(c.html()).hide(),
                            e = b.$find(".js-tweet-preview-container .stream-loading");
                        e.length ? e.before(d) : b.$find(".js-tweet-preview-container").prepend(d), d.slideDown()
                    };
                a.status && !a.status.inReplyToUserId && !a.status.attributes.was_retweeted ? (a.status.attributes.user = a.attributes, d(a.status)) : a.timeline({
                    count: 25,
                    exclude_replies: !0,
                    success: function(a) {
                        a.length() ? d(a.first()) : b.trigger("followPreviewed")
                    },
                    error: function() {
                        b.trigger("followPreviewed")
                    }
                })
            },
            _previewUnfollow: function(a) {
                var b = this,
                    c = this.$find(".js-tweet-preview-container .js-unclickable-tweet[data-user-id=" + a.id + "]");
                c.slideUp()
            },
            _setSteps: function() {
                var a = this;
                this._steps = {
                    intro: {
                        route: twttr.router.welcomeIntroPath(),
                        title: _("Welcome, {{{name}}}.", twttr.currentUser),
                        subtitle: _("Get started in less than 60 seconds."),
                        next_step: "recommendations",
                        show_progress: !1,
                        show_search: !1,
                        next_enabled: !0,
                        no_drawer: !0,
                        show_intro_text: !1
                    },
                    recommendations: {
                        route: twttr.router.welcomeRecommendationsPath(),
                        title: twttr.abdecider.choose("timeline_copy_317") === "stream" ? _("Build your stream.") : _("Build your timeline."),
                        subtitle: _("Follow people to get their Tweets."),
                        next_step: "interests",
                        show_search: !0,
                        show_progress: !0,
                        initial_progress_copy: _("Start by following 5"),
                        min_progress: 3,
                        suggested_progress: 5,
                        next_enabled: !1,
                        show_intro_text: !0
                    },
                    "import": {
                        route: twttr.router.welcomeImportPath(),
                        title: _("Find people you know."),
                        subtitle: _("Add your contacts securely."),
                        next_step: "finish",
                        show_search: !0,
                        show_progress: !0,
                        initial_progress_copy: _("Try 5 more"),
                        min_progress: 2,
                        suggested_progress: 5,
                        next_enabled: !1,
                        show_intro_text: !0
                    },
                    matches: {
                        route: twttr.router.welcomeImportMatchesPath(),
                        title: _("Find people you know."),
                        subtitle: _("Add your contacts securely."),
                        next_step: "finish",
                        show_search: !0,
                        show_progress: !0,
                        initial_progress_copy: _("Try 5 more"),
                        min_progress: 2,
                        suggested_progress: 5,
                        next_enabled: !1,
                        show_intro_text: !0
                    },
                    interests: {
                        route: twttr.router.welcomeInterestsPath(),
                        title: _("See who’s here."),
                        subtitle: _("Find and follow well-known people."),
                        next_step: "finish",
                        show_search: !0,
                        show_progress: !0,
                        initial_progress_copy: _("Try 5 more"),
                        min_progress: 3,
                        suggested_progress: 5,
                        next_enabled: !1,
                        show_intro_text: !0
                    },
                    lifeline: {
                        route: twttr.router.welcomeLifelinePath(),
                        title: _("Use Twitter as Lifeline"),
                        subtitle: _("Enter your Zip Code and search Lifeline accounts."),
                        next_step: "finish",
                        show_search: !1,
                        show_zipcode_search: !0,
                        show_progress: !1,
                        next_enabled: !0
                    },
                    profile: {
                        route: twttr.router.welcomeProfilePath(),
                        title: _("Add character."),
                        subtitle: _("Upload a photo and describe yourself.", twttr.currentUser),
                        next_step: "finish",
                        show_search: !1,
                        show_progress: !1,
                        min_progress: 1,
                        suggested_progress: 1,
                        next_enabled: twttr.abdecider.choose("hide_skip_in_profile_welcome_step_288") === "skip_disabled",
                        skip_disabled: twttr.abdecider.choose("hide_skip_in_profile_welcome_step_288") === "skip_disabled",
                        next_handler: function(b) {
                            a._handleProfileNext(b)
                        },
                        show_intro_text: !0
                    },
                    building: {
                        title: _("Building your timeline…"),
                        next_step: "preview",
                        no_drawer: !0,
                        no_nav: !0,
                        next_enabled: !0
                    },
                    tweets: {
                        route: twttr.router.welcomeTweetsPath()
                    },
                    preview: {
                        route: twttr.router.welcomePreviewPath(),
                        title: _("Here’s your timeline."),
                        subtitle: _('You’re now following <span class="js-following-count">10</span> people. Check out their Tweets.'),
                        next_text: _("Continue"),
                        next_step: "finish",
                        show_search: !1,
                        show_progress: !1,
                        min_progress: 1,
                        suggested_progress: 1,
                        next_enabled: !0,
                        next_highlighted: !0,
                        edit_enabled: !0,
                        no_drawer: !0
                    },
                    edit: {
                        route: twttr.router.welcomeEditPath(),
                        title: _("Edit your timeline."),
                        subtitle: _("Here are the people you’re following. <br> To unfollow someone, click the blue button next to their name."),
                        next_step: "finish",
                        show_search: !0,
                        show_progress: !1,
                        min_progress: 1,
                        suggested_progress: 1,
                        next_enabled: !0,
                        next_highlighted: !0
                    }
                }, this._firstStep = this._showIntro ? "intro" : "recommendations";
                var b = "interests",
                    c;
                !this._resurrect && twttr.abdecider.choose("optometrist_247").indexOf("opto_") == 0 && (this._firstStep = "tweets", b = "preview"), this._resurrect && (this._steps["import"].min_progress = 0), twttr.abdecider.choose("welcome_prefollow_213") == "prefollow" && (this._steps.recommendations.subtitle += " " + _("Here are 3 accounts to get you started."));
                var d = twttr.decider.isAvailable("contact_import"),
                    e = twttr.decider.isAvailable("welcome_profile") && twttr.decider.isAvailable("avatar_upload") && !this._resurrect;
                d && (c = this._steps[b], c.next_step = "import", b = "import"), e && (c = this._steps[b], c.next_step = "profile", b = "profile");
                if (twttr.decider.isAvailable("welcome_lifeline") && twttr.pageLocale === "ja") {
                    var f = twttr.abdecider.choose("welcome_learn_flow_lifeline_step_for_japan_316");
                    f === "as_last_step" ? (this._steps.lifeline.next_step = this._steps.profile.next_step, this._steps.profile.next_step = "lifeline") : f !== "no_lifeline_step" && (this._steps.lifeline.next_step = this._steps.intro.next_step, this._steps.intro.next_step = "lifeline")
                }
                twttr.decider.isAvailable("welcome_ad_track") && (this._steps.intro.ad_referal = $.cookie("ad_partner") == "adparlor", this._steps.intro.ad_parlor = $.cookie("ad_partner") == "adparlor"), this._currentSearchStepId = this._steps.intro.next_step, this._steps.matches.next_step = this._steps["import"].next_step, this._steps.edit.next_step = this._steps.preview.next_step
            },
            _addAmbassadorList: function(a, b) {
                twttr.currentUser.friendsCount > 0 ? twttr.currentUser.friends().first(function(c) {
                    if (!c) {
                        b();
                        return
                    }
                    c.lists(function(c) {
                        var d = c.find(function(a) {
                            return a.description.match(/\#WelcomeToTwitter/i)
                        });
                        if (d) {
                            var e = [],
                                f = -1,
                                g = function() {
                                    d.members({
                                        cursor: f,
                                        success: function(c, d) {
                                            e = e.concat(c.toArray()), d.response.next_cursor ? (f = d.response.next_cursor, g()) : (a.unshift(e), a.render(), b())
                                        }
                                    })
                                };
                            g()
                        } else b()
                    })
                }) : b()
            },
            _routeToFirstStep: function() {
                var a = this;
                window.setTimeout(function() {
                    a._steps ? twttr.router.routeTo(a._steps[a._firstStep].route) : twttr.router.routeTo(twttr.router.welcomePath())
                }, 0)
            },
            welcome: function(a, b) {
                this._steps ? (trackClient({
                    action: "impression"
                }), this._welcomeSetupSpinner && (this._welcomeSetupSpinner.detach(), this._welcomeSetupSpinner = null), this._routeToFirstStep()) : (this.render(), this.$find(".js-welcome-search").hide(), this.streamManager.setTitle({
                    _setTitle: function(a) {
                        a(_("Please wait…"))
                    }
                }), this._welcomeSetupSpinner = (new twttr.views.StreamLoading).render(this.$find(".js-who-to-follow-stream .stream-container"), "html"))
            },
            _recommendationsStreamOptions: function() {
                var a = {
                    inWelcomeFlow: !0,
                    pathRoot: this.PATH_ROOT,
                    title: "",
                    scribbler: this._createScribbler("recommendations_stream", {
                        context: "starter"
                    })
                };
                return a
            },
            recommendations: function(a, b) {
                var c = new twttr.streams.UserRecommendationsStream(this._recommendationsStreamOptions()),
                    d = this,
                    e = function() {
                        return twttr.router.routeTo(d._nextRoute(d._steps.recommendations))
                    };
                if (!this._addressBookAvailable()) {
                    e();
                    return
                }
                c.loadRecommendedUsers({
                    success: function(a, b) {
                        if (a.length() > 0) {
                            c.scribbler.scribe({
                                action: "found_results",
                                section: "recommendations"
                            }), d._renderStep("recommendations"), d.bqPrefollow && d.$find(".js-welcome-faux-tweet-stream").hide();
                            var f = d._recommendationsStreamOptions();
                            f.initialItems = a, f.cursor = b.response.next_cursor;
                            var g = d.switchToStream(twttr.streams.UserRecommendationsDashboardStream, f);
                            d.bqPrefollow && g.reachedTheEnd(), twttr.decider.isAvailable("welcome_warm_signup") && !d.bqPrefollow ? d._addAmbassadorList(g, function() {
                                d._loadedRecommendations(g)
                            }) : d._loadedRecommendations(g), g.bind("rendered_recs.WelcomeLearnFlow", function() {
                                d._pulseFollowButton()
                            }), f.scribbler.scribe({
                                action: "impression"
                            })
                        } else c.scribbler.scribe({
                            action: "not_found_results",
                            section: "recommendations"
                        }), e()
                    },
                    error: function(a) {
                        e()
                    }
                })
            },
            _loadedRecommendations: function(a) {
                twttr.abdecider.choose("welcome_prefollow_213") == "prefollow" && twttr.currentUser.friendsCount <= 1 && this._prefollow(a, 3), this.bqPrefollow && this._prefollow(a, 100)
            },
            _prefollow: function(a, b) {
                var c = this,
                    d = this._steps[this._currentStepId];
                a.deferFollows = !0, window.setTimeout(function() {
                    c.$find(".js-welcome-dashboard .js-stream-item .js-follow-combo").each(function(c, d) {
                        if (c >= b) return !1;
                        a.userActionPrefollow($(d), "prefollow.user")
                    }), d.next_enabled || window.setTimeout(function() {
                        c._addNextDisableReason("progress")
                    }, 0)
                }, 0)
            },
            _showInlineSuggestions: function(a, b) {
                var c = this,
                    d = b.closest(".js-stream-item"),
                    e = b.attr("data-user-id"),
                    f;
                for (var g = 0; g < a.length; g++) a[g].id.toString() == e && (f = a[g]), c.contextStreamIds[a[g].id] = !0;
                if (!f) return;
                var i = new twttr.components.t1.UserSimilaritiesDashboardList(f, c.contextStreamIds);
                i.bind("recommendationsLoaded", function() {
                    $recItems = i.$node.find(".js-stream-item"), (!$.browser.msie || $.browser.version != 7) && $recItems.hide(), d.after($recItems), (!$.browser.msie || $.browser.version != 7) && $recItems.slideDown(600);
                    for (var a = 0; a < i.suggestions.length; a++) c.contextStreamIds[i.suggestions[a].id] = !0, c.componentSuggestions.push(i.suggestions[a]);
                    $recItems.delegate(".js-actionable-user .js-action-follow", "click", function(a) {
                        trackClient({
                            component: "user_similarities_dashboard_list",
                            element: "follow_button",
                            action: "click"
                        }), c._showInlineSuggestions(c.componentSuggestions, $(this))
                    })
                }), i.bind("notRendered", function() {
                    i.destroy()
                })
            },
            intro: function(a, b) {
                trackClient({
                    action: "impression"
                }), this._renderStep("intro"), this.switchToStream(null)
            },
            resurrect: function(a, b) {
                var c = twttr.router.welcomeRecommendationsPath();
                trackClient({
                    action: "impression"
                }, "resurrect"), c = "/?resurrect=1" + c.slice(1), window.location.href = c
            },
            "import": function(a, b) {
                if (!twttr.loggedIn) return this.trigger("loginRequired");
                this._renderStep("import"), trackClient({
                    action: "impression"
                }, "import");
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "import"
                }),
                    d = this.localizeQuery({
                        scribbler: c,
                        pathRoot: this.PATH_ROOT,
                        onlyMatched: twttr.abdecider.choose("welcome_flow_no_choice_contact_import_160") == "no_choice_contact_import",
                        inWelcomeFlow: !0,
                        context: "welcome"
                    }, b),
                    e = this.switchToStream(twttr.streams.DashboardContactImportServices, d);
                e && (e.setStreamManager(this.streamManager), e.setMatchesStreamKey(this._lastMatchesStreamKey))
            },
            matches: function() {
                if (!twttr.loggedIn) return this.trigger("loginRequired");
                this._renderStep("matches"), trackClient({
                    action: "impression"
                }, "import");
                var a = twttr.Scribbler.clientEvent.spawn({
                    context: "import"
                }),
                    b = {
                        scribbler: a,
                        pathRoot: this.PATH_ROOT
                    },
                    c = this.switchToStream(twttr.streams.DashboardContactImportMatches, b),
                    d = this;
                c.bind("error.WelcomeLearnFlow", function() {
                    d._removeNextDisableReason("progress")
                }), this._lastMatchesStreamKey = c._cacheKey
            },
            interests: function(a, b) {
                var c = this;
                this._renderStep("interests"), trackClient({
                    action: "impression"
                });
                var d = twttr.Scribbler.clientEvent.spawn({
                    context: "interests"
                }),
                    e = {
                        scribbler: d,
                        noHeaderFooter: !0,
                        title: "",
                        pathRoot: this.PATH_ROOT
                    };
                this.switchToStream(twttr.streams.SuggestionCategoriesDashboardStream, this.localizeQuery(e, b))
            },
            lifeline: function(a, b) {
                trackClient({
                    action: "impression"
                }), this._renderStep("lifeline");
                var c = twttr.streams.SuggestionLifelineMembersStream.categoryObj,
                    d = twttr.Scribbler.clientEvent.spawn({
                        context: "lifeline"
                    }),
                    e = this.localizeQuery({
                        category: "lifeline",
                        suggestionCategory: c,
                        scribbler: d,
                        noHeaderFooter: !0,
                        title: c.name + " (" + c.size + ")",
                        pathRoot: this.PATH_ROOT
                    }, b);
                this.switchToStream(twttr.streams.SuggestionLifelineMembersDashboardStream, e)
            },
            category: function(a, c) {
                var d = this,
                    e = function(a) {
                        if (!a) return d.routePageTo(d.PATH_ROOT, "Interests");
                        var e = twttr.Scribbler.clientEvent.spawn({
                            context: "interests",
                            query: a.slug
                        });
                        d._renderStep("interests"), d.$find(".js-back-to-stream .js-dashboard-stream-title").text(a.name), d.$find(".js-back-to-stream").show(), d._resizeFlow();
                        var g = d.localizeQuery({
                            category: f,
                            suggestionCategory: a,
                            scribbler: e,
                            noHeaderFooter: !0,
                            title: a.name + " (" + a.size + ")",
                            pathRoot: d.PATH_ROOT
                        }, c);
                        d.switchToStream(b.streams.SuggestionCategoryMembersDashboardStream, g)
                    },
                    f = a.category || c.category;
                trackClient({
                    action: "impression"
                }, {
                    query: f,
                    context: "interests"
                });
                var g = twttr.streams.SuggestionCategoriesStream.CATEGORY_MAP;
                g ? e(g[f]) : twttr.API.SuggestionCategory.getAll(this.localizeQuery({
                    success: function(a) {
                        a = twttr.streams.SuggestionCategoriesStream.filterTopTweetsCategories(a), twttr.streams.SuggestionCategoriesStream.cacheCategories(a);
                        var b = twttr.streams.SuggestionCategoriesStream.CATEGORY_MAP[f];
                        e(b)
                    }
                }, c))
            },
            switchToStream: function(a) {
                this._lastStream && (this._lastStream.unbind(".WelcomeLearnFlow"), this._lastStream.$node.unbind(".WelcomeLearnFlow"), this._lastStream = null), a ? this._lastStream = this.streamManager.switchTo.apply(this.streamManager, arguments) : (this.streamManager.switchOut(), this.streamManager.setCurrent(null), this.streamManager.$moreButton && this.streamManager.$moreButton.hide());
                if (twttr.abdecider.choose("welcome_wtf_slide_down_similar_318") == "new_suggestions" && this._lastStream) {
                    var b = this;
                    b.contextStreamIds = {}, b.componentSuggestions = [], b._lastStream.$node.delegate(".js-actionable-user .js-action-follow", "click.WelcomeLearnFlow", function(a) {
                        $(this).closest(".js-stream-item").hasClass("js-similar-user") || (trackClient({
                            component: "recommendations_stream",
                            element: "follow_button",
                            action: "click"
                        }), b._showInlineSuggestions(b._lastStream.items, $(this)))
                    })
                }
                return this._lastStream
            },
            search: function(a, b) {
                var c = a.query || b.q;
                if (!c) return twttr.router.routeTo(this._steps[this._currentSearchStepId].route);
                this._renderStep(this._currentSearchStepId);
                var d = this.$find(".js-back-to-stream");
                d.find("h3").html(_("Results for: <strong>{{query}}</strong>", {
                    query: ""
                })).find("strong").text(c), d.show(), this.$find('.js-welcome-search input[type="text"]').focus();
                var e = this._createScribbler({
                    section: "search",
                    component: "full_stream"
                }, {
                    context: "search",
                    query: c
                });
                e.scribe({
                    action: "impression"
                });
                var f = {
                    query: c,
                    scribbler: e,
                    pathRoot: this.PATH_ROOT
                };
                this.switchToStream(twttr.streams.DashboardPeopleSearch, f)
            },
            searchByZipcode: function(a, b) {
                var c = a.query || b.q;
                if (!c) return twttr.router.routeTo(this._steps[this._currentSearchStepId].route);
                this._currentSearchStepId = "lifeline", this._renderStep("lifeline");
                var d = this.$find(".js-back-to-stream");
                d.find("h3").html(_("Results for: <strong>{{query}}</strong>", {
                    query: ""
                })).find("strong").text(c), d.show(), this.$find('.js-zipcode-search input[type="text"]').focus(), trackClient({
                    action: "impression"
                }, {
                    context: "search",
                    query: c
                });
                var e = twttr.Scribbler.clientEvent.spawn({
                    context: "search",
                    query: c
                }),
                    f = twttr.streams.SuggestionLifelineMembersStream.categoryObj,
                    g = this.localizeQuery({
                        category: "lifeline",
                        suggestionCategory: f,
                        scribbler: e,
                        noHeaderFooter: !0,
                        title: f.name + " (" + f.size + ")",
                        pathRoot: this.PATH_ROOT,
                        zipcode: c
                    }, b);
                this.switchToStream(twttr.streams.SuggestionLifelineMembersDashboardStream, g)
            },
            searchTop: function(a, b) {
                var c = a.query || b.q;
                if (!c) return twttr.router.routeTo(this._steps[this._currentSearchStepId].route);
                this._renderStep(this._currentSearchStepId);
                var d = this.$find(".js-back-to-stream");
                d.find("h3").html(_("Top results for: <strong>{{query}}</strong>", {
                    query: ""
                })).find("strong").text(c), this.$find('.js-welcome-search input[type="text"]').focus();
                var e = this._createScribbler({
                    section: "search",
                    component: "top_stream"
                }, {
                    context: "search",
                    query: c
                });
                e.scribe({
                    action: "impression"
                });
                var f = {
                    query: c,
                    scribbler: e,
                    pathRoot: this.PATH_ROOT
                },
                    g = this,
                    i = this.switchToStream(twttr.streams.DashboardTopPeopleSearch, f);
                i.bind("results.WelcomeLearnFlow", function(a, b) {
                    b.isEmpty() ? g.routePageTo(g.PATH_ROOT, "Search", {
                        query: c
                    }) : d.show()
                })
            },
            profile: function(a, b) {
                var c = this;
                trackClient({
                    action: "impression"
                });
                var d = twttr.currentUser.profileImageUrl;
                d.indexOf("default_profile_image") != -1 && (d = twttr.assets.path("t1/img/upload_placeholder.png"));
                var e = {
                    description: twttr.currentUser.description,
                    location: twttr.currentUser.location,
                    url: twttr.currentUser.url,
                    profile_image_url: d,
                    api_url: "//" + twttr.domains.remote,
                    post_authenticity_token: twttr.API.getConfig().postAuthenticityToken
                };
                this._renderStep("profile"), this.switchToStream(null), (new twttr.views.WelcomeLearnProfile(e)).render(this.$find(".js-content-container"), "html");
                var f = this.$find(".js-profile-image-input"),
                    g = this.$find(".js-profile-form"),
                    i = this.$find(".js-bio-count");
                f.bind("change", function() {
                    c._uploadProfileImage()
                }), twttr.helpers.addFormEvents(g, $.noop), g.find("input, textarea").bind("change keypress", function() {
                    c._removeNextDisableReason("error_" + $(this).attr("name")), c._updateProfileProgress()
                }), this._updateProfileProgress();
                var j = function() {
                        var a = $(this);
                        window.setTimeout(function() {
                            var b = a.is(".js-placeholded") ? 0 : a.val().length;
                            i.text("" + b), i.removeClass("warn superwarn"), b > 150 ? i.addClass("superwarn") : b > 140 && i.addClass("warn"), b > 160 ? c._addNextDisableReason("bio") : c._removeNextDisableReason("bio")
                        }, 0)
                    };
                g.find("textarea").bind("keyup change", j).each(j)
            },
            _enableProfileImageUploadControls: function() {
                var a = this.$find(".js-current-profile-picture-wrapper"),
                    b = this.$find(".js-upload-form");
                a.removeClass("loading"), b.find(".btn").removeClass("disabled"), b.find('input[type="file"]').attr("disabled", null)
            },
            _showImageError: function(a) {
                this.$find(".js-image-error .js-image-error-text").text(a).parent().fadeIn()
            },
            _hideImageError: function(a) {
                this.$find(".js-image-error").fadeOut()
            },
            _uploadProfileImage: function() {
                this._hideImageError(), this.$find(".js-current-profile-picture-wrapper").addClass("loading");
                if (twttr.turkey.hasFileReader()) {
                    var a = this.$find(".js-profile-image-input").get(0);
                    if (a.files && a.files[0]) {
                        var b = a.files[0];
                        if (!twttr.turkey.validatePhoto(a.value)) {
                            this._showImageError(_("Profile pictures must be JPG, GIF or PNG")), this._enableProfileImageUploadControls(), trackClient({
                                section: "profile",
                                component: "picture",
                                action: "error"
                            }), trackClient({
                                section: "profile",
                                component: "picture",
                                action: "error_format"
                            });
                            return
                        }
                        if (!twttr.is.def(b.size) || b.size >= this.PROFILE_SIZE_LIMIT) {
                            this._showImageError(_("Profile pictures must be smaller than 700K")), this._enableProfileImageUploadControls(), trackClient({
                                section: "profile",
                                component: "picture",
                                action: "error"
                            }), trackClient({
                                section: "profile",
                                component: "picture",
                                action: "error_size"
                            });
                            return
                        }
                    }
                }
                this._submitProfileImageForm()
            },
            _submitProfileImageForm: function() {
                var a = this,
                    b = this.$find(".js-upload-form");
                twttr.components.pages.WelcomeLearnFlow.profileImageUploadCallback = function(b) {
                    twttr.components.pages.WelcomeLearnFlow.profileImageUploadCallback = $.noop, b.error ? (trackClient({
                        section: "profile",
                        component: "picture",
                        action: "error"
                    }), a._showImageError(b.error), a._enableProfileImageUploadControls()) : (trackClient({
                        section: "profile",
                        component: "picture",
                        action: "success"
                    }), a._uploadProfileImageCallback())
                }, b[0].submit(), b.find(".btn").addClass("disabled"), b.find('input[type="file"]').attr("disabled", "disabled")
            },
            _uploadProfileImageCallback: function() {
                var a = this,
                    b = /profile_images\/.*/,
                    c = twttr.currentUser.profileImageUrl.match(b)[0],
                    d = 0,
                    e = function() {
                        a._enableProfileImageUploadControls(), window.clearInterval(a._profileImageInterval), a._profileImageInterval = null
                    };
                a._profileImageInterval = window.setInterval(function() {
                    if (d++ > 20) {
                        e();
                        return
                    }
                    twttr.currentUser.profileImage(twttr.currentUser.screenName, {
                        size: "normal",
                        zx: Math.random(),
                        ssl: !0,
                        success: function(d) {
                            var f = d.profile_image_url,
                                g = f.match(b)[0];
                            g != c && (a._updateProfileImageUrl(f), e())
                        },
                        error: function() {
                            e()
                        }
                    })
                }, 5e3)
            },
            _updateProfileImageUrl: function(a) {
                twttr.currentUser.profileImageUrl = a, twttr.currentUser.profileImageUrlHttps = a, twttr.currentUser.attributes.profile_image_url = a, twttr.currentUser.attributes.profile_image_url_https = a, $(".js-mini-current-user img").each(function() {
                    $(this).attr("src", a)
                });
                var b = twttr.helpers.transformProfileImageUrl(a, "reasonably_small");
                this.$find(".js-current-profile-picture-wrapper").find("img").attr("src", b), this._updateProfileProgress()
            },
            _handleProfileNext: function(a) {
                var b = this,
                    c = this.$find('.js-profile-form input[type="text"], .js-profile-form textarea'),
                    d = this.$find(".js-profile-form .control-group"),
                    e = {
                        success: function() {
                            c.each(function() {
                                var a = $(this);
                                a.val() && a.val().length > 1 && trackClient({
                                    section: "profile",
                                    component: a.attr("name"),
                                    action: "complete"
                                })
                            }), a()
                        },
                        error: function(a) {
                            var c = twttr.showError(_('Sorry, we weren’t able to update your profile. Try again or <a class="js-skip-link" href="#">skip this step</a>.'));
                            c.$dom.find(".js-skip-link").click(function() {
                                b.$find(".js-skip-link").click()
                            })
                        }
                    };
                if (c.length == 0) {
                    a();
                    return
                }
                c.each(function() {
                    var a = $(this);
                    a.is(".js-placeholded") || (e[a.attr("name")] = a.val())
                }), d.removeClass("error").find(".js-error-msg").remove(), twttr.currentUser.update(e)
            },
            _nextRoute: function(a) {
                var b = this._steps[a.next_step].route;
                return this._resurrect && (b = "/?resurrect=1" + b.slice(1)), b
            },
            _updateProfileProgress: function() {
                var a = 0;
                this.$find('.js-profile-form input[type="text"], .js-profile-form textarea').each(function() {
                    var b = $(this);
                    b.val() && !b.is(".js-placeholded") && a++
                }), this.$find(".js-current-profile-picture").attr("src").indexOf("upload_placeholder.png") == -1 && a++, a > 0 && this._removeNextDisableReason("progress"), this._setProgress(a)
            },
            tweets: function(a, b) {
                trackClient({
                    action: "impression"
                }), this._rendered || this.render(), this.$find(".js-dashboard, .js-content-main").hide(), this.$find(".js-tweet-game").remove(), this._setTheme(), this._currentStepId = "tweets", this._optoState = {}, this._optoQuery = b, this._optoRound = 1, this._optoSkips = 0;
                var c = twttr.abdecider.choose("optometrist_247", !0);
                c.indexOf("opto_") == 0 ? this._optoMaxRounds = parseInt(c.substring(5), 10) : this._optoMaxRounds = 6;
                var d = {
                    name: twttr.currentUser.name,
                    current_round: 0,
                    total_rounds: this._optoMaxRounds
                };
                (new twttr.views.WelcomeLearnGame(d)).render(this.$node, "append"), this._steps.tweets.suggested_progress = this._optoMaxRounds, this._setProgress(0), this._fetchGameTweets()
            },
            _fetchGameTweets: function(a, b) {
                var c = this;
                $.ajax({
                    type: "POST",
                    url: "/i/optometrist/tweets",
                    headers: {
                        "X-PHX": !0
                    },
                    data: {
                        state: JSON.stringify(this._optoState),
                        last_action: a || "",
                        query: JSON.stringify(this._optoQuery) || ""
                    },
                    dataType: "json",
                    success: function(a) {
                        c._optoState = a.state;
                        if (!a.tweets[0] || !a.tweets[1]) c._fetchGameTweets("skip", b);
                        else {
                            var d = b ? Math.max(0, b - +(new Date)) : 0;
                            window.setTimeout(function() {
                                b ? c.$find(".js-tweets-container").css({
                                    left: "auto",
                                    right: 0
                                }).animate({
                                    right: "100%"
                                }, function() {
                                    c._showGameTweets(a.tweets)
                                }) : c._showGameTweets(a.tweets)
                            }, d)
                        }
                    },
                    error: function() {
                        trackClient({
                            component: "game",
                            action: "error"
                        }, {
                            context: c._optoRound
                        }), c._buildGameTimeline(a)
                    }
                })
            },
            _showGameTweets: function(a) {
                for (var b = 0; b < a.length; ++b) a[b] = new twttr.anywhere.api.models.Status(a[b]);
                var c = this.$find(".js-tweets-container");
                $tweet1 = (new twttr.views.WelcomeLearnGameTweet(a[0])).render(this.$find(".js-tweet-1").empty(), "append"), $tweet2 = (new twttr.views.WelcomeLearnGameTweet(a[1])).render(this.$find(".js-tweet-2").empty(), "append"), $tweet1.addClass("welcome-game-tweet-left"), $tweet2.addClass("welcome-game-tweet-right"), $(".js-tweet-separator").css({
                    opacity: 1
                });
                var d = this;
                c.css({
                    left: "100%",
                    right: "auto"
                }).animate({
                    left: "0%"
                }, "slow", function() {
                    d.$find(".js-tweets-container").removeClass("js-between-rounds")
                })
            },
            _nextGameRound: function(a) {
                var b, c = this,
                    d = this.$find(".js-tweet-1 .js-game-tweet"),
                    e = this.$find(".js-tweet-2 .js-game-tweet"),
                    f = $(),
                    g = $(),
                    i = $('<div class="check"></div>').hide();
                scribeInfo = {
                    context: this._optoRound,
                    item_ids: [d.attr("data-tweet-id"), e.attr("data-tweet-id")],
                    item_count: 2
                }, this.$find(".js-tweets-container").addClass("js-between-rounds"), a.closest(".js-tweet-1").length ? (b = "first", this._optoRound++, trackClient({
                    component: "game",
                    element: "tweet_1",
                    action: "select"
                }, scribeInfo), this._optoSkips = 0, f = d, g = e) : a.closest(".js-tweet-2").length ? (b = "second", this._optoRound++, trackClient({
                    component: "game",
                    element: "tweet_2",
                    action: "select"
                }, scribeInfo), this._optoSkips = 0, f = e, g = d) : (b = "skip", trackClient({
                    component: "game",
                    element: "skip_link",
                    action: "skip"
                }, scribeInfo), this._optoSkips++, g = $([d[0], e[0]]));
                var j = 600;
                f.length && (f.append(i), i.fadeIn("fast"), this._setProgress(this._optoRound - 1), this.$find(".js-current-round").text(Math.min(this._optoRound - 1, this._optoMaxRounds))), this.$find(".js-tweet-separator").animate({
                    opacity: 0
                }, j), g.animate({
                    opacity: 0
                }, j);
                var k = j + +(new Date);
                if (this._optoRound <= this._optoMaxRounds && this._optoSkips < 5) this._fetchGameTweets(b, k);
                else {
                    trackClient({
                        action: this._optoSkips == 5 ? "skip" : "complete"
                    });
                    var c = this;
                    window.setTimeout(function() {
                        f.length ? c.$find(".js-tweets-container").css({
                            left: "auto",
                            right: "0%"
                        }).animate({
                            right: "100%"
                        }, function() {
                            c._buildGameTimeline(b)
                        }) : c._buildGameTimeline(b)
                    }, j)
                }
            },
            _buildGameTimeline: function(a) {
                var b = this;
                this._renderStep("building"), this.$find(".js-stream-end").hide(), this.$find(".js-welcome-faux-tweet-stream").hide(), (new twttr.views.StreamLoading).render(this.$find(".js-tweet-preview-container"), "html"), $.ajax({
                    type: "POST",
                    url: "/i/optometrist/recommendations",
                    headers: {
                        "X-PHX": !0
                    },
                    data: {
                        state: JSON.stringify(this._optoState),
                        last_action: a || "",
                        algo: this._optoAlgo || "",
                        query: JSON.stringify(this._optoQuery) || ""
                    },
                    dataType: "json",
                    success: function(a) {
                        twttr.API.User.findAll(a, function(a) {
                            b._optoUsers = a.toArray(), twttr.router.routeTo(twttr.router.welcomePreviewPath())
                        })
                    },
                    error: function() {
                        trackClient({
                            section: "preview",
                            component: "stream",
                            action: "error"
                        }), b.$find(".stream-loading").remove(), b.$find(".js-welcome-faux-tweet-stream").show(), b.$find(".js-stream-end").show(), twttr.router.routeTo(twttr.router.welcomeRecommendationsPath())
                    }
                })
            },
            preview: function(a, b) {
                var c = this;
                if (!c._optoUsers) {
                    twttr.router.routeTo(twttr.router.welcomeTweetsPath());
                    return
                }
                trackClient({
                    action: "impression"
                }), this._renderStep("building"), this.$find(".js-stream-end").hide(), this.$find(".js-following-count").text(this._optoUsers.length);
                var d = {
                    initialItems: this._optoUsers,
                    cacheWithInitialItems: !0,
                    deferFollows: !0
                },
                    e = this.switchToStream(twttr.streams.TweetGameDashboardStream, d);
                window.setTimeout(function() {
                    c._prefollow(e, c._optoUsers.length);
                    var a, b = 0,
                        d = !1,
                        f = function() {
                            if (d) return;
                            d = !0, window.clearTimeout(a), c.$find(".stream-loading").remove(), c.$find(".js-stream-end").show(), c._renderStep("preview")
                        },
                        g = function() {
                            b++, b == c._optoUsers.length && (c.unbind("followPreviewed", g), f())
                        };
                    c._optoUsers.length == 0 ? f() : (c.bind("followPreviewed", g), a = window.setTimeout(f, 1e4))
                }, 0)
            },
            edit: function(a, b) {
                trackClient({
                    action: "impression"
                }), this._renderStep("edit");
                var c = {
                    initialItems: this._optoUsers,
                    cacheWithInitialItems: !0,
                    deferFollows: !0
                };
                this.switchToStream(twttr.streams.TweetGameDashboardStream, c)
            },
            _addNextDisableReason: function(a) {
                this._nextDisableReasons[a] || (this._nextDisableReasons[a] = !0, this._nextDisableReasons._reasonCount++), this._setNextButton(!1)
            },
            _removeNextDisableReason: function(a) {
                this._nextDisableReasons[a] && (delete this._nextDisableReasons[a], this._nextDisableReasons._reasonCount--, this._setNextButton(this._nextDisableReasons._reasonCount == 0))
            },
            _setProgress: function(a) {
                var b = this._steps[this._currentStepId];
                this.$find(".js-progressbar").progressbar({
                    value: 1 + Math.floor(100 * a / b.suggested_progress)
                })
            },
            _updateProgress: function(a) {
                var b = this._steps[this._currentStepId];
                b._currentProg || (b._currentProg = 0), b._currentProg += a, b._currentProg < 0 && (b._currentProg = 0), this._setProgress(b._currentProg), b._currentProg >= b.min_progress && this._removeNextDisableReason("progress"), b._currentProg >= b.suggested_progress ? this.$find(".js-progress-label").html(_("Great!")) : b._currentProg == 0 ? this.$find(".js-progress-label").html(b.initial_progress_copy) : b.progress_copy_function ? this.$find(".js-progress-label").html(b.progress_copy_function(b.suggested_progress - b._currentProg)) : this.$find(".js-progress-label").html(_("Follow {{count}} more!", {
                    count: b.suggested_progress - b._currentProg
                }))
            },
            _setNextButton: function(a) {
                a ? (this.$find(".js-next-btn").toggleClass("disabled", !1).fadeIn().toggleClass("selected", !0), this.$find(".js-progressbar").closest("td").width("99%")) : (this.$find(".js-next-btn").toggleClass("disabled", !0).hide().toggleClass("selected", !1), this.$find(".js-progressbar").closest("td").width("100%")), this.$find(".js-save-btn").toggleClass("primary-btn", a)
            },
            _isOnLastStep: function() {
                var a = this._steps[this._currentStepId];
                return a && a.next_step == "finish"
            },
            finish: function() {
                this.clearWelcomeSkipCookie(), trackClient({
                    section: "finished",
                    action: "impression"
                }), this._slideDrawer(!1, function() {
                    twttr.router.routeTo(twttr.router.homePath())
                })
            },
            _scribeStepCompletion: function(a) {
                var b = this.constructor.ROUTES_TO_STEP[this._currentStepId];
                trackClient({
                    section: b,
                    action: "complete"
                }), trackClient({
                    section: b,
                    component: "progress",
                    action: a
                })
            },
            _renderStep: function(a) {
                this._rendered || this.render(), this.$find(".js-dashboard, .js-content-main, .js-stream-end").show(), this._setTheme();
                var b = this._steps[a];
                this.$find(".js-content-container").empty(), this._customRenderStep(a), this.$find(".js-welcome-search").toggle(b.show_search), this.$find(".js-welcome-zipcode-search").toggle( !! b.show_zipcode_search), this.$find(".js-back-to-stream").hide(), this._currentStepId = a, a != "search" && (this._currentSearchStepId = this._currentStepId);
                var c;
                a == "matches" || a == "import" ? c = _("Find people by name...") : c = _("Search for..."), this.$find(".js-who-to-follow-search input").attr("placeholder", c), this._slideDrawer(!b.no_drawer), this.$find(".js-welcome-intro").hide(), this.$find(".js-tweet-game").remove(), this.$find(".js-welcome-dashboard-footer").show();
                var d = b.next_step == "finish",
                    e = {
                        last_step: d,
                        button_text: b.next_text || this._getNextButtonText(d),
                        continue_route: d ? twttr.router.homePath() : this._nextRoute(b),
                        show_progress: b.show_progress,
                        next_enabled: b.next_enabled,
                        next_highlighted: b.next_highlighted,
                        no_nav: b.no_nav,
                        stream_arrow: !b.no_drawer
                    };
                twttr.merge(e, b), (new twttr.views.WelcomeLearnHeader(e)).render(this.$find(".js-flow-step"), "html");
                var f = this.$find(".js-next-btn"),
                    g = this.$find(".js-skip-link");
                f.attr("href", e.continue_route), g.attr("href", e.continue_route).toggle(!b.next_enabled), a == "intro" ? this.$find(".js-intro-tweet").show() : this.$find(".js-intro-tweet").hide(), this._nextDisableReasons = {
                    _reasonCount: 0
                }, b.next_enabled || (this._addNextDisableReason("progress"), this._updateProgress(0)), b.skip_disabled && this.$find(".js-welcome-dashboard-footer").hide(), this._resizeFlow();
                var i = this.$find(".example-tweet-info");
                b.show_intro_text ? i.show() : i.hide()
            },
            _createScribbler: function(a, b) {
                twttr.is.string(a) && (a = {
                    component: a
                });
                var c = function(b) {
                        var c = twttr.Scribbler.clientAppDefaultTerms();
                        return b = twttr.merge({}, b, a), twttr.Scribbler.clientAppEventNameGenerator(b, c)
                    };
                return twttr.Scribbler.clientEvent.spawn(b, c)
            },
            _followAll: function(a, b) {
                var c = a.screenNames,
                    d = a.deviceNotifications;
                twttr.API.User.find(twttr.currentUser.id, function(a) {
                    var e = 0;
                    twttr.API.User.findAll(c, {
                        success: twttr.bind(this, function(f) {
                            var g = function(a) {
                                    e++, e == c.length && b.complete()
                                };
                            f.each(function(b, c) {
                                b.follow({
                                    success: g,
                                    error: function() {
                                        twttr.showError(_("There was an error following lifeline accounts.")), g()
                                    }
                                });
                                if (d[b.screenName] && a.deviceSetup) {
                                    var e = {
                                        success: function() {
                                            trackClient({
                                                component: "stream",
                                                action: "device_follow"
                                            })
                                        },
                                        error: function(a) {
                                            twttr.showError(_("There was an error device following lifeline accounts."))
                                        }
                                    };
                                    b.setNotificationsOn(e)
                                }
                            })
                        })
                    })
                })
            },
            _onFollowAll: function(a, b) {
                return twttr.cache.local.shownDeviceFollowDialog ? this._followAll(a, b) : (twttr.cache.local.shownDeviceFollowDialog = !0, trackClient({
                    component: "device_follow_dialog",
                    action: "impression"
                }), (new twttr.widget.DeviceFollowDialog({
                    onclose: twttr.bind(this, this._followAll, [a, b])
                })).show()), !0
            },
            localizeQuery: function(a, b) {
                return b.lang && (a.lang = b.lang), b.country && (a.country = b.country), b.city && (a.city = b.city), a.top_tweets = !0, a
            },
            _forceInviteModal: function() {
                if (twttr.abdecider.choose("welcome_aggressive_invite_modal_345") !== "aggressive_invite_modal") return;
                this._currentStepId === "matches" && this.streamManager.streams.current.forceInvitePopup && this.streamManager.streams.current.inviteOthers()
            }
        }), a()
    })
});
provide("components/pages/Welcome", function(a) {
    using("boot/bootstrap_data").as(function(b) {
        var c = twttr.components.pages.WelcomeLearnFlow,
            d = twttr.Router.getCurrentQueryStringParams();
        if (d.welcomePage && d.welcomePage.match(/^Welcome/) && twttr.components.pages[d.welcomePage]) c = twttr.components.pages[d.welcomePage];
        else if (!twttr.isT1) {
            var e = [];
            for (var f = 0; f < e.length; ++f) {
                var g = e[f][0],
                    i = e[f][1],
                    j = twttr.abdecider.choose(g, !0);
                if (j) {
                    j != "control" && (c = i);
                    break
                }
            }
        }
        twttr.components.pages.Welcome = c, a(twttr.components.pages.Welcome)
    })
});
provide("components/pages/AbstractMediaGallery", function(a) {
    using("_", "util", "constants").as(function(b, _) {
        twttr.klass("twttr.components.pages.AbstractMediaGallery").subclassOf(twttr.components.Page).addAfterRender(function() {}).view(twttr.views.MediaGalleryPage).addOnSwitchAway(function() {
            $("#page-container").show(), $(twttr.isT1 ? ".js-topbar" : "#top-stuff").show(), $("body").removeClass("has-media-gallery"), this.$gallery.remove(), this.$gallery = null, this.$content = null, this._query = null, this._viewMode = null
        }).addOnSwitchTo(function() {
            $("#page-container").hide(), $(twttr.isT1 ? ".js-topbar" : "#top-stuff").hide(), this.$gallery = (new twttr.views.MediaGalleryPage).$html().appendTo("#doc"), this.$content = this.$gallery.find(".media-gallery-content"), $("body").addClass("has-media-gallery")
        }).keydown({
            left: function() {
                this._grid && this._grid.showPrev && this._grid.showPrev()
            },
            right: function() {
                this._grid && this._grid.showNext && this._grid.showNext()
            },
            esc: function() {
                this.closeGalleryAction()
            }
        }).methods({
            showSlideshowLoading: function() {
                this.addClass("loading loadingTweet loadingMedia")
            },
            showLoading: function() {
                this.addClass("loading")
            },
            hideTweetLoading: function() {
                this.removeClass("loading loadingTweet")
            },
            hideMediaLoading: function() {
                this.removeClass("loading loadingMedia")
            },
            hideLoading: function() {
                this.removeClass("loading loadingTweet loadingMedia")
            },
            addClass: function(a) {
                this.$content && this.$content.addClass(a)
            },
            removeClass: function(a) {
                this.$content && this.$content.removeClass(a)
            },
            grid: function(a, b) {
                if (twttr.decider.isAvailable("disable_gallery_grid")) {
                    this.slideshow(a, b);
                    return
                }
                this.setup(a, b), this._viewMode = "grid";
                if (this.deciderKey && !twttr.decider.isAvailable(this.deciderKey)) {
                    this.trigger("notFound");
                    return
                }
                this.buildGrid(a, b), this.scribbler.scribe({
                    component: this._mode,
                    action: "impression"
                })
            },
            buildGrid: function() {
                throw new Exception("buildGrid is an abstract method that must be implemented in your subclass.")
            },
            completeGridRender: function(a) {
                a.generateItemHref = twttr.bind(this, this.generateItemHref), a.provider = this._provider, a.scribbler = this.scribbler, this._renderControls("grid"), this._grid && (this._grid.$node.remove(), this._grid = null), this.showLoading(), this.$content.addClass("grid"), this._grid = new twttr.components.TheGrid(a, this.$content.width()), this._grid.$node.appendTo(this.$content), this._mode == "videos" && this._grid.$node.addClass("grid-videos"), this._grid.bind("showLoading", twttr.bind(this, this.showLoading)), this._grid.bind("hideLoading", twttr.bind(this, this.hideLoading)), b.util.lazyBind(window, "resize", twttr.bind(this, this.resizeGrid))
            },
            slideshow: function(a, b) {
                if (this.alreadySlideshow(a)) return;
                this.setup(a, b), this._viewMode = "slideshow", this._displayMode = "slideshow";
                if (this.deciderKey && !twttr.decider.isAvailable(this.deciderKey)) {
                    this.trigger("notFound");
                    return
                }
                this._renderControls("detail");
                var c = {
                    width: this.$content.width(),
                    height: $(window).height() - 300,
                    thumbContainerWidth: 880,
                    url: b.url || null,
                    mode: this._mode
                };
                this._grid && (this._grid.$node.remove(), this._grid = null), this.buildSlideshow(a, b, c), this.$content.removeClass("grid"), this.scribbler.scribe({
                    component: this._mode,
                    action: "impression"
                })
            },
            buildSlideshow: $.noop,
            completeSlideshowRender: function(a) {
                a.generateItemHref = twttr.bind(this, this.generateItemHref), a.provider = this._provider, a.scribbler = this.scribbler, this._grid = new twttr.components.MediaSlideshow(a), this._grid.$node.appendTo(this.$content), this._grid.bind("showSlideshowLoading", twttr.bind(this, this.showSlideshowLoading)), this._grid.bind("hideTweetLoading", twttr.bind(this, this.hideTweetLoading)), this._grid.bind("hideMediaLoading", twttr.bind(this, this.hideMediaLoading)), this.showLoading(), b.util.lazyBind(window, "resize", twttr.bind(this, this.resizeSlideshow)), this._grid.bind("mediaRendered", twttr.bind(this, this.resizeSlideshow))
            },
            resizeGrid: function() {
                if (this._viewMode == "slideshow" || !this.$content) return;
                var a = this.$content.width();
                this._grid.setCols(a)
            },
            resizeSlideshow: function() {
                var a = this;
                if (this._viewMode != "slideshow" || !this.$content) return;
                var c = this._mode == "photos" ? b.constants.slideshow.photoMinHeight : b.constants.slideshow.videoMinHeight,
                    h = $(window).height() - (twttr.decider.isAvailable("disable_gallery_thumbs") ? 220 : 300),
                    d = this.$content.width();
                h = Math.max(h, c), this._grid.resizePicture(h, d), this._grid._thumbnailViewer && (this.resizeThumbnailViewerTimer && clearTimeout(this.resizeThumbnailViewerTimer), this.resizeThumbnailViewerTimer = setTimeout(function() {
                    a._grid._thumbnailViewer && a._grid._thumbnailViewer.updateWidth()
                }, 500))
            },
            _renderControls: function(a) {
                this._controls && (this._controls.$node.remove(), this._controls = null);
                var b = $.extend(this.getControlsOptions(), {
                    view: a
                });
                this._controls = new twttr.components.MediaGalleryControls(b), this._controls.$node.appendTo(this.$content), this._controls.bind("close", twttr.bind(this, this.closeGalleryAction)), this._controls.bind("detailViewSelected", twttr.bind(this, this.detailViewSelected)), this._controls.bind("gridViewSelected", twttr.bind(this, this.gridViewSelected)), $("div.tipsy").remove(), this._controls.$node.find(".detailview, .gridview").tipsy({
                    gravity: "s",
                    fade: !0
                })
            },
            closeGalleryAction: $.noop,
            detailViewSelected: $.noop,
            gridViewSelected: $.noop
        }), a(twttr.components.pages.AbstractMediaGallery)
    })
});
provide("components/pages/UserMediaGallery", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.pages.UserMediaGallery").subclassOf(twttr.components.pages.AbstractMediaGallery).methods({
            setup: function(a) {
                this.type = "userMedia", this.screenName = a.screen_name, this.deciderKey = "phoenix_user_media_gallery", this._mode = "photos", this._provider = new twttr.media.provider.UserMedia({
                    screenName: this.screenName
                }), this.scribbler = twttr.Scribbler.clientEvent.spawn({
                    profile_id: function() {
                        return twttr.profileUser && twttr.profileUser.id
                    },
                    event_info: this._mode
                }), this.filter = function(a) {
                    return !a || !a.mediaType ? !1 : a.mediaType.icon() === twttr.constants.media.photoIcon
                }
            },
            getControlsOptions: function() {
                return {
                    type: this.type,
                    screenName: this.screenName,
                    profilePath: twttr.router.profilePath({
                        screen_name: this.screenName
                    }),
                    mode: this._mode
                }
            },
            generateItemHref: function(a) {
                return twttr.router.userMediaSlideshowPath({
                    screen_name: this.screenName
                }) + "?url=" + encodeURIComponent(a)
            },
            buildGrid: function(a, b) {
                this.updatePageTitle(_("Twitter / Recent images by @{{screen_name}}", {
                    screen_name: this.screenName
                })), this.completeGridRender({
                    type: this.type,
                    screenName: this.screenName,
                    generateItemHref: twttr.bind(this, this.generateItemHref),
                    filter: this.filter
                }), this.updateBackButton();
                var c = this;
                this._grid.$node.delegate("a", "click", function() {
                    c.scribbler.scribe({
                        component: c._mode,
                        action: "click"
                    }, {
                        url: $(this).attr("data-url")
                    })
                })
            },
            buildSlideshow: function(a, b, c) {
                this.updatePageTitle(_("Twitter / Recent images by @{{screen_name}}", {
                    screen_name: this.screenName
                })), c.type = this.type, c.screenName = this.screenName, c.filter = this.filter, this.completeSlideshowRender(c), this.updateBackButton()
            },
            alreadySlideshow: function(a) {
                return this.$content && a.screen_name === this.screenName && this._viewMode === "slideshow"
            },
            detailViewSelected: function() {
                twttr.router.routeTo(twttr.router.userMediaSlideshowPath({
                    screen_name: this.screenName
                })), this.scribbler.scribe({
                    component: "toggle_" + this._mode + "_view",
                    action: "click"
                })
            },
            gridViewSelected: function() {
                twttr.router.routeTo(twttr.router.userMediaGridPath({
                    screen_name: this.screenName
                })), this.scribbler.scribe({
                    component: "toggle_" + this._mode + "_view",
                    action: "click"
                })
            },
            closeGalleryAction: function() {
                twttr.router.routeTo(this.pathBack), this.scribbler.scribe({
                    component: this._mode + "_back_link",
                    action: "click"
                })
            },
            updateBackButton: function() {
                var a = twttr.audit.trail(),
                    b = null;
                this.pathBack = twttr.router.profilePath({
                    screen_name: this.screenName
                });
                if (a.length > 1) for (var c = 0, d = a.length; c < d; c++) {
                    var e = a[c];
                    if (e.page !== "userMediaGallery") {
                        b = e.page, this.pathBack = e.path;
                        break
                    }
                    var f = e.path.split("/")[2];
                    if (f !== this.screenName) {
                        b = "profile";
                        break
                    }
                }
                var g = this._controls.$find(".media-gallery-back-nav span"),
                    i = "";
                switch (b) {
                case "home":
                    i = _("Back to Home");
                    break;
                case "permalink":
                    i = _("Back to Tweet page");
                    break;
                case "profile":
                    twttr.helpers.isCurrentUser(this.screenName) ? i = _("Back to your profile", {
                        screen_name: this.screenName
                    }) : i = _("Back to @{{screen_name}}'s profile", {
                        screen_name: this.screenName
                    });
                    break;
                case "list":
                    var j = this.pathBack.split("/");
                    i = _("Back to @{{screen_name}}'s list '{{list_name}}'", {
                        screen_name: j[2],
                        list_name: j[3]
                    });
                    break;
                case "search":
                    i = _("Back to search results");
                    break;
                default:
                    i = _("@{{screen_name}}'s profile", {
                        screen_name: this.screenName
                    })
                }
                g.text(i)
            }
        }), a(twttr.components.pages.UserMediaGallery)
    })
});
provide("components/pages/FacetsMediaGallery", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.pages.FacetsMediaGallery").subclassOf(twttr.components.pages.AbstractMediaGallery).methods({
            setup: function(a, b) {
                var c = this;
                this.type = "search", this.deciderKey = "phoenix_facets", this._mode = a.mode, this._query = a.query || b.q, this._provider = new twttr.media.provider.Search, this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                    query: this._query,
                    event_info: this._mode
                })
            },
            getControlsOptions: function() {
                return {
                    type: this.type,
                    mode: this._mode,
                    query: this._query
                }
            },
            slideshow: function() {
                twttr.components.pages.AbstractMediaGallery.prototype.slideshow.apply(this, arguments)
            },
            generateItemHref: function(a) {
                return twttr.router.searchFacetsSlideshowPath({
                    query: this._query,
                    mode: this._mode
                }) + "?url=" + encodeURIComponent(a)
            },
            buildGrid: function(a, b) {
                this._mode != "videos" && this._mode != "photos" && twttr.router.routeTo(twttr.router.searchFacetsGridPath({
                    query: this._query,
                    mode: "photos"
                })), this.updatePageTitle(_("Twitter / Gallery - {{{query}}}", {
                    query: this._query
                }));
                var c = {
                    query: this._query,
                    mode: this._mode,
                    type: this.type
                };
                this._mode == "videos" && (c.imageWidth = 200, c.imageHeight = 150, c.margin = 10), this.completeGridRender(c);
                var d = this;
                this._grid.$node.delegate("a", "click", function() {
                    d.scribbler.scribe({
                        component: d._mode,
                        action: "click"
                    }, {
                        url: $(this).attr("data-url")
                    })
                })
            },
            buildSlideshow: function(a, b, c) {
                var d = b.url || null;
                if (this._query && this._mode != "videos" && this._mode != "photos") {
                    var e = twttr.router.searchFacetsSlideshowPath({
                        query: this._query,
                        mode: "photos"
                    });
                    d && (e = e + "?url=" + encodeURIComponent(d)), twttr.router.routeTo(e);
                    return
                }
                this._mode == "videos" && twttr.merge(c, {
                    thumbHeight: 48,
                    thumbWidth: 64,
                    thumbDisplayWidth: 66,
                    thumbDisplayHeight: 48
                }), this.updatePageTitle(_("Twitter / Gallery - {{{query}}}", {
                    query: this._query
                })), c.type = this.type, c.query = this._query, this.completeSlideshowRender(c)
            },
            alreadySlideshow: function(a) {
                return this.$content && a.query === this._query && a.mode === this._mode && this._viewMode === "slideshow"
            },
            detailViewSelected: function() {
                twttr.router.routeTo(twttr.router.searchFacetsSlideshowPath({
                    query: this._query,
                    mode: this._mode
                })), this.scribbler.scribe({
                    component: "toggle_" + this._mode + "_view",
                    action: "click"
                })
            },
            gridViewSelected: function() {
                twttr.router.routeTo(twttr.router.searchFacetsGridPath({
                    query: this._query,
                    mode: this._mode
                })), this.scribbler.scribe({
                    component: "toggle_" + this._mode + "_view",
                    action: "click"
                })
            },
            closeGalleryAction: function() {
                twttr.router.routeTo(twttr.router.searchResultsPath({
                    query: this._query
                })), this.scribbler.scribe({
                    component: this._mode + "_back_link",
                    action: "click"
                })
            }
        }), a(twttr.components.pages.FacetsMediaGallery)
    })
});
provide("components/pages/EventsMediaGallery", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.pages.EventsMediaGallery").subclassOf(twttr.components.pages.AbstractMediaGallery).methods({
            setup: function(a, b) {
                var c = this;
                this.type = "search", this._mode = "photos", this._query = a.query || b.q, this._eventId = this._query, twttr.griffin.isEvent(this._eventId) || twttr.router.routeTo(twttr.router.homePath()), this._provider = new twttr.media.provider.Search, this.scribbler = a.scribbler || twttr.Scribbler.clientEvent.spawn({
                    query: this._query,
                    event_info: "events"
                })
            },
            getControlsOptions: function() {
                return {
                    type: this.type,
                    mode: this._mode,
                    query: this._query,
                    eventId: this._eventId
                }
            },
            slideshow: function() {
                twttr.components.pages.AbstractMediaGallery.prototype.slideshow.apply(this, arguments)
            },
            generateItemHref: function(a) {
                return twttr.router.eventsSlideshowPath({
                    query: this._query,
                    mode: this._mode
                }) + "?url=" + encodeURIComponent(a)
            },
            buildGrid: function(a, b) {
                this._mode != "videos" && this._mode != "photos" && twttr.router.routeTo(twttr.router.eventsGridPath({
                    query: this._query,
                    mode: "photos"
                })), this.updatePageTitle(_("Twitter / Events - {{{query}}}", {
                    query: this._query
                }));
                var c = {
                    query: this._query,
                    mode: this._mode,
                    type: this.type
                };
                this._mode == "videos" && (c.imageWidth = 200, c.imageHeight = 150, c.margin = 10), c.isEvent = !0, this.completeGridRender(c);
                var d = this;
                this._grid.$node.delegate("a", "click", function() {
                    d.scribbler.scribe({
                        component: d._mode,
                        action: "click"
                    }, {
                        url: $(this).attr("data-url")
                    })
                })
            },
            buildSlideshow: function(a, b, c) {
                var d = b.url || null;
                if (this._query && this._mode != "videos" && this._mode != "photos") {
                    var e = twttr.router.eventsSlideshowPath({
                        query: this._query,
                        mode: "photos"
                    });
                    d && (e = e + "?url=" + encodeURIComponent(d)), twttr.router.routeTo(e);
                    return
                }
                this._mode == "videos" && twttr.merge(c, {
                    thumbHeight: 48,
                    thumbWidth: 64,
                    thumbDisplayWidth: 66,
                    thumbDisplayHeight: 48
                }), this.updatePageTitle(_("Twitter / Events - {{{query}}}", {
                    query: this._query
                })), c.type = this.type, c.query = this._query, c.showFirstOnFail = !0, c.isEvent = !0, this.completeSlideshowRender(c)
            },
            alreadySlideshow: function(a) {
                return this.$content && a.query === this._query && a.mode === this._mode && this._viewMode === "slideshow"
            },
            detailViewSelected: function() {
                twttr.router.routeTo(twttr.router.eventsSlideshowPath({
                    query: this._query,
                    mode: this._mode
                })), this.scribbler.scribe({
                    component: "toggle_" + this._mode + "_view",
                    action: "click"
                })
            },
            gridViewSelected: function() {
                twttr.router.routeTo(twttr.router.eventsGridPath({
                    query: this._query,
                    mode: this._mode
                })), this.scribbler.scribe({
                    component: "toggle_" + this._mode + "_view",
                    action: "click"
                })
            },
            closeGalleryAction: function() {
                twttr.router.routeTo(twttr.router[this._query + "StaticPath"]()), this.scribbler.scribe({
                    component: this._mode + "_back_link",
                    action: "click"
                })
            }
        }), a(twttr.components.pages.EventsMediaGallery)
    })
});
provide("components/pages/BigPhotoPermalink", function(a) {
    using().as(function(b) {
        var c = twttr.components.pages.AbstractMediaGallery.prototype;
        twttr.klass("twttr.components.pages.BigPhotoPermalink").subclassOf(twttr.components.pages.AbstractMediaGallery).methods({
            permalink: function(a) {
                var b = this;
                this.$content.empty(), this.index = a.photo_index, twttr.API.Status.find(a.id, {
                    success: twttr.bind(this, this.renderTweet),
                    error: function() {
                        b.trigger("notFound")
                    }
                })
            },
            renderTweet: function(a) {
                this.updatePageTitle(_("Twitter"));
                if (!a.entities || !a.entities.media || !a.entities.media[this.index - 1]) {
                    this.trigger("notFound");
                    return
                }
                this.$content.addClass("big-photo-permalink media-slideshow-tweet"), (new twttr.views.SlideshowTweet(a)).render(this.$content, "append");
                var b = a.entities.media[this.index - 1];
                this.dimensions = b.sizes.large;
                var c = twttr.isSSL() ? b.media_url_https : b.media_url;
                c += ":large", this.loadImage(c)
            },
            loadImage: function(a) {
                this.$image = $("<img/>", {
                    "class": "large",
                    src: a,
                    height: this.dimensions.h,
                    width: this.dimensions.w
                }).appendTo(this.$content), this.refit(), twttr.util.lazyBind(window, "resize", twttr.bind(this, this.refit), 200)
            },
            refit: function() {
                var a = twttr.$win.width(),
                    h = twttr.$win.height() - this.$content.find(".tweet").height() - 40;
                this.$image.css({
                    top: Math.max(0, Math.round((h - this.dimensions.h) / 2)),
                    left: Math.max(0, Math.round((a - this.dimensions.w) / 2))
                })
            }
        }), a()
    })
});
provide("components/pages/Discover", function(a) {
    using(twttr.isT1 ? "mixins/t1/emptyTimelineRecommendations" : "mixins/emptyTimelineRecommendations", "components/t1/dashboard/DiscoverNav", "components/UserRecommendations", "components/Trends", "components/Footer", "streams/Discover", "streams/SuggestionCategoriesStream", "mixins/streamablePage", "mixins/discoveryHelper").as(function(b, c) {
        var d = twttr.klass("twttr.components.pages.Discover").subclassOf(twttr.components.Page).mixin(b.mixins.streamablePage, b.mixins.discoveryHelper, c).view(twttr.views.Page).methods({
            setupPage: function(a, b) {
                b = b || {}, this.updatePageTitle(a), twttr.themes.loadCurrentUserStyle(), b.sideNavRoute ? this.selectSideNav(b.sideNavRoute) : this.selectCurrentSideNav()
            },
            discover: function(a, c) {
                this.setupPage(_("Twitter / Discover")), this.streamManager.switchTo(b.streams.Discover, {})
            },
            networkActivity: function(a, b) {
                this.setupPage(_("Twitter / Activity")), this.streamManager.switchTo(twttr.streams.ActivityByNetworkStream, {}), this.insertEmptyTimeline()
            },
            suggestions: function(a, b) {
                this.setupPage(_("Twitter / Who to follow / Suggestions"), {
                    sideNavRoute: "whoToFollowSuggestions"
                }), this.streamManager.switchTo(twttr.streams.UserRecommendationsStream, {})
            },
            suggestions_search: function(a, b) {
                var c = a.query || b.q;
                if (!c) return this.routePageTo("whoToFollowSuggestions");
                this.setupPage(_("Twitter / Who to follow / Search"), {
                    sideNavRoute: "whoToFollowSuggestions"
                }), this.streamManager.switchTo(twttr.streams.HeadlessPeopleSearch, {
                    headerStreamClass: "UserRecommendationsStream",
                    backLinkOptions: {
                        route: twttr.router.whoToFollowSuggestionsPath(),
                        name: _("View suggestions")
                    },
                    query: c
                })
            },
            find_friends: function(a, b) {
                this.setupPage(_("Twitter / Find Friends"));
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "import"
                }),
                    d = this.localizeQuery({
                        scribbler: c,
                        pathRoot: "whoToFollow"
                    }, b),
                    e = this.streamManager.switchTo(twttr.streams.ContactImportServices, d);
                e && e.setStreamManager(this.streamManager)
            },
            lifeline: function(a, b, c) {
                this.setupPage(_("Twitter / Lifeline"));
                var d = twttr.Scribbler.clientEvent.spawn({
                    context: "lifeline"
                }),
                    e = twttr.streams.SuggestionLifelineMembersStream.categoryObj,
                    f = this.localizeQuery({
                        category: "lifeline",
                        suggestionCategory: e,
                        scribbler: d,
                        noHeaderFooter: !0,
                        title: e.name + " (" + e.size + ")",
                        pathRoot: this.PATH_ROOT
                    }, b);
                c && c.zipcode && (f = $.extend(f, {
                    zipcode: c.zipcode
                }));
                var g = this.streamManager.switchTo(twttr.streams.SuggestionLifelineMembersStream, f);
                g && g.setStreamManager(this.streamManager)
            },
            lifeline_search: function(a, b) {
                var c = a.query || b.q;
                if (!c) return this.routePageTo("whoToFollowLifeline");
                this.lifeline(a, b, {
                    zipcode: c
                })
            },
            matches: function(a, b) {
                this.setupPage(_("Twitter / Find Friends / Results"), {
                    sideNavRoute: "whoToFollowImport"
                });
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "import"
                });
                this.streamManager.switchTo(twttr.streams.ContactImportMatches, {
                    scribbler: c,
                    pathRoot: "whoToFollow"
                })
            },
            find_friends_search: function(a, b) {
                var c = a.query || b.q;
                if (!c) return this.routePageTo("whoToFollowImport");
                this.setupPage(_("Twitter / Find Friends / Search"), {
                    sideNavRoute: "whoToFollowImport"
                }), this.streamManager.switchTo(twttr.streams.HeadlessPeopleSearch, {
                    headerStreamClass: "ContactImportServices",
                    backLinkOptions: {
                        route: twttr.router.whoToFollowImportPath(),
                        name: _("View services")
                    },
                    query: c
                })
            },
            interests: function(a, b) {
                this.setupPage(_("Twitter / Categories"));
                var c = twttr.Scribbler.clientEvent.spawn({
                    context: "interests"
                }),
                    d = {
                        scribbler: c,
                        pathRoot: "whoToFollow"
                    };
                d = this.localizeQuery(d, b), this.streamManager.switchTo(twttr.streams.SuggestionCategoriesStream, d)
            },
            interests_search: function(a, b) {
                var c = a.query || b.q;
                if (!c) return this.routePageTo("whoToFollowInterests");
                this.setupPage(_("Twitter / Categories / Search"), {
                    sideNavRoute: "whoToFollowInterests"
                }), this.streamManager.switchTo(twttr.streams.HeadlessPeopleSearch, {
                    headerStreamClass: "SuggestionCategoriesStream",
                    backLinkOptions: {
                        route: twttr.router.whoToFollowInterestsPath(),
                        name: _("View categories")
                    },
                    query: c
                })
            },
            government_by_zip: function(a, b) {
                this.setupPage(_("Twitter / Government Search"), {
                    sideNavRoute: "whoToFollowInterests"
                }), this.streamManager.switchTo(twttr.streams.GovernmentSearchStream, {
                    zipCode: a.zipCode
                })
            },
            category: function(a, b) {
                var c = this,
                    d = function(a) {
                        if (!a) return c.routePageTo("whoToFollow", "Interests");
                        var d = twttr.Scribbler.clientEvent.spawn({
                            context: "interests",
                            query: a.slug
                        });
                        c.setupPage(_("Twitter / Categories / {{category}}", {
                            category: a.name
                        }), {
                            sideNavRoute: "whoToFollowInterests"
                        });
                        var f = {
                            category: e,
                            suggestionCategory: a,
                            scribbler: d,
                            pathRoot: "whoToFollow"
                        };
                        f = c.localizeQuery(f, b), c.streamManager.switchTo(twttr.streams.SuggestionCategoryMembersStream, f)
                    },
                    e = a.category || b.category;
                this._category = e;
                var f = twttr.streams.SuggestionCategoriesStream.CATEGORY_MAP;
                if (f) d(f[e]);
                else {
                    var g = {
                        success: function(a) {
                            a = twttr.streams.SuggestionCategoriesStream.filterTopTweetsCategories(a), twttr.streams.SuggestionCategoriesStream.cacheCategories(a);
                            var b = twttr.streams.SuggestionCategoriesStream.CATEGORY_MAP[e];
                            d(b)
                        }
                    };
                    g = this.localizeQuery(g, b), twttr.API.SuggestionCategory.getAll(g)
                }
            },
            renderDashboard: function() {
                this.trendsComponent = new b.components.Trends, this.addDashboardComponents([new b.components.t1.dashboard.DiscoverNav, new twttr.components.JapaneseAd, this.trendsComponent, new b.components.Footer])
            },
            addImpressionData: function(a) {
                var b = twttr.audit.currentAction();
                switch (b) {
                case "find_friends":
                case "matches":
                    a.context = "import";
                    break;
                case "interests":
                    a.context = "interests";
                    break;
                case "category":
                    a.context = "interests", a.query = this._category
                }
            }
        }).addAfterRender(function() {
            this.renderDashboard()
        }).addOnSwitchTo(function() {
            this.trendsComponent && this.trendsComponent.startUpdatePolling()
        }).addOnSwitchAway(function() {
            this.trendsComponent && this.trendsComponent.stopUpdatePolling()
        });
        a(d)
    })
});
provide("components/pages/Connect", function(a) {
    using("_", "components/t1/dashboard/MiniHomeProfile", "components/t1/dashboard/ConnectNav", "components/Trends", "components/UserRecommendations", "components/Footer", "mixins/streamablePage", "multiGlobals/more_views").as(function(b) {
        var c = twttr.klass("twttr.components.pages.Connect", function() {
            twttr.components.Page.apply(this, arguments)
        }).subclassOf(twttr.components.Page).mixin(b.mixins.streamablePage).view(twttr.views.Page).methods({
            connect: function(a, b) {
                this.updatePageTitle(_("Twitter / Interactions")), twttr.themes.loadCurrentUserStyle(), this.selectCurrentSideNav(), this.streamManager.switchTo(twttr.streams.ActivityOfMeStream, {})
            },
            mentions: function(a, b) {
                this.updatePageTitle(_("Twitter / Mentions")), this.selectSideNav("mentions"), twttr.themes.loadCurrentUserStyle(), this.streamManager.switchTo(twttr.streams.Mentions, {})
            },
            renderDashboard: function() {
                this.addDashboardComponents([new b.components.t1.dashboard.ConnectNav, new twttr.components.JapaneseAd, new twttr.components.UserRecommendations({
                    screenName: null,
                    showLinks: !0
                }), new b.components.Footer])
            }
        }).addAfterRender(function() {
            this.renderDashboard()
        });
        a(c)
    })
});
provide("widget/Banner", function(a) {
    using("_", "util").as(function(b, _) {
        twttr.klass("twttr.widget.Banner", function(a) {
            this.$node = $("<div/>"), this.view = new twttr.views[a.view](a), this.$node.delegate(".pane-close", "click", twttr.bind(this, this.remove)), this.$node.attr("data-component-term", b.util.underscore(a.view)), this.newBanner = a.newBanner
        }).methods(twttr.EventProvider).methods({
            insert: function() {
                this.view.render(this.$node), $(this.newBanner ? ".new-js-banners" : ".js-banners").append(this.$node), twttr.app.recalculatePadding()
            },
            remove: function() {
                this.$node.remove(), twttr.app.recalculatePadding(), this.trigger("closed")
            }
        }), twttr.provide("twttr.banners", twttr.augmentObject({
            pending_new: 0,
            pending_changed: 1,
            pending_bouncing: 2,
            stacked: 3,
            nonStacked: 4,
            display: function() {
                twttr.currentUser && twttr.profileUser && twttr.currentUser != twttr.profileUser && twttr.currentUser.isAdmin && twttr.profileUser.suspended && this.viewing_suspended_user().insert();
                if (twttr.currentUser && twttr.currentUser.states) {
                    var a = [],
                        b = !1,
                        c = twttr.currentUser.states;
                    twttr.is.falsy(c.pending_email) || (b = this.pending_new), c.bouncing_email && (a = twttr.is.array(c.bouncing_email) ? c.bouncing_email : [c.bouncing_email]), b !== !1 && twttr.currentUser.emailAddress && (b = this.pending_changed), b !== !1 && $.inArray(c.pending_email, a) >= 0 && (b = this.pending_bouncing);
                    if (twttr.currentUser.emailAddress && $.inArray(twttr.currentUser.emailAddress, a) >= 0) {
                        var d = b !== !1 ? this.stacked : this.nonStacked;
                        this.bouncingEmail(d, twttr.currentUser.emailAddress).insert()
                    }
                    if (b !== !1) {
                        var e = twttr.abdecider.choose("email_verification-18", !0);
                        (!e || e == "control") && this.verifyEmail(b, c.pending_email).insert()
                    }
                    c.detached_email && this.detachedEmail().insert(), c.suspended && this.suspended(twttr.currentUser.screenName).insert(), $.cookie("show_reactivated_" + twttr.currentUser.id) && this.reactivated().insert()
                }
            },
            detachedEmail: function() {
                return new twttr.widget.Banner({
                    view: "DetachedEmailBanner",
                    newBanner: !0
                })
            },
            verifyEmail: function(a, b) {
                var c = new twttr.widget.Banner({
                    view: "VerifyEmailBanner",
                    pending_email: b,
                    pending_new: a == this.pending_new,
                    pending_changed: a == this.pending_changed,
                    pending_bouncing: a == this.pending_bouncing,
                    newBanner: !0
                });
                return c.$node.delegate(".resend-confirmation-email-link", "click", function(a) {
                    twttr.currentUser.emailResendConfirmation({
                        success: function(a) {
                            twttr.showMessage(a.messageForFlash)
                        },
                        error: function(a) {
                            twttr.showError(_("Oops!  There was an error sending the confirmation email."))
                        }
                    })
                }), c
            },
            bouncingEmail: function(a, b) {
                var c = new twttr.widget.Banner({
                    view: "BouncingEmailBanner",
                    current_email: b,
                    stacked: a == this.stacked,
                    newBanner: !0
                });
                return c.$node.delegate(".reset-bounce-link", "click", function(a) {
                    twttr.currentUser.emailBounceReset(function(a) {
                        twttr.showMessage(_("Your email notifications should resume shortly.")), c.$node.fadeOut("fast", function() {
                            c.remove()
                        })
                    })
                }), c
            },
            suspended: function(a) {
                return new twttr.widget.Banner({
                    view: "SuspendedBanner",
                    screen_name: a,
                    newBanner: !0
                })
            },
            reactivated: function() {
                var a = new twttr.widget.Banner({
                    view: "ReactivatedBanner"
                });
                return a.bind("closed", function() {
                    $.cookie("show_reactivated_" + twttr.currentUser.id, null)
                }), a.$node.delegate("a.reactivate-settings-link", "click", function(b) {
                    b.preventDefault(), a.trigger("closed"), window.location.href = b.target
                }), a
            },
            emailAlreadyVerified: function() {
                var a;
                for (var b = 0; b < twttr.currentUser.email.length; b++) twttr.currentUser.email[b].current && (a = twttr.currentUser.email[b]);
                return new twttr.widget.Banner({
                    view: "EmailAlreadyVerifiedBanner",
                    already_verified_message: _("Someone has already confirmed the email {{email}}", {
                        email: a.address
                    })
                })
            },
            welcomeToPhoenix: function() {
                return new twttr.widget.Banner({
                    view: "WelcomeToPhoenixBanner",
                    welcome_search_results_path: twttr.router.searchResultsPath({
                        query: "#NewTwitter"
                    })
                })
            },
            becameUser: function() {
                return new twttr.widget.Banner({
                    view: "BecameUserBanner"
                })
            }
        }, twttr.EventProvider)), twttr.app.waitForSignal("init", function() {
            twttr.banners.display()
        }), a(twttr.widget.Banner)
    })
});
provide("components/Promo", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.Promo").subclassOf(twttr.components.Base).initializer(function() {
            twttr.API.Promo.random({
                promo_type: "",
                limit: 1
            }, twttr.bind(this, function(a) {
                $.isEmptyObject(a) || ((new twttr.views.DashboardPromo({
                    promo: a[0]
                })).render(this.$node, "append"), this.hasRendered())
            }))
        }).click({
            ".promo .definition": function(a, b) {
                var c = {
                    input: "click",
                    component: "dashboard",
                    subcomponent: "promo",
                    target: "definition",
                    definition: b.find("strong").html()
                };
                scribble("dashboard_click", c)
            }
        }).deciderKey("promo_component"), a(twttr.components.Promo)
    })
});
provide("components/Promptbird", function(a) {
    using("_", "multiGlobals/more_views", "mixins/inviteFriends", "mixins/userActionable", "constants").as(function(b, _) {
        twttr.klass("twttr.components.Promptbird").subclassOf(twttr.components.Base).initializer(function(a) {
            if (!twttr.views[this.constructor._name]) {
                var b = new Error('Promptbird view "' + this.constructor._name + '" is undefined');
                twttr.isLocalhost && console.log(b, b.stack || "error.stack is unavailable :(");
                return
            }
            var c = {
                action: "impression",
                section: "promptbird_" + a.prompt.prompt_id
            };
            trackClient(c), this.prompt = a, this.$node.addClass("promptbird");
            var d = "promptbird-" + a.prompt.format.replace(/_/g, "-");
            this.$node.addClass(d), a.data.promptId = a.prompt.prompt_id;
            var e = (new twttr.views[this.constructor._name](a.data)).html();
            this.$node[0].innerHTML = e, "below_black_bar" === a.prompt.format && (this.noSpacer = !0), this.hasRendered()
        }).click({
            ".js-dismiss": function(a) {
                a.stopImmediatePropagation();
                var b = {
                    prompt_id: this.prompt.prompt.prompt_id
                },
                    c = {
                        success: function(a) {}
                    };
                return twttr.API.Promptbird.dismissPrompt(b, c), this.destroy(), !1
            },
            ".call-to-action": function(a) {
                var b = this,
                    c = {
                        action: "click",
                        section: "promptbird_" + this.prompt.prompt.prompt_id
                    };
                trackClient(c);
                if ($(a.currentTarget).data("preserve-prompt")) return;
                var d = {
                    prompt_id: this.prompt.prompt.prompt_id
                },
                    e = {
                        success: function(a) {}
                    };
                twttr.API.Promptbird.dismissPrompt(d, e), this.destroy()
            }
        }), twttr.klass("twttr.components.PromptbirdLanguage").subclassOf(twttr.components.Promptbird).initializer(function(a) {
            this._superInitializer(a), this.$find(".call-to-action").one("click", function() {
                var b = a.prompt.template_name.split("_");
                b.shift();
                var c = b.join("-"),
                    d = {
                        success: function() {
                            window.location.reload()
                        }
                    };
                twttr.currentUser.setLanguage(c, d)
            })
        }), twttr.klass("twttr.components.PromptLanguageDe").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageEs").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageHi").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageFr").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageFil").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageId").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageIt").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageJa").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageKo").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageMsa").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageNl").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguagePt").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageRu").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageTr").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageZhCn").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLanguageZhTw").subclassOf(twttr.components.PromptbirdLanguage), twttr.klass("twttr.components.PromptLifelineJa").subclassOf(twttr.components.Promptbird), twttr.klass("twttr.components.PromptImport").subclassOf(twttr.components.Promptbird), twttr.klass("twttr.components.PromptVitDe").subclassOf(twttr.components.Promptbird).initializer(function(a) {
            this.registerUserActionEvents(), a.data.id = 16181559, this.constructor.uberclass._initializer.apply(this, arguments), this.$find(".js-action-follow").addClass("call-to-action")
        }).mixin(b.mixins.userActionable), twttr.klass("twttr.components.PromptOneClickImport").subclassOf(twttr.components.Promptbird).initializer(function(a) {
            this._superInitializer(a), this.$find(".call-to-action").one("click", function(a) {
                var b = $(this);
                using("externalOauthPopup").as(function(a) {
                    var c = window.location.protocol + "//" + twttr.domains.local + "/invitations/oauth_launch?email=" + encodeURIComponent(b.attr("data-email"));
                    a.externalOauthPopup({
                        url: c,
                        callbackUrl: twttr.router.whoToFollowImportMatchesPath()
                    })
                })
            })
        }), twttr.klass("twttr.components.PromptImportInline").subclassOf(twttr.components.Promptbird).initializer(function(a) {
            this.constructor.uberclass._initializer.apply(this, arguments);
            var b = new twttr.components.ContactImportLauncher,
                c = this;
            b.bind("servicesLoaded", function() {
                b.$find(".service-button").addClass("call-to-action").data("preserve-prompt", "true"), c.$find(".import-inline").append(b.$node)
            }), b.trigger("addedToPage")
        }), twttr.klass("twttr.components.PromptProfile").subclassOf(twttr.components.Promptbird), twttr.klass("twttr.components.PromptMobile").subclassOf(twttr.components.Promptbird).initializer(function(a) {
            var b = twttr.router.mobileGalleryPath(),
                c = twttr.pageLocale === "en" ? "" : "?lang=" + twttr.pageLocale;
            a.data.android_path = b + "/android" + c, a.data.blackberry_path = b + "/blackberry" + c, a.data.iphone_path = b + "/iphone" + c, a.data.ipad_path = b + "/ipad" + c, a.data.wp7_path = b + "/wp7" + c, a.data.mobile_gallery_path = b + c, this.constructor.uberclass._initializer.call(this, a)
        }), twttr.klass("twttr.components.PromptInvite").subclassOf(twttr.components.Promptbird).mixin(twttr.mixins.inviteFriends).initializer(function(a) {
            this.constructor.uberclass._initializer.apply(this, arguments), this.addFormEvents(), twttr.helpers.handlePopupLinks(this.$node);
            if (twttr.isT1) this.$find(".js-submit").data("preserve-prompt", !0);
            else {
                var b = new twttr.components.InviteFriends;
                b.$find(".js-submit").addClass("call-to-action").data("preserve-prompt", !0), this.$find(".invite").append(b.$node)
            }
        }), twttr.klass("twttr.components.PromptFacebookDe").subclassOf(twttr.components.Promptbird), a(twttr.components.Promptbird)
    }), twttr.klass("twttr.components.PromptbirdDashboardPlaceholder").subclassOf(twttr.components.Base).initializer(function() {
        this.$node.attr("id", "js-promptbird-dashboard-narrow-hook")
    })
});
provide("components/RelatedServices", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.RelatedServices").subclassOf(twttr.components.Base).initializer(function() {
            var a = this;
            twttr.API.Promo.random({
                promo_type: "related_service",
                limit: 2
            }, function(b) {
                $.isEmptyObject(b) || ((new twttr.views.DashboardRelatedServices({
                    promos: b
                })).render(a.$node, "append"), a.hasRendered())
            })
        }).deciderKey("promo_component"), a(twttr.components.RelatedServices)
    })
});
provide("TrendLocations", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.klass("twttr.TrendLocations", function(a) {
            this.getLocation(a)
        }).statics({
            LOGGED_OUT_TREND_LOCATION_COOKIE: "trend_location",
            install: function(a) {
                twttr.trendLocations ? twttr.trendLocations.getLocation(a) : twttr.trendLocations = new twttr.TrendLocations(a)
            }
        }).methods({
            getLocation: function(a) {
                var b = this;
                twttr.API.Trend.locations({
                    lang: twttr.pageLocale,
                    success: function(c) {
                        b.all = c;
                        if (twttr.currentUser) twttr.currentUser.trendLocation().first(function(c) {
                            c ? b.current = c : b.current = b.worldwide(), a(b.current)
                        });
                        else {
                            var d = parseInt($.cookie(b.constructor.LOGGED_OUT_TREND_LOCATION_COOKIE), 10);
                            b.current = b.locationForWoeid(d) || b.worldwide(), a(b.current)
                        }
                    }
                })
            },
            allLocations: function() {
                return this.all.array
            },
            ancestorsOf: function(a) {
                if (!a.parentid) return [];
                var b = this.locationForWoeid(a.parentid);
                return [b].concat(this.ancestorsOf(b))
            },
            withAncestorsOf: function(a) {
                return [a].concat(this.ancestorsOf(a))
            },
            currentAncestors: function() {
                return this.ancestorsOf(this.current)
            },
            withCurrentAncestors: function() {
                return this.withAncestorsOf(this.current)
            },
            withFilterAncestors: function() {
                return this.withAncestorsOf(this.currentFilter())
            },
            childrenOf: function(a) {
                return twttr.filter(this.allLocations(), function(b) {
                    return b.parentid === a.woeid
                })
            },
            currentChildren: function() {
                return this.current.isPersonalized ? this.childrenOf(this.currentFilter(this.worldwide())) : this.childrenOf(this.currentFilter())
            },
            locationForWoeid: function(a) {
                return a ? twttr.filter(this.allLocations(), function(b) {
                    return b.woeid == a
                })[0] : null
            },
            locationsForWoeids: function(a) {
                var b = this;
                return twttr.map(a, function(a) {
                    return b.locationForWoeid(a)
                })
            },
            worldwide: function() {
                return this.locationForWoeid(1)
            },
            currentFilter: function(a) {
                var c = a || this.current;
                return c.placeType.code === b.constants.placeTypes.city || this.childrenOf(c).length === 0 ? this._currentFilterWoeid = c.parentid : this._currentFilterWoeid = c.woeid, this.locationForWoeid(this._currentFilterWoeid)
            },
            setPersonalized: function(a) {
                this.current = $.extend(this.current, {
                    isPersonalized: a
                })
            },
            setCurrent: function(a) {
                this.current = this.locationForWoeid(a.woeid) || this.current, this.setPersonalized(a.isPersonalized), twttr.currentUser ? twttr.currentUser.setTrendLocation(a.woeid, a.isPersonalized) : (twttr.API.CurrentUser.trigger("changedLocation_success"), $.cookie(this.constructor.LOGGED_OUT_TREND_LOCATION_COOKIE, a.woeid)), scribble("switch-trend-location", {
                    woeid: a.woeid,
                    input: "click",
                    origin: a.origin
                })
            }
        }), a(twttr.TrendLocations)
    })
});
provide("components/PeopleResults", function(a) {
    using("constants").as(function(b) {
        twttr.klass("twttr.components.PeopleResults").subclassOf(twttr.components.Base).mixin(twttr.mixins.userActionable).initializer(function(a) {
            a = a.replace(/(^|\b)(from\:|to\:|near\:|source\:)/g, ""), this.scribbler = twttr.Scribbler.clientEvent.spawn({
                query: a,
                context: "user_search"
            });
            if (a.indexOf(":") != -1) return;
            var b = {
                reputable: !0,
                display_location: "search-component",
                pc: !0
            },
                c = this,
                d = 4;
            twttr.API.User.search(a, b).first(d, function(b) {
                c._readyToRender ? c._renderNow(b, a) : c._result = {
                    users: b,
                    query: a
                }
            })
        }).methods({
            _renderNow: function(a, c) {
                var d = this;
                a.length() > 0 && (a = a.map(twttr.bind(this, function(a, b) {
                    a.promotedContent && twttr.API.util.PromotedContent.logImpression(a.promotedContent.impression_id), a.socialContext = a.socialContext || [];
                    var c = d.makeSocialContextHtml(a, !1);
                    return a.clone({
                        socialcontext: c
                    })
                })), d.$node.empty(), (new twttr.views.PeopleResults({
                    query: c
                })).subview("found_people", new twttr.views.UserSmallList(a)).render(d.$node, "append"), d.$find("a.view-all").click(function(a) {
                    d.scribbler.scribe({
                        component: d._getScribeComponentName(),
                        action: "view_all"
                    })
                }), twttr.helpers.ellipsify(d.$find("div.bio")), d.registerUserActionEvents(), d.hasRendered());
                var e = [],
                    f;
                a.each(function(a, c) {
                    e.push(a.id);
                    if (a.promotedContent && a.promotedContent.impression_id) {
                        var d = {
                            target_id: a.id,
                            item_type: b.constants.clientEvent.itemType.promotedUser,
                            item_token: a.promotedContent.impression_id,
                            item_position: c
                        };
                        f = f || {}, f[a.id + ""] = d
                    }
                }), d.scribbler.scribe({
                    component: d._getScribeComponentName(),
                    action: "results"
                }, {
                    item_ids: e,
                    item_count: e.length,
                    item_details: f
                })
            },
            render: function() {
                var a = this._result;
                a ? this._renderNow(a.users, a.query) : this._readyToRender = !0
            }
        }).deciderKey("onebox_user_search"), a(twttr.components.PeopleResults)
    })
});
provide("components/ProfileActions", function(a) {
    using("_", "constants", "mixins/serverRenderableObject", twttr.isT1 ? "mixins/t1/genericComboButton" : []).as(function(b, _, c, d, f) {
        twttr.klass("twttr.components.ProfileActions", function(a, b, c) {
            this.profileUser = a, this.inProfilePane = !! c, this.$node = this.$domNode(function() {
                return $("<div />")
            }), twttr.components.Base.prototype.constructor.apply(this, arguments)
        }).subclassOf(twttr.components.Base).initializer(function(a, b) {
            var c = this;
            this.similarUser = a, this.screenName = a.screenName, this.currentRecommendations = [], this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: this.profileUser.id
            }), this.whotofollowComponentName = "whotofollow_dropdown", this.ignoreScribeItemPosition = !0, twttr.recentlyViewedUsers.push(a);
            if (twttr.loggedIn) {
                var d = twttr.bind(this, function(b) {
                    this._data = {
                        user: a,
                        id: a.id,
                        screen_name: a.screenName,
                        notifications: b.notifications,
                        following: b.following,
                        followed_by: b.followedBy,
                        blocking: b.blocking,
                        follow_request_sent: a.followRequestSent,
                        want_retweets: b.wantRetweets,
                        can_dm: b.canDM && twttr.currentUser.id != a.id,
                        reported: !1
                    }, this._applyMuteMethods(b, a), this._renderActions(), this.registerEvents(), this.wokeUp()
                });
                b ? d(b) : twttr.currentUser.relationshipWith(this.profileUser, d)
            } else {
                this._data = {
                    user: a,
                    id: a.id,
                    screen_name: a.screenName
                }, this._renderActions(), this._registerFollowEvents();
                var e = twttr.abdecider.choose("signup_with_profiles_viewed-73", !0);
                if (twttr.recentlyViewedUsers.size() >= 2) {
                    var f = (new Date).getTime() - 864e5;
                    e == "two_profiles" && (twttr.recentlyViewedUsers.size() == 2 || twttr.recentlyViewedUsers.getLastPushTime(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - 3]) < f) ? twttr.recentlyViewedUsers.getLastPushTime(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - 2]) > f && (twttr.abdecider.choose("signup_with_profiles_viewed-73"), twttr.dialogs.signupModalDialogGuest(2, function(a) {
                        a.open()
                    })) : e == "three_profiles" && (twttr.recentlyViewedUsers.size() == 3 || twttr.recentlyViewedUsers.getLastPushTime(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - 4]) < f) ? twttr.recentlyViewedUsers.getLastPushTime(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - 3]) > f && (twttr.abdecider.choose("signup_with_profiles_viewed-73"), twttr.dialogs.signupModalDialogGuest(3, function(a) {
                        a.open()
                    })) : e == "four_profiles" && (twttr.recentlyViewedUsers.size() == 4 || twttr.recentlyViewedUsers.getLastPushTime(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - 5]) < f) && twttr.recentlyViewedUsers.getLastPushTime(twttr.recentlyViewedUsers.stack[twttr.recentlyViewedUsers.size() - 4]) > f && (twttr.abdecider.choose("signup_with_profiles_viewed-73"), twttr.dialogs.signupModalDialogGuest(4, function(a) {
                        a.open()
                    }))
                }
                this.wokeUp()
            }
            this.registerUserActionEvents(), this.registerUserRecommendationsActions(".user-rec-dropdown")
        }).mixin(twttr.mixins.userRecommendationsHelper, twttr.mixins.userActionable, d).methods({
            domNodeSelector: function() {
                var a = this.inProfilePane ? "div.details-pane " : "";
                return a + "div.profile-actions-container[data-user-id=" + this.profileUser.id + "] div.profile-actions-component"
            },
            _renderActions: function() {
                if (!this.preRendered || this.didInitialRenderActions) this._deregisterTipsy(), this.$node.empty(), (new twttr.views.ProfileActions(this._data)).render(this.$node, "append");
                this.didInitialRenderActions = !0, this.scribeComponentName = this.$node.closest("div.details-pane").length ? "mini_profile_actions" : "profile_actions", this.$userProfileActionController = this.$find(".user-profile-actions-button"), this.userProfileActionsDropdown = null, this._registerTipsy()
            },
            wokeUp: function() {
                using(">streamWokeUp", function() {
                    signal(">wokeUp")
                })
            },
            _applyMuteMethods: function(a, b) {
                var c = this;
                if (!twttr.decider.isAvailable("muteUsers")) return;
                this.$node.delegate(".mute-action", "click", function(a) {
                    var d = $(this);
                    d.hasClass("is-muted") ? (d.removeClass("is-muted"), d.text(_("Mute")), $(".stream-tweet[data-user-id=" + b.id + "]").parent().show(), c._removeFromMuteList(b.id)) : (d.addClass("is-muted"), d.text(_("Unmute")), $(".stream-tweet[data-user-id=" + b.id + "]").parent().hide(), c._addToMuteList(b))
                }), twttr.merge(this._data, {
                    show_mute: function() {
                        return a.following && twttr.decider.isAvailable("muteUsers")
                    },
                    is_muted: function() {
                        var a = twttr.caches.User.get("muted");
                        if (!a) return !1;
                        for (var c in a) if (b.id == c) return !0
                    }
                })
            },
            _addToMuteList: function(a) {
                var b = {
                    screenName: a.screenName,
                    userId: a.id,
                    profileImageUrl: twttr.helpers.transformProfileImageUrl(a.profileImageUrl, "mini")
                },
                    c = twttr.caches.User.get("muted") || {};
                c[a.id] = b, twttr.caches.User.set("muted", c)
            },
            _removeFromMuteList: function(a) {
                var b = twttr.caches.User.get("muted") || {};
                delete b[a], twttr.caches.User.set("muted", b)
            },
            renderSimilarUsers: function() {
                if (!twttr.decider.isAvailable("whotofollow_similarities")) return;
                var a = this;
                a.profileUser.similarUsers({
                    limit: 2,
                    success: function(b) {
                        var c = a.recsToUsers(b);
                        a.trackImpressions(c, "whotofollow_post_follow_similar_users", {
                            tracking_context: "profile",
                            profile_user: a.profileUser.id
                        });
                        if (c.length()) {
                            var d = (new twttr.views.UserRecommendationsDropdown({
                                user: a.profileUser.name
                            })).subview("recommended_followers", new twttr.views.UserSmallList(c)).render(a.$find(".profile-actions"), "after");
                            a.attachUserRecommendationHideEvents("whotofollow_dropdown_hide", d), twttr.helpers.ellipsify(a.$find(".profile-actions div.bio")), d.slideDown(300)
                        }
                    },
                    error: function(b) {
                        a.trackImpressions(null, "whotofollow_post_follow_similar_users", {
                            tracking_context: "profile",
                            profile_user: a.profileUser.id,
                            error_status: b.status
                        })
                    }
                })
            },
            registerEvents: function() {
                if (this.$node.attr("did-register-events")) return;
                this.$node.attr("did-register-events", !0), this.$node.delegate(".js-direct-message-action", "click", twttr.bind(this, function(a) {
                    a.preventDefault(), twttr.decider.isExpando() && $(".twttr-dialog-close").click(), twttr.dialogs.dmSingle({
                        user: {
                            screenName: this.profileUser.screenName,
                            user_id: this.profileUser.attributes.id,
                            name: this.profileUser.attributes.name,
                            profile_image_url: this.profileUser.attributes.profile_image_url
                        },
                        origin: "profile-actions-direct-message"
                    }).open(), this.scribbler.scribe({
                        component: this.scribeComponentName,
                        action: "dm"
                    }, {
                        item_ids: [this.profileUser.attributes.id],
                        item_details: this._itemDetails()
                    })
                })), this._registerDeviceEvents(), this._registerRetweetEvents(), this._registerFollowEvents(), this._registerUnblockEvents(), this._registerAPIListeners()
            },
            _registerTipsy: function() {
                this.$find(".mute-action").tipsy({
                    gravity: "s",
                    delayIn: 150,
                    delayOut: 500,
                    fade: !0
                }), this.$find(".device-notifications").tipsy({
                    gravity: "s",
                    html: !0,
                    title: function() {
                        var a = $(this).hasClass("notifying") ? _("Tweets from this user are sent to your mobile phone.") : _("Tweets from this user are not sent to your mobile phone.");
                        return (new twttr.views.Tipsy({
                            title: a
                        })).html()
                    }
                }), this.$find(".retweet-setting").tipsy({
                    gravity: "s",
                    html: !0,
                    title: function() {
                        var a = $(this).hasClass("including") ? _("Retweets from this user will appear in your timeline.") : _("Retweets from this user won't appear in your timeline.");
                        return (new twttr.views.Tipsy({
                            title: a
                        })).html()
                    }
                })
            },
            _deregisterTipsy: function() {
                this.$find(".device-notifications").tipsy({
                    stopThat: !0
                }), this.$find(".retweet-setting").tipsy({
                    stopThat: !0
                }), this.$find(".mute-action").tipsy({
                    stopThat: !0
                })
            },
            _registerDeviceEvents: function() {
                var a, b, c, d = this;
                this.$node.delegate(".js-device-notifications", "click", function(e) {
                    e.preventDefault();
                    if (!twttr.currentUser.deviceSetup) {
                        !twttr.currentUser.deviceVerified && (!twttr.currentUser.pushTweetsDecidered || !twttr.currentUser.pushDevice) ? (a = {
                            title: _("Setup mobile notifications"),
                            content: (new twttr.views.PhoneSetupPrompt({
                                screen_name: d._data.screen_name,
                                ok: _("Set up phone"),
                                cancel: _("Cancel")
                            })).html()
                        }, b = twttr.router.devicesPath()) : (a = {
                            title: _("Enable mobile notifications for Tweets"),
                            content: (new twttr.views.PhoneTweetsOffPrompt({
                                screen_name: d._data.screen_name,
                                ok: _("Enable Tweet notifications"),
                                cancel: _("Close")
                            })).html()
                        }, twttr.currentUser.pushDevice && twttr.currentUser.pushTweetsDecidered ? b = twttr.router.pushHelpPath() : b = twttr.router.devicesPath()), (new twttr.widget.Prompt({
                            modal: !0,
                            callback: function(a) {
                                a && (c = function() {
                                    twttr.router.routeTo(b)
                                }, twttr.API.User.bind("subscribe", c), d.profileUser.setNotificationsOn())
                            },
                            template: a
                        })).open();
                        return
                    }
                    var f = $(this),
                        g = f.hasClass("notifying") ? "setNotificationsOff" : "setNotificationsOn";
                    d.profileUser[g]()
                })
            },
            _registerRetweetEvents: function() {
                var a = this;
                this.$node.delegate(".js-retweet-setting", "click", function(b) {
                    var c = $(this);
                    b.preventDefault();
                    var d = c.hasClass("including"),
                        e = d ? "setWantRetweetsOff" : "setWantRetweetsOn";
                    a.profileUser[e]()
                })
            },
            _registerFollowEvents: function() {
                var a = this;
                this.$node.delegate(".js-follow, .profile-follow-button, .follow-request-button", "click", function(b) {
                    var c = a.profileUser.impressionId;
                    twttr.loggedIn ? a.profileUser.follow({
                        before: function() {
                            a._showTweetsFromUserOnHome()
                        },
                        success: function() {
                            a.renderSimilarUsers(), trackClient({
                                component: a.scribeComponentName,
                                action: "follow"
                            }, {
                                profile_id: a.profileUser.id,
                                item_ids: [a.profileUser.id],
                                item_details: a._itemDetails(),
                                event_info: "follow"
                            })
                        },
                        error: function(b) {
                            a._hideTweetsFromUserOnHome(), twttr.helpers.showErrorFromResponse(b, "follow")
                        },
                        impression_id: c
                    }) : twttr.dialogs.signinOrSignup({
                        follow: a.profileUser,
                        justSignup: !0
                    }).open(), b.preventDefault()
                }), this.$node.delegate(".js-unfollow, .profile-unfollow-link, .cancel-request-link", "click", function(b) {
                    if (a.$node.find(".follow-state").hasClass("just-followed") && !! b.clientX) return;
                    var c = a.profileUser.impressionId;
                    a.profileUser.unfollow({
                        before: function() {
                            a._hideTweetsFromUserOnHome()
                        },
                        success: function() {
                            trackClient({
                                component: a.scribeComponentName,
                                action: "unfollow"
                            }, {
                                profile_id: a.profileUser.id,
                                item_ids: [a.profileUser.id],
                                item_details: a._itemDetails(),
                                event_info: "unfollow"
                            })
                        },
                        error: function(b) {
                            a._showTweetsFromUserOnHome(), twttr.helpers.showErrorFromResponse(b, "unfollow")
                        },
                        impression_id: c
                    }), b.preventDefault()
                }), this.$node.delegate(".just-followed .profile-unfollow-link", "mouseleave", function(b) {
                    a.$node.find(".follow-state").removeClass("just-followed")
                })
            },
            _registerUnblockEvents: function() {
                var a = this;
                this.$node.delegate(".js-unblock", "click", function(b) {
                    a.profileUser.unblock({
                        before: twttr.bind(a, a._showStreamForBlockedUser),
                        success: function() {
                            a.scribbler.scribe({
                                component: a.scribeComponentName,
                                action: "unblock"
                            }, {
                                item_ids: [a.profileUser.id],
                                item_details: a._itemDetails(),
                                event_info: "unblock"
                            })
                        },
                        error: function(b) {
                            a._hideStreamForBlockedUser(), twttr.helpers.showErrorFromResponse(b, "unblock")
                        }
                    }), b.preventDefault()
                }), this.$node.delegate(".js-block", "click", function(b) {
                    a.profileUser.block({
                        timeout: function(a) {
                            a.retry()
                        },
                        before: twttr.bind(a, a._hideStreamForBlockedUser),
                        error: function() {
                            a._showStreamForBlockedUser(), twttr.helpers.showErrorFromResponse(b, "block")
                        }
                    })
                })
            },
            _updateDisplay: function(a, b) {
                var c = this,
                    d = !b,
                    e = !! b;
                switch (a) {
                case "follow":
                    c._data.following = d, c._data.want_retweets = d, c._data.just_followed = d;
                    break;
                case "unfollow":
                case "cancel_request":
                    c._data.following = e, c._data.follow_request_sent = e, c._data.just_followed = e;
                    break;
                case "follow_request":
                    c._data.follow_request_sent = d;
                    break;
                case "block":
                    b ? c._data.following = !! c._data.was_following : (c._data.was_following = c._data.following, c._data.following = !1), c._data.blocking = d, c._data.reported = e;
                    break;
                case "unblock":
                    c._data.following = e, c._data.blocking = e, c._data.reported = e, c._data.followed_by = !1;
                    break;
                case "report":
                    b ? c._data.following = !! c._data.was_following : (c._data.was_following = c._data.following, c._data.following = !1), c._data.blocking = d, c._data.reported = d;
                    break;
                case "subscribe":
                    c._data.notifications = d;
                    break;
                case "unsubscribe":
                    c._data.notifications = e;
                    break;
                case "does_want_retweets":
                    c._data.want_retweets = d;
                    break;
                case "doesnt_want_retweets":
                    c._data.want_retweets = e
                }
                $(["following", "blocking", "followRequestSent", "reported", "notifications", "wantRetweet"]).each(function(a, b) {
                    c._data.user.sync(b, c._data[b])
                }), c._renderActions()
            },
            _registerAPIListeners: function() {
                var a = this,
                    b = {
                        before: function(b, c) {
                            var d = c.requestParameters[0],
                                e = d.user_id || d.user_ids;
                            e === a._data.id && a._updateDisplay(b.type, !1)
                        },
                        error: function(b, c, d) {
                            var e = d.requestParameters[0],
                                f = e.user_id || e.user_ids;
                            f === a._data.id && a._updateDisplay(b.type, !0)
                        }
                    };
                twttr.API.User.bind("follow", b), twttr.API.User.bind("unfollow", b), twttr.API.User.bind("follow_request", b), twttr.API.User.bind("cancel_request", b), twttr.API.User.bind("block", b), twttr.API.User.bind("unblock", b), twttr.API.User.bind("report", b), twttr.API.User.bind("subscribe", b), twttr.API.User.bind("unsubscribe", b), twttr.API.User.bind("does_want_retweets", b), twttr.API.User.bind("doesnt_want_retweets", b)
            },
            _getHomeTimeline: function(a) {
                var b = twttr.app.getPage("home");
                b && b.send("getStreamManager", function(b) {
                    if (b) {
                        var c = b.getStream(twttr.streams.Home);
                        c && a(c.$node)
                    }
                })
            },
            _streamItemsForUserId: function(a, b) {
                return a.find('.stream .stream-item[data-item-type="user"][data-item-id="' + b + '"]').add('.stream .stream-tweet[data-user-id="' + b + '"]', a).add('.stream .stream-tweet[data-retweeter-id="' + b + '"]', a).closest(".stream-item")
            },
            _hideTweetsFromUserOnHome: function() {
                var a = this,
                    b = this.profileUser.id,
                    c = this._getHomeTimeline(function(c) {
                        a._streamItemsForUserId(c, b).hide()
                    })
            },
            _showTweetsFromUserOnHome: function() {
                var a = this,
                    b = this.profileUser.id;
                this._getHomeTimeline(function(c) {
                    a._streamItemsForUserId(c, b).show()
                })
            },
            _hideStreamForBlockedUser: function() {
                this._streamItemsForUserId($(document.body), this.profileUser.id).hide()
            },
            _showStreamForBlockedUser: function() {
                this._streamItemsForUserId($(document.body), this.profileUser.id).show()
            },
            _getActionsDropdown: function(a) {
                var b = this,
                    c = [];
                return c.push({
                    label: _("Mention {{screen_name}}", this._data),
                    icon: "mention",
                    handlers: {
                        click: function() {
                            (new twttr.widget.TweetDialog({
                                template: {
                                    title: "Mention " + b.profileUser.screenName
                                },
                                draggable: !0,
                                defaultContent: "@" + b.profileUser.screenName + " ",
                                origin: "profile-actions-dropdown-metion"
                            })).open().focus()
                        }
                    }
                }), this._data.blocking ? c.push({
                    label: _("Unblock {{screen_name}}", this._data),
                    icon: "block",
                    handlers: {
                        click: function() {
                            b.profileUser.unblock({
                                before: function() {
                                    $('.stream .stream-tweet[data-user-id="' + b.profileUser.id + '"]').closest(".stream-item").show()
                                }
                            })
                        }
                    }
                }) : c.push({
                    label: _("Block {{screen_name}}", this._data),
                    icon: "block",
                    handlers: {
                        click: function() {
                            b.profileUser.block({
                                timeout: function(a) {
                                    a.retry()
                                },
                                before: twttr.bind(b, b._hideStreamForBlockedUser),
                                error: function() {
                                    b._showStreamForBlockedUser(), twttr.helpers.showErrorFromResponse(e, "block")
                                }
                            })
                        }
                    }
                }), this._data.blocking || c.push({
                    label: _('Report <span class="truncate">{{screen_name}}</span> for spam', this._data),
                    icon: "spam",
                    handlers: {
                        click: function() {
                            b.profileUser.report({
                                before: function() {
                                    $('.stream .stream-tweet[data-user-id="' + b.profileUser.id + '"]').closest(".stream-item").hide()
                                }
                            })
                        }
                    }
                }), new twttr.control.Dropdown(a, {
                    items: c,
                    direction: "right"
                })
            },
            _itemDetails: function() {
                var a = {},
                    c = this.profileUser.impressionId;
                return a["" + this.profileUser.id] = {
                    item_token: c,
                    target_id: this.profileUser.id,
                    item_type: b.constants.clientEvent.itemType[c ? "promotedUser" : "user"]
                }, a
            }
        }), twttr.control.Dropdown.createCache("lists"), f && twttr.components.ProfileActions.mixin(f), a(twttr.components.ProfileActions)
    })
});
provide("components/RecentTweets", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.RecentTweets").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable, twttr.mixins.i18nTweet).initializer(function(a) {
            var b = this,
                c = twttr.$win.height() < 600 ? 2 : 3;
            a.timeline().first(c, function(a) {
                a.length() > 0 && ((new twttr.views.RecentTweets(a)).render(b.$node, "append"), b.registerTweetActionEvents(), b.updateI18nDisplay(), b.hasRendered())
            })
        }).deciderKey("recent_tweets_component"), a(twttr.components.RecentTweets)
    })
});
provide("components/RecentlyFollowed", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.RecentlyFollowed").subclassOf(twttr.components.Base).mixin(twttr.mixins.userActionable, twttr.mixins.userRecommendationsHelper).initializer(function(a) {
            function b(a, b) {
                var c = function(a) {
                        return a.screenName == b.screenName
                    };
                d._userCollection && !d._userCollection.find(c) && (d._userCollection.unshift(b), d.rememberHeight(), d.deferredCreateView())
            }
            function c(a, b) {
                var c = function(a) {
                        return a.screenName != b.screenName
                    };
                d._userCollection && (d._userCollection = d._userCollection.filter(c), d.rememberHeight(), d.deferredCreateView())
            }
            if (!twttr.currentUser) return;
            this.inWelcomeFlow = a, this._maxFollowersCount = 10, this._maxSimilarsCount = 2;
            var d = this;
            twttr.currentUser.friends({
                count: this._maxFollowersCount,
                success: function(b) {
                    d._userCollection = b, (a || !b.isEmpty()) && d.createView(), d.registerUserActionEvents(), d.registerUserRecommendationsActions()
                }
            }), this.$node.delegate(".followed li a.dynsims", "click", function(a) {
                var b = $(this);
                if (b.parent().hasClass("active")) return;
                var c = b.attr("data-user-id"),
                    e = d._userCollection.find(function(a, b) {
                        if (a.id.toString() == c) return a
                    });
                return e && twttr.decider.isAvailable("whotofollow_similarities") && (d.rememberHeight(), d.showSimilarUsers(e)), a.preventDefault(), a.stopPropagation(), !1
            }), twttr.API.User.bind("follow.RecentlyFollowedComponent", b), twttr.API.User.bind("unfollow.RecentlyFollowedComponent", c), twttr.app.bind("fakeFollow.RecentlyFollowedComponent", b), twttr.app.bind("fakeUnfollow.RecentlyFollowedComponent", c)
        }).destructor(function() {
            twttr.app.unbind(".RecentlyFollowedComponent"), twttr.API.User.unbind(".RecentlyFollowedComponent")
        }).methods({
            rememberHeight: function() {
                var a = this.$find(".recently-followed-users");
                a.css("height", a.height() + "px")
            },
            autoHeight: function() {
                this.$find(".recently-followed-users").css("height", "")
            },
            deferredCreateView: function() {
                this._createViewTimeout && (clearTimeout(this._createViewTimeout), this._createViewTimeout = null);
                var a = this;
                this._createViewTimeout = setTimeout(function() {
                    a.createView(), a._createViewTimeout = null
                }, 1)
            },
            createView: function() {
                var a = this._userCollection.first();
                (new twttr.views.RecentlyFollowed({
                    user: new twttr.views.BaseStats(twttr.currentUser),
                    latest_friends: new twttr.views.UserThumbList(this._userCollection.slice(0, this._maxFollowersCount)),
                    latest_friend: a ? a.screenName : !1,
                    welcome_flow: !! this.inWelcomeFlow,
                    screen_name: twttr.currentUser.screenName,
                    following_count: twttr.currentUser.friendsCount,
                    following_10: twttr.currentUser.friendsCount >= 10
                })).render(this.$node, "html");
                var b = this.$find(".followed ul");
                if (a && twttr.decider.isAvailable("whotofollow_similarities")) {
                    b.find("li a").addClass("dynsims").removeClass("user-profile-link").attr("href", "#");
                    var c = this.$find(".recently-followed-users .suggestions");
                    this.showSimilarUsers(a)
                } else this.autoHeight();
                if (this.inWelcomeFlow) {
                    var d = b.find("li").length + 1;
                    for (var e = d; e <= 10; e++) b.append('<li><span class="welcome-placeholder">' + e + "</span></li>")
                }
                this.hasRendered()
            },
            showSimilarUsers: function(a) {
                var b = this.$find(".followed ul"),
                    c = this.$find(".suggestions").css({
                        opacity: 0
                    });
                b.find("li").removeClass("active"), a.similarUsers({
                    limit: this._maxSimilarsCount,
                    complete: twttr.bind(this, function() {
                        this.autoHeight()
                    }),
                    success: twttr.bind(this, function(d) {
                        this.similarUser = a, this.screenName = a.screenName;
                        var e = this.recsToUsers(d).slice(0, this._maxSimilarsCount);
                        "florian" == a.screenName && (e = new twttr.API.util.BaseCollection), this.trackImpressions(e, "recently_followed_view_similarities", {
                            to_user_id: a.id,
                            tracking_context: "recently_followed",
                            similar_to_user: a.id
                        }), e.length() ? ((new twttr.views.UserDetailedList(e)).render(c.find("ul"), "html"), b.find("li a[data-user-id=" + a.id + "]").parent("li").addClass("active"), c.find("p span").text(a.name), c.animate({
                            opacity: 1
                        }, 200, function() {
                            $(this).show()
                        })) : c.hide()
                    }),
                    error: twttr.bind(this, function(b) {
                        this.trackImpressions(null, "recently_followed_view_similarities", {
                            to_user_id: a.id,
                            tracking_context: "recently_followed",
                            similar_to_user: a.id,
                            error_status: b.status
                        })
                    })
                })
            }
        }), a(twttr.components.RecentlyFollowed)
    })
});
provide("components/RecentlyViewed", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.RecentlyViewed").subclassOf(twttr.components.Base).mixin(twttr.mixins.userActionable).initializer(function() {
            this.createView(), this.registerEvents()
        }).methods({
            registerEvents: function() {
                var a = this;
                this.$node.delegate("h2 .clear-all", "click", function(b) {
                    b.preventDefault(), twttr.recentlyViewedUsers.clear(), a.$node.slideUp("fast", function() {
                        a.$node.empty().show()
                    })
                }), twttr.recentlyViewedUsers.bind("push.RecentlyViewedComponent", function(b, c) {
                    a.$find('li[data-user-id="' + c + '"]').size() || a.createView()
                }), a.registerUserActionEvents(), a.$node.delegate(".user-profile-link, .follow-action", "click", function() {
                    var a = $(this),
                        b = a.hasClass("user-profile-link") ? "profile_click" : "follow";
                    trackClient({
                        section: "dashboard",
                        component: "recently_viewed",
                        action: b
                    }, {
                        item_ids: [parseInt(a.attr("data-user-id"))],
                        item_count: 1
                    })
                })
            },
            createView: function() {
                var a = this;
                twttr.recentlyViewedUsers.findAll({
                    success: function(b) {
                        b = b.filter(function(a) {
                            return !a.following
                        }).slice(0, 6), b.length() ? (trackClient({
                            section: "dashboard",
                            component: "recently_viewed",
                            action: "results"
                        }, {
                            item_ids: b.map(function(a) {
                                return a.id
                            }),
                            item_count: b.length()
                        }), (new twttr.views.RecentlyViewed(b)).render(a.$node, "html"), twttr.helpers.ellipsify(a.$find("div.bio")), a.hasRendered()) : a.trigger("notRendered", "noRecentlyViewedUsers")
                    }
                })
            }
        }), a(twttr.components.RecentlyViewed)
    })
});
provide("components/InviteContacts", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.InviteContacts").subclassOf(twttr.components.Base).initializer(function(a, b) {
            b = b || {}, this.scribbler = b.scribbler || new twttr.Scribbler, this.clientEventComponent = b.clientEventComponent || "invite_contacts";
            var c;
            for (var d = 0; d < a.contacts.length; ++d) c = a.contacts[d], c.index = d, c.truncated_email = twttr.helpers.truncate(c.email), c.truncated_name = twttr.helpers.truncate(c.name);
            (new twttr.views.InviteContacts(a)).render(this.$node, "append"), twttr.helpers.handlePopupLinks(this.$node);
            var e = this.$node.find("#select-all-contacts"),
                f = this.$node.find(".invite-contacts-button"),
                g = this.$node.find(".contacts INPUT[type=checkbox]");
            e.change(function(a) {
                return g.attr("checked", this.checked), this.checked ? f.removeClass("disabled") : f.addClass("disabled"), !0
            }), g.attr("checked", !0), e.attr("checked", !0), f.removeClass("disabled"), g.change(function(a) {
                var b = !0;
                return g.each(function() {
                    b = b && this.checked
                }), e.attr("checked", b), this.checked ? f.removeClass("disabled") : g.filter(":checked").length == 0 && f.addClass("disabled"), !0
            });
            var i = b.onSuccess || $.noop,
                j = b.onSubmit || $.noop,
                k = b.showError ||
            function(a) {
                twttr.showError(a)
            }, l = this;
            f.click(function(a) {
                if ($(this).hasClass("disabled")) return;
                j();
                var b = g.filter(":checked").map(function() {
                    var a = $(this),
                        b = a.siblings(".contact-item-name").html();
                    return b == a.val() ? a.val() : '"' + b + '" <' + a.val() + ">"
                }).get();
                f.addClass("disabled");
                var c = {
                    source: "contact_import",
                    success: twttr.bind(this, function(a) {
                        var b = a.invited && a.invited.length;
                        twttr.showMessage(_("We let {{count}} of your contacts know about Twitter.", {
                            count: b
                        })), l.scribbler.scribe({
                            component: l.clientEventComponent,
                            action: "invited"
                        }, {
                            event_value: b,
                            item_count: b
                        }), l.scribbler.scribe({
                            component: l.clientEventComponent,
                            action: "invitable"
                        }, {
                            item_count: g.length
                        }), i()
                    }),
                    error: function(a) {
                        f.removeClass("disabled");
                        var c = twttr.API.util.RemoteRequest.apiErrorCodeFromResponse(a) || a.status;
                        l.scribbler.scribe({
                            component: l.clientEventComponent,
                            action: "error"
                        }, {
                            status_code: c,
                            item_count: b.length
                        });
                        switch (c) {
                        case 47:
                            k(_("We couldn't send invitations to any of those addresses."));
                            break;
                        case 37:
                            k(_("There was an error emailing your contacts. Please try again later."));
                            break;
                        default:
                            twttr.showMessage(_("We let your contacts know about Twitter.")), i()
                        }
                    }
                };
                twttr.API.AddressBook.sendInvitesByEmail(b, c)
            }), this.hasRendered()
        }), a(twttr.components.InviteContacts)
    })
});
provide("components/InviteFriends", function(a) {
    using("_", "constants", "mixins/inviteFriends").as(function(b, _) {
        twttr.klass("twttr.components.InviteFriends").subclassOf(twttr.components.Base).mixin(twttr.mixins.inviteFriends).initializer(function(a) {
            (new twttr.views.InviteFriends).render(this.$node, "append"), twttr.helpers.handlePopupLinks(this.$node), this.addFormEvents(a), this.hasRendered()
        }), a(twttr.components.InviteFriends)
    })
});
provide("components/Retweeters", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.Retweeters").subclassOf(twttr.components.Base).initializer(function(a, b, c) {
            var d = this;
            a.retweeters({
                count: b || 15,
                success: function(b) {
                    if (b.length()) {
                        var c = a.retweetCount,
                            e = c > 50 ? "50+" : c;
                        (new twttr.views.TweetStats({
                            retweeters: b.array,
                            retweeters_count: e,
                            retweeters_length_one: c == 1,
                            retweeters_length_other: c != 1
                        })).render(d.$node, "append");
                        var f = b.map(function(a) {
                            return new twttr.views.BaseUser(a)
                        });
                        (new twttr.views.FacePile({
                            users: f.array
                        })).render(d.$find(".js-face-pile-container"), "append"), d.$find(".js-user-tipsy").tipsy({
                            gravity: "s"
                        }), d.hasRendered()
                    }
                }
            })
        }).deciderKey("retweeters_component"), a(twttr.components.Retweeters)
    })
});
provide("components/TweetActivity", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.TweetActivity").subclassOf(twttr.components.Base).initializer(function(a) {
            this.tweet = a, this.tweet.activities && this.loadUsersAndRenderActivity()
        }).methods({
            loadUsersAndRenderActivity: function() {
                var a = this,
                    b = 33,
                    c = [],
                    d = {
                        favoriters: {},
                        retweeters: {},
                        repliers: {}
                    },
                    e = {
                        favoriters: [],
                        retweeters: [],
                        repliers: []
                    };
                for (var f in e) {
                    var g = this.tweet.activities[f];
                    for (var i = 0; i < g.length; i++) c = c.concat(g.slice(0, b)), d[f][g[i]] = !0
                }
                twttr.API.User.findAll(twttr.util.arrayUniq(c), {
                    stringifiedIds: !0,
                    success: function(b) {
                        b.each(function(a) {
                            for (var b in e) d[b][a.id] && e[b].push(a)
                        }), (new twttr.views.TweetActivity({
                            counts: {
                                favoriters_count: a.tweet.activities.favoriters_count,
                                retweeters_count: a.tweet.activities.retweeters_count,
                                repliers_count: a.tweet.activities.repliers_count
                            },
                            activities: e
                        })).render(a.$node, "append")
                    }
                })
            }
        }).click({
            ".tweet-activity-view-all": function(a, b) {
                b.closest(".activity-list-container").find("li.hidden").show(), b.closest(".tweet-activity-count-container").remove(), a.preventDefault()
            }
        }).deciderKey(function() {
            return twttr.decider.isActivityEnabled() && twttr.decider.isAvailable("activity_social_context")
        }), a(twttr.components.TweetActivity)
    })
});
provide("components/ConversationThread", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.ConversationThread").subclassOf(twttr.components.Base).initializer(function(a) {
            var b = this;
            (new twttr.views.ConversationThread(a)).render(this.$node, "append"), a.bind("newMessage", function(a, c) {
                (new twttr.views.Message(c)).render(b.$find(".messages-pane-header"), "after")
            }), a.bind("deletedMessage", function(a, c) {
                b.$find(".js-message[data-message-id=" + c + "]").remove()
            }), this.hasRendered()
        }), a(twttr.components.ConversationThread)
    })
});
provide("components/InReplyTo", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.InReplyTo").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable, twttr.mixins.i18nTweet).initializer(function(a) {
            var b = this;
            a.isReply && a.inReplyTo(function(a) {
                (new twttr.views.InReplyTo(a)).render(b.$node, "append"), b.registerTweetActionEvents(), b.updateI18nDisplay(), b.hasRendered()
            })
        }).deciderKey("in_reply_to_component").methods({
            noSpacer: !0
        }), a(twttr.components.InReplyTo)
    })
});
provide("components/InlineReplyBox", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.InlineReplyBox").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable).mixin(twttr.mixins.streamablePageWithInlineMedia).mixin(twttr.mixins.i18nTweet).initializer(function(a, b, c, d, e) {
            if (!twttr.decider.hasInlineReplies()) return null;
            this.registerTweetActionEvents(), b.addClass("with-inline-reply");
            var f = this.tweetActionReply(a, "expand", !0);
            f = twttr.dialogs.reply(f, !0);
            var g = (new twttr.views.InlineReplyBox({
                profile_image_url: twttr.currentUser.profileImageUrl,
                profile_image_size: e ? "48" : "32"
            })).$html();
            this.tweetbox = new twttr.TweetBox(g.prependTo(b), twttr.merge(f, {
                condensed: !0,
                condensedContent: _("Reply to @{{username}}", {
                    username: f.defaultContent.slice(1)
                }),
                width: d,
                statusAction: "reply",
                whenGeoPopupOpens: function() {
                    b.parent().scrollTop(0).css("overflow", "visible")
                }
            }));
            var i = this;
            this.tweetbox.bind("open", function() {
                g.addClass("shifted").find(".inline-reply-user-image").show(), e && i.tweetbox.$find("textarea").width(e)
            }), this.tweetbox.bind("close", function() {
                g.removeClass("shifted").find(".inline-reply-user-image").hide(), e && i.tweetbox.$find("textarea").width(d)
            }), this.tweetbox.bind("tweetSuccess", function(a, b) {
                var d = c.show().find(".tweets-wrapper");
                d.length || (d = c), (new twttr.views.SimpleTweet(b)).render(d, "prepend"), i.addInlineMediaIcons(d), i.updateI18nDisplay()
            }), this.tweetbox.bind("sendingTweet", function(c, d) {
                i.trigger("reply.tweet", [a, b, "reply"])
            })
        }).methods({
            focus: function() {
                this.tweetbox.focus()
            }
        }), a(twttr.components.InReplyTo)
    })
});
provide("components/Conversation", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.Conversation").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable, twttr.mixins.usesRelatedResults, twttr.mixins.i18nTweet, twttr.mixins.streamablePageWithInlineMedia).initializer(function(a, b, c) {
            var d = this;
            d._tweetId = a.id;
            var e = function(a) {
                    if (a.length > 1) {
                        var b = $("div.inner-pane").filter("div.active").find("div.pane-components"),
                            c = b.find("div.conversation-last-ancestor-tweet");
                        c.length > 0 && b.animate({
                            scrollTop: c.position().top - 50
                        }, 800)
                    }
                },
                f = function(b) {
                    var f = twttr.isT1 ? new twttr.views.Ancestors(b) : new twttr.views.Conversation(d.conversationGroup, a, b);
                    f.render(d.$node, "append"), d.registerTweetActionEvents(), d.updateI18nDisplay(), twttr.isT1 && d.addInlineMediaIcons(d.$node), d.hasRendered(), twttr.isT1 && !b.length && d.$node.hide(), c(d), twttr.decider.isExpando() || e(b)
                },
                g = function(a) {
                    twttr.API.User.find(a, function(a) {
                        twttr.helpers.canViewUser(a) || ((new twttr.views.Ancestors({
                            protected_ancestor: {
                                user: new twttr.views.BaseUser(a)
                            }
                        })).render(d.$node, "append"), c(d))
                    })
                };
            d.withRelatedResults(a, b, {
                success: function(b) {
                    d.resultGroups = b, d.conversationGroup = d.conversationGroupFor(b);
                    var c = d.conversationGroup && d.tweetsForConversationRole(d.conversationGroup, "Ancestor");
                    c && c.length ? f(c) : a.inReplyTo({
                        success: function(a) {
                            f(a ? [a] : [])
                        },
                        error: function() {
                            twttr.isT1 && a.inReplyToUserId ? g(a.inReplyToUserId) : f([])
                        }
                    })
                },
                error: function() {
                    f([])
                }
            })
        }).methods({
            onTweetActionDelete: function(a) {
                a === this._tweetId && this.trigger("deleted")
            },
            noSpacer: !0
        }), a(twttr.components.Conversation)
    })
});
provide("components/Replies", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.Replies").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable, twttr.mixins.usesRelatedResults, twttr.mixins.i18nTweet, twttr.mixins.profilePopupActionable, twttr.mixins.streamablePageWithInlineMedia).initializer(function(a, b, c, d) {
            if (!c) return;
            var e = this,
                f = function(a, b, c) {
                    b = e.filterRetweets(b);
                    if (twttr.decider.isExpando()) {
                        var f = a.length;
                        f > 5 ? a = a.slice(0, 5) : b.length + f > 5 && (b = b.slice(0, 5 - f))
                    }
                    a.length + b.length > 0 ? ((new twttr.views.Replies(c, a, b)).render(e.$node, "append"), e.registerTweetActionEvents(), e.updateI18nDisplay(), e.hasRendered(), twttr.isT1 && e.addInlineMediaIcons(e.$node), d && d.apply(e)) : twttr.decider.hasInlineReplies() && ((new twttr.views.Replies(c, a, b)).render(e.$node, "append"), e.$node.hide(), e.registerTweetActionEvents(), d && d.apply(e))
                },
                g = [],
                i = [],
                j = e.conversationGroupFor(c);
            j && (g = e.tweetsForConversationRole(j, "Descendant"), i = e.tweetsForConversationRole(j, "Fork")), f(g, i, j)
        }).methods({
            filterRetweets: function(a) {
                var b = {};
                for (var c = a.length - 1; c >= 0; c--) {
                    var d = a[c].id;
                    a[c].attributes.retweeting_status ? b[d] === undefined && (b[d] = !1) : b[d] = !0
                }
                for (var c = a.length - 1; c >= 0; c--) {
                    var d = a[c].id;
                    a[c].attributes.retweeting_status && b[d] === !0 ? a.splice(c, 1) : a[c].attributes.retweeting_status && b[d] === !1 && (b[d] = !0)
                }
                return a
            }
        }).deciderKey("conversations"), a(twttr.components.Replies)
    })
});
provide("components/MoreLists", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.MoreLists").subclassOf(twttr.components.Base).initializer(function(a) {
            this.render(a), this._registerEvents(a)
        }).deciderKey("more_lists_component").methods({
            render: function(a) {
                var b = this;
                a.user.lists(function(c) {
                    c.length() && ((new twttr.views.MoreLists({
                        user: new twttr.views.BaseUser(a.user),
                        lists: new twttr.views.ListOfLists(c),
                        create_list_button: {
                            link_only: !0
                        }
                    })).render(b.$node), b.hasRendered())
                })
            },
            _registerEvents: function(a) {
                var b = this;
                this._registerEvent(twttr.API.List, "update", function(c, d) {
                    d.id === a.id && b.render(d)
                })
            }
        }), a(twttr.components.MoreLists)
    })
});
provide("components/MachineTranslationBackend", function(a) {
    using("_", "util").as(function(b, _) {
        twttr.klass("twttr.components.MachineTranslationBackend", function() {}).statics({
            getBackend: function() {
                return new twttr.components.BingMTBackend
            }
        }).methods({
            translationTextEqual: function(a, b) {
                return a === b ? !0 : (global_spaces = RegExp(twttr.txt.regexen.spaces.toString().slice(1, -1), "g"), a.replace(/[MHL]T\d*KEN/g, "").replace(global_spaces, "").toLowerCase() === b.replace(/[MHL]T\d*KEN/g, "").replace(global_spaces, "").toLowerCase() ? !0 : !1)
            },
            shouldShowTranslation: function(a, b, c, d) {
                return c == d ? !1 : this.translationTextEqual(a, b) ? !1 : !0
            }
        }), twttr.klass("twttr.components.BingMTBackend", function() {}).subclassOf(twttr.components.MachineTranslationBackend).methods({
            attribution: function() {
                return _('Translation powered by <a href="http://bing.com/translator" target="_new">Bing Translator</a>')
            },
            translate: function(a, b, c) {
                var d = this;
                $.ajax({
                    url: window.location.protocol + "//api.microsofttranslator.com/v2/ajax.svc/GetTranslations?oncomplete=?",
                    dataType: "jsonp",
                    data: {
                        appId: "2ADD5BC2C5139FA743F612F9CE8ECD783FCB899F",
                        text: a,
                        to: b,
                        maxTranslations: 1
                    },
                    success: twttr.bind(this, function(b) {
                        if (b && b.Translations) {
                            var e = b.Translations[0].TranslatedText,
                                f = b.From;
                            this.shouldShowTranslation(a, e, f, d.destLocale) && c(e, f)
                        }
                    })
                })
            }
        }), twttr.klass("twttr.components.MachineTranslatedTweet").subclassOf(twttr.components.Base).initializer(function(a) {
            this._initTranslation(a, twttr.pageLocale || $("html").attr("lang") || "en")
        }).deciderKey("machine_translated_tweets").methods({
            _initTranslation: function(a, b) {
                a.user["protected"] || (this.destLocale = b, this.fetchTranslation(a, this.destLocale))
            },
            _preProcessTweetText: function(a) {
                var b = a,
                    c = function(a) {
                        return a && a.replace && a.replace(/^\s+|\s+$/g, "")
                    };
                this._mentions = twttr.txt.extractMentions(a);
                for (i in this._mentions) this._mentions[i] = c(this._mentions[i]), b = b.replace(this._mentions[i], "<M" + i + "></M" + i + ">");
                this._hashtags = twttr.txt.extractHashtags(a);
                for (i in this._hashtags) this._hashtags[i] = c(this._hashtags[i]), b = b.replace(this._hashtags[i], "<H" + i + "></H" + i + ">");
                this._links = twttr.txt.extractUrls(a);
                for (i in this._links) this._links[i] = this._links[i], b = b.replace(this._links[i], "<L" + i + "></L" + i + ">");
                return b
            },
            _postProcessTweetText: function(a) {
                var c = a;
                if (this._mentions && this._mentions.length > 0) for (var d = 0; d < this._mentions.length; d++) c = c.replace(new RegExp("<M" + d + ">\\s?</M" + d + ">", "i"), this._mentions[d]);
                if (this._hashtags && this._hashtags.length > 0) for (var d = 0; d < this._hashtags.length; d++) c = c.replace(new RegExp("<H" + d + ">\\s?</H" + d + ">", "i"), this._hashtags[d]);
                if (this._links && this._links.length > 0) for (var d = 0; d < this._links.length; d++) c = c.replace(new RegExp("<L" + d + ">\\s?</L" + d + ">", "i"), this._links[d]);
                return b.util.linkify(c)
            },
            fetchTranslation: function(a, b) {
                var c = this;
                this.sourceText = this._preProcessTweetText(a.text);
                var d = twttr.components.MachineTranslationBackend.getBackend();
                d.translate(this.sourceText, b, function(b, e) {
                    (new twttr.views.MachineTranslatedTweet({
                        translated_text: c._postProcessTweetText(b),
                        attribution: d.attribution()
                    })).render(c.$node, "append"), eventTerms = {
                        client: "web",
                        page: "home",
                        section: "timeline",
                        component: "tweet",
                        action: "translate"
                    }, eventDetails = {
                        item_ids: [a.id],
                        i18n_details: {
                            source_lang: e,
                            source_length: c.sourceText.length,
                            translation_lang: c.destLocale,
                            translation_length: b.length
                        }
                    }, trackClient(eventTerms, eventDetails), c.hasRendered()
                })
            }
        }), a(twttr.components.MachineTranslationBackend)
    })
});
provide("components/NewestListMembers", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.NewestListMembers").subclassOf(twttr.components.Base).mixin(twttr.mixins.userActionable).initializer(function(a) {
            this.render(a), this._registerEvents(a)
        }).deciderKey("newest_list_members_component").methods({
            render: function(a) {
                var b = this;
                a.members().first(4, function(c) {
                    (new twttr.views.NewestListMembers({
                        list: a.attributes
                    })).render(b.$node), c.length() && (c.each(function(a) {
                        var c = new twttr.views.UserSmallListItem(a);
                        c.is_withheld() || c.render(b.$find(".js-recent-members"), "append")
                    }), twttr.helpers.ellipsify(b.$find("div.bio")), b.hasRendered(), b.registerUserActionEvents())
                })
            },
            _registerEvents: function(a) {
                var b = this;
                this._registerEvent(twttr.API.List, "add remove", function(c, d) {
                    d.id === a.id && b.render(d)
                })
            }
        }), a(twttr.components.NewestListMembers)
    })
});
provide("components/StorkPip", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.StorkPip").subclassOf(twttr.components.Base).initializer(function(a, b) {
            var c = this;
            this._opts = b, this._state = "icon", this._$streamItem = a, this._scribbler = twttr.Scribbler.clientEvent.spawnWithTerms({
                component: "stork",
                element: b.id
            }), this.constructor.allPips[b.id] || (this.constructor.allPips[b.id] = []), this.constructor.allPips[b.id].push(this), (new twttr.views.StorkPipIcon({
                icon: b.icon
            })).render(this.$node), this.$node.hide().prependTo(a).fadeIn("fast"), b.iconHighlight && this.highlight(b.iconHighlight), this._scribbler.scribe({
                action: "impression"
            });
            var d = a.closest(".js-stream-items");
            if (b.explainOn) {
                twttr.is.string(b.explainOn) && (b.explainOn = {
                    event: b.explainOn
                });
                var e = b.explainOn.selector ? d.find(b.explainOn.selector) : d;
                this._registerEvent(e, b.explainOn.event, function(a) {
                    var d = $(a.target).closest(".js-stream-item");
                    if (d.length && (!b.matcher || b.matcher(d))) {
                        if (d[0] != c._$streamItem[0] && d.find(".js-pip").length) return;
                        if (c._state == "icon") c._scribbler.scribe({
                            action: "show"
                        });
                        else {
                            if (c._state != "prompt") return;
                            c._scribbler.scribe({
                                action: "success"
                            })
                        }
                        c.showState("explain", d)
                    }
                })
            }
            if (b.dismissOn) {
                twttr.is.string(b.dismissOn) && (b.dismissOn = {
                    event: b.dismissOn
                });
                var e = b.dismissOn.selector ? d.find(b.dismissOn.selector) : d;
                this._registerEvent(e, b.dismissOn.event, function(a) {
                    var d = $(a.target).closest(".js-stream-item");
                    d.length && (!b.matcher || b.matcher(d)) && (d[0] == c._$streamItem[0] && c._state == "explain" && c._scribbler.scribe({
                        action: "complete"
                    }), c.dismissAll())
                })
            }
        }).click({
            ".js-pip": function() {
                this._state == "icon" ? (this.showState("prompt"), this._scribbler.scribe({
                    action: "open"
                })) : this._state == "explain" && (this.dismissAll(), this._scribbler.scribe({
                    action: "dismiss"
                }))
            },
            ".js-dismiss": function() {
                this.dismissAll(), this._scribbler.scribe({
                    action: "dismiss"
                })
            }
        }).statics({
            allPips: {},
            openPip: null
        }).methods({
            showState: function(a, b) {
                function c(a) {
                    var b = new twttr.views.StorkPipText({
                        contents: a,
                        dismiss: !1
                    });
                    b.render(e.$node, "append"), e.$node.fadeIn("fast")
                }
                if (a == "prompt" && !this._opts.promptHtml) return this.showState("explain", b);
                b = b || this._$streamItem;
                if (this._state == a) return;
                this._state == "icon" && (a == "prompt" || a == "explain") && twttr.stork.incrValue(this._opts.counter);
                if (a != "icon") {
                    var d = this.constructor.openPip;
                    d && d != this && (d._state == "prompt" ? d.showState("icon") : d._state == "explain" && d.dismiss()), this.constructor.openPip = this
                }
                a == "explain" && this.dismissOthers(), this._$streamItem[0] != b[0] && this.unhighlight(), this._state = a, this._$streamItem = b;
                var e = this;
                this.$find(".js-pip").prependTo(this.$node.parent()).fadeOut("fast", function() {
                    $(this).remove();
                    if (a == "icon") {
                        var b = (new twttr.views.StorkPipIcon({
                            icon: e._opts.icon
                        })).render(e.$node);
                        e.$node.fadeIn("fast")
                    } else {
                        var d = e._opts[a + "Html"],
                            f = e._opts[a + "Highlight"];
                        twttr.is.fn(d) ? d(e._$streamItem, c) : c(d), f && f != "remove" ? e.highlight(f) : e.unhighlight(f == "remove")
                    }
                }), this.$node.hide().prependTo(b)
            },
            highlight: function(a) {
                this._$streamItem.find(a).is(".stork-highlighted") || (this.unhighlight(), this._$streamItem.find(a).each(function() {
                    var a = $(this),
                        b = $("<span>").addClass("stork-highlight-background"),
                        c = $("<span>").addClass("stork-highlight-container").css({
                            width: a.outerWidth(),
                            height: a.outerHeight()
                        });
                    a.wrap(c).before(b).addClass("stork-highlighted"), b.fadeIn()
                }))
            },
            unhighlight: function(a) {
                this._$streamItem.find(".stork-highlighted").each(function() {
                    var b = $(this),
                        c = b.parent().find(".stork-highlight-background"),
                        d = function() {
                            c.remove(), b.unwrap()
                        };
                    b.removeClass("stork-highlighted"), a ? d() : c.fadeOut(d)
                })
            },
            dismissOthers: function() {
                for (var a = 0; a < this.constructor.allPips[this._opts.id].length; ++a) {
                    var b = this.constructor.allPips[this._opts.id][a];
                    b != this && b.dismiss()
                }
                this.constructor.allPips[this._opts.id] = [this]
            },
            dismissAll: function() {
                var a = this.$node.closest(".js-stream-items");
                for (var b = 0; b < this.constructor.allPips[this._opts.id].length; ++b) {
                    var c = this.constructor.allPips[this._opts.id][b];
                    c.dismiss()
                }
                this.constructor.allPips[this._opts.id] = [], twttr.stork.storkifyTweets(a)
            },
            dismiss: function() {
                var a = this;
                this._$streamItem && this.unhighlight(), this.$node.fadeOut(function() {
                    a.destroy()
                }).find(".js-pip").removeClass("js-pip")
            }
        }), a(twttr.components.StorkPip)
    })
});
provide("components/StreamEnd", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.StreamEnd").subclassOf(twttr.components.Base).initializer(function(a, b) {
            (new twttr.views.StreamEnd({
                show_stream_end_bird: b === undefined ? !0 : b,
                end_text: a
            })).render(this.$node, "append")
        }), a(twttr.components.StreamEnd)
    })
});
provide("components/StreamEndInviteFriends", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.StreamEndInviteFriends").subclassOf(twttr.components.StreamEnd).initializer(function(a, b) {
            var c = new twttr.components.InviteFriends;
            c.$node.addClass("stream-item"), this.$node.append(c.$node), this._superInitializer.apply(this, arguments)
        }), a(twttr.components.StreamEndInviteFriends)
    })
});
provide("components/StreamWhaleEnd", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.StreamWhaleEnd").subclassOf(twttr.components.Base).initializer(function(a) {
            var b = this;
            (new twttr.views.StreamWhaleEnd({
                stream_fail_header: a
            })).render(this.$node, "append"), this.$node.delegate(".try-again-after-whale", "click", function(a) {
                a.preventDefault(), b.trigger("tryAgain")
            })
        }), a(twttr.components.StreamWhaleEnd)
    })
});
provide("components/ContactImportErrorEnd", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.ContactImportErrorEnd").subclassOf(twttr.components.Base).initializer(function(a) {
            var b = this;
            (new twttr.views.StreamWhaleEnd({
                stream_fail_header: a
            })).render(this.$node, "append"), this.$node.delegate(".try-again-after-whale", "click", function(a) {
                b.trigger("tryImportAgain")
            })
        }), a(twttr.components.ContactImportErrorEnd)
    })
});
provide("components/EmptyHome", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.EmptyHome").subclassOf(twttr.components.Base).initializer(function() {
            this.render(), this.hasRendered()
        }).methods({
            render: function() {
                var a = twttr.currentUser;
                (new twttr.views.EmptyHome({
                    screen_name: a.screenName,
                    protected_account: a["protected"]
                })).render(this.$node.empty(), "append")
            }
        });
        twttr.isT1 && c.methods({
            render: function() {
                (new twttr.views.EmptyHome({
                    show_stream_end_bird: !0,
                    end_text: (new twttr.views.EmptyTimelineMessage).html()
                })).render(this.$node.empty(), "append")
            }
        }), a(c)
    })
});
provide("components/AddPeople", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.AddPeople").subclassOf(twttr.components.Base).initializer(function() {
            this.render();
            var a = twttr.isT1 ? "userSearchPath" : "whoToFollowSearchPath";
            twttr.helpers.addFormEvents(this.$find(".js-search-for-list-people"), function() {
                var b = this.q.value;
                b != "" && (twttr.router.routeTo(twttr.router[a]({
                    query: b
                })), trackClient({
                    component: "empty_list_stream",
                    action: "search"
                }, "list"), _scribble("search-for-people", {
                    input: "click"
                }))
            }), this.hasRendered()
        });
        twttr.isT1 ? c.methods({
            render: twttr.util.noopInT1
        }).setBaseView(twttr.views.AddPeople) : c.methods({
            render: function() {
                (new twttr.views.AddPeople).render(this.$node.empty(), "append")
            }
        }), a(c)
    })
});
provide("components/NoListMembers", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.NoListMembers").subclassOf(twttr.components.Base).initializer(function() {
            var a = this;
            this.render(), this.hasRendered()
        });
        twttr.isT1 ? c.methods({
            render: twttr.util.noopInT1
        }).setBaseView(twttr.views.NoListMembers) : c.methods({
            render: function() {
                (new twttr.views.NoListMembers).render(this.$node.empty(), "append")
            }
        }), a(c)
    })
});
provide("components/Media", function(a) {
    using("_", "util").as(function(b, _) {
        twttr.klass("twttr.components.Media").subclassOf(twttr.components.Base).initializer(function(a, b, c) {
            this.tweet = a, this.urls = twttr.media.extractUrls(a), this.$node.prepend($('<div class="tweet-media"/>')), this.$mediaNode = this.$node.find("div.tweet-media"), this.width = b, this.options = c || {}, this.hasCalledHasRendered = !1, this.notDisplayedClass = ".media-not-displayed";
            var d = this;
            this.checkForMedia(function(a) {
                a && (d.$mediaNode.bind("hideMedia", function() {
                    $("div.tweet-media").empty()
                }), d.$mediaNode.bind("showMedia", function() {
                    d.restrictedMedia() ? twttr.loggedIn ? d.loggedInBehavior() : d.loggedOutBehavior() : d.renderMedia()
                }), d.$mediaNode.trigger("showMedia"))
            })
        }).deciderKey("inline_media_component").statics({
            restrictedCategories: {
                photo: !0,
                video: !0
            },
            dashboardThumbnailOptions: {
                itemWidth: 66,
                itemHeight: 66,
                itemDisplayWidth: 70,
                width: 276,
                viewClass: twttr.views.ThumbnailViewerFacet,
                thumbnailViewClass: twttr.views.ThumbnailFacet
            }
        }).methods({
            checkForMedia: function(a) {
                var c = this;
                if (b.util.objKeys(this.urls).length === 0 && !twttr.media.hasMedia(this.tweet)) {
                    a(!1);
                    return
                }
                var d = c.tweet;
                twttr.Cards.prototype.hasCards(d) ? (this.mediaTypes = [], a(!0)) : twttr.media.mediaTypes(this.urls, function(d) {
                    c.mediaTypes = d;
                    if (b.util.objKeys(c.mediaTypes).length === 0) {
                        a(!1);
                        return
                    }
                    a(!0)
                })
            },
            onProfilePage: function() {
                return twttr.profileUser && twttr.profileUser.id == this.tweet.user.id
            },
            restrictedMedia: function() {
                var a = !1;
                return $.each(this.mediaTypes, function(b, c) {
                    var d = twttr.media.iconType(b, c);
                    !twttr.components.Media.restrictedCategories[d] || (a = !0)
                }), a
            },
            _getUser: function() {
                return this.tweet.retweetingStatus ? this.tweet.retweetingStatus.user : this.tweet.user
            },
            loggedInBehavior: function() {
                var a = this,
                    b = this._getUser();
                if (twttr.helpers.isCurrentUser(b) || this.hasClickedShowMedia) {
                    this.renderMedia();
                    return
                }
                this.checkPossiblySensitive()
            },
            _isPossiblySensitive: function() {
                return !!this.tweet.possiblySensitive
            },
            checkPossiblySensitive: function() {
                this._isPossiblySensitive() ? this.possiblySensitiveBehavior() : this.renderMedia()
            },
            checkNotFollowing: function() {
                var a = this,
                    b = this._getUser();
                twttr.currentUser.relationshipWith(b, function(c) {
                    b.sync("following", c.following), a.renderMedia()
                })
            },
            possiblySensitiveBehavior: function() {
                var a = this;
                twttr.currentUser.viewPossiblySensitive({
                    success: function(b) {
                        b ? a.checkNotFollowing() : a.renderBlockedMessage({
                            possibly_sensitive: !0
                        })
                    }
                })
            },
            loggedOutBehavior: function() {
                this.onProfilePage() && !this._isPossiblySensitive() ? this.renderMedia() : this._isPossiblySensitive() && !twttr.media.getViewMediaCookie() ? this.renderBlockedMessage({
                    possibly_sensitive: !0
                }) : this.renderMedia()
            },
            renderMedia: function() {
                var a = this,
                    b = (new twttr.media.Embedder(this.tweet, {
                        DOMContainer: a.$mediaNode,
                        preProcess: function(b, c) {
                            c(twttr.aug(a.options, {
                                maxwidth: a.width
                            }))
                        },
                        afterRender: function(b, c) {
                            a.hasCalledHasRendered || (a.hasRendered(), a.hasCalledHasRendered = !0), a.options.afterRender && a.options.afterRender(b)
                        }
                    })).render()
            },
            buildNotDisplayedView: function(a) {
                return new twttr.views.MediaNotDisplayed(a)
            },
            renderBlockedMessage: function(a) {
                var b = this;
                b.hasCalledHasRendered || (b.hasRendered(), b.hasCalledHasRendered = !0);
                if (this.$node.find(this.notDisplayedClass + ":visible").get(0)) return;
                this.buildNotDisplayedView(a).render(this.$node, "prepend"), this.options.whenNotDisplayed && this.options.whenNotDisplayed(this.$node);
                var c = twttr.bind(this, function(a) {
                    this.renderMedia(), this.$node.find(this.notDisplayedClass).hide(), twttr.loggedIn ? this.hasClickedShowMedia = !0 : twttr.media.setViewMediaCookie(), a.stopPropagation()
                });
                this.$node.find(".display-this-media").click(c), this.$node.find(".always-display-media").click(function(a) {
                    twttr.currentUser.updateViewPossiblySensitive(!0, {
                        success: function() {
                            twttr.showMessage(_("Your media display settings have been changed.")), c(a)
                        },
                        error: function(a) {
                            twttr.showError(_("Couldn't set inline media settings."))
                        }
                    })
                })
            }
        }), a(twttr.components.Media)
    })
});
provide("components/ProfilePane", function(a) {
    using("mixins/userActionable", twttr.isT1 ? ["mixins/userUpdateable", "mixins/profilePopupActionable"] : []).as(function(b) {
        var c = twttr.klass("twttr.components.ProfilePane").subclassOf(twttr.components.Base).initializer(function(a) {
            this.user = a, this.renderPane(), twttr.loggedIn && this.$node.append((new twttr.components.ProfileActions(this.user, undefined, !0)).$node), this.hasRendered()
        }).methods({
            renderPane: function() {
                var a = new twttr.views.ProfilePane(this.user);
                a.render(this.$node)
            },
            renderStats: function() {
                var a = new twttr.views.MiniProfileStats(this.user);
                a.render(this.$node.find(".js-mini-profile-stats"), "replaceWith")
            }
        });
        twttr.isT1 && c.mixin(b.mixins.userActionable, b.mixins.userUpdateable, b.mixins.profilePopupActionable).initializer(function(a) {
            var b = this,
                c = a.impressionId;
            this.user = a, this.renderPane(), this.registerUserActionEvents(), twttr.loggedIn && (this.registerUserUpdateEvents(this.user), this.bind("userUpdated", function(a, d) {
                b.user = d, c && (b.user = twttr.API.util.PromotedStore.getPromotedUserInstance(b.user, c)), b.renderStats()
            })), this.hasRendered()
        }).methods({
            renderPane: function() {
                var a = this;
                this.getRelationship(this.user, function(b, c) {
                    a.updateUserAttributesFromRelationship(b);
                    var d = new twttr.views.ProfilePane(a.user);
                    d.render(a.$node), a.showFollowOrUnfollow(a.user), twttr.helpers.canViewUser(a.user) && a.showMiniSocialProof(a.user), a.renderUserProfileMenu(a.$find(".js-follow-combo"), a.$find(".js-action-profilemenu"), c)
                })
            }
        }), a(c)
    })
});
provide("components/JapaneseAd", function(a) {
    using("constants").as(function(b) {
        twttr.klass("twttr.components.JapaneseAd").subclassOf(twttr.components.Base).initializer(function() {
            if (twttr.components.JapaneseAd.shouldBeHidden()) {
                this.$node.hide();
                return
            }(new twttr.views.JapaneseAd).render(this.$node, "append");
            if (twttr.decider.isAvailable("japanese_new_ad_provider")) this.constructor.getJapanAd() ? this.constructor.refreshAds() : this.constructor.createIframeAd(this.$node);
            else if (!this.constructor.loadedOnce) {
                this.constructor.loadedOnce = !0;
                var a = "loadedJsCallBack" + parseInt(Math.random() * 1e5, 10);
                twttr.components.JapaneseAd.callbacks[a] = function(b) {
                    delete twttr.components.JapaneseAd.callbacks[a], twttr.components.JapaneseAd.loadedJsCallback(b)
                }, $.ajax({
                    cache: !0,
                    url: window.location.protocol + b.constants.japaneseAdUrl + a,
                    dataType: "script"
                })
            } else this.constructor.refreshAds()
        }).statics({
            shouldBeHidden: function() {
                var a = ["japan_olympic", "akiko_lawson", "docomo", "mhamura", "warnerjp", "aquarius_sports", "usolympic", "teamgb", "franceolympique", "ausolympicteam", "nzolympics", "swissteam", "cdnolympicteam", "belgiumolympic", "olympiccouncil", "london2012", "sochi2014oc", "rio2016", "pyongchang_2018"];
                return twttr.pageLocale !== "ja" || twttr.app.currentPageName() === "profile" && $.inArray(twttr.profileUser.screenName.toLowerCase(), a) != -1
            },
            callbacks: {},
            loadedJsCallback: function(a) {
                this.etologyAdSrc = a[0];
                if (typeof renderAd == "function") {
                    var b = renderAd;
                    renderAd = function(a) {
                        document.getElementById(a.spaceTag) && b.apply(this, arguments)
                    }
                }
                this.refreshAds()
            },
            createIframeAd: function(a) {
                $(a).append($('<iframe id="j_ad" src="' + b.constants.japaneseAdIframeUrl + '" width="300" height="185" frameborder="no" border="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>')), trackClient({
                    component: "japanese_ad",
                    action: "impression"
                }, {
                    url: b.constants.japaneseAdIframeUrl
                })
            },
            getJapanAd: function() {
                return $("#j_ad")[0]
            },
            refreshAds: function() {
                var a = "t=" + (new Date).getTime();
                twttr.decider.isAvailable("japanese_new_ad_provider") ? this.getJapanAd() && ($("#j_ad").attr("src", b.constants.japaneseAdIframeUrl + "&" + a), trackClient({
                    component: "japanese_ad",
                    action: "refresh"
                }, {
                    url: b.constants.japaneseAdIframeUrl
                })) : this.etologyAdSrc && (trackClient({
                    section: "dashboard",
                    component: "japanese_ad",
                    action: "refresh"
                }, {
                    url: this.etologyAdSrc
                }), _scribble("japanese-ad-refresh", {
                    adSource: this.etologyAdSrc
                }), $.getScript(this.etologyAdSrc + "?" + a))
            }
        }).deciderKey("japanese_ad_component"), a(twttr.components.JapaneseAd)
    })
});
provide("components/ProtectedUser", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.ProtectedUser").subclassOf(twttr.components.Base).initializer(function(a) {
            (new twttr.views.ProtectedUser(a)).render(this.$node, "append")
        }), a(twttr.components.ProtectedUser)
    })
});
provide("components/TweetStats", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.TweetStats").subclassOf(twttr.components.Base).initializer(function(a, b, c) {
            this.maxUsersToShow = b;
            var d = this;
            a.summary(function(b) {
                d.shouldRender(b) && ($.extend(b, {
                    screen_name: a.user.screenName,
                    id: a.id,
                    retweeters_length: b.retweeters.length,
                    favoriters_length: b.favoriters.length,
                    has_retweets: !! parseInt(b.retweeters_count, 10),
                    has_favorites: !! parseInt(b.favoriters_count, 10)
                }), (new twttr.views.TweetStats(b)).render(d.$node, "append"), d.$node.closest(".js-stream-tweet").addClass("with-social-proof"), d.getFacePile(b), c && c())
            })
        }).methods({
            shouldRender: function(a) {
                return a.retweeters.length + a.favoriters.length > 0
            },
            getFacePile: function(a) {
                var b = this,
                    c = twttr.util.arrayUniq(a.retweeters.concat(a.favoriters));
                c = c.slice(0, this.maxUsersToShow), twttr.API.User.findAll(c, function(a) {
                    var d = {};
                    a.each(function(a) {
                        d[a.id] = a
                    });
                    var e = new twttr.anywhere.api.util.BaseCollection($.map(c, function(a) {
                        return d[a]
                    })),
                        f = e.map(function(a) {
                            return new twttr.views.BaseUser(a)
                        });
                    (new twttr.views.FacePile({
                        users: f.array
                    })).render(b.$find(".js-face-pile-container"), "append"), b.$node.closest(".js-stream-tweet").addClass("with-social-proof"), b.$find(".js-user-tipsy").tipsy({
                        gravity: "s"
                    })
                })
            }
        }).deciderKey(function() {
            return twttr.decider.isActivityEnabled() && twttr.decider.isAvailable("activity_status_summary")
        });
        a(c)
    })
});
provide("components/PermalinkTweet", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.PermalinkTweet").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable, twttr.mixins.i18nTweet, twttr.mixins.userActionable, twttr.mixins.profilePopupActionable).initializer(function(a) {
            this.view = new twttr.views.SingleTweet(a), this.view.render(this.$node, "append"), this._tweetId = a.id, this.registerTweetActionEvents(), this.updateI18nDisplay(), this.hasRendered(), this.scribeComponentName = "tweet";
            if (twttr.isT1) {
                var b = twttr.loggedIn ? "TweetStats" : "Retweeters",
                    c = new twttr.components[b](a, 9);
                this.$find("div.js-tweet-stats-container").append(c.$node)
            }
            this.registerUserActionEvents()
        }).methods({
            renderWithheld: function() {
                return this.view.render_withheld()
            },
            renderCreatorWithheld: function() {
                return this.view.is_withheld() && this.view.is_current_user()
            },
            faveTweet: function(a) {
                this.tweetActionFavorite(this.$find(".tweet"), a)
            },
            replyTweet: function(a) {
                this.tweetActionReply(this.$find(".tweet"), a)
            },
            retweetTweet: function(a) {
                this.tweetActionRetweet(this.$find(".tweet"), a)
            },
            onTweetActionDelete: function(a) {
                a === this._tweetId && this.trigger("deleted")
            }
        }).click({
            "img.user-profile-link": function(a, b) {
                this.trigger("avatar_click.tweet", [b.closest(".js-actionable-tweet"), "avatar", b])
            },
            ".tweet-user-block-screen-name": function(a, b) {
                this.trigger("screen_name_click.tweet", [b.closest(".js-actionable-tweet"), "screen_name", b])
            },
            ".stats .js-stat-count a": function(a, b) {
                a.stopPropagation(), a.preventDefault()
            }
        }), a(twttr.components.PermalinkTweet)
    })
});
provide("components/NoUserExists", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.NoUserExists").subclassOf(twttr.components.Base).initializer(function() {
            this.$node.append("<p class='no-user tweet-text tweet-text-large'>" + _("This user does not exist.") + "</p>"), this.hasRendered()
        }), a(twttr.components.NoUserExists)
    })
});
provide("components/SignupCallOut", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.SignupCallOut").subclassOf(twttr.components.Base).initializer(function(a, b) {
            b = b || {};
            var c;
            if (b.profileUser) {
                var d = twttr.merge({
                    signup_source: a
                }, b.profileUser.attributes);
                a == "permalink" ? c = new twttr.views.PermalinkSignupCallOut(d) : c = new twttr.views.ProfileSignupCallOut(d)
            } else c = new twttr.views.NewSignupCallOut({
                signup_source: a,
                query: b.query
            });
            c.render(this.$node.empty(), "append"), this.$node.delegate("form.signup-btn", "submit", function() {
                trackClient({
                    section: "signup_callout",
                    component: "form",
                    action: "signup_click"
                })
            });
            if (b.profileUser || twttr.isT1) {
                var e = this.$find("form");
                twttr.helpers.addFormEvents(e), twttr.helpers.addHoldingInputEvents(e)
            }
            this.$node.delegate(".profile-subpage-call-out-button", "click", function() {
                trackClient({
                    section: "signup_callout",
                    component: "discover_link",
                    action: "click"
                }, {
                    profile_id: twttr.profileUser.id,
                    context: "profile"
                })
            }), this.hasRendered()
        }), a(twttr.components.SignupCallOut)
    })
});
provide("components/SuggestionCategoriesList", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.SuggestionCategoriesList").subclassOf(twttr.components.Base).initializer(function(a, b, c) {
            var d = this.categoriesToLinks(a, b, c);
            (new twttr.views.LinkList(d, "·")).render(this.$node, "append"), this.$find("ul").addClass("categories-list")
        }).mixin(twttr.mixins.discoveryHelper).methods({
            categoriesToLinks: function(a, b, c) {
                var d = this;
                return a ? a.map(function(a, e) {
                    var f = {
                        text: a.name
                    };
                    if (c == a.slug) return f;
                    var g = d.pagePathFor(b, "InterestsCategory", {
                        category: a.slug
                    });
                    return twttr.merge(f, {
                        href: g
                    })
                }).array : []
            }
        }), a(twttr.components.SuggestionCategoriesList)
    })
});
provide("components/ContactImportMatchesStats", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.ContactImportMatchesStats").subclassOf(twttr.components.Base).initializer(function(a, b) {
            var c = a.customHeaderView || "ContactImportMatchesStats";
            (new twttr.views[c](b)).render(this.$node, "append"), this.$node.delegate(".js-action-follow-all", "click", function(b) {
                a._followAll($(this)), b.preventDefault()
            }), this.$node.delegate(".invite-contacts", "click", function(b) {
                a.inviteOthers(), b.preventDefault()
            })
        }), a(twttr.components.ContactImportMatchesStats)
    })
});
provide("components/media/Base", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.media.Base").subclassOf(twttr.components.Base).initializer(function(a) {
            a = a || {}, this.options = a, this.size = a.size || "medium", this.count = this.count || a.count || 100, this.offset = this.offset || a.offset || 0, this.score = a.score || !0, this.isDataReady = !1, this._urls = []
        }).methods(twttr.EventProvider).methods({
            render: function() {
                throw new Error("You should implement this.")
            },
            dataReady: function(a, b) {
                this._urls = a, this.isDataReady = !0, this.trigger("urlsLoaded", [this._urls, !! b])
            }
        }), a(twttr.components.media.Base)
    })
});
provide("components/media/profile", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.media.profile.Images").subclassOf(twttr.components.media.Base).initializer(function(a) {
            var b = this;
            this._superInitializer.apply(this, arguments), this.user = a.user, this.provider = new twttr.media.provider.UserMedia({
                user: this.user
            }), this.options = a || {}, this._fetchedMedia = null, this.viewTemplate = twttr.views.FacetMedia, this.filter = a.filter ||
            function() {
                return !0
            }, this.thumbnailViewerOptions = $.extend({}, {
                width: 340,
                itemWidth: 83,
                itemHeight: 83,
                itemDisplayWidth: 85,
                generateItemHref: function(a) {
                    return twttr.router.userMediaSlideshowPath({
                        screen_name: b.user.screenName
                    }) + "?url=" + encodeURIComponent(a)
                }
            }, this.options), this.noSpacer = !! this.options.noSpacer
        }).methods({
            fetchImages: function() {
                var a = this;
                this.provider.fetch({
                    count: this.count,
                    page: this.offset,
                    filter: this.filter,
                    success: function(b) {
                        a._fetchedMedia = b;
                        var c = !1;
                        a.dataReady($.map(b, function(a) {
                            return c = c || a && a.tweet && a.tweet.possiblySensitive, a.url
                        }), c)
                    }
                })
            },
            render: function() {
                var a = this;
                if (!this.isDataReady) return;
                var b = 4,
                    c = this._urls.length > b;
                this.viewAllHref = twttr.router.userMediaGridPath({
                    screen_name: a.user.screenName
                });
                if (this._urls.length > 0) {
                    var d = (new this.viewTemplate({
                        title: _("Recent images"),
                        view_all_href: this.viewAllHref,
                        show_view_all: c
                    })).$html();
                    this.$node.append(d), this.thumbnailViewer = new twttr.components.ThumbnailViewer(this._urls, this.thumbnailViewerOptions, this._fetchedMedia), this.thumbnailViewer.renderWithIndex(0), this.thumbnailViewer.bind("nextPage prevPage", function(a, b) {
                        trackClient({
                            section: "dashboard",
                            component: "photos_user_media",
                            action: "page"
                        }, {
                            event_info: "photos",
                            cursor_or_page: b,
                            profile_id: twttr.profileUser && twttr.profileUser.id
                        })
                    }), this.thumbnailViewer.bind("allFailed", function() {
                        a.trigger("failed")
                    }), this.$find(".js-media-images").replaceWith(this.thumbnailViewer.$node)
                }
                this.hasRendered()
            }
        }), a(twttr.components.media.profile)
    })
});
provide("components/media/facets/Base", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.media.facets.Base").subclassOf(twttr.components.media.Base).initializer(function(a) {
            this._superInitializer(a)
        }).methods(twttr.EventProvider).methods({
            render: function() {
                throw new Error("You should implement this.")
            }
        });
        a(c)
    })
});
provide("components/media/facets/Media", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.media.facets.Media").subclassOf(twttr.components.media.facets.Base).methods({
            render: function() {
                var a = this;
                if (!this.isDataReady) return;
                var b = a._type === "images" ? 4 : 3,
                    c = this._urls.length > b;
                if (this._urls.length > 0) {
                    var d = (new this.viewTemplate({
                        title: this.title,
                        view_all_href: !twttr.isT1 || c ? this.view_all_href : this.view_slideshow_href,
                        show_view_all: c
                    })).$html();
                    this.$node.append(d);
                    var e = {
                        imageSize: this.imageSize,
                        cacheSize: this.cacheSize,
                        width: 340,
                        itemWidth: this.itemWidth || 83,
                        itemHeight: this.itemHeight || 83,
                        itemDisplayWidth: this.itemDisplayWidth || 85,
                        delayLoading: !0,
                        generateItemHref: function(b) {
                            return twttr.router.searchFacetsSlideshowPath({
                                query: a.options.query,
                                mode: a._type === "images" ? "photos" : a._type
                            }) + "?url=" + encodeURIComponent(b)
                        },
                        containsVideos: a._type !== "images" ? !0 : !1
                    };
                    twttr.isT1 && twttr.aug(e, twttr.components.Media.dashboardThumbnailOptions), this.thumbnailViewer = new twttr.components.ThumbnailViewer(this._urls, e), this.thumbnailViewer.renderWithIndex(0), this.thumbnailViewer.bind("nextPage prevPage", function(b, c) {
                        var d = a._type == "images" ? "photos" : a._type;
                        trackClient({
                            section: "dashboard",
                            component: d + "_search_facets",
                            action: "page"
                        }, {
                            event_info: d,
                            query: a.options.query,
                            page_or_cursor: c
                        })
                    }), this.thumbnailViewer.bind("failedToLoad", function(c, d) {
                        var e = $.inArray(d, a._urls);
                        e > -1 && a._urls.splice(e, 1), a._urls.length <= b && a.hideViewAll()
                    }), this.thumbnailViewer.bind("allFailed", function() {
                        a.trigger("failed")
                    }), this.$find(".js-media-images").replaceWith(this.thumbnailViewer.$node)
                }
                this.afterRender(), this.hasRendered()
            },
            hideViewAll: function() {
                this.$find(".view-all-link").remove()
            },
            afterRender: function() {},
            viewTemplate: twttr.views.FacetMedia
        });
        a(c)
    })
});
provide("components/media/facets/Images", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.media.facets.Images").subclassOf(twttr.components.media.facets.Media).initializer(function() {
            var a = this;
            this.title = _("Top images"), this._type = "images", this._superInitializer.apply(this, arguments), this.view_all_href = twttr.router.searchFacetsGridPath({
                query: a.options.query,
                mode: "photos"
            }), this.view_slideshow_href = twttr.router.searchFacetsSlideshowPath({
                query: a.options.query,
                mode: "photos"
            }), this.$node.delegate(".view-all", "click", function() {
                trackClient({
                    section: "dashboard",
                    component: "photos_search_facets",
                    action: "view_all"
                }, {
                    query: a.options.query,
                    event_info: "photos"
                }), scribble("facets_view_all_click", {
                    mode: "images",
                    query: a.options.query,
                    userId: twttr.currentUser ? twttr.currentUser.id : null
                })
            }), this.$node.delegate(".media-thumbnail", "click", function(b) {
                trackClient({
                    section: "dashboard",
                    component: "photos_search_facets",
                    action: "click"
                }, {
                    query: a.options.query,
                    event_info: "photos",
                    url: $(this).attr("data-url")
                })
            }), twttr.SearchAPI.getImageFacets(this.options.query, {
                experimentId: this.options.expId,
                count: 100,
                success: function(b) {
                    var c = $.map(b, function(a) {
                        return a.url
                    });
                    a.dataReady(c, !1)
                }
            })
        }).methods({
            scribeComponentName: "photos_search_facets"
        }).deciderKey("phoenix_facets_images");
        a(c)
    })
});
provide("components/media/facets/Videos", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.media.facets.Videos").subclassOf(twttr.components.media.facets.Media).initializer(function() {
            var a = this;
            this.itemWidth = 112, this.itemDisplayWidth = 114, this.title = _("Top videos"), this._type = "videos", this._superInitializer.apply(this, arguments), this.view_all_href = twttr.router.searchFacetsGridPath({
                query: a.options.query,
                mode: "videos"
            }), this.view_slideshow_href = twttr.router.searchFacetsSlideshowPath({
                query: a.options.query,
                mode: "videos"
            }), this.$node.delegate(".view-all", "click", function() {
                trackClient({
                    section: "dashboard",
                    component: "videos_search_facets",
                    action: "view_all"
                }, {
                    query: a.options.query,
                    event_info: "videos"
                })
            }), this.$node.delegate(".media-thumbnail", "click", function(b) {
                trackClient({
                    section: "dashboard",
                    component: "videos_search_facets",
                    action: "click"
                }, {
                    query: a.options.query,
                    event_info: "videos",
                    url: $(this).attr("data-url")
                })
            }), twttr.SearchAPI.getVideoFacets(this.options.query, {
                experimentId: this.options.expId,
                count: 100,
                success: function(b) {
                    var c = $.map(b, function(a) {
                        return a.url
                    });
                    a.dataReady(c, !1)
                }
            })
        }).methods({
            scribeComponentName: "videos_search_facets"
        }).deciderKey("phoenix_facets_videos");
        a(c)
    })
});
provide("components/ThumbnailViewer", function(a) {
    using("constants").as(function(b) {
        var c = twttr.klass("twttr.components.ThumbnailViewer").subclassOf(twttr.components.Base).initializer(function(a, b, c) {
            b ? (this.imageSize = b.imageSize || this.imageSize, this.cacheSize = b.cacheSize || this.cacheSize, this.itemWidth = b.itemWidth || 60, this.itemHeight = b.itemHeight || 60, this.itemDisplayWidth = b.itemDisplayWidth || this.itemWidth, this.itemDisplayHeight = b.itemDisplayHeight || this.itemHeight, this.containsVideos = b.containsVideos || !1, this.width = b.width || 304, this.viewClass = b.viewClass || twttr.views.ThumbnailViewer, this.thumbnailViewClass = b.thumbnailViewClass || twttr.views.Thumbnail, this.scribbler = b.scribbler || twttr.Scribbler.clientEvent, this.noRender = b.noRender, this.atEnd = !1, this.firstVisibleIndex = 0, twttr.is.def(b.fadeOutNav) ? this.fadeOutNav = b.fadeOutNav : this.fadeOutNav = !0, this.generateItemHref = b.generateItemHref ||
            function(a) {
                return a
            }) : this.scribbler = twttr.Scribbler.clientEvent, this.originalCount = a.length, this.urls = a, this.embeddedMedia = c, (new this.viewClass).render(this.$node, "append"), this.thumbSetup(), this._registerEventHandlers(), this.updatePageNavigation()
        }).methods({
            animateTo: function(a) {
                a < 0 && (a = 0);
                var b = this.getFullyVisibleThumbsPerPage();
                this.firstVisibleIndex = a - a % b;
                var c = this.determineLeftPosition(a, b),
                    d = Modernizr.csstransitions ? "animateWithCss" : "animate";
                twttr.isRTL ? this.$thumbs[d]({
                    right: -c
                }, 400, "swing") : this.$thumbs[d]({
                    left: -c
                }, 400, "swing"), this.loadSurroundingImages(a, b), this.updatePageNavigation()
            },
            determineLeftPosition: function(a, b) {
                var c = this.firstVisibleIndex * this.itemDisplayWidth,
                    d = this.getThumbsWidth(),
                    e = a * this.itemDisplayWidth,
                    f = this.getThumbsVisibleWidth(),
                    g = c + f - d;
                if (g >= 0 && this.firstVisibleIndex >= b) c -= g, this.atEnd = !0;
                else {
                    var i = d - e;
                    this.atEnd === !0 && i < f ? (c -= g, this.atEnd = !0, this.firstVisibleIndex = this.urls.length - b) : this.atEnd = !1
                }
                return c
            },
            loadNextImages: function(a, b) {
                if (this.noRender) return;
                this.$thumbs.children().slice(a, b).trigger("loadImage")
            },
            loadSurroundingImages: function(a, b) {
                var c = a - b;
                c < 0 && (c = 0), this.loadNextImages(c, a + b * 2)
            },
            thumbSetup: function() {
                this.$thumbs = this.$find(".js-thumbnail-viewer-images"), this.$container = this.$find(".js-thumbnail-viewer-container"), this.$thumbs.width(this.getThumbsWidth()), this.generateThumbs(this.urls)
            },
            getThumbsWidth: function() {
                return this.urls.length * this.itemDisplayWidth
            },
            getThumbsVisibleWidth: function() {
                return this.$container.width() || this.width
            },
            getThumbsPerPage: function() {
                return Math.ceil(this.getThumbsVisibleWidth() / this.itemDisplayWidth)
            },
            getFullyVisibleThumbsPerPage: function() {
                var a = this.getThumbsVisibleWidth() / this.itemDisplayWidth;
                return a - Math.floor(a) > .95 ? Math.ceil(a) : Math.floor(a)
            },
            renderWithIndex: function(a) {
                a = this.resetIndex(a), this.animateTo(a)
            },
            removeUrl: function(a) {
                var b = $.inArray(a, this.urls);
                b !== -1 && (this.urls.splice(b, 1), this.trigger("failedToLoad", a), this.updatePageNavigation()), this.urls.length == 0 && this.trigger("allFailed")
            },
            selectByUrl: function(a) {
                var b = $.inArray(a, this.urls);
                return b == -1 ? !1 : (this.renderWithIndex(b), this._select(this.getThumbnailByUrl(a)), !0)
            },
            selectByIndex: function(a) {
                a = this.resetIndex(a), this.renderWithIndex(a);
                var b = this.$thumbs.find(".media-thumbnail");
                this._select($(b[a]))
            },
            resetIndex: function(a) {
                return a > this.urls.length ? 0 : a
            },
            getThumbnailByUrl: function(a) {
                return this.$thumbs.find(".media-thumbnail[data-url='" + a + "']").first()
            },
            generateThumbs: function(a) {
                var c = this;
                if (a.length === 0) return;
                var d = b.constants.imageSizes,
                    e = $(),
                    f = {
                        width: this.itemWidth,
                        height: this.itemHeight,
                        dimension: Math.max(this.itemWidth, this.itemHeight),
                        size: this.itemWidth < 80 && this.itemHeight < 80 ? d.small : d.medium,
                        scalingMode: "trim",
                        delayLoading: !0,
                        thumbnailViewClass: this.thumbnailViewClass,
                        componentName: this._namespace.split(".").pop()
                    };
                this.embeddedMedia ? e = twttr.images.renderProviderMedia(this.embeddedMedia, f) : e = twttr.images.renderMediaUrls(a, f);
                if (e.length) {
                    var g = this.getFullyVisibleThumbsPerPage(),
                        i = 0,
                        j = 0,
                        k = g * 2,
                        l = k;

                    function m() {
                        i + j === l && j <= g && (c.loadNextImages(j, j + k), l += k)
                    }
                    e.addClass("thumbnail-image-wrapper").bind("failedToResolve failedToLoad", function(a, b) {
                        var d = $(this).attr("data-url");
                        twttr.images.scribeImageFailure(c.scribbler, "photos_thumbnails", d), c.removeUrl(d), $(this).remove(), i++, m()
                    }).bind("loaded", function() {
                        twttr.images.animateImageFadeIn($(this).find("img"), 500), j++, m()
                    }), e.append('<div class="thumbnail-active-border"><div class="thumbnail-active-border-inner"></div></div>'), twttr.isT1 || e.append('<div class="media-play-button"></div>'), this.containsVideos && e.addClass("video"), e.each(function() {
                        var a = $(this);
                        a.attr("href", c.generateItemHref(a.attr("data-url")))
                    }), this.$thumbs.append(e)
                }
            },
            updateWidth: function(a) {
                this.width = a || this.$node.width(), this.animateTo(this.getActiveThumbnail().index()), this.updatePageNavigation()
            },
            prevPage: function() {
                var a = this.getFullyVisibleThumbsPerPage();
                this.animateTo(this.firstVisibleIndex - a), this.trigger("prevPage", Math.round(this.firstVisibleIndex / a) + 1)
            },
            nextPage: function() {
                var a = this.getFullyVisibleThumbsPerPage();
                this.animateTo(this.firstVisibleIndex + a), this.trigger("nextPage", Math.round(this.firstVisibleIndex / a) + 1)
            },
            updatePageNavigation: function() {
                var a = this.$find(".thumbnail-viewer-prev");
                this.firstVisibleIndex === 0 ? a.addClass("disabled") : a.removeClass("disabled");
                var b = this.$find(".thumbnail-viewer-next");
                this.atEnd === !0 ? b.addClass("disabled") : b.removeClass("disabled");
                var c = this.$find(".thumbnail-viewer-nav");
                this.getFullyVisibleThumbsPerPage() >= this.urls.length ? c.hide() : c.css("display", "")
            },
            deselect: function() {
                this.$node.find(".media-thumbnail").removeClass("media-thumbnail-active")
            },
            _select: function(a) {
                if (a.length === 0) return;
                this.deselect(), a.addClass("media-thumbnail-active"), this.selectedUrl = a.attr("data-url"), this.trigger("select", [{
                    url: this.selectedUrl,
                    index: a.prevAll().length + 1,
                    hasPrev: a.prev().length > 0,
                    hasNext: a.next().length > 0
                }])
            },
            prev: function() {
                this.shiftOne("prev")
            },
            next: function() {
                this.shiftOne("next")
            },
            shiftOne: function(a) {
                var b = this.getActiveThumbnail()[a]();
                b.length > 0 && (this._select(b), this.trigger(a, [b.prevAll().length + 1]), twttr.router.routeTo(b.attr("href")))
            },
            getActiveThumbnail: function() {
                return this.$find(".media-thumbnail-active")
            },
            _registerEventHandlers: function() {
                var a = this;
                this.$node.delegate(".media-thumbnail", "click", function(b) {
                    a._select($(this))
                }), this.$node.delegate(".thumbnail-viewer-prev", "click", function(b) {
                    a.prevPage()
                }), this.$node.delegate(".thumbnail-viewer-next", "click", function(b) {
                    a.nextPage()
                });
                if (this.fadeOutNav) {
                    this.$nav = this.$find(".thumbnail-viewer-nav").css("opacity", 0);
                    var b = Modernizr.csstransitions ? "animateWithCss" : "animate";
                    this.$node.hover(function() {
                        a.fadeTimer && clearTimeout(a.fadeTimer), a.$nav[b]({
                            opacity: 1
                        }, 400, "swing")
                    }, function() {
                        a.fadeTimer = window.setTimeout(function() {
                            a.$nav[b]({
                                opacity: 0
                            }, 400, "swing")
                        }, 200)
                    })
                }
            }
        });
        a(c)
    })
});
provide("components/TheGrid", function(a) {
    using("constants").as(function(b) {
        twttr.klass("twttr.components.TheGrid").subclassOf(twttr.components.Base).initializer(function(a, b) {
            (new twttr.views.TheGrid).render(this.$node, "append"), this.$grid = this.$find(".the-grid"), this.media = [], this.totalCount = 0, this.imageWidth = a.imageWidth || 150, this.imageHeight = a.imageHeight || 150, this.margin = a.margin || 10, this.chunksize = a.chunksize || 100, this.gridCols = 6, this.isEvent = a.isEvent || !1, this.generateItemHref = a.generateItemHref || $.noop, this.provider = a.provider, this.query = a.query, this.mode = a.mode, this.type = a.type, this.screenName = a.screenName, this.filter = a.filter, this.scribbler = a.scribbler || twttr.Scribbler.clientEvent, this.provider.fetch({
                count: 100,
                score: !0,
                offset: 0,
                mode: this.mode,
                query: this.query,
                is_event: this.isEvent,
                filter: this.filter,
                success: twttr.bind(this, this._loadMedia),
                error: twttr.bind(this, this.renderNoResults)
            }), this.setCols(b), this._registerEventHandlers()
        }).methods({
            setCols: function(a) {
                var b = this.mode === "videos" ? this._getWidthVideos(a) : this._getWidthPhotos(a);
                this.$grid.width(b)
            },
            _getWidthPhotos: function(a) {
                var b = 960;
                return a >= 640 && a < 800 ? b = 640 : a >= 800 && a < 960 && (b = 800), b
            },
            _getWidthVideos: function(a) {
                var b = 840;
                return a >= 630 && a < 840 && (b = 630), b
            },
            decrementLoaded: function() {
                this.totalCount--, this.totalCount == 0 && this.trigger("hideLoading")
            },
            _doLoad: function(a) {
                var c = this,
                    d = a.length,
                    e = $(),
                    f = {
                        width: this.imageWidth,
                        height: this.imageHeight,
                        size: b.constants.imageSizes.medium,
                        scalingMode: "trim",
                        componentName: this._namespace.split(".").pop()
                    };
                a && (e = twttr.images.renderProviderMedia(a, f)), e.length && (e.addClass("grid-square").bind("failedToResolve failedToLoad", function(a, b) {
                    var e = $(this).attr("data-url");
                    twttr.images.scribeImageFailure(c.scribbler, "photos", e), $(this).remove(), d--, d == 0 && c.renderAndResolve(), c.decrementLoaded()
                }), this.mode == "videos" && e.addClass("video").append('<div class="media-play-button"></div>'), e.each(function() {
                    var a = $(this);
                    a.attr("href", c.generateItemHref(a.attr("data-url")))
                }), e.bind("loaded", function() {
                    d--, d == 0 && c.renderAndResolve(), c.decrementLoaded(), twttr.images.animateImageFadeIn($(this).find("img"))
                }), this.mode == "videos" && e.addClass("video").append('<div class="media-play-button"></div>'), this.$find(".the-grid").prepend(e))
            },
            renderAndResolve: function() {
                var a = this,
                    b = this.media.splice(0, this.chunksize);
                b.length > 0 ? this._doLoad(b) : this.trigger("hideLoading")
            },
            _loadMedia: function(a) {
                this.media = a, this.totalCount = this.media.length, this.$find(".the-grid").empty(), this.media.length > 0 ? this.renderAndResolve() : this.renderNoResults()
            },
            renderNoResults: function() {
                (new twttr.views.MediaGalleryNoResults({
                    is_search: this.type === "search",
                    is_usermedia: this.type === "userMedia",
                    query: this.query,
                    mode_photos: this.mode === "photos",
                    mode_videos: this.mode === "videos",
                    screen_name: this.screenName
                })).render(this.$find(".the-grid"), "append"), this.trigger("hideLoading")
            },
            _registerEventHandlers: function() {
                var a = this;
                setTimeout(function() {
                    a.trigger("hideLoading")
                }, 1e4)
            }
        }), a(twttr.components.TheGrid)
    })
});
provide("components/MediaGalleryControls", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.components.MediaGalleryControls").subclassOf(twttr.components.Base).initializer(function(a) {
            this._options = a || {}, this._eventId = a.eventId || !1, this._isEvent = !! this._eventId, this._type = a.type || "search", this._view = a.view || "grid", this._mode = a.mode || "photos", this._query = a.query || "", this.screenName = a.screenName, this._render(), this._registerEvents()
        }).methods({
            _registerEvents: function() {
                var a = this;
                this.$node.delegate(".media-gallery-back-nav", "click", function(b) {
                    a.trigger("close")
                }), this.$detailView = this.$find(".toggle-button.detailview"), this.$gridView = this.$find(".toggle-button.gridview"), this.$detailView.bind("click", function(b) {
                    a.setMode("detail")
                }), this.$gridView.bind("click", function(b) {
                    a.setMode("grid")
                })
            },
            setMode: function(a) {
                if (this._view == a) return;
                a == "grid" ? (this.$gridView.addClass("selected"), this.$detailView.removeClass("selected"), this.trigger("gridViewSelected")) : (this.$gridView.removeClass("selected"), this.$detailView.addClass("selected"), this.trigger("detailViewSelected")), this._view = a
            },
            _render: function() {
                (new twttr.views.MediaGalleryControls({
                    is_search: this._type === "search",
                    is_usermedia: this._type === "userMedia",
                    screen_name: this.screenName,
                    is_grid_view: this._view === "grid",
                    is_detail_view: this._view === "detail",
                    mode_photos: this._mode === "photos",
                    mode_videos: this._mode === "videos",
                    disable_grid: twttr.decider.isAvailable("disable_gallery_grid"),
                    disable_thumbs: twttr.decider.isAvailable("disable_gallery_thumbs"),
                    back_text: this._isEvent ? _("Back to #{{event}}", {
                        event: this._query
                    }) : _("Back to search results"),
                    query: this._query
                })).render(this.$node, "append")
            }
        }), a(twttr.components.MediaGalleryControls)
    })
});
provide("components/MediaSlideshow", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.klass("twttr.components.MediaSlideshow").subclassOf(twttr.components.Base).mixin(twttr.mixins.tweetActionable, twttr.mixins.tweetFlagging, twttr.mixins.profilePopupActionable).initializer(function(a) {
            var b = this;
            a = a || {}, this._media = [], this.options = a, this.width = a.width || 530, this.height = a.height || 530, this.thumbContainerWidth = a.thumbContainerWidth || 494, this.thumbHeight = a.thumbHeight || 48, this.thumbWidth = a.thumbWidth || 48, this.thumbDisplayWidth = a.thumbDisplayWidth || 50, this.thumbDisplayHeight = a.thumbDisplayHeight || 48, this.type = a.type, this.screenName = a.screenName, this.options.mode = this.options.mode || "photos", this.showFirstOnFail = this.options.showFirstOnFail || !1, this.arrowOutOpacity = twttr.decider.isAvailable("disable_gallery_thumbs") ? .6 : 0, this.isEvent = a.isEvent || !1, this.generateItemHref = a.generateItemHref || $.noop, this.provider = a.provider, this.scribbler = a.scribbler || twttr.Scribbler.clientEvent, this.scribeComponentName = this.options.mode + "_tweet", this.render(), this.registerTweetActionEvents(), this.provider.fetch({
                count: 100,
                score: !0,
                mode: this.options.mode,
                query: this.options.query,
                is_event: this.isEvent,
                filter: a.filter,
                success: function(a) {
                    b.addMedia(a), b.addMediaComplete()
                },
                error: twttr.bind(this, this.renderNoResults)
            })
        }).methods(twttr.EventProvider).methods({
            render: function() {
                (new twttr.views.MediaSlideshow).render(this.$node, "append"), this.$thumbnails = this.$find(".media-slideshow-thumbnails"), this.$bigPicture = this.$find(".media-slideshow-picture"), this.$bigPictureWrapper = this.$find(".media-slideshow-pictures"), this.$mediaContainer = this.$find(".media-slideshow-media-container"), this.$prevButton = this.$find(".media-control-button.prev"), this.$nextButton = this.$find(".media-control-button.next"), this.$nextButton = this.$find(".media-control-button.next"), this.$flagcontainer = $('<div class="flag-container"/>'), this.$bigPicture.css({
                    height: this.height,
                    width: this.width
                }), this._registerEventHandlers()
            },
            renderNoResults: function() {
                this.$node.empty(), (new twttr.views.MediaGalleryNoResults({
                    is_search: this.type === "search",
                    is_usermedia: this.type === "userMedia",
                    query: this.options.query,
                    mode_photos: this.options.mode === "photos",
                    mode_videos: this.options.mode === "videos",
                    screen_name: this.screenName
                })).render(this.$node, "append"), this.trigger("hideLoading")
            },
            addMediaComplete: function() {
                var a = this;
                if (this._media.length > 1) {
                    var b = {
                        itemWidth: this.thumbWidth,
                        itemHeight: this.thumbHeight,
                        itemDisplayWidth: this.thumbDisplayWidth,
                        itemDisplayHeight: this.thumbDisplayHeight,
                        width: this.thumbContainerWidth,
                        generateItemHref: this.generateItemHref,
                        noRender: twttr.decider.isAvailable("disable_gallery_thumbs")
                    };
                    this.options.mode == "videos" && (b.containsVideos = !0), this._thumbnailViewer = new twttr.components.ThumbnailViewer(this._mediaUrls(), b, this._media), this._thumbnailViewer.$node.appendTo(this.$thumbnails), twttr.decider.isAvailable("disable_gallery_thumbs") && this._thumbnailViewer.$node.hide(), this._thumbnailViewer.bind("select", function(b, c) {
                        a.showPicture(a._findMedia(c.url, c.index), c.hasPrev, c.hasNext, c.index)
                    }), this._thumbnailViewer.bind("failedToLoad", function(b, c) {
                        a.removeUrl(c)
                    }), this._thumbnailViewer.bind("next prev", function(b, c) {
                        a.scribbler.scribe({
                            component: a.options.mode,
                            action: "page"
                        }, {
                            cursor_or_page: c
                        })
                    }), this._thumbnailViewer.bind("nextPage prevPage", function(b, c) {
                        a.scribbler.scribe({
                            component: a.options.mode + "_thumbnails",
                            action: "page"
                        }, {
                            cursor_or_page: c
                        })
                    }), this.selectUrl(this.options.url)
                } else this._media.length == 1 ? this.showPicture(a._media[0], !1, !1, 1) : this.renderNoResults()
            },
            _registerEventHandlers: function() {
                var a = this;
                this.$nextButton.bind("click", twttr.bind(this, this.showNext)), this.$prevButton.bind("click", twttr.bind(this, this.showPrev)), this.$flagcontainer.delegate(".flaggable", "click", function(b) {
                    a.flagLinkClicked(b, a.tweet)
                }), this.$nav = this.$find(".media-control-button").css("opacity", this.arrowOutOpacity);
                var b = Modernizr.csstransitions ? "animateWithCss" : "animate";
                this.$bigPictureWrapper.hover(function() {
                    a.fadeTimer && clearTimeout(a.fadeTimer), a.$nav[b]({
                        opacity: .6
                    }, 400, "swing")
                }, function() {
                    a.fadeTimer = window.setTimeout(function() {
                        a.$nav[b]({
                            opacity: this.arrowOutOpacity
                        }, 400, "swing")
                    }, 2e3)
                }), this.$nav = this.$find(".media-control-button").css("opacity", this.arrowOutOpacity), this.$bigPictureWrapper.mouseenter(twttr.bind(this, this._attachMouseMove)), this.$bigPictureWrapper.mouseleave(twttr.bind(this, this._detachMouseMove))
            },
            _mouseMoveHandler: function() {
                var a = this;
                clearTimeout(this.fadeOutTimer), this.fadeOutTimer = setTimeout(twttr.bind(this, this._fadeOutArrows), b.constants.slideshow.fadeOutArrowTimeout);
                if (this.fadeInTimer) return;
                this.fadeInTimer = setTimeout(function() {
                    a._fadeInArrows(.6)
                }, b.constants.slideshow.fadeInArrowTimeout)
            },
            _attachMouseMove: function() {
                var a = this;
                this.$bigPictureWrapper.bind("mousemove", twttr.bind(this, this._mouseMoveHandler)), a.fadeInTimer = setTimeout(function() {
                    a._fadeInArrows(.6)
                }, b.constants.slideshow.fadeInArrowTimeout)
            },
            _detachMouseMove: function() {
                this.$bigPictureWrapper.unbind("mousemove"), this.fadeInTimer && (clearTimeout(this.fadeInTimer), this.fadeInTimer = undefined), this._fadeOutArrows()
            },
            _fadeInArrows: function(a) {
                var c = Modernizr.csstransitions ? "animateWithCss" : "animate";
                this.$nav[c]({
                    opacity: a
                }, b.constants.slideshow.fadeAnimationTime, "swing"), clearTimeout(this.fadeInTimer), this.fadeInTimer = undefined
            },
            _fadeOutArrows: function() {
                var a = Modernizr.csstransitions ? "animateWithCss" : "animate";
                this.$nav[a]({
                    opacity: this.arrowOutOpacity
                }, b.constants.slideshow.fadeAnimationTime, "swing")
            },
            addMedia: function(a) {
                this._media = this._media.concat(a)
            },
            _findMedia: function(a, b) {
                var c = this._media[b - 1];
                if (c && c.url == a) return c;
                var d = this._mediaUrls(),
                    e = $.inArray(a, d);
                return e >= 0 ? this._media[e] : !1
            },
            _mediaUrls: function() {
                return twttr.map(this._media, function(a) {
                    return a.url
                })
            },
            selectUrl: function(a) {
                a = a || this._mediaUrls()[0];
                var b = this._thumbnailViewer.selectByUrl(a);
                b || (this.showFirstOnFail ? this._thumbnailViewer.selectByIndex(0) : (this._showNotFound(a), this._thumbnailViewer.deselect(), this._thumbnailViewer.animateTo(0), this._updateArrows(!1, !1)))
            },
            removeUrl: function(a) {
                for (var b = 0; b < this._media.length; b++) if (this._media[b].url === a) {
                    this._media.splice(b, 1);
                    break
                }
                this.currentUrl === a && (b == 0 && this._mediaUrls().length ? this._thumbnailViewer.selectByUrl(this._mediaUrls()[0]) : this._showNotFound())
            },
            _showNotFound: function(a) {
                this._resetMediaContainer(), (new twttr.views.MediaSlideshowNotFound({})).render(this.$mediaContainer, "append"), this.$mediaContainer.addClass("not-found"), this.trigger("hideLoading")
            },
            _resetMediaContainer: function() {
                return this._removeTweet(), this.$flagcontainer.detach(), this.$mediaContainer.css({
                    top: null
                }).empty()
            },
            _updateArrows: function(a, b) {
                a ? this.$prevButton.addClass("enabled") : this.$prevButton.removeClass("enabled"), b ? this.$nextButton.addClass("enabled") : this.$nextButton.removeClass("enabled")
            },
            showPicture: function(a, b, c, d) {
                if (a && this.currentUrl != a.url) {
                    this.currentUrl = a.url, this.trigger("showSlideshowLoading"), this.$mediaContainer.removeClass("not-found"), this.options.mode == "photos" ? this.renderPicture() : this.renderVideo();
                    if (this.tweetFlaggable(a.tweet)) {
                        this.$flagcontainer.html("<a href='#' class='flaggable'>" + _("Flag this media") + "</a>");
                        var e = this.$flagcontainer.find(".flaggable");
                        a.tweetId && e.attr("tweet-id", a.tweetId)
                    }
                }
                this._renderMedia(a), this._updateArrows(b, c), this.scribbler.scribe({
                    component: this.options.mode + "_slide",
                    action: "impression"
                }, {
                    url: a.url,
                    cursor_or_page: d
                })
            },
            _removeTweet: function() {
                this.$find(".media-slideshow-tweet").empty().addClass("loading")
            },
            _renderMedia: function(a) {
                var b = this;
                a.tweet && a.tweet.entities ? this._renderTweet(a.tweet, a.url) : a.tweetId && (this.tweetId = a.tweetId, twttr.API.Status.find(a.tweetId, {
                    success: function(c, d) {
                        b._renderTweet(c, a.url)
                    },
                    error: function() {
                        b.trigger("hideLoading")
                    }
                }))
            },
            _renderTweet: function(a, b) {
                this.tweet = a, this._removeTweet(), twttr.isT1 ? (a.attributes.is_slideshow = !0, (new twttr.views.SimpleTweet(a)).render(this.$find(".media-slideshow-tweet"), "append")) : (new twttr.views.SlideshowTweet(a)).render(this.$find(".media-slideshow-tweet"), "append"), this.$find(".media-slideshow-tweet").removeClass("loading");
                var c = this,
                    d = twttr.media.types.Twimg.matchers.twimg,
                    e = twttr.media.types.Twimg.matchers.media;
                if (b && (b.match(d) || b.match(e)) && a && a.entities && a.entities.media) {
                    var f = a.entities.media.length,
                        g = b.split("/").pop().split(".")[0];
                    for (var i = 0; i < f; i++) {
                        var j = a.entities.media[i];
                        if (j.display_url.indexOf(g) >= 0 || j.media_url.indexOf(g) >= 0) {
                            c.$imageDiv.attr("href", j.url);
                            break
                        }
                    }
                }
                this.scribbler.scribe({
                    component: this.options.mode + "_tweet",
                    action: "impression"
                }, {
                    url: a.url,
                    item_ids: [a.id]
                }), this.trigger("hideTweetLoading")
            },
            renderVideo: function() {
                var a = this,
                    c = twttr.media.matchInstance(this.currentUrl);
                this._resetMediaContainer();
                if (!c) {
                    this._showNotFound(this.currentUrl);
                    return
                }
                c.process(function() {
                    c.render(a.$mediaContainer), setTimeout(function() {
                        a.trigger("mediaRendered"), a.trigger("hideMediaLoading"), a._renderAttribution(a.currentUrl, c.tweet)
                    }, 1)
                }, {
                    maxwidth: b.constants.slideshow.videoMaxWidth
                })
            },
            renderPicture: function() {
                var a = this;
                this._resetMediaContainer();
                var c = twttr.filter(this._media, function(b) {
                    if (a.currentUrl == b.url) return b
                });
                c && (c = [c[0]]), this.$imageDiv = twttr.images.renderProviderMedia(c, {
                    width: this.width,
                    height: this.height,
                    size: b.constants.imageSizes.large,
                    scalingMode: "fit",
                    divMode: "snap",
                    componentName: this._namespace.split(".").pop()
                }).bind("failedToResolve failedToLoad", function(b, c) {
                    var d = $(this).attr("data-url");
                    twttr.images.scribeImageFailure(a.scribbler, "photos_slide", d), $(this).remove(), a._showNotFound(a.currentUrl)
                }).bind("loaded", function() {
                    a.trigger("mediaRendered"), a.trigger("hideMediaLoading"), a._renderAttribution(a.currentUrl, c[0].tweet), a.renderTwimgAttribution()
                }).attr("target", "_blank"), this.$mediaContainer.append(this.$imageDiv)
            },
            _renderAttribution: function(a, b) {
                var c = twttr.media.matchInstance(a, b);
                if (c) {
                    var d = $("<div class='media-attribution-and-flag'/>"),
                        e = $(c.attribution()).appendTo(d);
                    if (this.tweetFlaggable(this.tweet)) {
                        var f = $(twttr.at(c._namespace).flagActionTemplate);
                        this.$flagcontainer.html(f.html());
                        var g = this.$flagcontainer.find(".flaggable");
                        this.tweetId && g.attr("tweet-id", this.tweetId), this.$flagcontainer.appendTo(d)
                    }
                    d.appendTo(this.$mediaContainer)
                }
            },
            renderTwimgAttribution: function() {
                var a = this,
                    b = this.currentUrl.match(twttr.media.types.CopiedTwimg.matchers.media);
                if (b && b[1]) {
                    var c = b[1];
                    twttr.API.Status.find(c, function(b) {
                        var c = b.user.screenName,
                            d = new twttr.views.CopiedTwimgAttribution({
                                screen_name: c,
                                time_ago: twttr.helpers.timeAgo(twttr.helpers.parseDateString(b.createdAt), !0)
                            });
                        a.$imageDiv.append(d.html()).find(".attribution-wrapper").css("display", "none").fadeIn("fast"), a.$imageDiv.find(".user-profile-link").click(function() {
                            return twttr.router.routeTo(twttr.router.profilePath({
                                screen_name: c
                            })), !1
                        })
                    })
                }
            },
            resizePicture: function(h, a) {
                var b, c;
                this.$bigPicture.css({
                    height: h,
                    width: a
                });
                if (this.options.mode == "photos") twttr.images.resizeImageInDiv(this.$imageDiv, {
                    width: a,
                    height: h,
                    size: "large",
                    scalingMode: "fit",
                    divMode: "snap"
                }), b = this.$imageDiv.find("img").width(), c = this._offset(h, this.$imageDiv.height());
                else {
                    var d = this.$mediaContainer.children().first();
                    b = d.width(), c = this._offset(h, d[0].height)
                }
                this.$mediaContainer.css({
                    width: b,
                    top: c
                })
            },
            _offset: function(a, b) {
                return Math.max(0, Math.floor((a - b) / 2))
            },
            showNext: function() {
                this._thumbnailViewer && this._thumbnailViewer.next()
            },
            showPrev: function() {
                this._thumbnailViewer && this._thumbnailViewer.prev()
            }
        }), a(twttr.components.MediaSlideshow)
    })
});
provide("components/SearchFacets", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.SearchFacets").subclassOf(twttr.components.Base).initializer(function(a, b) {
            this.query = a, this.shouldShowBlockMessage = !0, this.darkMode = !1;
            if (twttr.loggedIn && (twttr.decider.isAvailable("phoenix_facets_dark") || twttr.decider.isAvailable("phoenix_facets")) || !twttr.loggedIn && twttr.decider.isAvailable("phoenix_facets_logged_out")) twttr.loggedIn && !twttr.decider.isAvailable("phoenix_facets") && twttr.decider.isAvailable("phoenix_facets_dark") && (this.darkMode = !0), this.renderFacets()
        }).methods({
            renderFacets: function() {
                var a = this,
                    b = twttr.Router.getCurrentQueryStringParams().experimentId;
                if (!this.darkMode) {
                    this.facetsImages = new twttr.components.media.facets.Images({
                        query: this.query,
                        expId: b
                    }), this.facetsVideos = new twttr.components.media.facets.Videos({
                        query: this.query,
                        expId: b
                    }), this.registerEventTracker(), this.facetsImages.bind("urlsLoaded", function(b, c) {
                        if (!c || c.length == 0) {
                            a._scribeResults("photos", c);
                            return
                        }
                        a.facetsImages.$node.appendTo(a.$node), a.shouldShowBlockMessage ? a.showBlockedMessage() : a.facetsImages.render(), a._scribeResults("photos", c)
                    }), this.facetsImages.bind("failed", function() {
                        a.facetsImages.$node.hide(), a._scribeResults("photos")
                    }), this.facetsVideos.bind("urlsLoaded", function(b, c) {
                        if (!c || c.length == 0) {
                            a._scribeResults("videos", c);
                            return
                        }
                        a.facetsVideos.$node.appendTo(a.$node), a.shouldShowBlockMessage ? a.showBlockedMessage() : a.facetsVideos.render(), a._scribeResults("videos", c)
                    }), this.facetsVideos.bind("failed", function() {
                        a._scribeResults("videos"), a.facetsVideos.$node.hide()
                    });
                    if (twttr.loggedIn) a.shouldShowBlockMessage = !1, a.hideBlockedMessage();
                    else {
                        var c = twttr.media.getViewMediaCookie();
                        c ? (a.renderFacetsMedia(), a.shouldShowBlockMessage = !1) : (a.shouldShowBlockMessage = !0, a.renderBlockedMessage())
                    }
                }
            },
            renderFacetsMedia: function() {
                if (this.darkMode) return;
                this.facetsImages.render(), this.facetsVideos.render()
            },
            showBlockedMessage: function() {
                this.$notDisplayed || this.renderBlockedMessage(), this.$notDisplayed.show()
            },
            hideBlockedMessage: function() {
                this.$notDisplayed && this.$notDisplayed.hide()
            },
            _scribeResults: function(a, b) {
                var c = b && b.length ? "results" : "no_results",
                    d = a + "_search_facets";
                b = b || [], trackClient({
                    section: "dashboard",
                    component: d,
                    action: c
                }, {
                    item_names: b.slice(0, 4),
                    item_count: b.length,
                    event_info: a,
                    query: this.query
                })
            },
            registerEventTracker: function() {
                function a(a, f) {
                    a ? c = !0 : d = !0, e = e || f && f.length, allLoaded = c && d, (c || d) && b.trigger("urlsLoaded", [ !! e, !! allLoaded])
                }
                var b = this,
                    c = !1,
                    d = !1,
                    e = !1;
                this.facetsImages.one("urlsLoaded failed", function(b, c) {
                    a(!0, c)
                }), this.facetsVideos.one("urlsLoaded failed", function(b, c) {
                    a(!1, c)
                })
            },
            renderBlockedMessage: function() {
                var a = this;
                if (this.$notDisplayed || this.darkMode) return;
                (new twttr.views.FacetsMediaNotDisplayed).render(this.$node), this.$notDisplayed = this.$node.find(".facets-media-not-displayed"), this.$notDisplayed.hide();
                var b = twttr.bind(this, function() {
                    this.renderFacetsMedia(), this.$notDisplayed.hide(), twttr.loggedIn || twttr.media.setViewMediaCookie()
                });
                this.$node.delegate(".display-this-media", "click", b)
            }
        });
        a(c)
    })
});
provide("components/FollowerRequestLink", function(a) {
    using("_", "components/Base", "multiGlobals/more_views").as(function(b, _) {
        var c = twttr.klass("twttr.components.FollowerRequestLink").subclassOf(b.components.Base).initializer(function() {
            twttr.currentUser && twttr.currentUser["protected"] && twttr.currentUser.friends.pending({
                success: twttr.bind(this, function(a) {
                    this.pendingFriendRequests = a, this.renderRequestButton()
                }),
                error: function(a) {}
            }), this.noSpacer = !0, this.hasRendered()
        }).methods({
            renderRequestButton: function() {
                if (!this.pendingFriendRequests || this.pendingFriendRequests.length === 0) {
                    this.destroy();
                    return
                }
                var a;
                this.pendingFriendRequests.length === 1 ? a = _("{{num}} new follower request", {
                    num: this.pendingFriendRequests.length
                }) : a = _("{{num}} new follower requests", {
                    num: this.pendingFriendRequests.length
                }), (new twttr.views.DashboardFollowerRequestLink({
                    button_label: a,
                    screen_name: twttr.currentUser.screenName
                })).render(this.$node, "append")
            }
        });
        twttr.isT1 && c.setBaseView(twttr.views.Module), a(c)
    })
});
provide("components/WebPersonalizationSettings", function(a) {
    using("_", "components/Base", "mixins/userActionable", "mixins/profilePopupActionable").as(function(b, _) {
        var c = twttr.klass("twttr.components.WebPersonalizationSettings").subclassOf(b.components.Base).mixin(b.mixins.userActionable, b.mixins.profilePopupActionable).initializer(function() {
            var a = this;
            twttr.inEU || twttr.doNotTrack ? (a._render({
                in_eu: twttr.inEU,
                do_not_track: !0
            }), a.trigger("disallow")) : twttr.loggedIn ? (a._hasAllowed = !1, a._render({
                loading: !0
            }), twttr.currentUser.personalizationSettings({
                success: function(b) {
                    !b.cookie_personalization_prompt_displayed || !b.use_cookie_personalization ? a._render({
                        show_results: !1
                    }) : (a._render({
                        show_results: !0,
                        results_loading: !0
                    }), a._displayResults())
                },
                error: function() {
                    twttr.showError(_("We can’t show you tailored suggestions at this time. Please try again later.")), a.trigger("disallow")
                }
            })) : a._render({
                show_results: !1
            }), this.registerUserActionEvents()
        }).methods({
            _render: function(a) {
                a = a || {}, a.users && (a.results = new twttr.views.WebPersonalizationResults(a.users)), (new twttr.views.WebPersonalizationSettings(a)).render(this.$node.empty())
            },
            _allow: function() {
                var a = this;
                a._render({
                    show_results: !0,
                    results_loading: !0
                }), a._hasAllowed = !0, this._updateSettings(!0, function(b) {
                    b ? (twttr.showError(_("We’re not able to set your preference at this time. Please try again later.")), a._render({
                        show_results: !1
                    })) : a._displayResults()
                })
            },
            _disallow: function() {
                var a = this;
                twttr.loggedIn ? twttr.showError(_("Thanks. We’ve set your preference. This will go into effect on other browsers once you log into Twitter on that browser.")) : twttr.showMessage(_("Thanks. We’ve set your preference.")), a._render({
                    show_results: !1
                }), this._updateSettings(!1, function(b) {
                    b ? (twttr.showError(_("We’re not able to set your preference at this time. Please try again later.")), a._render({
                        show_results: a._hasAllowed,
                        results_loading: !a._users,
                        users: a._users
                    })) : a.trigger("disallow")
                })
            },
            _displayResults: function() {
                var a = this;
                this._render({
                    show_results: !0,
                    results_loading: !0
                }), twttr.API.User.recommendedUsers2({
                    personalized: !0,
                    force_bq: !0,
                    limit: 60,
                    success: function(b, c) {
                        var d = b.map(function(a) {
                            return a.user
                        });
                        a._users = d, a._render({
                            users: d,
                            show_results: !0
                        }), trackClient({
                            component: "user_recommendations",
                            element: "initial",
                            action: "results"
                        }, {
                            item_count: d.length() || 0
                        }), d.length() || trackClient({
                            component: "user_recommendations",
                            element: "initial",
                            action: "no_results"
                        }, {
                            item_count: 0
                        })
                    },
                    error: function() {
                        twttr.showError(_("We can’t show you tailored suggestions at this time. Please try again later."))
                    }
                })
            },
            _updateSettings: function(a, b) {
                twttr.loggedIn ? twttr.currentUser.updatePersonalizationSettings({
                    use_cookie_personalization: a,
                    cookie_personalization_prompt_displayed: !0
                }, {
                    error: function() {
                        b("error :(")
                    },
                    complete: function() {
                        b()
                    }
                }) : a ? b() : $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "/account/turn_off_cookie_personalization.json",
                    data: {
                        authenticity_token: twttr.API.getConfig().postAuthenticityToken
                    },
                    complete: function() {
                        b()
                    },
                    error: function() {
                        b("error :(")
                    }
                })
            }
        }).click({
            ".js-web-personalization-allow": function(a, b) {
                this._allow(), trackClient({
                    element: "allow",
                    action: "click"
                })
            },
            ".js-web-personalization-disallow": function(a, b) {
                this._disallow(), trackClient({
                    element: "disallow",
                    action: "click"
                })
            },
            ".js-web-personalization-turnoff": function(a, b) {
                this._disallow(), trackClient({
                    element: "turnoff",
                    action: "click"
                })
            },
            ".js-web-personalization-signup .signup-btn": function(a, b) {
                trackClient({
                    section: "signup_callout",
                    component: "form",
                    action: "signup_click"
                })
            }
        });
        a(c)
    })
});
provide("photo/turkey", function(a) {
    using().as(function(b) {
        twttr.provide("twttr.turkey", {
            tweetBoxId: 1,
            imageMaxDim: 2048,
            turkeyCallbacks: {},
            swfCallbacks: {},
            swfErrorCallbacks: {},
            swfPath: "/phoenix/flash/PhotoHelper.swf",
            swfPreloaded: !1,
            errorTypes: {
                tooLarge: "tooLarge",
                notImage: "notImage",
                ioError: "ioError",
                maxFiles: "maxFiles",
                dupe: "duplicate"
            },
            getTweetBoxId: function() {
                return twttr.turkey.preloadSwf(), "tweetbox_" + this.tweetBoxId++
            },
            getFileName: function(a) {
                if (a.indexOf("/") == -1 && a.indexOf("\\") == -1) return a;
                var b = a.match(/(.*)[\/\\]([^\/\\]+\.\w+)$/);
                return b[2]
            },
            validatePhoto: function(a) {
                return /(.*)\.(jpg|jpeg|png|gif)/i.test(a)
            },
            getThumbnailOffsets: function(h, a, b) {
                var c = {};
                if (a == h) return {
                    height: b,
                    width: b,
                    left: 0,
                    top: 0
                };
                if (h < b || a < b) h < b && a < b ? (c.top = (b - h) / 2, c.left = (b - a) / 2) : a > h ? c.top = (b - h) / 2 : c.left = (b - a) / 2;
                else if (a > h) {
                    var d = b / h * a;
                    c = {
                        height: b,
                        width: d,
                        left: -(d - b) / 2,
                        top: 0
                    }
                } else if (h > a) {
                    var e = b / a * h;
                    c = {
                        height: e,
                        width: b,
                        top: -(e - b) / 2,
                        left: 0
                    }
                }
                return c
            },
            hasFileReader: function() {
                try {
                    return twttr.is.object(new FileReader)
                } catch (a) {
                    return !1
                }
            },
            resizeImage: function(a, b) {
                var c = new FileReader;
                c.onerror = function() {
                    b(!1)
                }, c.onload = function(a) {
                    var c = new Image,
                        d = document.createElement("canvas"),
                        e = d.getContext("2d");
                    c.onload = function() {
                        if (c.width < twttr.turkey.imageMaxDim && c.height < twttr.turkey.imageMaxDim) {
                            b(a.target.result.split(";base64,")[1]);
                            return
                        }
                        var f, h;
                        c.width > c.height ? (f = twttr.turkey.imageMaxDim, h = c.height / c.width * twttr.turkey.imageMaxDim) : (h = twttr.turkey.imageMaxDim, f = c.width / c.height * twttr.turkey.imageMaxDim), d.width = f, d.height = h, e.drawImage(c, 0, 0, f, h);
                        var g = d.toDataURL("image/jpeg");
                        b(g.split("data:image/jpeg;base64,")[1])
                    }, c.onerror = function() {
                        b(!1)
                    }, c.src = a.target.result
                }, c.readAsDataURL(a)
            },
            hasFlash: function() {
                try {
                    return $.flash.available && $.flash.hasVersion(10)
                } catch (a) {
                    return !1
                }
            },
            shouldUseFlash: function() {
                return !twttr.turkey.hasFileReader() && twttr.turkey.hasFlash() && twttr.decider.isAvailable("phoenix_turkey_flash")
            },
            tweetboxMode: function() {
                return twttr.turkey.hasFileReader() ? "html5" : twttr.turkey.shouldUseFlash() ? "flash" : "html4"
            },
            preloadSwf: function() {
                if (twttr.turkey.swfPreloaded || !twttr.turkey.shouldUseFlash()) return;
                $node = twttr.turkey.loadSwf($("#flash-object-container"), 0), setTimeout(function() {
                    $node && $node.remove()
                }, 1e3)
            },
            loadSwf: function(a, b) {
                return a.flash({
                    swf: twttr.turkey.swfPath,
                    height: 25,
                    width: 28,
                    wmode: "transparent",
                    AllowScriptAccess: "sameDomain",
                    flashvars: {
                        tweetBoxId: b
                    }
                }), a.find("object")
            },
            shouldShowTurkeyPrompt: function() {
                return twttr.promptbird.getPromptByFormat(["modal"])
            },
            dismissShowTurkeyPrompt: function(a) {
                var b = {
                    prompt_id: a
                },
                    c = {
                        success: $.noop
                    };
                twttr.API.Promptbird.dismissPrompt(b, c), delete twttr.promptbird.cache
            },
            showFirstTimeTurkey: function() {
                if (twttr.loggedIn) {
                    var a = this;
                    using("boot/bootstrap_data", function(b) {
                        var c = a.shouldShowTurkeyPrompt();
                        if (c && c.prompt.format === "modal" && c.prompt.template_name == "first_time_turkey") {
                            a.dismissShowTurkeyPrompt(c.prompt.prompt_id);
                            var d = 600,
                                e = new twttr.widget.Dialog({
                                    view: "FirstTimeTurkey",
                                    modal: !0,
                                    draggable: !1,
                                    css: {
                                        width: 530
                                    },
                                    positioning: {
                                        top: twttr.$win.height() <= d ? 20 : 150
                                    }
                                });
                            e.$container.find(".button.ok-thanks").bind("click", function(a) {
                                a.preventDefault(), a.stopPropagation(), e.destroy()
                            }), e.open()
                        }
                    })
                }
            }
        }), a(twttr.turkey)
    })
});
provide("photo/photo_thumbnails", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.turkey.PhotoThumbnails").subclassOf(twttr.components.Base).deciderKey("turkey").initializer(function(a, b, c, d) {
            this.FILE_SIZE_LIMIT = 3145728, this.TIMEOUT_BY_BYTES = 10240, this.defaultTimeoutDelay = 12e4, this.timeoutDelay = this.defaultTimeoutDelay, this.maxFiles = 1, this.useIframe = !1, this.enabled = !0, this.files = [], this.$selectedFiles = b, this.$camera = c, this.$swf = this.$camera.find(".swf"), this.tweetBoxId = d, this.editor = a, this.$thumbsWrapper = $("<div/>").addClass("twitter-media-thumbs"), this.$thumbsWrapper.appendTo(this.editor.$container), this.thumbnailsMessage = _("Images will appear as links"), this.thumbnailMessage = _("Image will appear as a link"), this.$thumbnailMessage = $("<div/>").addClass("media-thumbnails-message"), this.$thumbnailMessage.appendTo(this.$thumbsWrapper), this.maxPhotosMessage = _("Maximum number of images reached."), this.addPhotoMessage = _("Add an image"), this.hasFileReader = twttr.turkey.hasFileReader(), this.shouldUseFlash = twttr.turkey.shouldUseFlash(), this.html4Mode = !this.hasFileReader && !this.shouldUseFlash, this.$editorTextarea = this.editor.$container.find("textarea"), this.textareaPaddingBottom = this.$editorTextarea.css("padding-bottom"), this.createThumbnails(), this.createTipsy()
        }).methods(twttr.EventProvider).methods({
            animateShow: function(a) {
                var b = this;
                this.html4Mode ? (this.$editorTextarea.css("padding-bottom", a), this.editor.$container.addClass("has-thumbnails"), this.$camera.addClass("has-turkeys"), this.$thumbsWrapper.show()) : (this.$camera.addClass("has-turkeys"), this.$editorTextarea.animate({
                    paddingBottom: a
                }, 300, "linear", function() {
                    b.editor.$container.addClass("has-thumbnails"), b.$thumbsWrapper.show()
                }))
            },
            animateHide: function(a, b) {
                var c = this;
                this.editor.$container.removeClass("has-thumbnails").addClass("closing"), !this.html4Mode && !b ? (this.$camera.removeClass("has-turkeys"), this.$editorTextarea.animate({
                    paddingBottom: a
                }, 200, "linear", function() {
                    c.editor.$container.removeClass("has-thumbnails").removeClass("closing")
                })) : (this.$editorTextarea.css("padding-bottom", a), this.$camera.removeClass("has-turkeys")), this.$thumbsWrapper.hide()
            },
            updateEmptyFeedback: function() {
                this.inst.$feedback.text() == "" && this.updateFeedback()
            },
            tweet: function(a, b) {
                var c = this,
                    d = {};
                this.useIframe && (d.iframe_callback = "window.top.twttr.turkey.turkeyCallbacks." + this.tweetBoxId);
                switch (a) {
                case "update":
                    d.status = b[0], $.extend(d, b[1]);
                    break;
                case "reply":
                    d.status = b[1], d.in_reply_to_status_id = b[0], $.extend(d, b[2])
                }
                this.useIframe ? this.tweetIframe(d) : this.tweetAjax(d)
            },
            tweetAjax: function(a) {
                var b = this;
                a["media_data[]"] = this.files[0].input.val(), a.timeout = $.noop;
                var c = a.error;
                a.error = function(a) {
                    c(a), b.scribeEvent("failure", {
                        message: "serverError"
                    })
                };
                var d = a.success;
                a.success = function(a) {
                    d(a, twttr.turkey.tweetboxMode())
                }, twttr.API.Status.updateWithMedia(a.status, a)
            },
            tweetIframe: function(a) {
                var b = this,
                    c = setTimeout(function() {
                        twttr.turkey.turkeyCallbacks[b.tweetBoxId] = $.noop, a.error({
                            error: !0,
                            response: {
                                error: "Tweeting a photo timed out."
                            }
                        }), a.complete(), b.scribeEvent("failure", {
                            message: "timeout",
                            duration_ms: b.timeoutDelay
                        })
                    }, this.timeoutDelay);
                twttr.turkey.turkeyCallbacks[this.tweetBoxId] = function(d) {
                    if (d.error) {
                        var e = {
                            error: !0,
                            status: 500,
                            response: d,
                            reason: "An error occured"
                        };
                        a.error(e), a.complete(), clearTimeout(c), b.scribeEvent("failure", {
                            message: "serverError"
                        })
                    } else a.success(d, twttr.turkey.tweetboxMode()), a.complete(), clearTimeout(c)
                }, this._submitTweetOptions(a)
            },
            _submitTweetOptions: function(a) {
                this.resetForm();
                for (var b in a)!twttr.is.fn(a[b]) && !twttr.is.object(a[b]) && $('<input type="hidden" reset="true"/>').attr("name", b).attr("value", a[b]).appendTo(this.$selectedFiles);
                this.$selectedFiles.submit()
            },
            resetForm: function() {
                this.$selectedFiles.find("input[reset='true']").remove()
            },
            enable: function() {
                this.files.length > 0 && this.animateShow(this.getPadding(this.files.length)), this.$camera.show(), this.enabled = !0
            },
            disable: function() {
                this.files.length > 0 && this.animateHide(this.getPadding(0)), this.$camera.hide(), this.enabled = !1
            },
            hasItems: function() {
                return this.files.length > 0 && this.enabled
            },
            count: function() {
                return this.files.length
            },
            hasDuplicate: function(a) {
                for (var b = 0; b < this.files.length; b++) if (this.files[b].input.value == a.value) return !0;
                return !1
            },
            getPadding: function(a) {
                return a === 0 ? this.textareaPaddingBottom : this.html4Mode ? 12 + 25 * a + 2 * (a - 1) : 60
            },
            checkFiles: function() {
                var a = this.files.length;
                a >= this.maxFiles ? (this.$camera.addClass("max-turkeys"), this.editor.trigger("heightChange"), this.destroySwf()) : (this.$camera.removeClass("max-turkeys"), this.editor.trigger("heightChange"), this.createSwf());
                var b = this.getPadding(a);
                a > 0 ? (this.animateShow(b), a == 1 ? this.$thumbnailMessage.text(this.thumbnailMessage) : this.$thumbnailMessage.text(this.thumbnailsMessage)) : this.animateHide(b), this.trigger("photoChanged")
            },
            removeAllFiles: function() {
                $.each(this.files, function(a, b) {
                    $(b.input).remove(), b.item.remove()
                }), this.files = []
            },
            removeFile: function(a) {
                var b = this;
                $(a.input).remove(), a.item.remove();
                var c = $.inArray(a, b.files);
                c != -1 && b.files.splice(c, 1), b.checkFiles(), this.scribeEvent("remove")
            },
            hasMaxFiles: function() {
                return this.files.length >= this.maxFiles
            },
            addFileError: function(a, b) {
                this.killTipsy();
                if (a == twttr.turkey.errorTypes.tooLarge) twttr.showError(_("The file you selected is greater than the 3MB limit."));
                else if (a == twttr.turkey.errorTypes.notImage || a == twttr.turkey.errorTypes.ioError) twttr.showError(_("You did not select an image"));
                else if (a == twttr.turkey.errorTypes.maxFiles) {
                    var c;
                    this.maxFiles === 1 ? c = _("Can only tweet one image at a time.") : c = _("Cannot tweet more than {{numberOfPhotos}} images at a time.", {
                        numberOfPhotos: this.maxFiles
                    }), twttr.showError(c)
                } else a == twttr.turkey.errorTypes.dupe && twttr.showError(_("You already selected this file"));
                this.scribeEvent("failure", {
                    message: a
                })
            },
            killTipsy: function() {
                this.$camera.data("tipsy") && this.$camera.data("tipsy").$tip && this.$camera.data("tipsy").$tip.hide()
            },
            scribeEvent: function(a, b) {
                var c = b ? b : {};
                c.context = "photo_uploader", c.event_info = twttr.turkey.tweetboxMode(), trackClient({
                    component: "tweetbox",
                    action: a
                }, c)
            },
            createThumbnailImage: function(a, b, c) {
                var d = this,
                    e = $("<img/>").attr("alt", a);
                return e.appendTo(c.item), e.bind("load", function() {
                    var a = twttr.turkey.getThumbnailOffsets(e[0].height, e[0].width, 55);
                    e.css(a), c.item.find(".upload-file-close").bind("click", function(a) {
                        a.stopPropagation(), a.preventDefault(), d.removeFile(c)
                    }), c.item[Modernizr.csstransitions ? "animateWithCss" : "animate"]({
                        opacity: 100
                    }, 200, Modernizr.csstransitions ? "default" : "linear"), d.checkFiles()
                }), e.attr("src", b), e
            },
            createThumbnail: function() {
                var a;
                return this.html4Mode ? a = $('<div class="upload-file upload-filename">        <span class="filename"></span><a href="#" class="thumbnail-close upload-file-close"><span></span></a>        </div>') : a = $('<div class="upload-file upload-thumbnail">        <a href="#" class="thumbnail-close upload-file-close"><span></span></a>        </div>').css({
                    opacity: 0
                }), a.appendTo(this.$thumbs), a
            },
            addFileItem: function(a, b) {
                var c = {
                    input: a,
                    item: b
                };
                return this.files.push(c), this.$selectedFiles.append(a), this.resetAddPhoto(), this.scribeEvent("add"), this.checkFiles(), c
            },
            addFileData: function(a, b, c) {
                this.setTimeoutBySize(a.length);
                var d = $('<input type="hidden" maxlength="' + this.FILE_SIZE_LIMIT + '" name="media_data[]"/>');
                d.val(a);
                var e = this.createThumbnail(),
                    f = this.addFileItem(d, e),
                    g = this.createThumbnailImage(c, "data:image/jpeg;base64," + b, f);
                this.killTipsy()
            },
            addFileInput: function(a) {
                var b = this,
                    c = this.createThumbnail(),
                    d = this.addFileItem(a, c);
                if (this.hasFileReader && a.files) {
                    var e = a.files[0];
                    this.setTimeoutBySize(e.size);
                    var f = new FileReader;
                    f.onloadend = function(c) {
                        var e = c.target.result,
                            f = b.createThumbnailImage(twttr.turkey.getFileName(a.value), e, d)
                    }, f.readAsDataURL(e)
                } else twttr.helpers.ellipsify(c.find(".filename").text(twttr.turkey.getFileName(a.value))), c.find(".upload-file-close").bind("click", function(a) {
                    a.stopPropagation(), a.preventDefault(), b.removeFile(d)
                }), this.inst && this.inst.setFeedback(this.tweetboxFeedback)
            },
            addFile: function(a) {
                var b = this;
                if (this.hasMaxFiles()) {
                    this.addFileError(twttr.turkey.errorTypes.maxFiles);
                    return
                }
                if (!twttr.turkey.validatePhoto(a.value)) {
                    this.addFileError(twttr.turkey.errorTypes.notImage);
                    return
                }
                if (this.hasDuplicate(a)) {
                    this.addFileError(twttr.turkey.errorTypes.dupe);
                    return
                }
                var c;
                a.files && a.files[0] && (c = a.files[0]);
                var d = function(c) {
                        c ? b.addFileData(c, c, twttr.turkey.getFileName(a.value)) : b.addFileError(twttr.turkey.errorTypes.notImage)
                    };
                if (c) if (!twttr.decider.isAvailable("phoenix_turkey_html5_resize") || !this.hasFileReader) {
                    if (!this.checkFileSize(c)) {
                        this.addFileError(twttr.turkey.errorTypes.tooLarge);
                        return
                    }
                    this.useIframe = !0, this.addFileInput(a)
                } else twttr.turkey.resizeImage(c, d);
                else this.useIframe = !0, this.addFileInput(a);
                this.killTipsy()
            },
            checkFileSize: function(a) {
                return !twttr.is.def(a.size) || a.size <= this.FILE_SIZE_LIMIT
            },
            getTimeoutBySize: function(a) {
                var b = Math.ceil(a / this.TIMEOUT_BY_BYTES * 1e3);
                return b < this.defaultTimeoutDelay ? this.defaultTimeoutDelay : b
            },
            setTimeoutBySize: function(a) {
                this.timeoutDelay = this.getTimeoutBySize(a)
            },
            resetPhotoPost: function() {
                this.useIframe = !1, this.$selectedFiles.empty();
                var a = twttr.API.getConfig().postAuthenticityToken;
                $('<input type="hidden" name="post_authenticity_token" value="' + a + '"/>"').appendTo(this.$selectedFiles), $('<input type="hidden" name="include_entities" value="true"/>').appendTo(this.$selectedFiles)
            },
            reset: function() {
                this.removeAllFiles(), this.$camera.removeClass("max-turkeys"), this.editor.trigger("heightChange"), this.animateHide(this.getPadding(0), !0), this.timeoutDelay = this.defaultTimeoutDelay
            },
            createThumbnails: function() {
                var a = this;
                this.$thumbs = $("<div class='media-thumbnails' />"), this.$thumbs.prependTo(this.$thumbsWrapper), this.html4Mode && this.editor.$container.addClass("html4"), this.resetPhotoPost(), this.resetAddPhoto(), this.createSwf()
            },
            destroySwf: function() {
                if (!this.shouldUseFlash) return;
                this.$swf.empty()
            },
            createSwf: function() {
                if (!this.shouldUseFlash) return;
                var a = this;
                setTimeout(function() {
                    twttr.turkey.swfErrorCallbacks[a.tweetBoxId] = twttr.bind(a, a.addFileError), twttr.turkey.swfCallbacks[a.tweetBoxId] = twttr.bind(a, a.addFileData), twttr.turkey.loadSwf(a.$swf, a.tweetBoxId)
                }, 500)
            },
            createTipsy: function() {
                var a = this;
                this.$camera.tipsy({
                    gravity: "nw",
                    fade: !0,
                    opacity: .9,
                    title: twttr.bind(this, this.getTipsyTitle)
                }), this.$camera.click(function() {
                    setTimeout(function() {
                        a.$camera.data("tipsy") && a.$camera.data("tipsy").hide()
                    }, 750)
                })
            },
            getTipsyTitle: function() {
                return this.files.length >= this.maxFiles ? "" : this.addPhotoMessage
            },
            resetAddPhoto: function() {
                var a = this;
                this.$camera.find('input[type="file"]').remove();
                var b = $('<input type="file" class="turkey-file-input" name="media[]"></input>');
                this.$camera.append(b), b.bind("change", function(b) {
                    a.addFile(b.target)
                }), this.$camera.bind("click", function() {
                    a.scribeEvent("click")
                })
            },
            remove: function() {
                this.$thumbsWrapper.remove()
            }
        }), a(twttr.turkey.PhotoThumbnails)
    })
});
provide("images", function(a) {
    using().as(function(b) {
        twttr.images = {
            renderProviderMedia: function(a, b) {
                var a = a.concat(),
                    c = twttr.images.generateDivs($.map(a, function(a) {
                        return a.url
                    }), b);
                this.bindLoadImageHandler(c, b.componentName);
                var d = function(a, b) {
                        setTimeout(function() {
                            a.trigger("failedToResolve", [b])
                        }, 0)
                    };
                return $.each(a, function(a, e) {
                    var f = $(c[a]);
                    e.mediaType.getImageURL(b.size, function(a) {
                        a ? twttr.images.scaleImageIntoDiv(f, a, b) : d(f, "getImageUrl did not return a resolvedURL")
                    }, b.dimension)
                }), c
            },
            renderMediaUrls: function(a, b, c) {
                var d = twttr.images.generateDivs(a, b);
                this.bindLoadImageHandler(d, b.componentName);
                var e = {
                    success: function(a, c) {
                        twttr.images.scaleImageIntoDiv(a, c, b)
                    },
                    error: function(a, b) {
                        setTimeout(function() {
                            a.trigger("failedToResolve", [b])
                        }, 0)
                    }
                };
                return twttr.images.resolveDataUrls(d, b, e, c), d
            },
            animateImageFadeIn: function(a, b, c) {
                var d = Modernizr.csstransitions ? "animateWithCss" : "animate";
                a.css("opacity", 0), a[d]({
                    opacity: c || 1
                }, b || 500, "swing")
            },
            renderMediaUrl: function(a, b, c) {
                return this.renderMediaUrls([a], b, c)
            },
            generateDivs: function(a, b) {
                var c = $(),
                    d = b.thumbnailViewClass || twttr.views.Thumbnail;
                return $.each(a, function(a, e) {
                    var f = $((new d({
                        url: e,
                        width: b.width,
                        height: b.height,
                        lineHeight: b.height + "px"
                    })).html());
                    c = c.add(f)
                }), c
            },
            bindLoadImageHandler: function(a, b) {
                var c = this;
                a.bind("loadImage", function() {
                    var a = $(this);
                    if (a.data("loaded") === !0) return;
                    var d = a.data("resolvedUrl"),
                        e = a.data("childImg");
                    if (d && e) {
                        if (twttr.decider.isAvailable("profile_image_latency")) {
                            var f = twttr.media.matchInstance(a.data("url")),
                                g = new twttr.Profiler(c.createProfilingDescription(f.partnerName, d, b));
                            $(e[0]).load(function() {
                                g.done()
                            })
                        }
                        e[0].src = d, a.data("loaded", !0)
                    } else a.data("loadWhenResolved", !0)
                })
            },
            createProfilingDescription: function(a, b, c) {
                return c = c ? c : "", [a.toLowerCase(), JSON.stringify(b), c.toLowerCase()].join(".")
            },
            resolveDataUrls: function(a, b, c, d) {
                a.each(function(a, e) {
                    var f = $(e),
                        g = f.attr("data-url") || e.href;
                    twttr.media.resolveImageUrl(g, b.size, {
                        success: function(a) {
                            c.success && c.success(f, a)
                        },
                        error: function(a) {
                            c.error && c.error(f, a)
                        },
                        tweet: d,
                        filter: b.filter
                    }, b.dimension)
                })
            },
            scaleImageIntoDiv: function(a, b, c) {
                b = b.replace(/([^:])\/\//g, "$1/");
                var d = $("<img/>").addClass("scaled-image");
                d.bind("load", function() {
                    var b = twttr.images.calculateScaleDimensions({
                        containerWidth: c.width,
                        containerHeight: c.height,
                        itemWidth: this.width,
                        itemHeight: this.height,
                        scalingMode: c.scalingMode
                    });
                    d.attr({
                        origHeight: this.height,
                        origWidth: this.width
                    }), c.divMode === "snap" ? a.css(b).css("line-height", b.height + "px") : (d.css(b), d.css({
                        top: Math.floor(c.height / 2 - b.height / 2),
                        left: Math.floor(c.width / 2 - b.width / 2)
                    })), setTimeout(function() {
                        d.appendTo(a.find("div.thumbnail-wrapper")), twttr.images.addPrivacyCover(d), a.trigger("loaded")
                    }, 0)
                }).bind("error", function() {
                    a.trigger("failedToLoad")
                }), a.data("resolvedUrl", b).data("childImg", d), (!c.delayLoading || a.data("loadWhenResolved")) && a.trigger("loadImage")
            },
            resizeImageInDiv: function(a, b) {
                if (!a) return;
                var c = a.find("img.scaled-image");
                if (c.length == 0) return;
                var d = twttr.images.calculateScaleDimensions({
                    containerWidth: b.width,
                    containerHeight: b.height,
                    itemWidth: parseInt(c.attr("origWidth"), 10),
                    itemHeight: parseInt(c.attr("origHeight"), 10),
                    scalingMode: b.scalingMode
                });
                c.attr(d).trigger("resize"), b.divMode === "snap" ? a.css(d).css("line-height", d.height + "px") : c.css({
                    top: Math.floor(b.height / 2 - d.height / 2),
                    left: Math.floor(b.width / 2 - d.width / 2)
                })
            },
            calculateScaleDimensions: function(a) {
                function b() {
                    return {
                        width: i,
                        height: g
                    }
                }
                function c() {
                    return {
                        width: f,
                        height: g / k
                    }
                }
                function d() {
                    return {
                        width: i / l,
                        height: e
                    }
                }
                var e = a.containerHeight,
                    f = a.containerWidth,
                    g = a.itemHeight,
                    i = a.itemWidth,
                    j = a.scalingMode,
                    k = i / f,
                    l = g / e;
                switch (j) {
                case "fit":
                    return k < 1 && l < 1 ? b() : k > l ? c() : d();
                case "trim":
                    return k < 1 || l < 1 ? b() : k > l ? d() : c();
                default:
                    return {
                        width: f,
                        height: e
                    }
                }
            },
            addPrivacyCover: function(a, b) {
                if (a.length <= 0 || !twttr.decider.isAvailable("prevent_right_click_on_images")) return;
                var c = function() {
                        var b = a[0],
                            d = d || a.parent();
                        d.find(".cover").remove(), d.addClass("has-cover").height(b.height).width(b.width), d.closest(".media-instance-container").width(b.width), $("<div/>", {
                            "class": "cover",
                            height: b.height,
                            width: b.width
                        }).appendTo(d), a.bind("resize", c)
                    },
                    d = 0,
                    e = function() {
                        a[0].complete === !0 ? setTimeout(c, 0) : (a.bind("load", function() {
                            setTimeout(c, 0)
                        }), d < 10 && setTimeout(e, 500), d++)
                    };
                e()
            },
            SCRIBABLE_PROVIDERS: ["dailybooth", "flickr", "instagram", "lockerz", "photobucket", "twimg", "twitpic", "yfrog", "youtube"],
            scribeImageFailure: function(a, b, c) {
                if (!twttr.decider.isAvailable("scribe_image_failures")) return;
                var d = twttr.media.match(c);
                if (d && d.partnerName) {
                    var e = d.partnerName.toLowerCase();
                    $.inArray(e, this.SCRIBABLE_PROVIDERS) && a.scribe({
                        component: b,
                        action: "third_party_error"
                    }, {
                        url: c,
                        event_info: e
                    })
                }
            }
        }, a(twttr.images)
    })
});
provide("components/ContactImportLauncher", function(a) {
    using("externalOauthPopup").as(function(b) {
        twttr.klass("twttr.components.ContactImportLauncher").subclassOf(twttr.components.Base).initializer(function(a) {
            var b = this;
            this.bind("addedToPage", function() {
                if (!twttr.decider.isAvailable("contact_import")) return;
                twttr.API.AddressBook.contactsServices({
                    success: function(c) {
                        if (!c || !c.length) {
                            b.trigger("notRendered", "no_items");
                            return
                        }(new twttr.views.DashboardContactImport({
                            services: c,
                            compact: a
                        })).render(b.$node, "append"), b.$node.delegate(".service-link", "click", function(a) {
                            b.launchService($(this))
                        }), b.trigger("servicesLoaded")
                    },
                    error: function() {
                        b.trigger("notRendered", "darkmoded")
                    }
                })
            })
        }).methods({
            launchService: function(a) {
                var c = a.attr("data-url"),
                    d = a.attr("data-width"),
                    e = a.attr("data-height");
                if (c) {
                    a.attr("data-popup") == "true" ? b.externalOauthPopup({
                        url: c,
                        width: d,
                        height: e,
                        callbackUrl: twttr.router.whoToFollowImportMatchesPath()
                    }) : window.open(c, "_blank").focus();
                    var f = a.find("strong.service-name").attr("data-service-id");
                    trackClient({
                        section: "dashboard",
                        component: "contact_import_launcher",
                        action: "launch_service"
                    }, {
                        event_info: f,
                        context: "import"
                    })
                }
            }
        }), a(twttr.components.ContactImportLauncher)
    })
});
provide("streams/ListStream", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.stream("twttr.streams.ListStream", function(a, b) {
            this._cursor = -1, twttr.streams.Stream.apply(this, arguments), this.scribbler = twttr.Scribbler.clientEvent, twttr.loggedIn && !twttr.isT1 && this._registerUpdateStreamEvent(twttr.API.List, "follow unfollow", function(a, b) {
                return b.sync("following", a.type === "follow"), b
            })
        }).subclassOf(twttr.streams.Stream).methods({
            itemViewClass: "StreamList",
            streamItemType: "list",
            streamItemId: function(a) {
                return a.uri
            },
            rerenderItem: function(a, b) {
                var c = this.selectedItem(a);
                c.length === 0 && (c = this.$find("div.js-list[data-list-id='" + a + "']").closest(".js-stream-item")), c.replaceWith(this._renderItemHtml(b))
            },
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            _fetchItems: function(a) {
                var b = this;
                if (!twttr.decider.isAvailable("list_streams") || this.constructor._deciderKey && !twttr.decider.isAvailable(this.constructor._deciderKey)) {
                    a(this, twttr.streams.DECIDER);
                    return
                }
                twttr.API.User.find(this.screenName)[this.API_METHOD]({
                    cursor: this._cursor,
                    success: function(c, d) {
                        b._cursor = d.response.next_cursor, b.push(c.array), a(b, twttr.streams.SUCCESS), b._cursor || b.reachedTheEnd()
                    },
                    error: function(c) {
                        c.status === 502 ? a(b, twttr.streams.WHALE) : a(b, twttr.streams.ERROR)
                    },
                    timeout: function(a) {
                        a.retry()
                    },
                    cancel: function() {
                        a(b, twttr.streams.TIMEOUT)
                    }
                })
            },
            _scribeResults: function(a, b, c) {
                this._scribeEmptyResults(a, b, c);
                if (b.length) {
                    var d = twttr.map(b, function(a) {
                        return a.fullName
                    });
                    this.scribbler.scribe({
                        component: "stream",
                        action: "results"
                    }, {
                        item_names: d,
                        item_count: d.length,
                        event_value: d.length,
                        referring_event: a
                    })
                }
            }
        });
        a(c)
    })
});
provide("streams/OwnListsStream", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.stream("twttr.streams.OwnLists", function(a, b) {
            twttr.streams.ListStream.apply(this, arguments), this._registerEvents(a)
        }).subclassOf(twttr.streams.ListStream).methods({
            API_METHOD: "lists",
            _setTitle: function(a) {
                this.stream_user_is_current_user() ? a(_("Your lists")) : a(_("{{username}}'s lists", {
                    username: this.screenName
                }))
            },
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("You haven't created any lists yet.") : _("@{{screen_name}} hasn't created any lists yet.", {
                    screen_name: this.screenName
                })
            },
            _registerEvents: function(a) {
                if (twttr.loggedIn) {
                    var b = function(b, c) {
                            return twttr.helpers.isCurrentUser(a.screenName) ? c : null
                        };
                    this._registerAddToStreamEvent(twttr.API.List, "create", b), this._registerRemoveFromStreamEvent(twttr.API.List, "delete", b, "uri"), this._registerUpdateStreamEvent(twttr.API.List, "update", b)
                }
            }
        }).statics({
            _deciderKey: "list_stream_own_lists"
        });
        a(c)
    })
});
provide("streams/SubscriptionsStream", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.stream("twttr.streams.Subscriptions", function(a, b) {
            twttr.streams.ListStream.apply(this, arguments), this.scribbler = twttr.Scribbler.clientEvent, this._registerEvents(a)
        }).subclassOf(twttr.streams.ListStream).methods({
            API_METHOD: "subscriptions",
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("You aren't following any lists yet.") : _("@{{screen_name}} isn't following any lists yet.", {
                    screen_name: this.screenName
                })
            },
            _registerEvents: function(a) {
                if (twttr.loggedIn) {
                    var b = function(b, c) {
                            return twttr.helpers.isCurrentUser(a.screenName) ? c : null
                        };
                    this._registerAddToStreamEvent(twttr.API.List, "follow", b), this._registerRemoveFromStreamEvent(twttr.API.List, "unfollow", b, "uri"), this._registerUpdateStreamEvent(twttr.API.List, "update", b)
                }
            }
        }).statics({
            _deciderKey: "list_stream_subscriptions"
        });
        twttr.isT1 ? c.methods({
            _setTitle: function(a) {
                a(_("Lists"))
            },
            _setViewToggler: function(a, b) {
                a(new twttr.views.ListsStreamViewToggler(!1))
            },
            _setHeaderButton: function(a, b) {
                a(new twttr.views.CreateListButton)
            }
        }) : c.methods({
            _setTitle: function(a) {
                a(_("Lists {{username}} follows", {
                    username: this.screenName
                }))
            }
        }), a(c)
    })
});
provide("streams/MembershipsStream", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.stream("twttr.streams.Memberships", function(a, b) {
            twttr.streams.ListStream.apply(this, arguments)
        }).subclassOf(twttr.streams.ListStream).methods({
            API_METHOD: "memberships",
            _getEmptyStreamHtml: function() {
                return this.stream_user_is_current_user() ? _("You aren't listed yet.") : _("@{{screen_name}} isn't listed yet.", {
                    screen_name: this.screenName
                })
            }
        }).statics({
            _deciderKey: "list_stream_memberships"
        });
        twttr.isT1 ? c.methods({
            _setTitle: function(a) {
                a(_("Lists"))
            },
            _setViewToggler: function(a, b) {
                a(new twttr.views.ListsStreamViewToggler(!0))
            },
            _setHeaderButton: function(a, b) {
                twttr.helpers.isCurrentUser(b.screenName) && a(new twttr.views.CreateListButton)
            }
        }) : c.methods({
            _setTitle: function(a) {
                a(_("Lists following {{username}}", {
                    username: this.screenName
                }))
            }
        }), a(c)
    })
});
provide("streams/MembershipsStreamUser", function(a) {
    using("_", "streams/MembershipsStream").as(function(b, _) {
        var c = twttr.stream("twttr.streams.MembershipsUser", function(a, b) {
            twttr.streams.Memberships.apply(this, arguments)
        }).subclassOf(twttr.streams.Memberships).methods({
            _setViewToggler: function(a, b) {
                a(new twttr.views.ProfileListsStreamViewToggler(!1, {
                    screen_name: b.screenName
                }))
            }
        });
        a(c)
    })
});
provide("multiGlobals/trackSession", function(a) {
    var b = {};
    b._maxLength = 1e3, b._cookieName = "session_buffer", b._defaultJson = "[]", b._getStorage = function() {
        var a = $.cookie(b._cookieName) || b._defaultJson,
            c;
        try {
            c = JSON.parse(a)
        } catch (d) {
            c = JSON.parse(b._defaultJson)
        }
        return c
    }, b._setStorage = function(a) {
        var c = JSON.stringify(a);
        if (c.length > b._maxLength) {
            var d = Math.floor(a.length / 2);
            a.splice(d, a.length), c = JSON.stringify(a)
        }
        $.cookie(b._cookieName, c)
    }, b._setSession = function(a) {
        var c = b._getStorage();
        c = $.grep(c, function(b) {
            return a.key !== b.key
        }), c.unshift(a), b._setStorage(c)
    }, b._extractSessions = function(a) {
        var c = b._getStorage(),
            d = [];
        return c = $.grep(c, function(b) {
            return $.inArray(b.key, a) > -1 ? (d.unshift(b), !1) : !0
        }), b._setStorage(c), d
    }, b.start = function(a, c) {
        c = c || {}, b._setSession({
            key: a,
            data: c
        });
        var d = {
            component: a,
            action: "session_start"
        };
        trackClient(d, c)
    }, b.stop = function(a, c) {
        "string" == typeof a && (a = [a]);
        var d = b._extractSessions(a);
        $.each(d, function(a, b) {
            var d = {
                component: b.key,
                action: "session_stop"
            };
            trackClient(d, b.data), c && c(b)
        })
    }, window.startTrackSession = b.start, window.stopTrackSession = b.stop, a(b)
});
provide("streams/SuggestionCategoriesStream", function(a) {
    using("_", twttr.isT1 ? "mixins/SuggestionCategoriesStreamT1" : "", "mixins/discoveryHelper").as(function(b, _, c) {
        var d = twttr.klass("twttr.streams.SuggestionCategoriesStream", function(a, b) {
            a.pathRoot = a.pathRoot || "whoToFollow", twttr.streams.Stream.apply(this, arguments), this.$node.addClass("suggestion-categories");
            var c = this;
            this.$node.delegate("div[data-item-type=suggestion_category]", "click", function(a) {
                var b = $(this).attr("data-item-id"),
                    d = {};
                return d[b] = {
                    item_position: $("div.js-stream-manager-container div.js-stream-item").index($(a.target).closest(".js-stream-item"))
                }, b && (trackClient({
                    component: "suggestion_category",
                    action: "click"
                }, {
                    step: "interests",
                    query: b,
                    item_details: d
                }), c.routePageTo(c.params.pathRoot, "InterestsCategory", {
                    category: b
                })), !1
            })
        }).subclassOf(twttr.streams.Stream).statics({
            cacheCategories: function(a) {
                this.CATEGORIES = a, this.CATEGORY_MAP = this.buildCategoryMap(a)
            },
            buildCategoryMap: function(a) {
                return a.reduce({}, function(a, b) {
                    return a[b.slug] = b, a
                })
            },
            filterTopTweetsCategories: function(a) {
                var b = this.buildCategoryMap(a);
                return a.filter(function(a) {
                    if (a.slug.match(/^(.+)[_-]top-tweets$/i)) {
                        var c = b[RegExp.$1];
                        return c && (c.topTweetsCategory = a), !1
                    }
                    return !0
                })
            }
        }).methods({
            itemViewClass: "StreamSuggestionCategory",
            streamItemType: "suggestion_category",
            sampleSize: "",
            streamItemId: function(a) {
                return a.slug
            },
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            addTipsies: function() {},
            _fetchItems: function(a) {
                var b = this;
                if (!twttr.decider.isAvailable("suggestion_categories_streams")) {
                    a(this, twttr.streams.DECIDER);
                    return
                }
                var c = {
                    sample_size: this.sampleSize,
                    samples: !0,
                    success: function(c) {
                        c = b.constructor.filterTopTweetsCategories(c), b.constructor.cacheCategories(c);
                        var d = c.map(function(a) {
                            var c, d;
                            return a.topTweetsCategory && a.topTweetsCategory.sample && (d = a.topTweetsCategory.sample.shift()) && (c = d.id), a.clone({
                                category_link: b.pagePathFor(b.params.pathRoot, "InterestsCategory", {
                                    category: a.slug
                                }),
                                category_top_tweets_user_id: c,
                                category_top_tweets_is_current_user: !! twttr.currentUser && twttr.currentUser.id == c,
                                following_category_top_tweets: a.topTweetsCategory ? a.topTweetsCategory.followingTopTweets : null
                            })
                        });
                        b.push(d.array), a(b, twttr.streams.SUCCESS), b.addTipsies(), b.reachedTheEnd();
                        var e = c.map(function(a, b) {
                            return a.name
                        });
                        b.scribbler.scribe({
                            component: "stream",
                            action: "results"
                        }, {
                            item_names: e,
                            item_count: e.length()
                        })
                    },
                    error: function() {
                        a(b, twttr.streams.ERROR)
                    }
                };
                b.defaultOpts && (c = twttr.merge(b.defaultOpts, c)), b.params.lang && (c.lang = b.params.lang), b.params.country && (c.country = b.params.country), b.params.city && (c.city = b.params.city), c.top_tweets = !0, twttr.API.SuggestionCategory.getAll(c)
            },
            _setTitle: function(a) {
                this.params.title !== undefined ? a(this.params.title) : a(_("Select the topics you are interested in. Find a few people you want to hear from, then follow them."))
            },
            _getHeaderComponent: function() {
                return this.params.noHeaderFooter ? null : new twttr.components.SuggestionCategoriesList(this.constructor.CATEGORIES, this.params.pathRoot)
            },
            _getStreamEndComponent: function() {
                return this._getHeaderComponent()
            }
        }).mixin(twttr.mixins.discoveryHelper);
        c && d.mixin(c), a(d)
    })
});
provide("streams/SuggestionCategoryMembersStream", function(a) {
    using("_", twttr.isT1 ? "mixins/SuggestionCategoryMembersStreamT1" : "").as(function(b, _, c) {
        var d = twttr.klass("twttr.streams.SuggestionCategoryMembersStream", function(a, b) {
            var c = this;
            a.pathRoot = a.pathRoot || "whoToFollow", twttr.streams.UserStream.apply(this, arguments), this.category = a.suggestionCategory, this.ignoreScribeItemPosition = !1
        }).subclassOf(twttr.streams.UserStream).statics({
            _deciderKey: "suggestion_categories_streams"
        }).methods({
            update: function(a) {
                this.params.lang && (a.lang = this.params.lang), this.params.country && (a.country = this.params.country), this.params.city && (a.city = this.params.city), this.params.zipcode && (a.zipcode = this.params.zipcode), this.category.members(a)
            },
            isCursorPagination: function() {
                return !1
            },
            _setTitle: function(a) {
                var b = {
                    category: this.category.name,
                    size: this.category.size
                };
                a(this.params.title || _("View {{category}} ({{size}})", b))
            },
            _getHeaderComponent: function() {
                return this.params.noHeaderFooter ? null : new twttr.components.SuggestionCategoriesList(twttr.streams.SuggestionCategoriesStream.CATEGORIES, this.params.pathRoot, this.category.slug)
            },
            _getStreamEndComponent: function() {
                return this.params.noHeaderFooter ? twttr.streams.SuggestionCategoryMembersStream.uber._getStreamEndComponent.call(this) : this._getHeaderComponent()
            }
        });
        c && d.mixin(c), a(d)
    })
});
provide("streams/SuggestionCategoriesDashboardStream", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.streams.SuggestionCategoriesDashboardStream", function(a, b) {
            a = a || {}, twttr.streams.SuggestionCategoriesStream.call(this, a, b)
        }).subclassOf(twttr.streams.SuggestionCategoriesStream).methods({
            itemViewClass: twttr.isT1 ? "DashboardStreamInterestCategory" : "StreamSuggestionCategory",
            _setHeader: function(a, b) {
                a("")
            },
            addTipsies: function() {}
        }), a()
    })
});
provide("streams/SuggestionCategoryMembersDashboardStream", function(a) {
    using("streams/SuggestionCategoryMembersStream").as(function(b) {
        twttr.klass("twttr.streams.SuggestionCategoryMembersDashboardStream", function(a, c) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", b.streams.SuggestionCategoryMembersStream.call(this, a, c)
        }).subclassOf(b.streams.SuggestionCategoryMembersStream).methods({
            _setHeader: function(a, b) {
                a("")
            },
            itemViewClass: "DashboardStreamUser"
        }), a(twttr.streams.SuggestionCategoryMembersDashboardStream)
    })
});
provide("streams/SuggestionLifelineMembersStream", function(a) {
    using("streams/SuggestionCategoryMembersStream").as(function(b) {
        twttr.klass("twttr.streams.SuggestionLifelineMembersStream", function(a, c) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", b.streams.SuggestionCategoryMembersStream.call(this, a, c), this._registerEvents()
        }).subclassOf(b.streams.SuggestionCategoryMembersStream).statics({
            categoryObj: new twttr.anywhere.api.models.SuggestionCategory({
                locale_type: "",
                name: "lifeline",
                size: 24,
                slug: "lifeline"
            })
        }).methods({
            _setHeader: function(a, b) {
                b.query = b.zipcode, b.placeholder = _("Enter your ZIP Code"), b.buttonText = _("Search"), b.header_help = _("Enter your ZIP Code and search Lifeline accounts.") + "<br>" + _('You can receive tweet mobile notifications to your device. See <a href="https://support.twitter.com/articles/20169887" target="_blank">this</a> for more details.'), b.search_note = _("Your ZIP Code is used only for this search.");
                var c = new twttr.components.t1.PeopleSearchStreamHeader(twttr.router.whoToFollowLifelineSearchPath, b);
                a(c.$node)
            },
            _setTitle: function(a) {
                a(_("Lifeline"))
            },
            _setViewToggler: function(a) {
                a("")
            },
            setStreamManager: function(a) {
                this._streamManager = a
            },
            _registerEvents: function() {
                var a = this;
                this.$node.delegate(".js-action-follow, .js-action-follow-request", "click", function(b) {
                    var c = $(this),
                        d = parseInt(c.closest(".js-actionable-user").attr("data-user-id"), 10),
                        e = c.closest(".js-actionable-user").attr("data-device-notification") === "true";
                    return !twttr.cache.local.shownDeviceFollowDialog && e && (twttr.cache.local.shownDeviceFollowDialog = !0, trackClient({
                        component: "device_follow_dialog",
                        action: "impression"
                    }), (new twttr.widget.DeviceFollowDialog({
                        onclose: twttr.bind(a, a.deviceFollow, [d, e])
                    })).show()), !0
                })
            },
            deviceFollow: function(a, b) {
                if (!b) return;
                twttr.API.User.find(twttr.currentUser.id, function(b) {
                    b.deviceSetup && twttr.API.User.find(a, function(a) {
                        var b = {
                            success: function() {
                                trackClient({
                                    component: "stream",
                                    action: "device_follow"
                                })
                            },
                            error: function(a) {
                                twttr.showError(_("There was an error following your contacts."))
                            }
                        };
                        a.setNotificationsOn(b)
                    })
                })
            },
            usersToFollow: function() {
                var a = [],
                    b = {};
                return this.$find("#stream-items-id .js-follow-combo:not(.following)").each(function() {
                    var c = $(this).attr("data-screen-name");
                    a.push(c), b[c] = $(this).attr("data-device-notification") === "true"
                }), {
                    screenNames: a,
                    deviceNotifications: b
                }
            },
            onUserActionFollowSuccess: function(a, b, c) {
                var d = c.attr("data-device-notification") === "true";
                this.deviceFollow(a, d)
            }
        }), a(twttr.streams.SuggestionLifelineMembersStream)
    })
});
provide("streams/SuggestionLifelineMembersDashboardStream", function(a) {
    using("streams/SuggestionLifelineMembersStream").as(function(b) {
        twttr.klass("twttr.streams.SuggestionLifelineMembersDashboardStream", function(a, c) {
            a = a || {}, a.streamItemClass = "unfocusable-stream-item", b.streams.SuggestionLifelineMembersStream.call(this, a, c)
        }).subclassOf(b.streams.SuggestionLifelineMembersStream).methods({
            _setHeader: function(a, b) {
                a("")
            },
            _setTitle: function(a) {
                a("")
            },
            _setViewToggler: function(a) {
                a("")
            },
            itemViewClass: "DashboardStreamUser"
        }), a(twttr.streams.SuggestionLifelineMembersDashboardStream)
    })
});
provide("streams/GovernmentSearchStream", function(a) {
    using("_", "mixins/hasGovernmentSearchHeader").as(function(b, _) {
        var c = twttr.klass("twttr.streams.GovernmentSearchStream", function(a, b) {
            var c = this;
            twttr.streams.UserStream.apply(this, arguments)
        }).subclassOf(twttr.streams.UserStream).mixin(b.mixins.hasGovernmentSearchHeader).methods({
            itemViewClass: "StreamUser",
            streamItemType: "user",
            afterFirstSwitchingTo: function(a) {
                this.getMoreOldItems(a)
            },
            streamItemId: function(a) {
                return a.id
            },
            _fetchItems: function(a) {
                var b = this;
                twttr.API.UsPoliticalRep.findByZip(this.params.zipCode, {
                    success: function(c, d) {
                        b.push(c.map(function(a) {
                            return a.user
                        }).array), a(b, twttr.streams.SUCCESS), b.reachedTheEnd()
                    },
                    error: function(c) {
                        c.status === 502 ? a(b, twttr.streams.WHALE) : c.status === 404 ? (a(b, twttr.streams.SUCCESS), b.reachedTheEnd()) : a(b, twttr.streams.ERROR)
                    },
                    timeout: function(a) {
                        a.retry()
                    },
                    cancel: function() {
                        a(b, twttr.streams.TIMEOUT)
                    }
                })
            },
            _setTitle: function(a) {
                a(_("Government"))
            },
            _getEmptyStreamHtml: function() {
                return _("Sorry, we couldn't find any representatives for that Zip Code.")
            },
            _setViewToggler: function(a) {
                var b = {
                    route: twttr.router.whoToFollowInterestsPath(),
                    name: _("View all categories")
                };
                a(new twttr.views.BackLink(b))
            }
        });
        a(c)
    })
});
provide("widget/VerifyEmailDialog", function(a) {
    using("_").as(function(b, _) {
        twttr.klass("twttr.widget.VerifyEmailDialog", function(a, b) {
            this.bucket = a, twttr.widget.Dialog.call(this, twttr.merge({
                modal: !0,
                draggable: !1,
                css: {
                    width: 530
                },
                email: b.email_address || b.attributes.states.pending_email
            }, b.attributes))
        }).subclassOf(twttr.widget.Dialog).methods({
            registerEvents: function() {
                twttr.widget.Dialog.prototype.registerEvents.call(this), this.$container.find(".button.ok-thanks").bind("click", twttr.bind(this, function(a) {
                    twttr.abdecider.track("email_verification-18", "dialog_dismissed"), a.preventDefault(), a.stopPropagation(), $.cookie("abtest_email_verification_18", "1", {
                        expires: .0417
                    }), this.destroy()
                })), this.$container.find(".send-verify-email").bind("click", twttr.bind(this, function(a) {
                    twttr.abdecider.track("email_verification-18", "resend_verification_email"), $.ajax({
                        url: "/account/resend_confirmation_email",
                        dataType: "json",
                        success: twttr.bind(this, function(a) {
                            var b = this.$container.find(".twttr-dialog-verify-email");
                            b.length ? b.fadeOut(300, function() {
                                b.find("h2").html(_("Confirmation email sent!")), b.find(".verify-email-text").html(_("Please take this time to check your email for the confirmation message and to verify your email address by <strong>clicking the link in the email</strong>.")), b.fadeIn()
                            }) : twttr.showMessage(a.messageForFlash)
                        }),
                        error: function(a) {
                            twttr.showError(_("Oops!  There was an error sending the confirmation email."))
                        }
                    }), a.preventDefault(), a.stopPropagation()
                })), this.$container.find(".change-email").bind("click", twttr.bind(this, function(a) {
                    twttr.abdecider.track("email_verification-18", "change_email"), this.destroy()
                }))
            }
        }), a(twttr.widget.VerifyEmailDialog)
    })
});
provide("SearchAPI", function(a) {
    using().as(function(b) {
        twttr.SearchAPI = {
            _generateFacetsQuery: function(a) {
                var b = a.query,
                    c = a.facets,
                    d = {
                        q: b,
                        imageResults: c.images ? c.images.count : null,
                        videoResults: c.videos ? c.videos.count : null
                    };
                return a.experimentId && (d.experimentId = a.experimentId), d
            },
            getImageFacets: function(a, b) {
                twttr.SearchAPI._wrapInCache("imageFacets", a, b)
            },
            getVideoFacets: function(a, b) {
                twttr.SearchAPI._wrapInCache("videoFacets", a, b)
            },
            _wrapInCache: function(a, b, c) {
                var d = this,
                    e = twttr.SearchAPI.cacheKey(a, b, c);
                this._facetsCache[e] ? setTimeout(function() {
                    c.success && c.success(d._facetsCache[e])
                }, 0) : twttr.API.Search[a](b, twttr.merge({}, c, {
                    success: function(a) {
                        var b = [];
                        a.each(function(a) {
                            b.push({
                                url: a.url,
                                tweet: a
                            })
                        }), d._facetsCache[e] = b, c.success && c.success(b)
                    },
                    error: function() {
                        c.error && c.error()
                    }
                }))
            },
            cacheKey: function() {
                return JSON.stringify(Array.prototype.slice.apply(arguments))
            },
            _facetsCache: {},
            flushCache: function() {
                this._facetsCache = {}
            }
        }, a(twttr.SearchAPI)
    })
});
provide("media/providers", function(a) {
    using().as(function(b) {
        var c = function(a, b) {
                return b = b ||
                function() {
                    return !0
                }, function(c) {
                    var d = [];
                    $.each(c, function(a, c) {
                        c.mediaType = twttr.media.matchInstance(c.url, c.tweet), c.mediaType && b(c) && d.push(c)
                    }), a(d)
                }
            };
        twttr.klass("twttr.media.provider.Search", function(a) {
            this.options = a || {}
        }).methods({
            fetch: function(a) {
                var b = a.query;
                a.success = c(a.success, a.filter), a.mode == "videos" ? twttr.SearchAPI.getVideoFacets(b, a) : twttr.SearchAPI.getImageFacets(b, a)
            }
        }), twttr.klass("twttr.media.provider.UserMedia", function(a) {
            this.defaults = {
                offset: 0,
                count: 20
            }, this.screenName = a.screenName || null, this.user = a.user || null
        }).methods({
            fetchWithUser: function(a) {
                var b = a.success || $.noop;
                a.success = function(a) {
                    var c = [];
                    twttr.each(a.array, function(a) {
                        a.entities && a.entities.media && $.each(a.entities.media, function(b, d) {
                            if (d.type && d.type == "photo" && d.display_url) {
                                var d = {
                                    url: d.display_url,
                                    tweet: a
                                };
                                c.push(d)
                            }
                        }), a.entities && a.entities.urls && $.each(a.entities.urls, function(b, d) {
                            var e = {
                                url: d.expanded_url || d.url,
                                tweet: a
                            };
                            c.push(e)
                        })
                    }), b(c)
                }, this.user.media(a)
            },
            fetchWithScreenName: function(a) {
                var b = this;
                twttr.API.User.find(this.screenName, function(c) {
                    b.user = c, b.fetchWithUser(a)
                })
            },
            fetch: function(a) {
                a = $.extend({}, this.defaults, a), a.success = c(a.success, a.filter), this.user ? this.fetchWithUser(a) : this.screenName && this.fetchWithScreenName(a)
            }
        }), a(twttr.media.provider)
    })
});
provide("mixins/userRecommendationsHelper", function(a) {
    using("_", "constants").as(function(b, _) {
        twttr.klass.mixin("twttr.mixins.userRecommendationsHelper", function(a) {
            return a.methods({
                INTERESTING_RATING: 6,
                BLOCK_RATING: 5,
                USEFUL_RATING: 1,
                LIST_ITEM_SELECTOR: "ul.recommended-followers > li.user-small-list-item",
                userRecommendationsAvailable: function(a) {
                    return twttr.loggedIn ? a ? twttr.decider.isAvailable("whotofollow_similarities") : twttr.decider.isAvailable("whotofollow_recommendations") : twttr.decider.isAvailable("whotofollow_logged_out_similarities")
                },
                trackImpressions: function(a, c, d, e, f) {
                    var g = [],
                        i = [],
                        j;
                    a && a.length() && (a.each(function(a, c) {
                        g.push(a.id), i.push(a.feedback);
                        if (a.promotedContent && a.promotedContent.impression_id) {
                            var d = {
                                target_id: a.id,
                                item_type: b.constants.clientEvent.itemType.promotedUser,
                                item_token: a.promotedContent.impression_id,
                                item_position: c
                            };
                            j = j || {}, j[a.id + ""] = d
                        }
                    }), e ? this.currentRecommendations = twttr.map(this.currentRecommendations, function(a, b) {
                        return a == e ? g[0] : a
                    }) : this.currentRecommendations = g), this._trackOldImpressions(c, g, i, d), this._trackNewImpressions(g, i, j, f)
                },
                trackError: function(a, b) {
                    this._trackOldImpressions(a, [], [], b), this.getScribbler().scribe({
                        component: this._getScribeComponentName(),
                        action: "error"
                    })
                },
                _trackOldImpressions: function(a, b, c, d) {
                    var e = {
                        recommended_users: b,
                        recommended_users_count: b.length,
                        tokens: c
                    };
                    twttr.merge(e, d || {});
                    var f = this.mergeSimilarUserId(e);
                    _scribble(a, f, "whotofollow")
                },
                _trackNewImpressions: function(a, b, c, d) {
                    var e = {
                        profile_id: this.getSimilarUserId(),
                        item_ids: a,
                        item_count: a.length,
                        event_value: a.length,
                        item_names: b,
                        referring_event: d ? "get_newer" : "initial",
                        duration_ms: new Date - this.initTime
                    };
                    c && (e.item_details = c), this.getScribbler().scribe({
                        component: this._getScribeComponentName(),
                        action: a.length ? "results" : "no_results"
                    }, e)
                },
                _scribeResults: function(a, b, c) {
                    twttr.streams.Stream.prototype._scribeResults.apply(this, arguments);
                    var b = b || [];
                    c = c || {};
                    if (a == "error" || a == "initial" && !b.length) this.scribbler.scribe({
                        component: "stream",
                        action: a == "error" ? "error" : "no_results"
                    }, twttr.merge(c, {
                        item_ids: [0],
                        item_count: 0,
                        event_value: 0,
                        cursor_or_page: this._cursorOrPage(),
                        referring_event: a
                    }));
                    else if (b.length) {
                        var d = this,
                            e = [],
                            f = [],
                            g;
                        twttr.each(b, function(a, b) {
                            e.push(a.id), f.push(a.feedback);
                            if (d.constructor._namespace.indexOf("UserRecommendations") != -1) {
                                var c;
                                a.promotedContent && a.promotedContent.impression_id && (c = {
                                    item_type: twttr.constants.clientEvent.itemType.promotedUser,
                                    item_token: a.promotedContent.impression_id
                                }), c && (g = g || {}, c.item_position = b, g[a.id + ""] = c)
                            }
                        }), g && (c.item_details = g), this.scribbler.scribe({
                            component: this._getScribeComponentName(),
                            action: "results"
                        }, twttr.merge(c, {
                            item_ids: e,
                            item_names: f,
                            item_count: e.length,
                            event_value: e.length,
                            cursor_or_page: this._cursorOrPage(),
                            referring_event: a
                        }))
                    }
                },
                logPromotedImpressions: function(a) {
                    a.each(function(a) {
                        a.promotedContent && twttr.API.util.PromotedContent.logImpression(a.promotedContent.impression_id)
                    })
                },
                getSimilarUserId: function() {
                    return this.similarUser && this.similarUser.id || twttr.profileUser && twttr.profileUser.id
                },
                mergeSimilarUserId: function(a) {
                    return this.screenName && $.extend(a, {
                        to_user_id: this.getSimilarUserId()
                    }), a.phoenix_enabled = !0, a
                },
                recsToUsers: function(a) {
                    return a.map(twttr.bind(this, function(a, b) {
                        var c = this._namespace == "twttr.streams.UserRecommendationsStream" || this._namespace == "twttr.streams.UserSimilaritiesStream";
                        return a.user.clone({
                            following: a.user.following === !0,
                            feedback: a.token,
                            dismissable: !this.screenName || c && twttr.profileUser && twttr.currentUser.id == twttr.profileUser.id,
                            socialcontext: this.makeSocialContextHtml(a, c)
                        })
                    }))
                },
                fetch: function(a) {
                    this.screenName ? this._namespace == "twttr.components.t1.UserSimilaritiesDashboardList" ? this.profileUser.similarUsers(a) : twttr.profileUser.similarUsers(a) : (a.force_new_signup = this.forceNewSignup, twttr.currentUser.recommendedUsers(a))
                },
                registerUserRecommendationsActions: function(a) {
                    var b = this,
                        c = function(b) {
                            return !a || b.parents(a).length
                        };
                    this.bind("avatar_click.user screen_name_click.user select.user", function(a, d, e, f) {
                        if (!c(d)) return;
                        var g = parseInt(d.attr("data-user-id")),
                            i = b.mergeSimilarUserId({
                                rating: b.INTERESTING_RATING,
                                recommended_user_id: g,
                                token: d.attr("data-feedback-token") || "0"
                            });
                        if (!g) return;
                        i.recommendation_position = b.getRecPosition(d), scribble(b.whotofollowComponentName + "_profile_click", i, "whotofollow"), scribble("view-profile", {
                            profile_user_id: g,
                            component: b._namespace.indexOf(".stream.") ? "stream" : "dashboard",
                            subcomponent: "who-to-follow",
                            target: e.is("a") ? "link" : "image"
                        })
                    }), this.bind("follow.user", function(a, d, e, f) {
                        if (!c(d)) return;
                        var g = parseInt(d.attr("data-user-id")),
                            i = b.mergeSimilarUserId({
                                rating: b.USEFUL_RATING,
                                recommended_user_id: g,
                                token: d.attr("data-feedback-token") || "0"
                            });
                        if (!g) return;
                        twttr.API.UserRecommendation.rate(i), i.recommendation_position = b.getRecPosition(d), scribble(b.whotofollowComponentName + "_follow", i, "whotofollow"), scribble("follow-user", {
                            profile_user_id: g,
                            component: b._namespace.indexOf(".stream.") ? "stream" : "dashboard",
                            subcomponent: "who-to-follow"
                        })
                    }), this.bind("dismiss.user", function(a, d, e, f) {
                        if (!c(d)) return;
                        twttr.isT1 && d.hasClass("js-follow-combo") && (d = d.parent(".js-actionable-user"));
                        var g = parseInt(d.attr("data-user-id")),
                            i = d.attr("data-impression-id"),
                            j = b.getRecPosition(d),
                            k = d.attr("data-feedback-token") || "0",
                            l = d.find("a.js-action-follow, div.js-action-follow, .follow-action, .follow-button").length || b.screenName,
                            m = {};
                        twttr.cache.local.dismissedIDs = twttr.cache.local.dismissedIDs || [], twttr.cache.local.dismissedIDs.push(g), d.animate({
                            opacity: 0
                        }, 200);
                        var n = function(a) {
                                var c;
                                if (e.closest('[data-section-id="wtf"]').length) if (a && a.length() && !twttr.is.inArray(a.first().user.id, b.currentRecommendations || [])) {
                                    c = b.recsToUsers(a);
                                    var f = c.first();
                                    if (f) {
                                        var i = b.renderItemView(f).$html();
                                        i.css({
                                            opacity: 0
                                        }), d.replaceWith(i), i.animate({
                                            opacity: 1
                                        }, 300), b.trackImpressions(c, "whotofollow_sidebar_replace_dismissed", twttr.merge({
                                            recommended_user_id: g,
                                            recommendation_position: j
                                        }, m), g)
                                    }
                                } else d.fadeOut(200, function() {
                                    d.animate({
                                        height: 1
                                    }, 100, null, function() {
                                        d.remove(), b.$find(b.LIST_ITEM_SELECTOR).length == 0 && (b.trigger("notRendered", "noMoreRecommendations"), b.$node.empty())
                                    })
                                });
                                else {
                                    var n = d.parent(".stream-item");
                                    n.slideUp(100, function() {
                                        n.remove()
                                    })
                                }
                                l && scribble(b.whotofollowComponentName + "_block", b.mergeSimilarUserId({
                                    token: k,
                                    recommended_user_id: g,
                                    rating: b.BLOCK_RATING,
                                    recommendation_position: j
                                }), "whotofollow")
                            },
                            o = function() {
                                twttr.showError(_("Whoops! Something went wrong. Please try again!")), d.css({
                                    opacity: 1
                                })
                            };
                        m = b.mergeSimilarUserId({});
                        var p = twttr.merge({
                            user_id: m.to_user_id,
                            excluded: b.currentRecommendations.concat(twttr.cache.local.dismissedIDs || []).join(","),
                            success: n,
                            error: o,
                            pc: !! i
                        }, m);
                        d.find("a.js-action-unfollow:visible, div.js-action-unfollow:visible").length ? b.fetch(twttr.merge(p, {
                            limit: 1
                        })) : d.find(".unfollow-button").length && twttr.audit.currentPage() != "similar_to" ? n() : (p = twttr.merge({
                            connections: !0
                        }, p), twttr.API.UserRecommendation.hide(g, k, p))
                    })
                },
                attachUserRecommendationHideEvents: function() {
                    this.$find("a.js-user-dropdown-dismiss").click(twttr.bind(this, function() {
                        this.$find("a.js-user-dropdown, div.js-user-dropdown").fadeOut(300)
                    }))
                },
                renderItemView: function(a) {
                    return new twttr.views.UserSmallListItem(a)
                },
                getRecPosition: function(a) {}
            }), a
        }), a(twttr.mixins.userRecommendationsHelper)
    })
});
provide("mixins/t1/genericComboButton", function(a) {
    using().as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.t1.genericComboButton", function() {
            this.methods({
                getButton: function(a) {
                    return a.closest(".js-combo-btn")
                },
                setState: function(a, b, c) {
                    b && c !== b && (a.removeClass(c), a.addClass(b), a.attr("data-state", b))
                }
            }).click({
                ".js-combo-btn-dropdown": function(a, b) {
                    var c = this.getButton(b);
                    c.toggleClass("open"), c.hasClass("open") && ($(document).bind("click.button", function() {
                        c.removeClass("open"), $(document).unbind("click.button")
                    }), a.stopPropagation())
                },
                ".js-combo-btn-action, .js-combo-btn-dropdown-options a": function(a, b) {
                    var c = this.getButton(b);
                    this.setState(c, b.attr("data-state"), c.attr("data-state"))
                }
            })
        });
        a(c)
    })
});
provide("mixins/userUpdateable", function(a) {
    using().as(function(b) {
        var c = twttr.klass.mixin("twttr.mixins.userUpdateable", function() {
            return this.methods({
                registerUserUpdateEvents: function(a) {
                    var b = this;
                    if (!twttr.loggedIn) return;
                    twttr.API.User.bind("follow unfollow", function(c, d) {
                        var e = a.id == d.id,
                            f = twttr.helpers.isCurrentUser(a);
                        if (!e && !f) return;
                        twttr.helpers.isCurrentUser(b.user) ? b.trigger("userUpdated", twttr.currentUser) : b.trigger("userUpdated", d)
                    })
                }
            }), this
        });
        a(c)
    })
});
provide("components/UserMedia", function(a) {
    using().as(function(b) {
        twttr.klass("twttr.components.UserMedia").subclassOf(twttr.components.Media).deciderKey("phoenix_user_media_gallery").initializer(function(a, b) {
            this.user = a, this.options = b || {}, this.notDisplayedClass = ".user-media-not-displayed", this.hasCalledHasRendered = !0, this.buildSubComponents()
        }).methods({
            buildSubComponents: function() {
                var a = this,
                    b = function() {
                        a.$node.hide()
                    },
                    c = twttr.aug({
                        user: this.user,
                        filter: function(a) {
                            return !a || !a.mediaType ? !1 : a.mediaType.icon() === twttr.constants.media.photoIcon
                        }
                    }, this.options);
                twttr.isT1 && twttr.aug(c, twttr.components.Media.dashboardThumbnailOptions), this.images = new twttr.components.media.profile.Images(c), this.images.bind("urlsLoaded", function(c, d, e) {
                    a._possiblySensitive = e, d.length === 0 ? b() : twttr.loggedIn ? a.loggedInBehavior() : a.loggedOutBehavior(), a._scribeResults("photos", d)
                }), this.images.bind("failed", function() {
                    b(), a._scribeResults("photos")
                }), this.images.fetchImages()
            },
            _isPossiblySensitive: function() {
                return !!this._possiblySensitive
            },
            _getUser: function() {
                return this.user
            },
            onProfilePage: function() {
                return !0
            },
            renderMedia: function() {
                this.images.$node.appendTo(this.$node), this.images.render(), this.$node.delegate(".view-all", "click", function() {
                    trackClient({
                        section: "dashboard",
                        component: "photos_user_media",
                        action: "view_all"
                    }, {
                        event_info: "photos",
                        profile_id: twttr.profileUser && twttr.profileUser.id
                    })
                }), this.$node.delegate(".media-thumbnail", "click", function(a) {
                    trackClient({
                        section: "dashboard",
                        component: "photos_user_media",
                        action: "click"
                    }, {
                        event_info: "photos",
                        url: $(this).attr("data-url"),
                        profile_id: twttr.profileUser && twttr.profileUser.id
                    })
                })
            },
            buildNotDisplayedView: function(a) {
                var b = "";
                return a.possibly_sensitive ? b = _("This media may contain sensitive content") : a.not_following && (b = _("This media was shared by {{screen_name}}, someone you don’t follow.", {
                    screen_name: this.user.screenName
                })), new twttr.views.UserMediaNotDisplayed({
                    screenName: this.user.screenName,
                    reason: b,
                    renderHr: this.options.renderHr
                })
            },
            _scribeResults: function(a, b) {
                var c = b && b.length ? "results" : "no_results",
                    d = a + "_user_media";
                b = b || [], trackClient({
                    section: "dashboard",
                    component: d,
                    action: c
                }, {
                    item_names: b.slice(0, 4),
                    item_count: b.length,
                    event_info: a,
                    profile_id: twttr.profileUser && twttr.profileUser.id
                })
            }
        }), a(twttr.components.UserMedia)
    })
});
provide("components/UserRecommendations", function(a) {
    using("_", "mixins/userRecommendationsHelper", "mixins/userActionable", twttr.isT1 ? "mixins/UserRecommendationsT1" : "mixins/UserRecommendationsP1").as(function(b, _, c, d, e) {
        var f = twttr.klass("twttr.components.UserRecommendations").subclassOf(twttr.components.Base).initializer(function(a) {
            a = a || {}, this.screenName = a.screenName, this.showLinks = a.showLinks, this.currentRecommendations = [], this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: this.screenName && twttr.profileUser && twttr.profileUser.id
            }), this.scribeComponentName = this._determineScribeComponentName(a), this.whotofollowComponentName = this._determineWhotofollowComponentName(this.scribeComponentName), this.initTime = +(new Date), this.onDeck = [], this.scribbler.scribe({
                component: this.scribeComponentName,
                action: "impression"
            }), this.noSpacer = !this._shouldHaveSpacer(), this.bind("addedToPage", twttr.bind(this, function() {
                this.userRecommendationsAvailable() ? this.loadRecommendations() : this.trigger("notRendered", "darkmoded")
            })), this.registerUserActionEvents(), this.registerUserRecommendationsActions()
        }).mixin(c, d, e).statics({
            wtfCycleTimeout: 1e3
        }).click({
            ".title-link": function(a, b) {
                var c = {
                    input: "click",
                    component: "dashboard",
                    subcomponent: "who_to_follow",
                    target: "dashboard_title",
                    item: b.find(".dashboard-component-title").html()
                };
                scribble("dashboard_click", c)
            },
            ".user-rec-inner h3 a": function(a, b) {
                var c = {
                    input: "click",
                    component: "dashboard",
                    subcomponent: "who_to_follow",
                    target: "view_all_recommendations",
                    recommendations: this.currentRecommendations
                };
                scribble("dashboard_click", c)
            },
            ".user-rec-inner .view-all": function(a, b) {
                trackClient({
                    component: this.scribeComponentName,
                    action: "view_all"
                })
            },
            ".flex-module-footer a[data-element-term=interests_link]": function(a, b) {
                trackClient({
                    component: this.scribeComponentName,
                    element: "interests_link",
                    action: "click"
                })
            },
            ".flex-module-footer a[data-element-term=import_link]": function(a, b) {
                trackClient({
                    component: this.scribeComponentName,
                    element: "import_link",
                    action: "click"
                })
            },
            ".user-rec-links a": function(a, b) {
                var c = {
                    input: "click",
                    component: "dashboard",
                    subcomponent: "who_to_follow",
                    target: b.html(),
                    target_type: "recommendation_link",
                    recommendations: this.currentRecommendations
                };
                scribble("dashboard_click", c)
            },
            "a.js-action-follow, div.js-action-follow": function(a, b) {
                if (twttr.app.currentPageName() === "home" && this.scribeComponentName !== "empty_timeline_recommendations") {
                    var c = this,
                        d = b.closest(".js-actionable-user");
                    window.setTimeout(function() {
                        c.loadRecommendations(d)
                    }, twttr.components.UserRecommendations.wtfCycleTimeout)
                }
            }
        }).methods({
            forceNewSignup: !1,
            renderItemView: function(a) {
                return new twttr.views.UserSmallListItem(a)
            },
            renderModuleView: function(a, b) {
                var c = this._getModuleViewName();
                (new twttr.views[c](a)).subview("recommended_followers", new twttr.views.UserSmallList(b)).render(this.$node, "append")
            },
            loadRecommendations: function(a) {
                var b, c;
                this.screenName ? (b = "whotofollow_view_similar_users", c = "profile") : (b = "whotofollow_view_recommended_users", c = "home"), this.fetch({
                    limit: a ? 1 : this._recommendationsLimit(),
                    excluded: this.onDeck.concat(twttr.cache.local.dismissedIDs || []).join(","),
                    display_location: this.screenName ? "st-component" : "wtf-component",
                    pc: !0,
                    connections: !this.screenName,
                    algorithm: this.useUserToUserRec() ? "UserToUserRec" : null,
                    success: twttr.bind(this, function(d) {
                        var e = this.recsToUsers(d);
                        this.trackImpressions(e, b, {
                            tracking_context: c
                        });
                        if (e.length() > 0) {
                            this.logPromotedImpressions(e);
                            var f;
                            if (a) {
                                f = this.renderItemView(e.first()).$html();
                                var g = parseInt(f.attr("data-user-id"));
                                if (this.onDeck.find(function(a) {
                                    return a == g
                                })) this.trigger("notRendered", "recommendationAlreadyOnDeck");
                                else {
                                    var i = parseInt(a.attr("data-user-id"));
                                    this.onDeck = this.onDeck.map(function(a) {
                                        return a == i ? g : a
                                    }), a.css({
                                        opacity: 1
                                    }), f.css({
                                        opacity: 0
                                    }), a.animate({
                                        opacity: 0
                                    }, 400, function() {
                                        a.replaceWith(f), f.animate({
                                            opacity: 1
                                        }, 400, function() {
                                            f.css({
                                                opacity: ""
                                            })
                                        })
                                    })
                                }
                            } else {
                                this.onDeck = e.map(function(a) {
                                    return $(a).attr("id")
                                });
                                var j = this.screenName ? {
                                    screen_name: this.screenName,
                                    self_sims: twttr.helpers.isCurrentUser(this.screenName),
                                    profile_name: twttr.profileUser.name,
                                    small_avatar: !0
                                } : {
                                    show_links: this.showLinks
                                };
                                this.renderModuleView(j, e), this.attachUserRecommendationRefreshEvents(), this.hasRendered(), this.trigger("recommendationsLoaded"), f = this.$node
                            }
                            twttr.helpers.ellipsify(f.find(".user-screen-and-full-name")), twttr.helpers.ellipsify(f.find("div.bio"))
                        } else this.trigger("notRendered", "noMoreRecommendations")
                    }),
                    error: twttr.bind(this, function(a) {
                        this.trackError(b, {
                            tracking_context: c,
                            error_status: a.status
                        }), this.trigger("notRendered", a)
                    })
                })
            },
            refreshRecommendations: function(a) {
                var b = this.$find(".js-recommended-followers");
                b.animate({
                    opacity: 0
                }, 200);
                var c = this.screenName ? "whotofollow_refresh_similar_users" : "whotofollow_refresh_recommended_users";
                twttr.cache.local.dismissedIDs = (twttr.cache.local.dismissedIDs || []).concat(this.currentRecommendations), this.fetch({
                    limit: this._recommendationsLimit(),
                    excluded: this.onDeck.concat(twttr.cache.local.dismissedIDs).join(","),
                    pc: a,
                    display_location: "wtf-component",
                    connections: !0,
                    algorithm: this.useUserToUserRec() ? "UserToUserRec" : null,
                    success: twttr.bind(this, function(d) {
                        var e = this.recsToUsers(d);
                        if (e.length() > 0) {
                            this.scribbler.scribe({
                                component: this.scribeComponentName,
                                action: "refresh"
                            }), this.trackImpressions(e, c, {}, !1, !0), a && this.logPromotedImpressions(e);
                            var f = this._generateUserList(e);
                            f.css({
                                opacity: 0
                            }), b.replaceWith(f), twttr.helpers.ellipsify(f.find(".user-screen-and-full-name")), f.animate({
                                opacity: 1
                            }, 200)
                        } else twttr.showMessage(_("You have no more recommendations today!")), this._removeRefreshLink(), b.css({
                            opacity: 1
                        })
                    }),
                    error: function(a) {
                        this.trackError(c, {
                            error_status: err.status
                        }), twttr.helpers.showErrorFromResponse(a), b.css({
                            opacity: 1
                        })
                    }
                })
            },
            attachUserRecommendationRefreshEvents: function() {
                var a = this;
                this.$find("a.js-refresh-suggestions").click(twttr.bind(this, function(a) {
                    this.refreshRecommendations(!0)
                }))
            },
            _recommendationsLimit: function() {
                return 3
            },
            useUserToUserRec: function() {
                return this.screenName != null && twttr.abdecider.choose("wtf_user_to_user_rec_155") == "user_to_user_rec"
            },
            _determineScribeComponentName: function(a) {
                return a = a || {}, a.scribeComponentName ? a.scribeComponentName : a.screenName ? "similar_user_recommendations" : "user_recommendations"
            },
            _determineWhotofollowComponentName: function(a) {
                return a === "empty_timeline_recommendations" ? "whotofollow_empty_timeline" : "whotofollow_sidebar"
            }
        });
        a(twttr.components.UserRecommendations)
    })
});
provide("components/Footer", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.Footer").subclassOf(twttr.components.Base).initializer(function(a) {
            this.renderFooter(a), twttr.loggedIn || this.$node.delegate("a", "click", function(a) {
                var b = {
                    url: $(this).attr("href"),
                    context: twttr.audit.currentPage()
                },
                    c = {
                        section: "footer",
                        component: "link",
                        action: "click"
                    };
                trackClient(c, b)
            }), this.hasRendered()
        }).method("renderFooter", function(a) {
            (new(twttr.isT1 ? twttr.views.Footer : twttr.views.GenericFooter)({
                year: 2012,
                is_slim: a == "slim"
            })).render(this.$node, "append")
        });
        a(c)
    })
});
provide("components/Trends", function(a) {
    using("_").as(function(b, _) {
        var c = twttr.klass("twttr.components.Trends").subclassOf(twttr.components.Base).initializer(function(a) {
            var b = this;
            trackClient({
                component: "trends",
                action: "impression"
            }), b.isFullPage = !! a && !! a.isFullPage, this.renderTrends(), a && a.wide && b.$find(".trends-inner").addClass("wide-trends"), b.hasRendered(), b.registerEventHandlers(), twttr.API.CurrentUser.bind("changedLocation", function() {
                b.trendLocationUpdated = !0, b.updateTrends()
            }), twttr.TrendLocations.install(function() {
                b.trendLocationsLocated = !0, b.startUpdatePolling(), b.trigger("trendLocationsLocated")
            })
        }).statics({
            trendUpdateTime: 3e5
        }).methods({
            registerEventHandlers: function() {
                var a = this,
                    b = a.$find(".js-trend-toggle");
                b.click(function(b) {
                    var c = function() {
                            a.dialog().open(), scribble("open-trend-dialog", {
                                input: "click",
                                woeid: a.currentWoeid()
                            })
                        };
                    a.trendLocationsLocated ? c() : a.bind("trendLocationsLocated", c), b.preventDefault()
                }), b.hover(function(b) {
                    scribble("trend-location-selector-hover", {
                        input: "hover",
                        woeid: a.currentWoeid()
                    })
                })
            },
            currentWoeid: function() {
                return twttr.trendLocations.current.woeid
            },
            dialog: function() {
                return this._dialog ? this._dialog : this._dialog = twttr.dialogs.trends()
            },
            startUpdatePolling: function() {
                var a = this;
                !a.trendUpdateInterval && a.trendLocationsLocated && (a.updateTrends(), a.trendUpdateInterval = setInterval(function() {
                    twttr.decider.isAvailable("trends_component_polling") && a.updateTrends(!0)
                }, twttr.components.Trends.trendUpdateTime))
            },
            stopUpdatePolling: function() {
                this.trendUpdateInterval && (clearInterval(this.trendUpdateInterval), this.trendUpdateInterval = !1)
            },
            prettyHash: function(a) {
                return a && a[0] === "#" ? a.slice(1) : null
            },
            updateTrends: function(a) {
                var b = this;
                b.$node.addClass("loading");
                var c = {
                    pc: twttr.loggedIn,
                    promoted_location: twttr.util.params().promoted_location,
                    success: function(c) {
                        var d = twttr.anywhere.api.util.buildCollection(twttr.anywhere.api.models.Trend, c.get(0).trends),
                            e = c.get(0).personalized;
                        twttr.trendLocations.current.isPersonalized != e && twttr.trendLocations.setPersonalized(e), b.updateTrendsLocation(), b._dialog && b.dialog().rerender();
                        var f = [],
                            g = [],
                            i = {};
                        $trends = b.$find(".js-trends").empty(), d.each(function(c, d) {
                            var e = $.extend({
                                attributes: {}
                            }, c);
                            e.attributes = $.extend({
                                index: d + 1,
                                is_full_page: b.isFullPage,
                                pretty_hash: b.prettyHash(e.attributes.name)
                            }, e.attributes), twttr.isRTL && (e.attributes.name = e.attributes.name.replace(/^#/, "‎#"));
                            var j = (new twttr.views.TrendItem(e)).$html();
                            c.promotedContent && (a || twttr.API.util.PromotedContent.logTrendImpression(c.promotedContent.id), j.bind("click", function(a) {
                                twttr.API.util.PromotedContent.logTrendClick(c.promotedContent.id)
                            }));
                            var k = {
                                rank: d,
                                woeid: b.currentWoeid(),
                                component: "dashboard",
                                input: "click",
                                trend: c.name,
                                dialog_open: b._dialog && b._dialog.isOpen()
                            };
                            c.promotedContent ? (k.promoted_content_id = c.promotedContent.id, i[c.name] = {
                                item_description: c.name,
                                item_token: c.promotedContent.id,
                                item_position: d,
                                item_type: 9
                            }) : j.hasClass("event-trend") && (i[c.name] = {
                                item_description: c.name,
                                item_position: d,
                                item_type: 15
                            }), j.bind("click", function(a) {
                                scribble("show-trend", k), trackClient({
                                    section: "dashboard",
                                    component: "trend",
                                    action: "click"
                                }, {
                                    query: c.name,
                                    woeid: b.currentWoeid(),
                                    position: d
                                }), c.promotedContent && trackClient({
                                    section: "dashboard",
                                    component: "promoted_trend",
                                    action: "click"
                                }, {
                                    query: c.name,
                                    woeid: b.currentWoeid(),
                                    position: d
                                });
                                var e = c.promotedContent ? "promoted_trend_click" : j.hasClass("event-trend") ? "event_trend_click" : "trend_click";
                                twttr.abdecider.track("olympic_trends_320", e)
                            }), j.appendTo($trends), f.push(k), g.push(c.name)
                        }), b.$node.removeClass("loading"), b.isFullPage && $(".trends-page").removeClass("trends-page-loading"), b.showTrends();
                        var j = a || b.trendLocationUpdated ? "newer" : "initial";
                        trackClient({
                            component: "trends",
                            element: j,
                            action: "results"
                        }, {
                            item_names: g,
                            item_count: g.length,
                            referring_event: j,
                            event_initiator: a ? twttr.constants.scribe.CLIENT_SIDE_APP : twttr.constants.scribe.CLIENT_SIDE_USER,
                            item_details: i
                        }), scribble("trend-impression", {
                            component: "dashboard",
                            trends: f
                        })
                    },
                    error: function(c) {
                        b.isFullPage && ($(".trends-page").removeClass("trends-page-loading"), a || twttr.helpers.showErrorFromResponse(c)), b.hideTrends()
                    }
                };
                twttr.trendLocations.current.trends(c)
            },
            updateTrendsLocation: function() {
                var a = twttr.trendLocations.current,
                    b = twttr.decider.isAvailable("personalized_trends") && a.isPersonalized ? _("Trends") : 1 === a.woeid ? _("Worldwide Trends") : Mustache.to_html(_("{{location}} Trends"), {
                        location: a.name
                    });
                this.$find(".js-trend-location").text(b).attr("woeid", a.woeid)
            },
            showTrends: function() {
                !this.isFullPage && this.$node.show()
            },
            hideTrends: function() {
                !this.isFullPage && this.$node.hide()
            }
        }).deciderKey("trends_component");
        twttr.isT1 ? (c.setBaseView(twttr.views.DashboardTrends), c.methods({
            renderTrends: function() {
                this.hideTrends()
            }
        })) : c.methods({
            renderTrends: function() {
                var a = this.isFullPage ? twttr.views.FullPageTrends : twttr.views.DashboardTrends;
                (new a).render(this.$node, "append"), this.noSpacer = this.isFullPage
            }
        }), a(c)
    })
});
provide("components/onebox/News", function(a) {
    using("_", "helpers").as(function(b, _, c) {
        var d = twttr.klass.component("twttr.components.onebox.News").initializer(function(a) {
            var b = this,
                c = b.getArticle(a);
            if (!c) return;
            b.$node.append((new twttr.views.CardNewsOnebox(c)).html()), b.$node.css("visibility", "hidden")
        }).deciderKey("news_onebox").click({
            ".js-news-headline,.onebox-news-url": function(a) {
                trackClient({
                    section: "onebox",
                    component: "news",
                    action: "click"
                })
            }
        }).methods({
            getTopicName: function() {
                return _("Top news")
            },
            getArticle: function(a) {
                var b = twttr.at("content.articles", a);
                return b ? b.get(0) : null
            },
            render: function() {
                var a = this.$find(".js-news-headline"),
                    c = this.$find(".js-news-snippet"),
                    d = a.innerHeight();
                d >= 36 ? c.css("height", "18px") : d >= 18 && c.css("height", "36px"), b.helpers.ellipsify([a, c], !1, !0, null, {
                    setTitle: "always",
                    ellipsis: "&ellip;"
                }), b.helpers.ellipsify(this.$find(".onebox-news-url-text")), this.$node.css("visibility", "")
            }
        });
        a(d)
    })
});
provide("components/onebox/User", function(a) {
    using("_", "helpers", "mixins/userActionable").as(function(b, _) {
        var c = twttr.klass.component("twttr.components.onebox.User").initializer(function(a, b) {
            this.items = [];
            var c = this.getUsers(a);
            if (!c) return;
            this.scribbler = twttr.Scribbler.clientEvent.spawnWithTerms({
                section: "onebox"
            }, {
                query: b
            }), this.$node.append((new twttr.views.CardAccountsOnebox(c, this.getViewAllPath(b))).html()), this.$node.css("visibility", "hidden"), this.registerUserActionEvents()
        }).mixin(b.mixins.userActionable).statics({
            maxUsers: 2
        }).deciderKey("user_onebox").methods({
            getTopicName: function() {
                return _("Top people")
            },
            getViewAllPath: function(a) {
                var b = {
                    query: a
                };
                return twttr.isT1 ? twttr.router.userSearchPath(b) : twttr.loggedIn ? twttr.router.whoToFollowSearchPath(b) : twttr.router.userSearchPath(b)
            },
            getUsers: function(a) {
                var b = twttr.at("content.users", a),
                    c = this;
                return !b || b.isEmpty() ? null : (b.array = b.array.splice(0, twttr.components.onebox.User.maxUsers), b.each(function(a) {
                    c.items.push(a.idStr), a.promotedContent && twttr.API.util.PromotedContent.logImpression(a.promotedContent.impression_id)
                }), b)
            },
            render: function() {
                twttr.isT1 ? b.helpers.ellipsify(this.$find(".js-onebox-ellipsis")) : b.helpers.ellipsify(this.$find(".bio"), !1, !0, null, {
                    setTitle: "always",
                    ellipsis: "&ellip;"
                }), this.$node.css("visibility", "")
            }
        });
        a(c)
    })
});
provide("components/onebox/Sports", function(a) {
    using("_", "helpers", "mixins/profilePopupActionable").as(function(b, _, c) {
        var d = twttr.klass.component("twttr.components.onebox.Sports").initializer(function(a, b) {
            this._timerId = 0, this._event = 0;
            var c = this,
                d = c.getEvent(a);
            if (!d) return;
            if (d.sport !== "soccer") return;
            c._event = d, c.$node.append((new twttr.views.CardSoccerOnebox(d)).html()), d.events.getMatchState().current_status !== "final" && c._startPolling(d), this.$node.css("visibility", "hidden")
        }).deciderKey("sports_onebox").click({
            ".team-logo": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "profile_click"
                }, {
                    event_info: "avatar"
                })
            },
            ".fullname": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "profile_click"
                }, {
                    event_info: "screen_name"
                })
            },
            ".follow-team": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "profile_click"
                }, {
                    event_info: "follow"
                })
            },
            ".detail": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "open_link"
                }, {
                    url: this._event.events.getMatchedEventData().preview_url
                })
            },
            ".recap": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "open_link"
                }, {
                    url: this._event.events.getMatchedEventData().recap_url
                })
            },
            ".hashtag": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "search"
                }, {
                    query: $(a.currentTarget).data("hashtag")
                })
            },
            ".ticker-event": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "search"
                }, {
                    query: $(a.currentTarget).data("hashtag")
                })
            },
            ".matched-score": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "search"
                }, {
                    query: $(a.currentTarget).data("hashtag")
                })
            },
            ".js-follow-news": function(a) {
                trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "profile_click"
                }, {
                    event_info: "news_link"
                })
            },
            ".js-signup-callout": function(a) {
                if (!twttr.loggedIn) {
                    a.preventDefault(), a.stopPropagation();
                    var b = $(a.currentTarget).data("user-id");
                    twttr.API.User.find(b, {
                        success: function(a) {
                            twttr.dialogs.signinOrSignup({
                                follow: a
                            }).open()
                        },
                        error: function(a) {
                            twttr.errors.showErrorFromResponse(a)
                        }
                    })
                }
            }
        }).mixin(twttr.mixins.profilePopupActionable).methods({
            getEvent: function(a) {
                return twttr.at("content", a)
            },
            _renderTicker: function(a) {
                if (a.events.data().follow_news || a.events.getOtherMatchState().length > 0) this.$node.find(".tickercontainer").size() === 0 && this.$node.find(".js-onebox-soccer-item").append('<div class="tickercontainer"></div>'), this.$node.find(".tickercontainer").empty().append((new twttr.views.SoccerTicker(a)).html())
            },
            _renderMatchedEvent: function(a) {
                this.$node.find(".matched-event").empty().append((new twttr.views.SoccerMatchedEvent(a)).html()), twttr.loggedIn || this.$find(".js-user-profile-link").removeClass("js-user-profile-link").addClass("js-signup-callout")
            },
            render: function() {
                this._event && (this.$node.empty(), this.$node.append((new twttr.views.CardSoccerOnebox(this._event)).html()), this._renderMatchedEvent(this._event), this._renderTicker(this._event), this._event.events.getMatchState().current_status === "final" && $(".score a").removeClass("live")), this.$node.css("visibility", ""), trackClient({
                    section: "onebox",
                    component: "sports",
                    action: "impression"
                }), this.$find(".ticker").length !== 0 && this._tickerScroll(this.$find(".tickercontainer"))
            },
            _tickerScroll: function(a) {
                function b() {
                    var a = c.find("li")[m - 1];
                    $(a).animate({
                        opacity: 0
                    }, l, "linear"), c.animate({
                        top: -m * 100 + "%"
                    }, l, "linear", function() {
                        if (!k) return;
                        ++m, m - 1 >= c.find("li").length ? (i._renderTicker(i._event), i._tickerScroll(i.$find(".tickercontainer"))) : (clearTimeout(j), j = setTimeout(function() {
                            b()
                        }, g))
                    })
                }
                this._scrollStarted = !0;
                var c = $(a.children()[0]),
                    d = 0,
                    e = 0;
                c.find(".event-item").each(function(a) {
                    var b = $(this, a).outerHeight(!0);
                    d += b, e < b && (e = b)
                }), a.height(e), c.height(d);
                var f = .03,
                    g = 2e3,
                    i = this,
                    j, k = !0,
                    l = e / f,
                    m = 0;
                c.find("li").length === 1 ? setTimeout(function() {
                    i._renderTicker(i._event), i._tickerScroll(i.$find(".tickercontainer"))
                }, g) : (c.css("top", e), j = setTimeout(function() {
                    b()
                }, g), c.hover(function() {
                    k = !1, clearTimeout(j)
                }, function() {
                    k = !0, j = setTimeout(function() {
                        b()
                    }, g)
                }))
            },
            _getEventIds: function(a) {
                var b = [];
                return $.each(a, function(a, c) {
                    b.push(a)
                }), b.join()
            },
            _startPolling: function(a) {
                var b = this;
                b._timerId = setInterval(function() {
                    var c = {
                        statuses: !1,
                        stories: !0,
                        is_t1: twttr.isT1,
                        trim_user: !0,
                        event_ids: b._getEventIds(a.events.items),
                        success: function(a) {
                            if (a.stories.length() === 0) return;
                            var c = a.stories.get(0),
                                d = $.extend(!0, b._event.events.data().items, b.getEvent(c).events.data().items);
                            b._event.events.data().items = d, b._renderMatchedEvent(b._event), b.$find(".ticker").length === 0 && b._renderTicker(b._event), b.$find(".ticker").length !== 0 && !b._scrollStarted && b._tickerScroll(b.$find(".tickercontainer")), b._event.events.getMatchState().current_status === "final" && (clearInterval(b._timerId), $(".score a").removeClass("live"))
                        }
                    };
                    $(b.$node).parents("body").size() === 0 || !twttr.decider.isAvailable("sports_onebox_polling") ? clearInterval(b._timerId) : new Date - a.events.getMatchedEventData().scheduled_start_time_utc > 0 && twttr.API.Search.search(query, c)
                }, 3e4)
            }
        });
        a(d)
    })
});
provide("components/onebox/Event", function(a) {
    using("_", "helpers").as(function(b, _) {
        var c = twttr.klass.component("twttr.components.onebox.Event").initializer(function(a, b) {
            this.scribbler = twttr.Scribbler.clientEvent.spawnWithTerms({
                section: "onebox",
                component: "event"
            }, {
                query: b
            });
            var c = a.content.events[0];
            if (c) {
                if (c.takeover === !0) {
                    var d = twttr.griffin.isEvent(c.title);
                    if (twttr.griffin.redirectOnSearch(d)) return
                }
                var e = twttr.abdecider.choose("events_onebox_353");
                if (e && e !== "control") return;
                this.$node.append((new twttr.views.CardEventOnebox(c)).html())
            }
        }).deciderKey("swift_events_reroute").click({
            ".js-onebox-event-item": function(a) {
                trackClient({
                    section: "onebox",
                    component: "event",
                    action: "click"
                })
            }
        }).methods({
            render: function() {
                this.$node.css("visibility", "")
            }
        });
        a(c)
    })
});
provide("components/t1/EmptyTimelineRecommendations", function(a) {
    using("components/UserRecommendations").as(function(b) {
        twttr.klass("twttr.components.t1.EmptyTimelineRecommendations").subclassOf(twttr.components.UserRecommendations).initializer(function(a) {
            var b = this;
            this.bucket = twttr.abdecider.chooseWithoutImpression("empty_timeline_176"), this.one("recommendationsLoaded.EmptyTimelineRecommendations", function() {
                using(">allCurrentUserDataLoaded", function() {
                    twttr.currentUser.friends({
                        success: function(a) {
                            b.friends = a, b.conditionallyEnableDoneButton(), twttr.API.User.bind("follow.EmptyTimelineRecommendations", function(a, c) {
                                b.friends.push(c);
                                var d = b.$find('.js-list-item[data-user-id="' + c.id + '"]');
                                d.length !== 0 && (b.followEvent = !0, b.loadRecommendations(d)), b.conditionallyEnableDoneButton(), b.renderModuleHeaders()
                            }), twttr.API.User.bind("unfollow.EmptyTimelineRecommendations", function(a, c) {
                                b.friends = b.friends.filter(function(a) {
                                    return a.id !== c.id
                                }), b.conditionallyDisableDoneButton(), b.renderModuleHeaders()
                            })
                        }
                    })
                })
            }), this._superInitializer(a)
        }).destructor(function() {
            this.unbind(".EmptyTimelineRecommendations"), twttr.API.User.unbind(".EmptyTimelineRecommendations")
        }).statics({
            avatarLimit: 5
        }).methods({
            forceNewSignup: !0,
            LIST_ITEM_SELECTOR: ".js-empty-timeline .js-list-item",
            conditionallyEnableDoneButton: function() {
                this.friends.length() > twttr.components.t1.EmptyTimelineRecommendations.avatarLimit - 1 && this.$find(".js-done").removeClass("disabled")
            },
            conditionallyDisableDoneButton: function() {
                this.friends.length() < twttr.components.t1.EmptyTimelineRecommendations.avatarLimit && this.$find(".js-done").addClass("disabled")
            },
            renderItemView: function(a) {
                var b = new twttr.views.BigAvatarListItem(a);
                return b.dismissable = !1, b
            },
            renderModuleView: function(a, b) {
                var c = this,
                    d = {},
                    e;
                d.following = this.setupFollowingContext(), d.avatar_limit = twttr.components.t1.EmptyTimelineRecommendations.avatarLimit, d.recommendations = [], b.each(function(a) {
                    var b = c.renderItemView(a);
                    d.recommendations.push(b)
                }), (new twttr.views.EmptyTimelineRecommendationsModuleShort(d)).render(this.$node, "append")
            },
            getRecPosition: function(a) {
                var b;
                return this.$find(".js-account-group").each(function(c, d) {
                    if (a.attr("data-user-id") == $(d).attr("data-user-id")) return b = c, !1
                }), b
            },
            renderModuleHeaders: function() {
                var a = {},
                    b = this.$find("h2"),
                    c = this.$find("h3");
                a.following = this.setupFollowingContext(), b.length > 0 && b.html((new twttr.views.EmptyTimelineTitle(a)).html()), c.length > 0 && c.html((new twttr.views.EmptyTimelineSubtitle(a)).html())
            },
            setupFollowingContext: function() {
                if (twttr.currentUser.friendsCount !== 0) return {
                    goal: twttr.components.t1.EmptyTimelineRecommendations.avatarLimit,
                    count: twttr.currentUser.friendsCount,
                    follow_event: this.followEvent || !1,
                    zero: twttr.currentUser.friendsCount === 0,
                    one: twttr.currentUser.friendsCount === 1,
                    two: twttr.currentUser.friendsCount === 2,
                    several: twttr.currentUser.friendsCount >= 3 && twttr.currentUser.friendsCount < twttr.components.t1.EmptyTimelineRecommendations.avatarLimit - 1,
                    almost: twttr.currentUser.friendsCount === twttr.components.t1.EmptyTimelineRecommendations.avatarLimit - 1,
                    done: twttr.currentUser.friendsCount >= twttr.components.t1.EmptyTimelineRecommendations.avatarLimit
                }
            },
            _generateUserList: function(a) {
                var b = this;
                return (new twttr.views.EmptyTimelineRecommendationsModuleFollowers({
                    recommendations: a.map(function(a) {
                        return b.renderItemView(a)
                    }).toArray()
                })).$html()
            }
        }).click({
            ".js-done": function(a, b) {
                if (b.hasClass("disabled")) return;
                twttr.mixins.emptyTimelineRecommendations.showing = !1, this.destroy()
            }
        }), a(twttr.components.t1.EmptyTimeline)
    })
});
provide("components/t1/dashboard/AbstractDashboard", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.AbstractDashboard").subclassOf(twttr.components.Base).setBaseView(twttr.views.Module).initializer(function(a) {
            var b = this;
            a = a || {}, this.$sections = {}, this.$itemsContainer = this.$find(".js-items-container"), this.$itemsContainer.length || (this.$itemsContainer = this.$node), this.noSpacer = !0
        }).methods(twttr.EventProvider).methods({
            addSection: function(a) {
                if (!a.id || !! this.$sections[a.id]) return !1;
                a.tag = a.tag || "div", a.operation = a.operation || "append";
                var b = (new twttr.views.ModuleSection({
                    tag: a.tag,
                    id: a.id
                })).$html();
                return a.className && b.addClass(a.className), this.$sections[a.id] = b, a.operation = a.operation || "append", this.$itemsContainer[a.operation](b), b
            },
            getSection: function(a) {
                return this.$sections[a] ? this.$sections[a] : !1
            },
            removeSection: function(a) {
                if (!this.$sections[a]) return !1;
                this.$sections[a].remove(), delete this.$sections[a]
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/Tweetbox", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.Tweetbox").subclassOf(twttr.components.t1.dashboard.AbstractDashboard).initializer(function(a) {
            this.$node.html(a.addClass("flex-module"))
        });
        a(c)
    })
});
provide("components/t1/dashboard/ProfileTweetbox", function(a) {
    using("components/t1/dashboard/Tweetbox").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ProfileTweetbox").subclassOf(b.components.t1.dashboard.Tweetbox).initializer(function(a) {
            this._superInitializer(a)
        });
        a(c)
    })
});
provide("components/t1/dashboard/ProfileFollowCard", function(a) {
    using("components/t1/dashboard/AbstractDashboard", "mixins/userActionable", "mixins/userUpdateable").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ProfileFollowCard").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseViewOptions({
            class_name: "profile-card"
        }).mixin(b.mixins.userActionable, b.mixins.userUpdateable).initializer(function(a) {
            function b() {
                c.registerUserActionEvents(), c.registerUserUpdateEvents(c.user), c.bind("userUpdated", function(a, b) {
                    c.user = b, c.renderStats()
                })
            }
            var c = this;
            this._superInitializer(), this.user = a;
            if (twttr.helpers.isCurrentUser(a)) {
                var d = this.renderCard();
                (new twttr.views.ScreenNameFollowedBy({
                    screen_name: a.screenName,
                    is_current_user: !0
                })).render(d.$dom.find(".js-username")), b()
            } else this.getRelationship(a, function(d, e) {
                c.updateUserAttributesFromRelationship(d);
                var f = c.renderCard();
                (new twttr.views.ScreenNameFollowedBy({
                    screen_name: a.screenName,
                    followed_by: d.followedBy
                })).render(f.$dom.find(".js-username")), c.renderUserProfileMenu(c.$find(".js-follow-combo"), c.$find(".js-action-profilemenu"), e), b()
            })
        }).methods({
            renderCard: function() {
                var a = this,
                    b = new twttr.views.ProfileFollowCard(this.user),
                    c = this.user.impressionId;
                return b.render(this.$node), setTimeout(function() {
                    a.trigger("followCardRendered")
                }, 0), b
            },
            renderStats: function() {
                this.$find(".js-mini-profile-stats").remove(), (new twttr.views.MiniProfileStats(this.user)).render(this.$find(".js-profile-card-actions"), "append")
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/Flex", function(a) {
    using("components/t1/dashboard/AbstractDashboard").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.Flex").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseView(twttr.views.FlexModule).initializer(function(a) {
            this._superInitializer(a)
        }).methods({
            addTitle: function(a) {
                this.$itemsContainer.find(".flex-module-title").remove(), (new twttr.views.FlexModuleTitle({
                    title: a.title,
                    view_all_route: a.viewAllRoute
                })).render(this.$itemsContainer, "prepend")
            },
            addMoreLinks: function(a) {
                this.$itemsContainer.find(".js-more-links").remove(), a.length && (a[a.length - 1].is_last = !0), (new twttr.views.FlexModuleMoreLinks({
                    links: a
                })).render(this.$itemsContainer, "append")
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/Nav", function(a) {
    using("util").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.Nav").subclassOf(twttr.components.Base).initializer(function(a) {
            a = a || {}, this.$itemsContainer = this.$find(".js-items-container"), a.items && (a.items = twttr.map(a.items, function(a) {
                twttr.is.def(a.name) || (a.name = twttr.router.findMatchingRoute(a.route).name);
                if (a.type || a.name) a.element_term = b.util.underscore(a.type || a.name) + "_item";
                return twttr.merge({
                    show_metadata_container: a.metadata,
                    active: twttr.router.getCurrentRoute().name == a.name,
                    count_commaized: a.count ? b.util.formatNumber(a.count, twttr.pageLocale) : "",
                    visible: !0
                }, a)
            })), (new twttr.views.Nav(a)).render(this.$node), this.afterRender(this.$node)
        }).methods({
            afterRender: $.noop
        });
        a(c)
    })
});
provide("components/t1/dashboard/MiniHomeProfile", function(a) {
    using("components/t1/dashboard/AbstractDashboard").as(function(b) {
        var c = twttr.klass.component("twttr.components.t1.dashboard.MiniHomeProfile").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseView(twttr.views.MiniHomeProfile).initializer(function(a) {
            var b = this;
            this._superInitializer(), this.showStats = !! a, this.user = twttr.currentUser, this.renderUser(), this.showStats && (this.renderStats(), this.attachEvents()), using([twttr.bundleMore, "TweetBox"], function() {
                b.renderTweetBox()
            })
        }).methods({
            insertTweetbox: function() {
                if (this.tweetBox) return this.tweetBoxNode;
                var a = this,
                    b = this.tweetBoxNode = $('<div class="tweet-box"/>');
                return this.tweetBox = new twttr.TweetBox(b.empty(), twttr.merge(this.getTweetBoxOptions(), {
                    defaultContent: "",
                    id: "main-tweet-box",
                    condensed: !0,
                    statusAction: "update",
                    width: 258,
                    height: 75,
                    explainLinkShortening: !1,
                    enableDraft: !0,
                    enableAutoGrow: !0,
                    template: {
                        suppress_geo_text: !0,
                        button_text: _("Tweet"),
                        show_title: !1
                    }
                })), this.tweetBox.bind("tweetSuccess", function(a, b) {
                    twttr.showMessage(_("Your Tweet has been sent!"))
                }), b
            },
            getTweetBoxOptions: function() {
                return {
                    condensedContent: _("Compose new Tweet..."),
                    autocompleteSuggestionLimit: 5
                }
            },
            renderUser: function() {
                (new twttr.views.MiniCurrentUser(this.user)).render(this.$find(".js-profile-summary"), "append")
            },
            renderStats: function() {
                (new twttr.views.MiniProfileStats(this.user)).render(this.$find(".js-mini-profile-stats-container"))
            },
            renderTweetBox: function() {
                this.$tweetBox = this.insertTweetbox(), this.$find(".js-mini-profile-tweet-box").remove(), this.$itemsContainer.append(this.$tweetBox.addClass("tweet-user"))
            },
            tweetHandler: function() {
                twttr.currentUser.sync("statusesCount", twttr.currentUser.statusesCount + 1), this.renderStats()
            },
            deleteTweetHandler: function() {
                twttr.currentUser.sync("statusesCount", twttr.currentUser.statusesCount - 1), this.renderStats()
            },
            attachEvents: function() {
                var a = this;
                $(document).bind("currentUserUpdated", function() {
                    a.renderStats()
                }), twttr.API.Status.bind("update retweet", function() {
                    a.tweetHandler()
                }), twttr.API.Status.bind("delete unretweet", function() {
                    a.deleteTweetHandler()
                })
            },
            _isCJK: function() {
                var a = twttr.pageLocale;
                return a === "ja" || a === "ko" || a === "zh-cn" || a === "zh-tw"
            }
        }).click({
            ".js-profile-summary": function() {
                twttr.router.routeTo(twttr.router.profilePath({
                    screen_name: this.user.screenName
                }))
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/ConnectNav", function(a) {
    using("components/t1/dashboard/Nav").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ConnectNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function() {
            this._superInitializer.call(this, {
                name: "connect-nav",
                items: [{
                    title: _("Interactions"),
                    route: twttr.router.connectPath(),
                    visible: twttr.decider.isActivityEnabled(),
                    type: "activity"
                }, {
                    name: "mentions",
                    title: _("Mentions"),
                    route: twttr.router.mentionsPath(),
                    active: twttr.router.getCurrentRoute().name === "replies" || twttr.router.getCurrentRoute().name == "mentions",
                    type: "mentions"
                }]
            })
        });
        a(c)
    })
});
provide("components/t1/dashboard/ProfileNav", function(a) {
    using("components/t1/dashboard/Nav").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ProfileNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function(a) {
            this._superInitializer.call(this, {
                name: "profile-nav",
                items: [{
                    title: _("Tweets"),
                    route: twttr.router.profilePath({
                        screen_name: a.screenName
                    })
                }, {
                    title: _("Following"),
                    route: twttr.router[twttr.helpers.isCurrentUser(a) ? "followingPath" : "userFollowingPath"]({
                        screen_name: a.screenName
                    })
                }, {
                    title: _("Followers"),
                    route: twttr.router[twttr.helpers.isCurrentUser(a) ? "followersPath" : "userFollowersPath"]({
                        screen_name: a.screenName
                    }),
                    active: twttr.router.getCurrentRoute().name == "followers" || twttr.router.getCurrentRoute().name == "userFollowers" || twttr.router.getCurrentRoute().name == "followersYouFollow",
                    show_metadata_container: !0
                }, {
                    title: _("Favorites"),
                    route: twttr.router[twttr.helpers.isCurrentUser(a) ? "favoritesPath" : "userFavoritesPath"]({
                        screen_name: a.screenName
                    }),
                    active: twttr.router.getCurrentRoute().name == "favorites" || twttr.router.getCurrentRoute().name == "userFavorites"
                }, {
                    title: _("Requests"),
                    route: twttr.router.followerRequestsPath({
                        screen_name: a.screenName
                    }),
                    visible: twttr.helpers.isCurrentUser(a) && a["protected"]
                }, {
                    title: _("Lists"),
                    route: twttr.router.subscriptionsPath({
                        screen_name: a.screenName
                    }),
                    active: twttr.router.getCurrentRoute().name == "subscriptions" || twttr.router.getCurrentRoute().name == "memberships"
                }]
            }), twttr.helpers.canViewUser(a) && this.renderMedia()
        }).methods({
            renderMedia: function() {
                this.$find("ul").append((new twttr.components.UserMedia(twttr.profileUser, {
                    view_all_href: twttr.router.userMediaGridPath({
                        screen_name: twttr.profileUser.screenName
                    }),
                    renderHr: !0
                })).$node)
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/SettingsNav", function(a) {
    using("components/t1/dashboard/Nav").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.SettingsNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function() {
            this._superInitializer.call(this, {
                name: "settings-nav",
                items: [{
                    title: _("Accounts & Settings"),
                    route: twttr.router.settingsPath()
                }]
            })
        });
        a(c)
    })
});
provide("components/t1/dashboard/ListNav", function(a) {
    using("components/t1/dashboard/Nav").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ListNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function(a) {
            this._superInitializer.call(this, {
                name: "list-nav",
                items: [{
                    title: _("Tweets"),
                    route: twttr.router.userListPath({
                        screen_name: a.user.screenName,
                        list_slug: a.slug
                    })
                }, {
                    title: _("List members"),
                    route: twttr.router.listMembersPath({
                        screen_name: a.user.screenName,
                        list_slug: a.slug
                    })
                }, {
                    title: _("List subscribers"),
                    route: twttr.router.listSubscribersPath({
                        screen_name: a.user.screenName,
                        list_slug: a.slug
                    })
                }]
            })
        });
        a(c)
    })
});
provide("components/t1/dashboard/SearchNav", function(a) {
    using("components/t1/dashboard/Nav", "components/SearchFacets").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.SearchNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function(a) {
            this._query = a, this._superInitializer.call(this, {
                name: "search-nav",
                items: [{
                    title: _("Tweets"),
                    route: twttr.router.searchResultsPath({
                        query: a
                    }),
                    type: "tweets"
                }, {
                    title: _("People"),
                    route: twttr.router.userSearchPath({
                        query: a
                    }),
                    name: "userSearch",
                    show_metadata_container: !0,
                    type: "people"
                }]
            }), this.renderFacets(a)
        }).methods({
            loadUsers: function(a, b) {
                var c = this,
                    d = {
                        display_location: "search-component",
                        pc: !1
                    };
                twttr.API.User.search(a, twttr.merge(d, {
                    success: function(a) {
                        var c = new twttr.components.t1.AvatarRow(a);
                        b.find(".js-metadata").html(c.$node)
                    }
                }))
            },
            afterRender: function(a) {
                query = this._query.replace(/(^|\b)(from\:|to\:|near\:|source\:)/g, "");
                if (query.indexOf(":") != -1) return;
                this.loadUsers(query, a)
            }
        }).methods({
            renderFacets: function(a) {
                var c = this,
                    d = !1;
                this.facets = new b.components.SearchFacets(a), this.facets.bind("urlsLoaded", function(a, b, e) {
                    b ? d || (c.facets.$node.appendTo(c.$find(".js-items-container")), d = !0) : e && c.facets.$node.remove()
                })
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/DiscoverNav", function(a) {
    using("components/t1/dashboard/Nav", "components/t1/AvatarRow").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.DiscoverNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function() {
            this._superInitializer.call(this, {
                name: "discover-nav",
                items: [{
                    title: _("Stories"),
                    route: twttr.router.discoverPath(),
                    type: "discover"
                }, {
                    title: _("Activity"),
                    route: twttr.router.networkActivityPath(),
                    visible: twttr.decider.isActivityEnabled(),
                    type: "activity"
                }, {
                    title: _("Lifeline"),
                    route: twttr.router.whoToFollowLifelinePath(),
                    visible: twttr.decider.isAvailable("discover_lifeline") && twttr.pageLocale === "ja",
                    type: "lifeline"
                }, {
                    title: _("Who to follow"),
                    route: twttr.router.whoToFollowSuggestionsPath(),
                    show_metadata_container: !0,
                    type: "suggestions"
                }, {
                    title: _("Find friends"),
                    route: twttr.router.whoToFollowImportPath(),
                    type: "import"
                }, {
                    title: _("Browse categories"),
                    route: twttr.router.whoToFollowInterestsPath(),
                    active: twttr.router.getCurrentRoute().name == "whoToFollowInterestsCategory" || twttr.router.getCurrentRoute().name == "whoToFollowInterests",
                    type: "interests"
                }]
            }), twttr.loggedIn && this.renderWTFFacePile()
        }).methods({
            renderWTFFacePile: function() {
                var a = this;
                twttr.currentUser.recommendedUsers2(function(b) {
                    var c = b.map(function(a) {
                        return a.user
                    }),
                        d = new twttr.components.t1.AvatarRow(c);
                    a.$find('[data-name="whoToFollowSuggestions"] .js-metadata').html(d.$node)
                })
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/ProfileSummary", function(a) {
    using("components/t1/dashboard/AbstractDashboard").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ProfileSummary").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseView(twttr.views.ModuleProfileSummary).initializer(function(a) {
            this._superInitializer(a)
        });
        a(c)
    })
});
provide("components/t1/dashboard/ListFollowCard", function(a) {
    using("components/t1/dashboard/AbstractDashboard").as(function(b) {
        var c = twttr.klass.component("twttr.components.t1.dashboard.ListFollowCard").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseViewOptions({
            class_name: "follow-card"
        }).initializer(function(a) {
            this._superInitializer(), this.render(a), this._registerEvents(a)
        }).methods({
            render: function(a) {
                (new twttr.views.ListFollowCard(a)).render(this.$node)
            },
            _registerEvents: function(a) {
                var b = this;
                this._registerEvent(twttr.API.List, "update follow unfollow add remove", function(c, d) {
                    d.id === a.id && ((c.type === "follow" || c.type === "unfollow") && d.sync("following", c.type === "follow"), b.render(d))
                })
            }
        });
        a(c)
    })
});
provide("components/t1/dashboard/SearchImages", function(a) {
    using("components/t1/dashboard/AbstractDashboard").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.SearchImages").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseView(twttr.views.ModuleSearchImages).initializer(function(a) {
            this._superInitializer(a)
        });
        a(c)
    })
});
provide("components/t1/dashboard/SearchVideos", function(a) {
    using("components/t1/dashboard/AbstractDashboard").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.SearchVideos").subclassOf(b.components.t1.dashboard.AbstractDashboard).setBaseView(twttr.views.ModuleSearchVideos).initializer(function(a) {
            this._superInitializer(a)
        });
        a(c)
    })
});
provide("components/t1/AvatarRow", function(a) {
    using().as(function(b) {
        var c = twttr.klass("twttr.components.t1.AvatarRow").subclassOf(twttr.components.Base).initializer(function(a, b) {
            var b = b || {};
            this.avatarLimit = b.avatarLimit || 7, this.renderFacePile(a)
        }).methods({
            renderFacePile: function(a) {
                var b = a.slice(0, this.avatarLimit);
                b.length() > 0 && ((new twttr.views.AvatarRow(b)).render(this.$node, "html"), this.$find(".js-user-tipsy").tipsy({
                    gravity: "s"
                }))
            }
        });
        a(c)
    })
});
provide("components/t1/SearchHeader", function(a) {
    using("helpers").as(function(b) {
        var c = twttr.klass("twttr.components.t1.SearchHeader").subclassOf(twttr.components.Base).mixin(twttr.mixins.i18nTweetBox).setBaseView(twttr.views.SearchHeader).initializer(function(a) {
            this.setQuery(a), this.registerEvents(), this.registerSearchMenuAction(), twttr.search.isSavedSearch(a) && this.toggleSavedSearchOn()
        }).methods({
            registerEvents: function() {
                var a = this;
                this.$find(".js-search-header-query").bind("keydown keypress keyup", function(b) {
                    a.markPunctuation(b, $(this))
                });
                var c = this.$find("form.js-search-form");
                b.helpers.addFormEvents(c, function(a, b) {
                    var c = b.q;
                    c ? (twttr.search.setLastQuerySource(twttr.search.searchQuerySource.TYPED_QUERY), twttr.search.doSearch(c)) : twttr.showMessage(_("Enter your query before submitting the search form!"))
                }), twttr.search.formifyLatestQuery(c)
            },
            toggleSavedSearchOn: function() {
                this.$find(".js-toggle-saved-search-link").html(_("Remove saved search")).addClass("saved").removeClass("not-saved"), this.$find(".js-search-title").html(_("Saved search results"))
            },
            toggleSavedSearchOff: function() {
                this.$find(".js-toggle-saved-search-link").html(_("Save search")).addClass("not-saved").removeClass("saved"), this.$find(".js-search-title").html(_("Search results"))
            },
            registerSearchMenuAction: function() {
                var a = this;
                this.$node.delegate(".js-search-dropdown-button", "click", function(b) {
                    return a.toggleSearchMenu(), b.preventDefault(), b.stopPropagation(), !1
                })
            },
            showSearchMenu: function(a) {
                var b = this;
                a.addClass("open"), $(document).bind("click.button", function() {
                    b.hideSearchMenu(a)
                })
            },
            hideSearchMenu: function(a) {
                a.removeClass("open"), $(document).unbind("click.button")
            },
            toggleSearchMenu: function(a) {
                var b = this,
                    c = this.$node.find(".js-search-dropdown");
                c.hasClass("open") ? this.hideSearchMenu(c) : this.showSearchMenu(c)
            },
            setQuery: function(a) {
                this.$find(".js-search-header-query").val(a)
            },
            focusQuery: function() {
                this.$find(".js-search-header-query").focus()
            }
        });
        a(c)
    })
});
provide("components/t1/PeopleSearchStreamHeader", function(a) {
    using("helpers").as(function(b) {
        var c = twttr.klass("twttr.components.t1.PeopleSearchStreamHeader").subclassOf(twttr.components.Base).initializer(function(a, b) {
            b = b || {}, b.placeholder = b.placeholder || _("Search using a person’s full name or @username"), b.button_text = b.buttonText || _("Search Twitter"), this.searchRoute = b.searchRoute = a, (new twttr.views.StreamHeaderPeopleSearch(b)).render(this.$node, "append"), this.registerEvents()
        }).methods({
            registerEvents: function() {
                var a = this.$find("form.js-search-form"),
                    c = this;
                b.helpers.addFormEvents(a, function(b, d) {
                    !a.find('input[name="q"]').hasClass("js-placeholded") && d.q != "" && (trackClient({
                        component: "user_search_form",
                        action: "search"
                    }, {
                        query: d.q
                    }), twttr.router.routeTo(c.searchRoute({
                        query: d.q
                    })))
                })
            }
        });
        a(c)
    })
});
provide("components/t1/UserSimilaritiesList", function(a) {
    using("_", "mixins/userRecommendationsHelper", "mixins/userActionable").as(function(b, _) {
        var c = twttr.klass("twttr.components.t1.UserSimilaritiesList").subclassOf(twttr.components.Base).initializer(function(a, b) {
            b = b || {}, this.profileUser = a, this.screenName = this.profileUser.screenName, this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: this.profileUser.id
            }), this.whotofollowComponentName = "whotofollow_dropdown", this.ignoreScribeItemPosition = !0, this.initTime = +(new Date), this.userRecommendationsAvailable() ? this.loadRecommendations() : this.trigger("notRendered", "darkmoded"), this.registerUserActionEvents(), this.registerUserRecommendationsActions()
        }).mixin(b.mixins.userRecommendationsHelper, b.mixins.userActionable).click({
            ".js-close": function(a) {
                a.preventDefault(), this.trigger("close")
            }
        }).methods({
            renderView: function(a) {
                var b = (new twttr.views.UserSimilaritiesList).$html(),
                    c = b.find(".js-users-list");
                a.map(function(a) {
                    var b = new twttr.views.StreamUser(a);
                    (new twttr.views.StreamItem({
                        item_html: b.html(),
                        item_type: "user",
                        item_class: "stream-item"
                    })).render(c, "append")
                }), c.children(":last-child").addClass("stream-end-item"), this.$node.append(b)
            },
            loadRecommendations: function(a) {
                this.fetch({
                    limit: 2,
                    success: twttr.bind(this, function(a) {
                        var b = this.recsToUsers(a);
                        this.trackImpressions(b, "whotofollow_post_follow_similar_users", {
                            tracking_context: "profile",
                            profile_user: this.profileUser.id
                        }), b.length() > 0 ? (this.renderView(b), this.hasRendered(), this.trigger("recommendationsLoaded")) : this.trigger("notRendered", "noMoreRecommendations")
                    }),
                    error: twttr.bind(this, function(a) {
                        this.trackImpressions(null, "whotofollow_post_follow_similar_users", {
                            tracking_context: "profile",
                            profile_user: this.profileUser.id,
                            error_status: a.status
                        }), this.trigger("notRendered", a)
                    })
                })
            }
        });
        a(twttr.components.UserSimilaritiesList)
    })
});
provide("components/t1/UserSimilaritiesDashboardList", function(a) {
    using("_", "mixins/userRecommendationsHelper", "mixins/userActionable").as(function(b, _) {
        var c = twttr.klass("twttr.components.t1.UserSimilaritiesDashboardList").subclassOf(twttr.components.Base).initializer(function(a, b, c) {
            c = c || {}, this.profileUser = a, this.screenName = this.profileUser.screenName, this.suggestions = new Array, this.contextStreamIds = b, this.scribbler = twttr.Scribbler.clientEvent.spawn({
                profile_id: this.profileUser.id
            }), this.whotofollowComponentName = "whotofollow_dropdown", this.ignoreScribeItemPosition = !0, this.initTime = +(new Date), this.userRecommendationsAvailable() ? this.loadRecommendations() : this.trigger("notRendered", "darkmoded"), this.registerUserActionEvents(), this.registerUserRecommendationsActions()
        }).mixin(b.mixins.userRecommendationsHelper, b.mixins.userActionable).methods({
            renderView: function(a) {
                var b = (new twttr.views.UserSimilaritiesDashboardList).$html(),
                    c = b.find(".js-users-list"),
                    d = 0,
                    e = this;
                a.map(function(a) {
                    if (!e.contextStreamIds[a.id]) {
                        d++;
                        if (d < 3) {
                            e.suggestions.push(a);
                            var b = new twttr.views.DashboardStreamUser(a);
                            (new twttr.views.StreamItem({
                                item_html: b.html(),
                                item_type: "user",
                                item_class: "unfocusable-stream-item js-similar-user"
                            })).render(c, "append")
                        }
                    }
                }), this.$node.append(b)
            },
            loadRecommendations: function(a) {
                this.fetch({
                    limit: 10,
                    success: twttr.bind(this, function(a) {
                        var b = this.recsToUsers(a);
                        this.trackImpressions(b, "whotofollow_post_follow_similar_users", {
                            tracking_context: "profile",
                            profile_user: this.profileUser.id
                        }), b.length() > 0 ? (this.renderView(b), this.hasRendered(), this.trigger("recommendationsLoaded")) : this.trigger("notRendered", "noMoreRecommendations")
                    }),
                    error: twttr.bind(this, function(a) {
                        this.trackImpressions(null, "whotofollow_post_follow_similar_users", {
                            tracking_context: "profile",
                            profile_user: this.profileUser.id,
                            error_status: a.status
                        }), this.trigger("notRendered", a)
                    })
                })
            }
        });
        a(twttr.components.t1.UserSimilaritiesDashboardList)
    })
});
provide("components/pages/mixins/profileT1", function(a) {
    using("_", "components/t1/dashboard/ProfileNav", "components/t1/dashboard/ProfileFollowCard", "components/SignupCallOut").as(function(b, _) {
        var c = twttr.klass.mixin("twttr.components.pages.mixins.profileT1", function() {
            this.view(twttr.views.PageProfile).methods({
                allLists: function(a) {
                    var b = this,
                        c = this._defaultedScreenName(a.screen_name);
                    this.getUserInfo(c, function() {
                        twttr.helpers.canViewUser(b.profileUser) ? (b.updatePageTitle(_("Twitter / {{screenName}}'s Subscriptions", {
                            screenName: c
                        })), b._highlightNavIfCurrentUser(c), b.selectCurrentSideNav(), b._switchToStream({
                            screenName: c,
                            stream: twttr.streams.AllSubscriptionsUser
                        })) : twttr.router.routeTo(twttr.router.profilePath({
                            screen_name: c
                        }))
                    }, {
                        batch: !twttr.loggedIn,
                        profiler: !0
                    })
                },
                memberships: function(a) {
                    var b = this,
                        c = a.screen_name;
                    this.updatePageTitle(_("Twitter / Lists following {{screenName}}", {
                        screenName: c
                    })), this._highlightNavIfCurrentUser(c), this._switchToStream({
                        screenName: c,
                        stream: twttr.streams.MembershipsUser
                    })
                },
                with_replies: function(a, b) {
                    var c = this,
                        d = a.screen_name.toLowerCase();
                    this.loading(d), this.getUserInfo(d, function() {
                        c.updatePageTitle(_("{{{fullName}}} ({{{screenName}}}) on Twitter", {
                            fullName: c.profileUser.name,
                            screenName: d
                        })), c._highlightNavIfCurrentUser(d), c._switchToStream({
                            screenName: d,
                            stream: twttr.streams.User,
                            tab: "tweets"
                        }), c.selectSideNav("profile"), c.checkWithheld()
                    }, {
                        batch: !twttr.loggedIn,
                        profiler: !0
                    }, twttr.bind(this, this.noUserFoundCallback))
                },
                similarTo: function(a) {
                    var b = this,
                        c = a.screen_name;
                    this.updatePageTitle(_("Twitter / Similar to {{screenName}}", {
                        screenName: c
                    })), this._highlightNavIfCurrentUser(c), this.selectCurrentSideNav(), this._switchToStream({
                        screenName: c,
                        stream: twttr.streams.UserSimilaritiesStream
                    })
                },
                getTweetBoxOptions: function() {
                    return {
                        width: 258,
                        height: 75,
                        explainLinkShortening: !1,
                        condensedContent: "@" + this.profileUser.screenName + " ",
                        dynamicTitle: !1,
                        autoCompleteSuggestionLimit: 5,
                        template: {
                            suppress_geo_text: !0,
                            name: this.profileUser.name,
                            button_text: _("Tweet")
                        }
                    }
                },
                getDashboardComponents: function() {
                    var a = [],
                        c = this;
                    twttr.loggedIn || a.push(new b.components.SignupCallOut("profile", {
                        profileUser: this.profileUser
                    })), this.shouldShowTweetBox() && a.push(new twttr.components.t1.dashboard.ProfileTweetbox(this.renderTweetbox()));
                    var d = new twttr.components.UserRecommendations({
                        screenName: twttr.profileUser.screenName
                    });
                    return d.bind("recommendationsLoaded", function() {
                        "similarTo" === twttr.router.getCurrentRoute().name && c.selectSideNav("similarTo")
                    }), a.concat([new twttr.components.t1.dashboard.ProfileNav(this.profileUser), new twttr.components.JapaneseAd, d, new twttr.components.Footer])
                },
                addSimilarUsersDropdown: function() {
                    var a = this,
                        b = new twttr.components.t1.UserSimilaritiesList(this.profileUser);
                    b.bind("recommendationsLoaded", function() {
                        a.userSimilaritiesListComponent = b, (!$.browser.msie || $.browser.version != 7) && b.$node.hide(), a.addContainerComponent(a.$find(".js-content-main"), b, "before"), (!$.browser.msie || $.browser.version != 7) && b.$node.slideDown(300), twttr.router.one("routed", function() {
                            a.removeSimilarUsersDropdown()
                        })
                    }), b.bind("notRendered", function() {
                        b.destroy()
                    }), b.bind("close", function() {
                        a.removeSimilarUsersDropdown()
                    })
                },
                removeSimilarUsersDropdown: function() {
                    var a = this.userSimilaritiesListComponent;
                    this.userSimilaritiesListComponent = null, a && ($.browser.msie && $.browser.version == 7 ? a.destroy() : a.$node.slideUp(300, function() {
                        a.destroy()
                    }))
                },
                addBanner: function() {
                    var a = this.bannerPreviewUrl || this.profileUser.profileBannerUrl;
                    if (a && a.match(/\/brand_banners\//)) {
                        var b = (new twttr.views.ProfileBanner({
                            banner_url: decodeURIComponent(a)
                        })).html();
                        this.$topContent.find(".profile-card").append(b)
                    }
                },
                addImpressionData: function(a) {
                    a.profile_id = this.profileUser && this.profileUser.id || twttr.profileUser && twttr.profileUser.id
                }
            }).addAfterRender(function() {
                var a = this,
                    c = new b.components.t1.dashboard.ProfileFollowCard(this.profileUser);
                c.bind("follow.user", function() {
                    a.addSimilarUsersDropdown()
                }), c.bind("unfollow.user", function() {
                    a.removeSimilarUsersDropdown()
                }), c.bind("followCardRendered", function() {
                    a.addBanner()
                }), this.addTopContentComponent(c)
            }).addOnSwitchTo(function() {
                var a = this;
                $(document).bind("tweetSuccess", function(b, c) {
                    var d = a.streamManager.getCurrent().trigger("didTweet", [c])
                })
            }).addOnSwitchAway(function() {
                $(document).unbind("tweetSuccess")
            })
        });
        a(c)
    })
});
provide("components/pages/mixins/profileP1", function(a) {
    using("_", "constants").as(function(b, _) {
        var c = twttr.klass.mixin("twttr.components.pages.mixins.profileP1", function() {
            this.methods({
                getTweetBoxOptions: function() {
                    return {
                        width: 482,
                        condensedContent: _("Tweet to {{screen_name}}", {
                            screen_name: "@" + this.profileUser.screenName
                        }),
                        template: {
                            button_text: _("Tweet"),
                            show_title: !1
                        }
                    }
                },
                getDashboardComponents: function() {
                    var a = [];
                    a.push(new twttr.components.JapaneseAd), this.renderTweetbox(), twttr.loggedIn || a.push(new twttr.components.SignupCallOut("profile", {
                        profileUser: twttr.profileUser
                    }));
                    var c = twttr.helpers.userNoobLevel(twttr.currentUser),
                        d = twttr.helpers.isProfileUser();
                    return d && c >= b.constants.noob.total ? a = a.concat(this.getNoobDashboardComponents(c)) : (a.push(new twttr.components.DashboardProfileStats(twttr.profileUser)), a.push(new twttr.components.UserMedia(twttr.profileUser, {
                        renderHr: !0
                    })), this._isSocialContextAvailable() && a.push(new twttr.components.SocialContext), twttr.loggedIn && twttr.decider.isAvailable("whotofollow_similarities") && a.push(new twttr.components.UserRecommendations({
                        screenName: twttr.profileUser.screenName
                    })), twttr.loggedIn && a.push(new twttr.components.RecentProfileActivity(twttr.profileUser)), twttr.API.User.bind("block", this.userWasBlocked)), a.push(new twttr.components.Footer), a
                },
                getNoobDashboardComponents: function(a) {
                    var c = [],
                        d = twttr.profileUser;
                    c.push(new twttr.components.DashboardProfileStats(d, this.dashStatsTitle()), new twttr.components.UserMedia(twttr.profileUser, {
                        renderHr: !0
                    }));
                    var e = b.constants.noob;
                    switch (a) {
                    case e.invited:
                    case e.silent:
                    case e.popular:
                    case e.struggling:
                        c.push(new twttr.components.RecentProfileActivity(d));
                        break;
                    case e.friendless:
                    case e.lonely:
                        c.push(new twttr.components.RecentlyFollowed);
                        break;
                    case e.total:
                    case e.talking:
                    default:
                    }
                    return c.push(new twttr.components.GettingStarted(a)), c
                },
                memberships: function(a) {
                    var b = this,
                        c = a.screen_name;
                    this.updatePageTitle(_("Twitter / Lists following {{screenName}}", {
                        screenName: c
                    })), this._highlightNavIfCurrentUser(c), this._switchToStream({
                        screenName: c,
                        stream: twttr.streams.Memberships
                    })
                }
            }).click({
                ".stream-tab-lists": function(a, b) {
                    $(a.target).is(".tab-text, .tab-text *") && twttr.viewHelpers.superListDropdown(twttr.profileUser, b, function(a) {
                        a.render(b, "append"), a.open()
                    })
                },
                ".stream-tab-following.dropdown-link": function(a, b) {
                    a.preventDefault();
                    if (this._followingDropDown) return;
                    var c = twttr.profileUser.screenName,
                        d = [{
                            name: _("View as list of people →"),
                            href: twttr.router.userFollowingPath({
                                screen_name: c
                            })
                        }, {
                            name: _("View as timeline →"),
                            href: twttr.router.userFollowingTweetsPath({
                                screen_name: c
                            })
                        }];
                    $(a.target).hasClass("tab-text") && (this._followingDropDown = new twttr.control.Dropdown(b, {
                        itemView: "StreamLink",
                        items: d
                    }), this._followingDropDown.render(b, "append"), this._followingDropDown.open())
                },
                ".stream-tab-followers.dropdown-link": function(a, b) {
                    if (!this._isSocialContextAvailable()) return;
                    var c = twttr.profileUser.screenName;
                    if (this._followersDropDown) return;
                    $(a.target).hasClass("tab-text") && (this._followersDropDown = new twttr.control.Dropdown(b, {
                        itemView: "StreamLink",
                        items: [{
                            name: _("All followers →"),
                            href: twttr.router.userFollowersPath({
                                screen_name: c
                            })
                        }, {
                            name: _("Followers you follow →"),
                            href: twttr.router.followersYouFollowPath({
                                screen_name: c
                            })
                        }]
                    }), this._followersDropDown.render(b, "append"), this._followersDropDown.open())
                }
            })
        });
        a(c)
    })
});
provide("components/t1/dashboard/ProfileNav", function(a) {
    using("components/t1/dashboard/Nav").as(function(b) {
        var c = twttr.klass("twttr.components.t1.dashboard.ProfileNav").subclassOf(b.components.t1.dashboard.Nav).initializer(function(a) {
            this._superInitializer.call(this, {
                name: "profile-nav",
                items: [{
                    title: _("Tweets"),
                    route: twttr.router.profilePath({
                        screen_name: a.screenName
                    })
                }, {
                    title: _("Following"),
                    route: twttr.router[twttr.helpers.isCurrentUser(a) ? "followingPath" : "userFollowingPath"]({
                        screen_name: a.screenName
                    })
                }, {
                    title: _("Followers"),
                    route: twttr.router[twttr.helpers.isCurrentUser(a) ? "followersPath" : "userFollowersPath"]({
                        screen_name: a.screenName
                    }),
                    active: twttr.router.getCurrentRoute().name == "followers" || twttr.router.getCurrentRoute().name == "userFollowers" || twttr.router.getCurrentRoute().name == "followersYouFollow",
                    show_metadata_container: !0
                }, {
                    title: _("Favorites"),
                    route: twttr.router[twttr.helpers.isCurrentUser(a) ? "favoritesPath" : "userFavoritesPath"]({
                        screen_name: a.screenName
                    }),
                    active: twttr.router.getCurrentRoute().name == "favorites" || twttr.router.getCurrentRoute().name == "userFavorites"
                }, {
                    title: _("Requests"),
                    route: twttr.router.followerRequestsPath({
                        screen_name: a.screenName
                    }),
                    visible: twttr.helpers.isCurrentUser(a) && a["protected"]
                }, {
                    title: _("Lists"),
                    route: twttr.router.subscriptionsPath({
                        screen_name: a.screenName
                    }),
                    active: twttr.router.getCurrentRoute().name == "subscriptions" || twttr.router.getCurrentRoute().name == "memberships"
                }]
            }), twttr.helpers.canViewUser(a) && this.renderMedia()
        }).methods({
            renderMedia: function() {
                this.$find("ul").append((new twttr.components.UserMedia(twttr.profileUser, {
                    view_all_href: twttr.router.userMediaGridPath({
                        screen_name: twttr.profileUser.screenName
                    }),
                    renderHr: !0
                })).$node)
            }
        });
        a(c)
    })
});
provide("components/pages/mixins/listT1", function(a) {
    using("components/t1/dashboard/ListNav", "components/t1/dashboard/ListFollowCard", "components/NewestListMembers", "components/MoreLists", "components/Footer").as(function(b) {
        var c = twttr.klass.mixin("twttr.components.pages.mixins.listT1", function() {
            this.view(twttr.views.Page).methods({
                _registerEvents: function(a) {
                    var c = this;
                    twttr.API.List.bind("update", function(d, e) {
                        if (e.id === a.id) {
                            var f = c.$find(".list-nav").closest(".component"),
                                g = c.$find(".dashboard > *").index(f);
                            f.remove(), c.addDashboardComponent(new b.components.t1.dashboard.ListNav(e), g + 1)
                        }
                    })
                },
                getDashboardComponents: function(a) {
                    return this.listFollowCard = new b.components.t1.dashboard.ListFollowCard(a), [this.listFollowCard, new b.components.t1.dashboard.ListNav(a), new b.components.NewestListMembers(a), new b.components.MoreLists(a), new b.components.Footer]
                },
                addImpressionData: function(a) {
                    a.profile_id = this.owner && this.owner.id || twttr.profileUser && twttr.profileUser.id, a.message = this._listSlug
                }
            })
        });
        a(c)
    })
});
provide("multiGlobals/MessageManagerMonitor", function(a) {
    using().as(function(a) {
        if (twttr.isT1) {
            var b;
            twttr.decider.isAvailable("phoenix_use_conversation_endpoint") ? b = twttr.messageManager = new twttr.ConversationManager : b = twttr.messageManager = new twttr.MessageManager, b.bind("pendingThreads", function() {
                var a = b.hasPendingThreads();
                a ? ($("div.js-topbar li.js-session").addClass("new"), $("div.js-topbar span.js-direct-message-count").addClass("new").text(a)) : ($("div.js-topbar li.js-session").removeClass("new"), $("div.js-topbar span.js-direct-message-count").removeClass("new").text(""))
            }), b.setupContinuousPoll()
        }
    }), a()
});
provide("google", function(a) {
    using().as(function(b) {
        using(twttr.bundleMore, function() {
            if (twttr.isTestEnv) return;
            jQuery.active > 0 ? $(document).one("ajaxComplete", twttr.insertGAScriptElement) : twttr.insertGAScriptElement()
        }), a()
    })
});
provide("ttft_ajax", function(a) {
    using().as(function(b) {
        using(twttr.bundleMore, function() {
            var a = 0,
                b = 0,
                c = function() {
                    ++b >= a && (window.ttft.ajaxComplete(a), $(document).unbind("ajaxComplete", c))
                };
            window.ttft && $.active && ($(document).ajaxComplete(c), activeAjaxCount = $.active)
        }), a()
    })
});
provide("bundle/t1-more", function(a) {
    using("bundle/t1-core", function() {
        using(["mixins/ActivityViewHelpers", "/account/templates_t1_more.js", "multiGlobals/more_views", "multiGlobals/more_views_t1", "$lib/easyXDM.js", "libwrap/easyxdm", "lib/lazyload", "phoenix-more-css-wrapper", "$lib/jquery.ui.core.js", "$lib/jquery.ui.widget.js", "$lib/jquery.ui.mouse.js", "$lib/jquery.ui.draggable.js", "$lib/jquery.ui.progressbar.js", "$lib/jquery.swfobject.js", "$lib/jquery.hotkeys.js", "$lib/jquery.autoellipsis.js", "mixins/tweetFlagging", "promptbird", "MessageManager", "ConversationManager", "externalOauthPopup", "mixins/photoBox", "mixins/profileStreamMixin", "streams/Mentions", "streams/Favorites", "streams/User", "streams/Profile", "streams/FollowingTweets", "streams/List", "streams/Search", "streams/UserStream", "streams/Friends", "streams/FollowerRequests", "streams/Followers", "streams/SocialContextStream", "streams/SuggestionCategoriesStream", "streams/PeopleSearch", "streams/t1/HeadlessPeopleSearch", "streams/DashboardPeopleSearch", "streams/DashboardTopPeopleSearch", "streams/ListFollowers", "streams/ListMembers", "streams/Discover", "streams/SavedSearches", "mixins/SinceMaxPagination", "mixins/PollingStream", "mixins/activityStreamEvents", "mixins/inviteFriends", "mixins/newStreamItemsBar", "mixins/typeaheadScribing", "mixins/discoveryHelper", "mixins/usesRelatedResults", "mixins/profileHelper", "mixins/commonDashboardClickHandlers", "mixins/t1/cardActionable", "mixins/t1/discoveryStoryHelpers", "mixins/UserSimilaritiesStreamT1", "mixins/SuggestionCategoriesStreamT1", "mixins/SuggestionCategoryMembersStreamT1", "mixins/UserRecommendationsT1", "mixins/hasGovernmentSearchHeader", "mixins/prefollowingStream", "streams/StarterList", "streams/StarterFriends", "streams/UserRecommendationsStream", "streams/UserRecommendationsDashboardStream", "streams/UserSimilaritiesStream", "streams/ContactImportMatches", "streams/DashboardContactImportMatches", "streams/ContactImportServices", "mixins/ContactImportServicesT1", "streams/DashboardContactImportServices", "streams/TweetGameDashboardStream", "StoredUserStack", "PasswordStrength", "mixins/urlShortener", "mixins/caretHelper", "components/Autocomplete", "components/Typeahead", "components/TypeaheadDatasource", "components/TypeaheadSearchQueryDatasource", "components/TypeaheadAccountsDatasource", "components/GlobalNavTypeahead", "components/Editor", "TweetBox", "components/TweetboxAutocomplete", "shortcuts_t1", "stork", "streams/ActivityStream", "streams/ActivityByUserStream", "streams/ActivityByNetworkStream", "streams/ActivityOfMeStream", "streams/AllSubscriptions", "streams/AllSubscriptionsUser", "media", "media/Iconifier", "media/Embedder", "media/mediaType", "media/expandodo", "platform/BaseApplication", "platform/EmbeddedApplication", "platform/SandboxedApplication", "sandboxedAjax", "media/types", "geo/Location", "control/Dropdown", "widget/Dialog", "dialogs", "widget/TweetDialog", "widget/Prompt", "widget/DeviceSetupDialog", "widget/DeviceFollowDialog", "widget/InviteContactsDialog", "widget/ListDialog", "components/t1/DirectMessageDialog", "widget/MuteDialog", "widget/DiscoveryDialog", "widget/GeoPromoDialog", "widget/RetweetDialog", "widget/TrendsDialog", "widget/ReplyDialog", "widget/ListMembershipDialog", "widget/MiniProfileDialog", "widget/EmbedDialog", "components/pages/mixins/searchT1", "components/pages/ProfileAbstract", "components/pages/Search", "components/pages/SearchHome", "components/pages/Front", "components/pages/Login", "components/pages/Logout", "components/pages/Profile", "components/pages/List", "components/pages/Permalink", "components/pages/WhoToFollow", "components/pages/WebPersonalizationPreview", "components/pages/404", "components/pages/403", "components/pages/RateLimit", "components/pages/mixins/welcomeLearnFlowT1", "components/pages/WelcomeLearnFlow", "components/pages/Welcome", "components/pages/AbstractMediaGallery", "components/pages/UserMediaGallery", "components/pages/FacetsMediaGallery", "components/pages/EventsMediaGallery", "components/pages/BigPhotoPermalink", "components/pages/Discover", "components/pages/Connect", "widget/Banner", "components/Promo", "components/Promptbird", "components/RelatedServices", "TrendLocations", "components/PeopleResults", "components/ProfileActions", "components/RecentTweets", "components/RecentlyFollowed", "components/RecentlyViewed", "components/InviteContacts", "components/InviteFriends", "components/Retweeters", "components/TweetActivity", "components/ConversationThread", "components/InReplyTo", "components/InlineReplyBox", "components/Conversation", "components/Replies", "components/MoreLists", "components/MachineTranslationBackend", "components/NewestListMembers", "components/StorkPip", "components/StreamEnd", "components/StreamEndInviteFriends", "components/StreamWhaleEnd", "components/ContactImportErrorEnd", "components/EmptyHome", "components/AddPeople", "components/NoListMembers", "components/Media", "components/ProfilePane", "components/JapaneseAd", "components/ProtectedUser", "components/TweetStats", "components/PermalinkTweet", "components/NoUserExists", "components/SignupCallOut", "components/SuggestionCategoriesList", "components/ContactImportMatchesStats", "components/media/Base", "components/media/profile", "components/media/facets/Base", "components/media/facets/Media", "components/media/facets/Images", "components/media/facets/Videos", "components/ThumbnailViewer", "components/TheGrid", "components/MediaGalleryControls", "components/MediaSlideshow", "components/SearchFacets", "components/FollowerRequestLink", "components/WebPersonalizationSettings", "photo/turkey", "photo/photo_thumbnails", "images", "components/ContactImportLauncher", "streams/ListStream", "streams/OwnListsStream", "streams/SubscriptionsStream", "streams/MembershipsStream", "streams/MembershipsStreamUser", "multiGlobals/trackSession", "streams/SuggestionCategoriesStream", "streams/SuggestionCategoryMembersStream", "streams/SuggestionCategoriesDashboardStream", "streams/SuggestionCategoryMembersDashboardStream", "streams/SuggestionLifelineMembersStream", "streams/SuggestionLifelineMembersDashboardStream", "streams/GovernmentSearchStream", "widget/VerifyEmailDialog", "SearchAPI", "media/providers", "mixins/userRecommendationsHelper", "mixins/t1/genericComboButton", "mixins/userUpdateable", "components/UserMedia", "components/UserRecommendations", "components/Footer", "components/Trends", "components/onebox/News", "components/onebox/User", "components/onebox/Sports", "components/onebox/Event", "components/t1/EmptyTimelineRecommendations", "components/t1/dashboard/AbstractDashboard", "components/t1/dashboard/Tweetbox", "components/t1/dashboard/ProfileTweetbox", "components/t1/dashboard/ProfileFollowCard", "components/t1/dashboard/Flex", "components/t1/dashboard/Nav", "components/t1/dashboard/MiniHomeProfile", "components/t1/dashboard/ConnectNav", "components/t1/dashboard/ProfileNav", "components/t1/dashboard/SettingsNav", "components/t1/dashboard/ListNav", "components/t1/dashboard/SearchNav", "components/t1/dashboard/DiscoverNav", "components/t1/dashboard/ProfileSummary", "components/t1/dashboard/ListFollowCard", "components/t1/dashboard/SearchImages", "components/t1/dashboard/SearchVideos", "components/t1/AvatarRow", "components/t1/SearchHeader", "components/t1/PeopleSearchStreamHeader", "components/t1/UserSimilaritiesList", "components/t1/UserSimilaritiesDashboardList", "components/pages/mixins/profileT1", "components/pages/mixins/profileP1", "components/t1/dashboard/ProfileNav", "components/pages/mixins/listT1", "multiGlobals/MessageManagerMonitor", "google", "ttft_ajax"], function() {
            a()
        })
    })
});